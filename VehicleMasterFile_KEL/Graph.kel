	// --- ENTITY Definitions Section --- 
IMPORT KnowledgeUniverse.VehicleMasterFile_KEL.Entities;

// --- USE Statements Section ---
IMPORT VehicleMasterFile_KEL.Uses;

// --- Attributes Section ---
IMPORT KnowledgeUniverse.VehicleMasterFile_KEL.Attributes;


QUERY: VehicleMasterFile(PERMITS DPM) <= 
	Policy{
		VIN := VehiclePolicy(Vehicle.VIN != '' AND NOT Vehicle.VIN:Null).Vehicle.VIN,
		ValidVIN := VehiclePolicy(Vehicle.VIN != '' AND NOT Vehicle.VIN:Null).Vehicle.ValidVIN,
		LexID := PersonPolicy.Subject(LexID != '' AND NOT LexID:Null).UID,
		PrimaryPolicyHolderFlag := PersonPolicy.Subject(LexID != '' AND NOT LexID:Null).UID = PrimaryPolicyHolderLexID,
		PrimaryPolicyHolderLexID := PrimaryPolicyHolderLexID,
		LexIDStart := DATETOSTRING(PersonPolicy.BestHolderStartDate,'%Y%m%d'), 
		LexIDEnd := DATETOSTRING(PersonPolicy.BestHolderEndDate,'%Y%m%d'), 
		VehicleGroupID := VehiclePolicy(Vehicle.VIN != '' AND NOT Vehicle.VIN:Null).hhKey,
		VehicleGroupStart := DATETOSTRING(VehiclePolicy.minAppearanceDate,'%Y%m%d'),
		VehicleGroupEnd := DATETOSTRING(MAX(VehiclePolicy.CoverageEndDates,CoverageEndDate),'%Y%m%d')
		}

			(VIN != '', NOT VIN:Null, LexID != '', NOT LexID:Null,LexIDStart <= VehicleGroupEnd, LexIDEnd >= VehicleGroupStart), // Conditions on output eliminate empty outputs
	Policy{
		LexID := PersonPolicy.Subject(LexID != '' AND NOT LexID:Null).UID,
		VehicleGroupID := VehiclePolicy(Vehicle.VIN != '' AND NOT Vehicle.VIN:Null).hhKey,
		VehicleGroupStart := DATETOSTRING(VehiclePolicy.minAppearanceDate,'%Y%m%d'),
		VehicleGroupEnd := DATETOSTRING(MAX(VehiclePolicy.CoverageEndDates,CoverageEndDate),'%Y%m%d')
		}
			(LexID != '', NOT LexID:Null) // Conditions on output eliminate empty outputs
	USING DPM;