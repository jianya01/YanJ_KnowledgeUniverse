﻿IMPORT KnowledgeUniverse.VehicleMasterFile_KEL.Entities; 
IMPORT VehicleMasterFile_KEL.Uses;

IMPORT KnowledgeUniverse.KELFunctionLibraries.KELGlobalFunctionLibrary;
FUNCTION: TimeStampToDate(TIMESTAMP x) <= ECL((STRING) x[..8]) RETURNS DATE; //most date functions are not supported by timestamp. This casts to date so you just use that.

Policy: NULLDATEVALUE := DATE(0);

PersonPolicy: => G_IsPrimaryPolicyHolder := PolicyHolderRelation = 'A1';
Policy: => G_PrimaryPolicyHolderLexID := ONLY(PersonPolicy(G_IsPrimaryPolicyHolder){Subject.UID});


VehiclePolicy: => G_AppearanceDate := MIN(MIN(CoverageStartDates,CoverageStartDate),MIN(NotificationDates,NotificationDate),FirstLoadDate);

PersonPolicy: => G_BestHolderStartDate := MIN(OriginDates, OriginDate);
PersonPolicy: => G_BestHolderEndDate := MIN(MAX(CancellationDates,CancellationDate),MAX(EndDates,EndDate));
VehiclePolicy: => G_BestCoverageEndDate := MIN(CancellationDate,MAX(CoverageEndDates,CoverageEndDate));


VehiclePolicy: => G_SameDateEndPolicy := G_AppearanceDate = G_BestCoverageEndDate;
VehiclePolicy: => G_FirstPurchase := G_AppearanceDate = MIN(Vehicle.VehiclePolicy,G_AppearanceDate);
VehiclePolicy: => G_PreviousAppearanceDate := MAX(Vehicle.VehiclePolicy(Vehicle = VehiclePolicy.Vehicle, G_AppearanceDate < VehiclePolicy.G_AppearanceDate,NOT G_SameDateEndPolicy,ISVALIDDATE(G_AppearanceDate)), G_AppearanceDate);

VehiclePolicy: => G_HasBefore := EXISTS(Policy.PersonPolicy.Subject.PersonPolicy.Policy.VehiclePolicy(Vehicle = VehiclePolicy.Vehicle, G_AppearanceDate = VehiclePolicy.G_PreviousAppearanceDate,ISVALIDDATE(G_AppearanceDate)));


VehiclePolicy: => G_ChangedOwnership := NOT(G_FirstPurchase OR G_HasBefore);
VehiclePolicy: => G_MinAppearanceDate := IF(G_FirstPurchase OR G_ChangedOwnership, G_AppearanceDate);
VehiclePolicy: => G_GetMinAppearanceDate := MAX(VehiclePolicy(Vehicle = VehiclePolicy.Vehicle AND NOT G_MinAppearanceDate:Null AND VehiclePolicy.G_MinAppearanceDate:Null AND G_AppearanceDate < VehiclePolicy.G_AppearanceDate AND NOT Policy.PersonPolicy.Subject:Null AND NOT (G_AppearanceDate = G_BestCoverageEndDate)),G_AppearanceDate);


VehiclePolicy: => VehicleGroupStart := IF(NOT G_MinAppearanceDate:Null, G_MinAppearanceDate, G_GetMinAppearanceDate);
VehiclePolicy: => VehicleGroupEnd := MIN(Vehicle.VehiclePolicy(VehicleGroupStart > VehiclePolicy.VehicleGroupStart AND NOT Policy.PersonPolicy.Subject:Null AND NOT G_SameDateEndPolicy),VehicleGroupStart);
VehiclePolicy : => VehicleGroupID := TRIMBOTH(Vehicle.VIN) + '_' + DATETOSTRING(VehicleGroupStart,'%Y%m%d');

