IMPORT KnowledgeUniverse.InsurancePaymentHistory_KEL.Entities;

Individual: => LowerBoundDate := ADJUSTCALENDAR(CURRENTDATE(), -7, 0, 0);
// Individual: => Policy := IndividualPolicyTerm.Policy;
// PaymentPlan: => LineOfBusiness := rPolicy.LineOfBusiness;

//Function
FUNCTION: CastBL2Int(BOOLEAN statement) <= IF(statement,1,0);//true -> 1, else 0, so null can be transferred to 0

//Filter purpose, policy status must be A (KEL entity to control, not in attributes' code), all delete flg must be N
PolicyTerm.Details: => GMOSTermBeginDate := IF(TermBeginDate > CURRENTDATE(), 0, MONTHSBETWEEN(TermBeginDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSInvoiceDate := IF(InvoiceDate > CURRENTDATE(), -9999, MONTHSBETWEEN(InvoiceDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSPaymentReceived := IF(PaymentReceivedDate > CURRENTDATE(), -9999, MONTHSBETWEEN(PaymentReceivedDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSLatePaymentRecognitionDate := IF(LatePaymentRecognitionDate > CURRENTDATE(), -9999, MONTHSBETWEEN(LatePaymentRecognitionDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSPaymentFailureDate := IF(PaymentFailureDate > CURRENTDATE(), -9999, MONTHSBETWEEN(PaymentFailureDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSPaymentFailureNoticeDate := IF(PaymentFailureNoticeDate > CURRENTDATE(), -9999, MONTHSBETWEEN(PaymentFailureNoticeDate,CURRENTDATE()));
PolicyTerm.Details: => GMOSPaymentPolicyReinstatementDate := IF(PolicyReinstatementDate > CURRENTDATE(), 0, MONTHSBETWEEN(PolicyReinstatementDate,CURRENTDATE()));
PolicyTerm.Details: => OldestDate := MAX(GMOSPaymentReceived,GMOSLatePaymentRecognitionDate,GMOSPaymentFailureDate,GMOSPaymentFailureNoticeDate,GMOSPaymentPolicyReinstatementDate);

//test
PolicyTerm: => TermDateDif := EXISTS(Details(NOT PlanEffectiveDate:Null AND PlanEffectiveDate != TermBeginDate));
Individual: => TermDateDif := EXISTS(PrimaryPolicyOwner.PolicyTerm(TermDateDif));

//Globals and constants
PolicyTerm: AUTOLOB := ['PA'];
PolicyTerm: HOMELOB := ['PP'];
PolicyTerm: LIFELOB := ['LI'];
PolicyTerm: ALLLOB := ['LI','PP','PA'];
Individual: DEFAULT_1 := -1;
Individual: DEFAULT_3 := -3;
Individual: => PrimaryPolicyOwner := IndividualPolicyTerm(IsPrimaryPolicyOwner = 'Y');
Individual: => SetDefault1All := NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded));
Individual: => SetDefault1Auto := NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded));
Individual: => SetDefault1Home := NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded));
Individual: => SetDefault1Life := NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded));
Individual: CAP_999 := 999;
Individual: VALIDDATE := D'19000101';
PolicyTerm: VALIDDATE := D'19000101';
// PolicyTerm.Details: VALIDDATE := D'19000101';


//Exclusion: drop cases we can not use, apply to transaction level. exclude the delete flag = true, term more than 7 years or less than 0 year
PolicyTerm.Details: => GNOTExcluded := GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84;//this DELETE FLAG should be in policy level
PolicyTerm: => ExistGNOTExcluded := EXISTS(Details(GNOTExcluded));//Exist Effective terms in this policy

//PaymentPlan: => GNOTExcluded := GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84;//this delete flag is paymentplan level
//PaymentDetails: => GNOTExcluded := rPaymentPlan.GNOTExcluded AND OldestDate >= 0 AND OldestDate <= 84;//all payment details are linked to payment plan, will not generate null, this delete flag is payment details level
//Invoice: => GNOTExcluded := rPaymentPlan.GNOTExcluded AND GMOSInvoiceDate >= 0 AND GMOSInvoiceDate <= 84;//all invoice are linked to payment plan, will not generate null, this delete flag is invoice level


//*****************************************************//
//****************Attributes***************************//
//*****************************************************//

//for audit purpose
//count valid policy for each individual
Policy: => CntTerms := COUNT(PolicyTerm{TermBeginDate,TermEndDate});
//IndicatorLatePayment##LOB
//Indicator of late payment per LOB and per time frame, 
PolicyTerm: => IsAllLOB := LineOfBusiness IN ALLLOB;
PolicyTerm: => IsAUTOLOB := LineOfBusiness IN AUTOLOB;
PolicyTerm: => IsHOMELOB := LineOfBusiness IN HOMELOB;
PolicyTerm: => IsLIFELOB := LineOfBusiness IN LIFELOB;

PolicyTerm: => LatePaymentIndicator84M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 84 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator84M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator84M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator84M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator84M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator72M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 72 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator72M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator72M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator72M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator72M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator60M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 60 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator60M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator60M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator60M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator60M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator48M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 48 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator48M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator48M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator48M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator48M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator36M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 36 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator36M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator36M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator36M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator36M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator24M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 24 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator24M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator24M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator24M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator24M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator12M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 12 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator12M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator12M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator12M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator12M AND IsLIFELOB AND ExistGNOTExcluded))));

PolicyTerm: => LatePaymentIndicator06M := EXISTS(Details(IsLatePayment = 'Y' AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 6 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND GNOTExcluded));
Individual: => IndicatorLatePaymentAll06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator06M AND IsAllLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator06M AND IsAUTOLOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator06M AND IsHOMELOB AND ExistGNOTExcluded))));
Individual: => IndicatorLatePaymentLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(LatePaymentIndicator06M AND IsLIFELOB AND ExistGNOTExcluded))));

//MonthsSinceLastPolicyCancelledByCarrierDTPBLOB, cancellation could be future date
PolicyTerm.Details: => GMOSCancellationDate := IF(CancellationDate > CURRENTDATE(), 0, MONTHSBETWEEN(CancellationDate,CURRENTDATE()));
PolicyTerm: => MonthsSinceLastTermCanceledbyCarrier := MIN(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND NOT CancellationDate:Null AND GMOSCancellationDate >= 0 AND NOT CancellationDate:Null AND CancellationReasonCode IN ['LAPS','NONP','NPDP','RTCK','INSF','CCDN']),GMOSCancellationDate);
Individual: => MonthsSinceLastPolicyCancelledByCarrierDTPBAll := MAP(SetDefault1All => DEFAULT_1,
																																		NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT MonthsSinceLastTermCanceledbyCarrier:Null)) => DEFAULT_3,//no cancelled and not such cancellation (by carrier)
																																		MIN(MIN(PrimaryPolicyOwner.PolicyTerm, MonthsSinceLastTermCanceledbyCarrier),CAP_999));
																																		
Individual: => MonthsSinceLastPolicyCancelledByCarrierDTPBAuto := MAP(SetDefault1Auto => DEFAULT_1,
																																		 NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT MonthsSinceLastTermCanceledbyCarrier:Null)) => DEFAULT_3,
																																		 MIN(MIN(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB), MonthsSinceLastTermCanceledbyCarrier),CAP_999));
																																		 
Individual: => MonthsSinceLastPolicyCancelledByCarrierDTPBHome := MAP(SetDefault1Home => DEFAULT_1,
																																		 NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT MonthsSinceLastTermCanceledbyCarrier:Null)) => DEFAULT_3,
																																		 MIN(MIN(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB), MonthsSinceLastTermCanceledbyCarrier),CAP_999));
																																		 
Individual: => MonthsSinceLastPolicyCancelledByCarrierDTPBLife := MAP(SetDefault1Life => DEFAULT_1,
																																		 NOT EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT MonthsSinceLastTermCanceledbyCarrier:Null)) => DEFAULT_3,
																																		 MIN(MIN(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB), MonthsSinceLastTermCanceledbyCarrier),CAP_999));
																																		 

//NumberCancellationNotice##LOB: true 0, no cancellation notice at all; cancellation is out of this time frame. cancellation notice date cannot be future date
PolicyTerm.Details: => GMOSCancellationNoticeDate := IF(CancellationNoticeDate > CURRENTDATE(), -9999, MONTHSBETWEEN(CancellationNoticeDate,CURRENTDATE()));//if the it is future date, set as -9999

PolicyTerm: => NumCancellationNoticePerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 84 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy84M),CAP_999));
Individual: => NumberCancellationNoticeAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy84M),CAP_999));
Individual: => NumberCancellationNoticeHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy84M),CAP_999));
Individual: => NumberCancellationNoticeLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy84M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 72 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy72M),CAP_999));
Individual: => NumberCancellationNoticeAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy72M),CAP_999));
Individual: => NumberCancellationNoticeHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy72M),CAP_999));
Individual: => NumberCancellationNoticeLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy72M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 60 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy60M),CAP_999));
Individual: => NumberCancellationNoticeAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy60M),CAP_999));
Individual: => NumberCancellationNoticeHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy60M),CAP_999));
Individual: => NumberCancellationNoticeLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy60M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 48 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy48M),CAP_999));
Individual: => NumberCancellationNoticeAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy48M),CAP_999));
Individual: => NumberCancellationNoticeHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy48M),CAP_999));
Individual: => NumberCancellationNoticeLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy48M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 36 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy36M),CAP_999));
Individual: => NumberCancellationNoticeAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy36M),CAP_999));
Individual: => NumberCancellationNoticeHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy36M),CAP_999));
Individual: => NumberCancellationNoticeLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy36M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 24 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy24M),CAP_999));
Individual: => NumberCancellationNoticeAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy24M),CAP_999));
Individual: => NumberCancellationNoticeHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy24M),CAP_999));
Individual: => NumberCancellationNoticeLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy24M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 12 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy12M),CAP_999));
Individual: => NumberCancellationNoticeAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy12M),CAP_999));
Individual: => NumberCancellationNoticeHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy12M),CAP_999));
Individual: => NumberCancellationNoticeLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy12M),CAP_999));

PolicyTerm: => NumCancellationNoticePerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationNoticeDate > VALIDDATE AND GMOSCancellationNoticeDate >= 0 AND GMOSCancellationNoticeDate <= 6 AND NOT CancellationNoticeDate:Null){CancellationNoticeDate});
Individual: => NumberCancellationNoticeAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy06M),CAP_999));
Individual: => NumberCancellationNoticeAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy06M),CAP_999));
Individual: => NumberCancellationNoticeHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy06M),CAP_999));
Individual: => NumberCancellationNoticeLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationNoticePerPolicy06M),CAP_999));


// NumberCOMPCancellation##LOB
PolicyTerm: => NumCOMPCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy84M),CAP_999));
Individual: => NumberCOMPCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy84M),CAP_999));
Individual: => NumberCOMPCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy84M),CAP_999));
Individual: => NumberCOMPCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy72M),CAP_999));
Individual: => NumberCOMPCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy72M),CAP_999));
Individual: => NumberCOMPCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy72M),CAP_999));
Individual: => NumberCOMPCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy60M),CAP_999));
Individual: => NumberCOMPCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy60M),CAP_999));
Individual: => NumberCOMPCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy60M),CAP_999));
Individual: => NumberCOMPCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy48M),CAP_999));
Individual: => NumberCOMPCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy48M),CAP_999));
Individual: => NumberCOMPCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy48M),CAP_999));
Individual: => NumberCOMPCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy36M),CAP_999));
Individual: => NumberCOMPCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy36M),CAP_999));
Individual: => NumberCOMPCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy36M),CAP_999));
Individual: => NumberCOMPCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy24M),CAP_999));
Individual: => NumberCOMPCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy24M),CAP_999));
Individual: => NumberCOMPCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy24M),CAP_999));
Individual: => NumberCOMPCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy12M),CAP_999));
Individual: => NumberCOMPCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy12M),CAP_999));
Individual: => NumberCOMPCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy12M),CAP_999));
Individual: => NumberCOMPCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumCOMPCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'COMP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCOMPCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy06M),CAP_999));
Individual: => NumberCOMPCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy06M),CAP_999));
Individual: => NumberCOMPCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy06M),CAP_999));
Individual: => NumberCOMPCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCOMPCancellationPerPolicy06M),CAP_999));



// NumberCUSTCancellation##LOB

PolicyTerm: => NumCUSTCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy84M),CAP_999));
Individual: => NumberCUSTCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy84M),CAP_999));
Individual: => NumberCUSTCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy84M),CAP_999));
Individual: => NumberCUSTCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy72M),CAP_999));
Individual: => NumberCUSTCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy72M),CAP_999));
Individual: => NumberCUSTCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy72M),CAP_999));
Individual: => NumberCUSTCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy60M),CAP_999));
Individual: => NumberCUSTCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy60M),CAP_999));
Individual: => NumberCUSTCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy60M),CAP_999));
Individual: => NumberCUSTCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy48M),CAP_999));
Individual: => NumberCUSTCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy48M),CAP_999));
Individual: => NumberCUSTCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy48M),CAP_999));
Individual: => NumberCUSTCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy36M),CAP_999));
Individual: => NumberCUSTCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy36M),CAP_999));
Individual: => NumberCUSTCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy36M),CAP_999));
Individual: => NumberCUSTCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy24M),CAP_999));
Individual: => NumberCUSTCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy24M),CAP_999));
Individual: => NumberCUSTCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy24M),CAP_999));
Individual: => NumberCUSTCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy12M),CAP_999));
Individual: => NumberCUSTCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy12M),CAP_999));
Individual: => NumberCUSTCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy12M),CAP_999));
Individual: => NumberCUSTCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumCUSTCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'CUST' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCUSTCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy06M),CAP_999));
Individual: => NumberCUSTCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy06M),CAP_999));
Individual: => NumberCUSTCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy06M),CAP_999));
Individual: => NumberCUSTCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCUSTCancellationPerPolicy06M),CAP_999));

//NumberLAPSCancellation##LOB

PolicyTerm: => NumLAPSCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy84M),CAP_999));
Individual: => NumberLAPSCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy84M),CAP_999));
Individual: => NumberLAPSCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy84M),CAP_999));
Individual: => NumberLAPSCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy72M),CAP_999));
Individual: => NumberLAPSCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy72M),CAP_999));
Individual: => NumberLAPSCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy72M),CAP_999));
Individual: => NumberLAPSCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy60M),CAP_999));
Individual: => NumberLAPSCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy60M),CAP_999));
Individual: => NumberLAPSCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy60M),CAP_999));
Individual: => NumberLAPSCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy48M),CAP_999));
Individual: => NumberLAPSCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy48M),CAP_999));
Individual: => NumberLAPSCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy48M),CAP_999));
Individual: => NumberLAPSCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy36M),CAP_999));
Individual: => NumberLAPSCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy36M),CAP_999));
Individual: => NumberLAPSCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy36M),CAP_999));
Individual: => NumberLAPSCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy24M),CAP_999));
Individual: => NumberLAPSCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy24M),CAP_999));
Individual: => NumberLAPSCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy24M),CAP_999));
Individual: => NumberLAPSCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy12M),CAP_999));
Individual: => NumberLAPSCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy12M),CAP_999));
Individual: => NumberLAPSCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy12M),CAP_999));
Individual: => NumberLAPSCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumLAPSCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'LAPS' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberLAPSCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy06M),CAP_999));
Individual: => NumberLAPSCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy06M),CAP_999));
Individual: => NumberLAPSCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy06M),CAP_999));
Individual: => NumberLAPSCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumLAPSCancellationPerPolicy06M),CAP_999));


//NumberMISRCancellation##LOB

PolicyTerm: => NumMISRCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy84M),CAP_999));
Individual: => NumberMISRCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy84M),CAP_999));
Individual: => NumberMISRCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy84M),CAP_999));
Individual: => NumberMISRCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy72M),CAP_999));
Individual: => NumberMISRCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy72M),CAP_999));
Individual: => NumberMISRCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy72M),CAP_999));
Individual: => NumberMISRCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy60M),CAP_999));
Individual: => NumberMISRCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy60M),CAP_999));
Individual: => NumberMISRCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy60M),CAP_999));
Individual: => NumberMISRCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy48M),CAP_999));
Individual: => NumberMISRCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy48M),CAP_999));
Individual: => NumberMISRCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy48M),CAP_999));
Individual: => NumberMISRCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy36M),CAP_999));
Individual: => NumberMISRCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy36M),CAP_999));
Individual: => NumberMISRCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy36M),CAP_999));
Individual: => NumberMISRCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy24M),CAP_999));
Individual: => NumberMISRCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy24M),CAP_999));
Individual: => NumberMISRCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy24M),CAP_999));
Individual: => NumberMISRCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy12M),CAP_999));
Individual: => NumberMISRCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy12M),CAP_999));
Individual: => NumberMISRCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy12M),CAP_999));
Individual: => NumberMISRCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumMISRCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'MISR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberMISRCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy06M),CAP_999));
Individual: => NumberMISRCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy06M),CAP_999));
Individual: => NumberMISRCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy06M),CAP_999));
Individual: => NumberMISRCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumMISRCancellationPerPolicy06M),CAP_999));


// NumberNONPCancellation##LOB

PolicyTerm: => NumNONPCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNONPCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNONPCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNONPCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNONPCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNONPCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNONPCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNONPCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNONPCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNONPCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNONPCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNONPCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNONPCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNONPCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNONPCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNONPCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNONPCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNONPCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNONPCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNONPCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNONPCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNONPCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumNONPCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'NONP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNONPCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNONPCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNONPCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNONPCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNONPCancellationPerPolicy06M),CAP_999));

// NumberNPDPCancellation##LOB

PolicyTerm: => NumNPDPCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNPDPCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNPDPCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy84M),CAP_999));
Individual: => NumberNPDPCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNPDPCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNPDPCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy72M),CAP_999));
Individual: => NumberNPDPCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNPDPCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNPDPCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy60M),CAP_999));
Individual: => NumberNPDPCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNPDPCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNPDPCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy48M),CAP_999));
Individual: => NumberNPDPCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNPDPCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNPDPCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy36M),CAP_999));
Individual: => NumberNPDPCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNPDPCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNPDPCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy24M),CAP_999));
Individual: => NumberNPDPCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNPDPCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNPDPCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy12M),CAP_999));
Individual: => NumberNPDPCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumNPDPCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'NPDP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberNPDPCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNPDPCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNPDPCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy06M),CAP_999));
Individual: => NumberNPDPCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumNPDPCancellationPerPolicy06M),CAP_999));



// NumberOTHRCancellation##LOB

PolicyTerm: => NumOTHRCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy84M),CAP_999));
Individual: => NumberOTHRCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy84M),CAP_999));
Individual: => NumberOTHRCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy84M),CAP_999));
Individual: => NumberOTHRCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy72M),CAP_999));
Individual: => NumberOTHRCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy72M),CAP_999));
Individual: => NumberOTHRCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy72M),CAP_999));
Individual: => NumberOTHRCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy60M),CAP_999));
Individual: => NumberOTHRCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy60M),CAP_999));
Individual: => NumberOTHRCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy60M),CAP_999));
Individual: => NumberOTHRCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy48M),CAP_999));
Individual: => NumberOTHRCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy48M),CAP_999));
Individual: => NumberOTHRCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy48M),CAP_999));
Individual: => NumberOTHRCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy36M),CAP_999));
Individual: => NumberOTHRCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy36M),CAP_999));
Individual: => NumberOTHRCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy36M),CAP_999));
Individual: => NumberOTHRCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy24M),CAP_999));
Individual: => NumberOTHRCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy24M),CAP_999));
Individual: => NumberOTHRCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy24M),CAP_999));
Individual: => NumberOTHRCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy12M),CAP_999));
Individual: => NumberOTHRCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy12M),CAP_999));
Individual: => NumberOTHRCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy12M),CAP_999));
Individual: => NumberOTHRCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumOTHRCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'OTHR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberOTHRCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy06M),CAP_999));
Individual: => NumberOTHRCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy06M),CAP_999));
Individual: => NumberOTHRCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy06M),CAP_999));
Individual: => NumberOTHRCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumOTHRCancellationPerPolicy06M),CAP_999));


// NumberRTCKCancellation##LOB

PolicyTerm: => NumRTCKCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy84M),CAP_999));
Individual: => NumberRTCKCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy84M),CAP_999));
Individual: => NumberRTCKCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy84M),CAP_999));
Individual: => NumberRTCKCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy72M),CAP_999));
Individual: => NumberRTCKCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy72M),CAP_999));
Individual: => NumberRTCKCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy72M),CAP_999));
Individual: => NumberRTCKCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy60M),CAP_999));
Individual: => NumberRTCKCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy60M),CAP_999));
Individual: => NumberRTCKCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy60M),CAP_999));
Individual: => NumberRTCKCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy48M),CAP_999));
Individual: => NumberRTCKCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy48M),CAP_999));
Individual: => NumberRTCKCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy48M),CAP_999));
Individual: => NumberRTCKCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy36M),CAP_999));
Individual: => NumberRTCKCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy36M),CAP_999));
Individual: => NumberRTCKCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy36M),CAP_999));
Individual: => NumberRTCKCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy24M),CAP_999));
Individual: => NumberRTCKCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy24M),CAP_999));
Individual: => NumberRTCKCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy24M),CAP_999));
Individual: => NumberRTCKCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy12M),CAP_999));
Individual: => NumberRTCKCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy12M),CAP_999));
Individual: => NumberRTCKCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy12M),CAP_999));
Individual: => NumberRTCKCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumRTCKCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'RTCK' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberRTCKCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy06M),CAP_999));
Individual: => NumberRTCKCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy06M),CAP_999));
Individual: => NumberRTCKCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy06M),CAP_999));
Individual: => NumberRTCKCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumRTCKCancellationPerPolicy06M),CAP_999));


// NumberTRANCancellation##LOB

PolicyTerm: => NumTRANCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy84M),CAP_999));
Individual: => NumberTRANCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy84M),CAP_999));
Individual: => NumberTRANCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy84M),CAP_999));
Individual: => NumberTRANCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy72M),CAP_999));
Individual: => NumberTRANCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy72M),CAP_999));
Individual: => NumberTRANCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy72M),CAP_999));
Individual: => NumberTRANCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy60M),CAP_999));
Individual: => NumberTRANCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy60M),CAP_999));
Individual: => NumberTRANCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy60M),CAP_999));
Individual: => NumberTRANCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy48M),CAP_999));
Individual: => NumberTRANCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy48M),CAP_999));
Individual: => NumberTRANCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy48M),CAP_999));
Individual: => NumberTRANCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy36M),CAP_999));
Individual: => NumberTRANCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy36M),CAP_999));
Individual: => NumberTRANCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy36M),CAP_999));
Individual: => NumberTRANCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy24M),CAP_999));
Individual: => NumberTRANCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy24M),CAP_999));
Individual: => NumberTRANCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy24M),CAP_999));
Individual: => NumberTRANCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy12M),CAP_999));
Individual: => NumberTRANCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy12M),CAP_999));
Individual: => NumberTRANCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy12M),CAP_999));
Individual: => NumberTRANCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumTRANCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'TRAN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberTRANCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy06M),CAP_999));
Individual: => NumberTRANCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy06M),CAP_999));
Individual: => NumberTRANCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy06M),CAP_999));
Individual: => NumberTRANCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumTRANCancellationPerPolicy06M),CAP_999));


// NumberSOLDCancellation##LOB

PolicyTerm: => NumSOLDCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy84M),CAP_999));
Individual: => NumberSOLDCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy84M),CAP_999));
Individual: => NumberSOLDCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy84M),CAP_999));
Individual: => NumberSOLDCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy72M),CAP_999));
Individual: => NumberSOLDCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy72M),CAP_999));
Individual: => NumberSOLDCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy72M),CAP_999));
Individual: => NumberSOLDCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy60M),CAP_999));
Individual: => NumberSOLDCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy60M),CAP_999));
Individual: => NumberSOLDCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy60M),CAP_999));
Individual: => NumberSOLDCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy48M),CAP_999));
Individual: => NumberSOLDCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy48M),CAP_999));
Individual: => NumberSOLDCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy48M),CAP_999));
Individual: => NumberSOLDCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy36M),CAP_999));
Individual: => NumberSOLDCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy36M),CAP_999));
Individual: => NumberSOLDCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy36M),CAP_999));
Individual: => NumberSOLDCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy24M),CAP_999));
Individual: => NumberSOLDCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy24M),CAP_999));
Individual: => NumberSOLDCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy24M),CAP_999));
Individual: => NumberSOLDCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy12M),CAP_999));
Individual: => NumberSOLDCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy12M),CAP_999));
Individual: => NumberSOLDCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy12M),CAP_999));
Individual: => NumberSOLDCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumSOLDCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'SOLD' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSOLDCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy06M),CAP_999));
Individual: => NumberSOLDCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy06M),CAP_999));
Individual: => NumberSOLDCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy06M),CAP_999));
Individual: => NumberSOLDCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSOLDCancellationPerPolicy06M),CAP_999));


// NumberSUSPCancellation##LOB

PolicyTerm: => NumSUSPCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy84M),CAP_999));
Individual: => NumberSUSPCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy84M),CAP_999));
Individual: => NumberSUSPCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy84M),CAP_999));
Individual: => NumberSUSPCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy72M),CAP_999));
Individual: => NumberSUSPCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy72M),CAP_999));
Individual: => NumberSUSPCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy72M),CAP_999));
Individual: => NumberSUSPCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy60M),CAP_999));
Individual: => NumberSUSPCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy60M),CAP_999));
Individual: => NumberSUSPCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy60M),CAP_999));
Individual: => NumberSUSPCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy48M),CAP_999));
Individual: => NumberSUSPCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy48M),CAP_999));
Individual: => NumberSUSPCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy48M),CAP_999));
Individual: => NumberSUSPCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy36M),CAP_999));
Individual: => NumberSUSPCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy36M),CAP_999));
Individual: => NumberSUSPCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy36M),CAP_999));
Individual: => NumberSUSPCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy24M),CAP_999));
Individual: => NumberSUSPCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy24M),CAP_999));
Individual: => NumberSUSPCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy24M),CAP_999));
Individual: => NumberSUSPCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy12M),CAP_999));
Individual: => NumberSUSPCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy12M),CAP_999));
Individual: => NumberSUSPCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy12M),CAP_999));
Individual: => NumberSUSPCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumSUSPCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'SUSP' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberSUSPCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy06M),CAP_999));
Individual: => NumberSUSPCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy06M),CAP_999));
Individual: => NumberSUSPCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy06M),CAP_999));
Individual: => NumberSUSPCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumSUSPCancellationPerPolicy06M),CAP_999));


// NumberREWRCancellation##LOB

PolicyTerm: => NumREWRCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy84M),CAP_999));
Individual: => NumberREWRCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy84M),CAP_999));
Individual: => NumberREWRCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy84M),CAP_999));
Individual: => NumberREWRCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy72M),CAP_999));
Individual: => NumberREWRCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy72M),CAP_999));
Individual: => NumberREWRCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy72M),CAP_999));
Individual: => NumberREWRCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy60M),CAP_999));
Individual: => NumberREWRCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy60M),CAP_999));
Individual: => NumberREWRCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy60M),CAP_999));
Individual: => NumberREWRCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy48M),CAP_999));
Individual: => NumberREWRCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy48M),CAP_999));
Individual: => NumberREWRCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy48M),CAP_999));
Individual: => NumberREWRCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy36M),CAP_999));
Individual: => NumberREWRCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy36M),CAP_999));
Individual: => NumberREWRCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy36M),CAP_999));
Individual: => NumberREWRCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy24M),CAP_999));
Individual: => NumberREWRCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy24M),CAP_999));
Individual: => NumberREWRCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy24M),CAP_999));
Individual: => NumberREWRCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy12M),CAP_999));
Individual: => NumberREWRCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy12M),CAP_999));
Individual: => NumberREWRCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy12M),CAP_999));
Individual: => NumberREWRCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumREWRCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'REWR' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberREWRCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy06M),CAP_999));
Individual: => NumberREWRCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy06M),CAP_999));
Individual: => NumberREWRCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy06M),CAP_999));
Individual: => NumberREWRCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumREWRCancellationPerPolicy06M),CAP_999));


// NumberINSFCancellation##LOB
PolicyTerm: => NumINSFCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy84M),CAP_999));
Individual: => NumberINSFCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy84M),CAP_999));
Individual: => NumberINSFCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy84M),CAP_999));
Individual: => NumberINSFCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy72M),CAP_999));
Individual: => NumberINSFCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy72M),CAP_999));
Individual: => NumberINSFCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy72M),CAP_999));
Individual: => NumberINSFCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy60M),CAP_999));
Individual: => NumberINSFCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy60M),CAP_999));
Individual: => NumberINSFCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy60M),CAP_999));
Individual: => NumberINSFCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy48M),CAP_999));
Individual: => NumberINSFCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy48M),CAP_999));
Individual: => NumberINSFCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy48M),CAP_999));
Individual: => NumberINSFCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy36M),CAP_999));
Individual: => NumberINSFCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy36M),CAP_999));
Individual: => NumberINSFCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy36M),CAP_999));
Individual: => NumberINSFCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy24M),CAP_999));
Individual: => NumberINSFCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy24M),CAP_999));
Individual: => NumberINSFCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy24M),CAP_999));
Individual: => NumberINSFCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy12M),CAP_999));
Individual: => NumberINSFCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy12M),CAP_999));
Individual: => NumberINSFCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy12M),CAP_999));
Individual: => NumberINSFCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumINSFCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'INSF' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberINSFCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy06M),CAP_999));
Individual: => NumberINSFCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy06M),CAP_999));
Individual: => NumberINSFCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy06M),CAP_999));
Individual: => NumberINSFCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumINSFCancellationPerPolicy06M),CAP_999));


// NumberCCDNCancellation##LOB

PolicyTerm: => NumCCDNCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy84M),CAP_999));
Individual: => NumberCCDNCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy84M),CAP_999));
Individual: => NumberCCDNCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy84M),CAP_999));
Individual: => NumberCCDNCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy72M),CAP_999));
Individual: => NumberCCDNCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy72M),CAP_999));
Individual: => NumberCCDNCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy72M),CAP_999));
Individual: => NumberCCDNCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy60M),CAP_999));
Individual: => NumberCCDNCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy60M),CAP_999));
Individual: => NumberCCDNCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy60M),CAP_999));
Individual: => NumberCCDNCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy48M),CAP_999));
Individual: => NumberCCDNCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy48M),CAP_999));
Individual: => NumberCCDNCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy48M),CAP_999));
Individual: => NumberCCDNCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy36M),CAP_999));
Individual: => NumberCCDNCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy36M),CAP_999));
Individual: => NumberCCDNCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy36M),CAP_999));
Individual: => NumberCCDNCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy24M),CAP_999));
Individual: => NumberCCDNCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy24M),CAP_999));
Individual: => NumberCCDNCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy24M),CAP_999));
Individual: => NumberCCDNCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy12M),CAP_999));
Individual: => NumberCCDNCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy12M),CAP_999));
Individual: => NumberCCDNCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy12M),CAP_999));
Individual: => NumberCCDNCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumCCDNCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND CancellationReasonCode = 'CCDN' AND NOT CancellationDate:Null){CancellationDate});
Individual: => NumberCCDNCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy06M),CAP_999));
Individual: => NumberCCDNCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy06M),CAP_999));
Individual: => NumberCCDNCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy06M),CAP_999));
Individual: => NumberCCDNCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCCDNCancellationPerPolicy06M),CAP_999));


// NumberCancellation##LOB
//note: analysis based on 07/20 data shows that all availabe PolicyCancellationDate is with a valid CancellationReasonCode
PolicyTerm: => NumCancellationPerPolicy84M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 84 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll84M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy84M),CAP_999));
Individual: => NumberCancellationAuto84M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy84M),CAP_999));
Individual: => NumberCancellationHome84M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy84M),CAP_999));
Individual: => NumberCancellationLife84M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy84M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy72M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 72 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll72M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy72M),CAP_999));
Individual: => NumberCancellationAuto72M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy72M),CAP_999));
Individual: => NumberCancellationHome72M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy72M),CAP_999));
Individual: => NumberCancellationLife72M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy72M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy60M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 60 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll60M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(IndividualPolicyTerm.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy60M),CAP_999));
Individual: => NumberCancellationAuto60M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy60M),CAP_999));
Individual: => NumberCancellationHome60M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy60M),CAP_999));
Individual: => NumberCancellationLife60M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy60M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy48M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 48 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll48M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy48M),CAP_999));
Individual: => NumberCancellationAuto48M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy48M),CAP_999));
Individual: => NumberCancellationHome48M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy48M),CAP_999));
Individual: => NumberCancellationLife48M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy48M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy36M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 36 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll36M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy36M),CAP_999));
Individual: => NumberCancellationAuto36M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy36M),CAP_999));
Individual: => NumberCancellationHome36M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy36M),CAP_999));
Individual: => NumberCancellationLife36M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy36M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy24M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 24 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll24M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy24M),CAP_999));
Individual: => NumberCancellationAuto24M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy24M),CAP_999));
Individual: => NumberCancellationHome24M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy24M),CAP_999));
Individual: => NumberCancellationLife24M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy24M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy12M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 12 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll12M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy12M),CAP_999));
Individual: => NumberCancellationAuto12M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy12M),CAP_999));
Individual: => NumberCancellationHome12M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy12M),CAP_999));
Individual: => NumberCancellationLife12M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy12M),CAP_999));

PolicyTerm: => NumCancellationPerPolicy06M := COUNT(Details(GNOTExcluded AND CancellationDate > VALIDDATE AND GMOSCancellationDate >= 0 AND GMOSCancellationDate <= 6 AND NOT CancellationDate:Null){CancellationDate,CancellationReasonCode});
Individual: => NumberCancellationAll06M := IF(SetDefault1All,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy06M),CAP_999));
Individual: => NumberCancellationAuto06M := IF(SetDefault1Auto,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy06M),CAP_999));
Individual: => NumberCancellationHome06M := IF(SetDefault1Home,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy06M),CAP_999));
Individual: => NumberCancellationLife06M := IF(SetDefault1Life,DEFAULT_1,MIN(SUM(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND NOT TermBeginDate:Null),NumCancellationPerPolicy06M),CAP_999));

// IndicatorPaymentTypeEFT##LOB
//ALL are EFT for the same term, excluded the null cases for paymentreceivedtype and plan effective date,  NOT PlanEffectiveDate:Null AND NOT PaymentReceivedType:Null
PolicyTerm: => NumPayTypeSPerTerm := COUNT(Details(NOT PaymentReceivedType:Null){PaymentReceivedType});//count the paymentreceivedtypes for each term

PolicyTerm: => IndicatorPaymentTypeEFT84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT84M))));
Individual: => IndicatorPaymentTypeEFTAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT84M))));
Individual: => IndicatorPaymentTypeEFTHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT84M))));
Individual: => IndicatorPaymentTypeEFTLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT84M))));

PolicyTerm: => IndicatorPaymentTypeEFT72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT72M))));
Individual: => IndicatorPaymentTypeEFTAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT72M))));
Individual: => IndicatorPaymentTypeEFTHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT72M))));
Individual: => IndicatorPaymentTypeEFTLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT72M))));

PolicyTerm: => IndicatorPaymentTypeEFT60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT60M))));
Individual: => IndicatorPaymentTypeEFTAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT60M))));
Individual: => IndicatorPaymentTypeEFTHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT60M))));
Individual: => IndicatorPaymentTypeEFTLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT60M))));

PolicyTerm: => IndicatorPaymentTypeEFT48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT48M))));
Individual: => IndicatorPaymentTypeEFTAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT48M))));
Individual: => IndicatorPaymentTypeEFTHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT48M))));
Individual: => IndicatorPaymentTypeEFTLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT48M))));

PolicyTerm: => IndicatorPaymentTypeEFT36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT36M))));
Individual: => IndicatorPaymentTypeEFTAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT36M))));
Individual: => IndicatorPaymentTypeEFTHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT36M))));
Individual: => IndicatorPaymentTypeEFTLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT36M))));

PolicyTerm: => IndicatorPaymentTypeEFT24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT24M))));
Individual: => IndicatorPaymentTypeEFTAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT24M))));
Individual: => IndicatorPaymentTypeEFTHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT24M))));
Individual: => IndicatorPaymentTypeEFTLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT24M))));

PolicyTerm: => IndicatorPaymentTypeEFT12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT12M))));
Individual: => IndicatorPaymentTypeEFTAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT12M))));
Individual: => IndicatorPaymentTypeEFTHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT12M))));
Individual: => IndicatorPaymentTypeEFTLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT12M))));

PolicyTerm: => IndicatorPaymentTypeEFT06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'EFT')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeEFTALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT06M))));
Individual: => IndicatorPaymentTypeEFTAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT06M))));
Individual: => IndicatorPaymentTypeEFTHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT06M))));
Individual: => IndicatorPaymentTypeEFTLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeEFT06M))));

// IndicatorPaymentTypeCC##LOB
PolicyTerm: => IndicatorPaymentTypeCC84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC84M))));
Individual: => IndicatorPaymentTypeCCAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC84M))));
Individual: => IndicatorPaymentTypeCCHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC84M))));
Individual: => IndicatorPaymentTypeCCLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC84M))));

PolicyTerm: => IndicatorPaymentTypeCC72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC72M))));
Individual: => IndicatorPaymentTypeCCAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC72M))));
Individual: => IndicatorPaymentTypeCCHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC72M))));
Individual: => IndicatorPaymentTypeCCLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC72M))));

PolicyTerm: => IndicatorPaymentTypeCC60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC60M))));
Individual: => IndicatorPaymentTypeCCAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC60M))));
Individual: => IndicatorPaymentTypeCCHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC60M))));
Individual: => IndicatorPaymentTypeCCLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC60M))));

PolicyTerm: => IndicatorPaymentTypeCC48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC48M))));
Individual: => IndicatorPaymentTypeCCAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC48M))));
Individual: => IndicatorPaymentTypeCCHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC48M))));
Individual: => IndicatorPaymentTypeCCLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC48M))));

PolicyTerm: => IndicatorPaymentTypeCC36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC36M))));
Individual: => IndicatorPaymentTypeCCAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC36M))));
Individual: => IndicatorPaymentTypeCCHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC36M))));
Individual: => IndicatorPaymentTypeCCLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC36M))));

PolicyTerm: => IndicatorPaymentTypeCC24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC24M))));
Individual: => IndicatorPaymentTypeCCAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC24M))));
Individual: => IndicatorPaymentTypeCCHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC24M))));
Individual: => IndicatorPaymentTypeCCLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC24M))));

PolicyTerm: => IndicatorPaymentTypeCC12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC12M))));
Individual: => IndicatorPaymentTypeCCAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC12M))));
Individual: => IndicatorPaymentTypeCCHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC12M))));
Individual: => IndicatorPaymentTypeCCLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC12M))));

PolicyTerm: => IndicatorPaymentTypeCC06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'CC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCCALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC06M))));
Individual: => IndicatorPaymentTypeCCAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC06M))));
Individual: => IndicatorPaymentTypeCCHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC06M))));
Individual: => IndicatorPaymentTypeCCLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCC06M))));

// IndicatorPaymentTypePAPL##LOB

PolicyTerm: => IndicatorPaymentTypePAPL84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL84M))));
Individual: => IndicatorPaymentTypePAPLAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL84M))));
Individual: => IndicatorPaymentTypePAPLHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL84M))));
Individual: => IndicatorPaymentTypePAPLLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL84M))));

PolicyTerm: => IndicatorPaymentTypePAPL72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL72M))));
Individual: => IndicatorPaymentTypePAPLAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL72M))));
Individual: => IndicatorPaymentTypePAPLHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL72M))));
Individual: => IndicatorPaymentTypePAPLLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL72M))));

PolicyTerm: => IndicatorPaymentTypePAPL60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL60M))));
Individual: => IndicatorPaymentTypePAPLAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL60M))));
Individual: => IndicatorPaymentTypePAPLHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL60M))));
Individual: => IndicatorPaymentTypePAPLLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL60M))));

PolicyTerm: => IndicatorPaymentTypePAPL48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL48M))));
Individual: => IndicatorPaymentTypePAPLAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL48M))));
Individual: => IndicatorPaymentTypePAPLHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL48M))));
Individual: => IndicatorPaymentTypePAPLLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL48M))));

PolicyTerm: => IndicatorPaymentTypePAPL36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL36M))));
Individual: => IndicatorPaymentTypePAPLAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL36M))));
Individual: => IndicatorPaymentTypePAPLHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL36M))));
Individual: => IndicatorPaymentTypePAPLLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL36M))));

PolicyTerm: => IndicatorPaymentTypePAPL24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL24M))));
Individual: => IndicatorPaymentTypePAPLAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL24M))));
Individual: => IndicatorPaymentTypePAPLHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL24M))));
Individual: => IndicatorPaymentTypePAPLLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL24M))));

PolicyTerm: => IndicatorPaymentTypePAPL12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL12M))));
Individual: => IndicatorPaymentTypePAPLAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL12M))));
Individual: => IndicatorPaymentTypePAPLHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL12M))));
Individual: => IndicatorPaymentTypePAPLLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL12M))));

PolicyTerm: => IndicatorPaymentTypePAPL06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'PAPL')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAPLALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL06M))));
Individual: => IndicatorPaymentTypePAPLAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL06M))));
Individual: => IndicatorPaymentTypePAPLHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL06M))));
Individual: => IndicatorPaymentTypePAPLLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAPL06M))));

// IndicatorPaymentTypePAYD##LOB

PolicyTerm: => IndicatorPaymentTypePAYD84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD84M))));
Individual: => IndicatorPaymentTypePAYDAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD84M))));
Individual: => IndicatorPaymentTypePAYDHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD84M))));
Individual: => IndicatorPaymentTypePAYDLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD84M))));

PolicyTerm: => IndicatorPaymentTypePAYD72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD72M))));
Individual: => IndicatorPaymentTypePAYDAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD72M))));
Individual: => IndicatorPaymentTypePAYDHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD72M))));
Individual: => IndicatorPaymentTypePAYDLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD72M))));

PolicyTerm: => IndicatorPaymentTypePAYD60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD60M))));
Individual: => IndicatorPaymentTypePAYDAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD60M))));
Individual: => IndicatorPaymentTypePAYDHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD60M))));
Individual: => IndicatorPaymentTypePAYDLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD60M))));

PolicyTerm: => IndicatorPaymentTypePAYD48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD48M))));
Individual: => IndicatorPaymentTypePAYDAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD48M))));
Individual: => IndicatorPaymentTypePAYDHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD48M))));
Individual: => IndicatorPaymentTypePAYDLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD48M))));

PolicyTerm: => IndicatorPaymentTypePAYD36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD36M))));
Individual: => IndicatorPaymentTypePAYDAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD36M))));
Individual: => IndicatorPaymentTypePAYDHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD36M))));
Individual: => IndicatorPaymentTypePAYDLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD36M))));

PolicyTerm: => IndicatorPaymentTypePAYD24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD24M))));
Individual: => IndicatorPaymentTypePAYDAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD24M))));
Individual: => IndicatorPaymentTypePAYDHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD24M))));
Individual: => IndicatorPaymentTypePAYDLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD24M))));

PolicyTerm: => IndicatorPaymentTypePAYD12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD12M))));
Individual: => IndicatorPaymentTypePAYDAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD12M))));
Individual: => IndicatorPaymentTypePAYDHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD12M))));
Individual: => IndicatorPaymentTypePAYDLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD12M))));

PolicyTerm: => IndicatorPaymentTypePAYD06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'PAYD')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypePAYDALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD06M))));
Individual: => IndicatorPaymentTypePAYDAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD06M))));
Individual: => IndicatorPaymentTypePAYDHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD06M))));
Individual: => IndicatorPaymentTypePAYDLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypePAYD06M))));

// IndicatorPaymentTypeCHK##LOB

PolicyTerm: => IndicatorPaymentTypeCHK84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK84M))));
Individual: => IndicatorPaymentTypeCHKAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK84M))));
Individual: => IndicatorPaymentTypeCHKHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK84M))));
Individual: => IndicatorPaymentTypeCHKLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK84M))));

PolicyTerm: => IndicatorPaymentTypeCHK72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK72M))));
Individual: => IndicatorPaymentTypeCHKAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK72M))));
Individual: => IndicatorPaymentTypeCHKHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK72M))));
Individual: => IndicatorPaymentTypeCHKLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK72M))));

PolicyTerm: => IndicatorPaymentTypeCHK60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK60M))));
Individual: => IndicatorPaymentTypeCHKAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK60M))));
Individual: => IndicatorPaymentTypeCHKHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK60M))));
Individual: => IndicatorPaymentTypeCHKLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK60M))));

PolicyTerm: => IndicatorPaymentTypeCHK48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK48M))));
Individual: => IndicatorPaymentTypeCHKAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK48M))));
Individual: => IndicatorPaymentTypeCHKHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK48M))));
Individual: => IndicatorPaymentTypeCHKLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK48M))));

PolicyTerm: => IndicatorPaymentTypeCHK36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK36M))));
Individual: => IndicatorPaymentTypeCHKAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK36M))));
Individual: => IndicatorPaymentTypeCHKHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK36M))));
Individual: => IndicatorPaymentTypeCHKLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK36M))));

PolicyTerm: => IndicatorPaymentTypeCHK24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK24M))));
Individual: => IndicatorPaymentTypeCHKAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK24M))));
Individual: => IndicatorPaymentTypeCHKHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK24M))));
Individual: => IndicatorPaymentTypeCHKLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK24M))));

PolicyTerm: => IndicatorPaymentTypeCHK12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK12M))));
Individual: => IndicatorPaymentTypeCHKAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK12M))));
Individual: => IndicatorPaymentTypeCHKHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK12M))));
Individual: => IndicatorPaymentTypeCHKLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK12M))));

PolicyTerm: => IndicatorPaymentTypeCHK06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'CHK')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCHKALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK06M))));
Individual: => IndicatorPaymentTypeCHKAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK06M))));
Individual: => IndicatorPaymentTypeCHKHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK06M))));
Individual: => IndicatorPaymentTypeCHKLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCHK06M))));

// IndicatorPaymentTypeCKPH##LOB

PolicyTerm: => IndicatorPaymentTypeCKPH84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH84M))));
Individual: => IndicatorPaymentTypeCKPHAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH84M))));
Individual: => IndicatorPaymentTypeCKPHHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH84M))));
Individual: => IndicatorPaymentTypeCKPHLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH84M))));

PolicyTerm: => IndicatorPaymentTypeCKPH72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH72M))));
Individual: => IndicatorPaymentTypeCKPHAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH72M))));
Individual: => IndicatorPaymentTypeCKPHHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH72M))));
Individual: => IndicatorPaymentTypeCKPHLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH72M))));

PolicyTerm: => IndicatorPaymentTypeCKPH60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH60M))));
Individual: => IndicatorPaymentTypeCKPHAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH60M))));
Individual: => IndicatorPaymentTypeCKPHHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH60M))));
Individual: => IndicatorPaymentTypeCKPHLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH60M))));

PolicyTerm: => IndicatorPaymentTypeCKPH48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH48M))));
Individual: => IndicatorPaymentTypeCKPHAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH48M))));
Individual: => IndicatorPaymentTypeCKPHHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH48M))));
Individual: => IndicatorPaymentTypeCKPHLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH48M))));

PolicyTerm: => IndicatorPaymentTypeCKPH36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH36M))));
Individual: => IndicatorPaymentTypeCKPHAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH36M))));
Individual: => IndicatorPaymentTypeCKPHHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH36M))));
Individual: => IndicatorPaymentTypeCKPHLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH36M))));

PolicyTerm: => IndicatorPaymentTypeCKPH24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH24M))));
Individual: => IndicatorPaymentTypeCKPHAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH24M))));
Individual: => IndicatorPaymentTypeCKPHHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH24M))));
Individual: => IndicatorPaymentTypeCKPHLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH24M))));

PolicyTerm: => IndicatorPaymentTypeCKPH12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH12M))));
Individual: => IndicatorPaymentTypeCKPHAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH12M))));
Individual: => IndicatorPaymentTypeCKPHHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH12M))));
Individual: => IndicatorPaymentTypeCKPHLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH12M))));

PolicyTerm: => IndicatorPaymentTypeCKPH06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'CKPH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCKPHALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH06M))));
Individual: => IndicatorPaymentTypeCKPHAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH06M))));
Individual: => IndicatorPaymentTypeCKPHHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH06M))));
Individual: => IndicatorPaymentTypeCKPHLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCKPH06M))));

// IndicatorPaymentTypeACH##LOB

PolicyTerm: => IndicatorPaymentTypeACH84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH84M))));
Individual: => IndicatorPaymentTypeACHAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH84M))));
Individual: => IndicatorPaymentTypeACHHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH84M))));
Individual: => IndicatorPaymentTypeACHLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH84M))));

PolicyTerm: => IndicatorPaymentTypeACH72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH72M))));
Individual: => IndicatorPaymentTypeACHAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH72M))));
Individual: => IndicatorPaymentTypeACHHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH72M))));
Individual: => IndicatorPaymentTypeACHLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH72M))));

PolicyTerm: => IndicatorPaymentTypeACH60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH60M))));
Individual: => IndicatorPaymentTypeACHAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH60M))));
Individual: => IndicatorPaymentTypeACHHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH60M))));
Individual: => IndicatorPaymentTypeACHLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH60M))));

PolicyTerm: => IndicatorPaymentTypeACH48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH48M))));
Individual: => IndicatorPaymentTypeACHAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH48M))));
Individual: => IndicatorPaymentTypeACHHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH48M))));
Individual: => IndicatorPaymentTypeACHLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH48M))));

PolicyTerm: => IndicatorPaymentTypeACH36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH36M))));
Individual: => IndicatorPaymentTypeACHAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH36M))));
Individual: => IndicatorPaymentTypeACHHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH36M))));
Individual: => IndicatorPaymentTypeACHLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH36M))));

PolicyTerm: => IndicatorPaymentTypeACH24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH24M))));
Individual: => IndicatorPaymentTypeACHAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH24M))));
Individual: => IndicatorPaymentTypeACHHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH24M))));
Individual: => IndicatorPaymentTypeACHLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH24M))));

PolicyTerm: => IndicatorPaymentTypeACH12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH12M))));
Individual: => IndicatorPaymentTypeACHAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH12M))));
Individual: => IndicatorPaymentTypeACHHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH12M))));
Individual: => IndicatorPaymentTypeACHLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH12M))));

PolicyTerm: => IndicatorPaymentTypeACH06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'ACH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeACHALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH06M))));
Individual: => IndicatorPaymentTypeACHAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH06M))));
Individual: => IndicatorPaymentTypeACHHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH06M))));
Individual: => IndicatorPaymentTypeACHLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeACH06M))));

// IndicatorPaymentTypeESC##LOB

PolicyTerm: => IndicatorPaymentTypeESC84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC84M))));
Individual: => IndicatorPaymentTypeESCAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC84M))));
Individual: => IndicatorPaymentTypeESCHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC84M))));
Individual: => IndicatorPaymentTypeESCLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC84M))));

PolicyTerm: => IndicatorPaymentTypeESC72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC72M))));
Individual: => IndicatorPaymentTypeESCAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC72M))));
Individual: => IndicatorPaymentTypeESCHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC72M))));
Individual: => IndicatorPaymentTypeESCLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC72M))));

PolicyTerm: => IndicatorPaymentTypeESC60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC60M))));
Individual: => IndicatorPaymentTypeESCAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC60M))));
Individual: => IndicatorPaymentTypeESCHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC60M))));
Individual: => IndicatorPaymentTypeESCLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC60M))));

PolicyTerm: => IndicatorPaymentTypeESC48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC48M))));
Individual: => IndicatorPaymentTypeESCAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC48M))));
Individual: => IndicatorPaymentTypeESCHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC48M))));
Individual: => IndicatorPaymentTypeESCLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC48M))));

PolicyTerm: => IndicatorPaymentTypeESC36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC36M))));
Individual: => IndicatorPaymentTypeESCAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC36M))));
Individual: => IndicatorPaymentTypeESCHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC36M))));
Individual: => IndicatorPaymentTypeESCLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC36M))));

PolicyTerm: => IndicatorPaymentTypeESC24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC24M))));
Individual: => IndicatorPaymentTypeESCAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC24M))));
Individual: => IndicatorPaymentTypeESCHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC24M))));
Individual: => IndicatorPaymentTypeESCLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC24M))));

PolicyTerm: => IndicatorPaymentTypeESC12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC12M))));
Individual: => IndicatorPaymentTypeESCAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC12M))));
Individual: => IndicatorPaymentTypeESCHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC12M))));
Individual: => IndicatorPaymentTypeESCLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC12M))));

PolicyTerm: => IndicatorPaymentTypeESC06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'ESC')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeESCALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC06M))));
Individual: => IndicatorPaymentTypeESCAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC06M))));
Individual: => IndicatorPaymentTypeESCHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC06M))));
Individual: => IndicatorPaymentTypeESCLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeESC06M))));

// IndicatorPaymentTypeSAV##LOB

PolicyTerm: => IndicatorPaymentTypeSAV84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV84M))));
Individual: => IndicatorPaymentTypeSAVAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV84M))));
Individual: => IndicatorPaymentTypeSAVHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV84M))));
Individual: => IndicatorPaymentTypeSAVLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV84M))));

PolicyTerm: => IndicatorPaymentTypeSAV72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV72M))));
Individual: => IndicatorPaymentTypeSAVAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV72M))));
Individual: => IndicatorPaymentTypeSAVHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV72M))));
Individual: => IndicatorPaymentTypeSAVLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV72M))));

PolicyTerm: => IndicatorPaymentTypeSAV60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV60M))));
Individual: => IndicatorPaymentTypeSAVAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV60M))));
Individual: => IndicatorPaymentTypeSAVHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV60M))));
Individual: => IndicatorPaymentTypeSAVLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV60M))));

PolicyTerm: => IndicatorPaymentTypeSAV48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV48M))));
Individual: => IndicatorPaymentTypeSAVAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV48M))));
Individual: => IndicatorPaymentTypeSAVHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV48M))));
Individual: => IndicatorPaymentTypeSAVLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV48M))));

PolicyTerm: => IndicatorPaymentTypeSAV36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV36M))));
Individual: => IndicatorPaymentTypeSAVAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV36M))));
Individual: => IndicatorPaymentTypeSAVHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV36M))));
Individual: => IndicatorPaymentTypeSAVLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV36M))));

PolicyTerm: => IndicatorPaymentTypeSAV24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV24M))));
Individual: => IndicatorPaymentTypeSAVAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV24M))));
Individual: => IndicatorPaymentTypeSAVHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV24M))));
Individual: => IndicatorPaymentTypeSAVLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV24M))));

PolicyTerm: => IndicatorPaymentTypeSAV12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV12M))));
Individual: => IndicatorPaymentTypeSAVAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV12M))));
Individual: => IndicatorPaymentTypeSAVHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV12M))));
Individual: => IndicatorPaymentTypeSAVLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV12M))));

PolicyTerm: => IndicatorPaymentTypeSAV06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'SAV')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeSAVALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV06M))));
Individual: => IndicatorPaymentTypeSAVAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV06M))));
Individual: => IndicatorPaymentTypeSAVHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV06M))));
Individual: => IndicatorPaymentTypeSAVLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeSAV06M))));

// IndicatorPaymentTypeCSH##LOB

PolicyTerm: => IndicatorPaymentTypeCSH84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH84M))));
Individual: => IndicatorPaymentTypeCSHAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH84M))));
Individual: => IndicatorPaymentTypeCSHHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH84M))));
Individual: => IndicatorPaymentTypeCSHLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH84M))));

PolicyTerm: => IndicatorPaymentTypeCSH72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH72M))));
Individual: => IndicatorPaymentTypeCSHAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH72M))));
Individual: => IndicatorPaymentTypeCSHHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH72M))));
Individual: => IndicatorPaymentTypeCSHLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH72M))));

PolicyTerm: => IndicatorPaymentTypeCSH60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH60M))));
Individual: => IndicatorPaymentTypeCSHAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH60M))));
Individual: => IndicatorPaymentTypeCSHHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH60M))));
Individual: => IndicatorPaymentTypeCSHLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH60M))));

PolicyTerm: => IndicatorPaymentTypeCSH48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH48M))));
Individual: => IndicatorPaymentTypeCSHAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH48M))));
Individual: => IndicatorPaymentTypeCSHHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH48M))));
Individual: => IndicatorPaymentTypeCSHLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH48M))));

PolicyTerm: => IndicatorPaymentTypeCSH36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH36M))));
Individual: => IndicatorPaymentTypeCSHAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH36M))));
Individual: => IndicatorPaymentTypeCSHHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH36M))));
Individual: => IndicatorPaymentTypeCSHLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH36M))));

PolicyTerm: => IndicatorPaymentTypeCSH24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH24M))));
Individual: => IndicatorPaymentTypeCSHAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH24M))));
Individual: => IndicatorPaymentTypeCSHHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH24M))));
Individual: => IndicatorPaymentTypeCSHLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH24M))));

PolicyTerm: => IndicatorPaymentTypeCSH12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH12M))));
Individual: => IndicatorPaymentTypeCSHAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH12M))));
Individual: => IndicatorPaymentTypeCSHHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH12M))));
Individual: => IndicatorPaymentTypeCSHLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH12M))));

PolicyTerm: => IndicatorPaymentTypeCSH06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'CSH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeCSHALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH06M))));
Individual: => IndicatorPaymentTypeCSHAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH06M))));
Individual: => IndicatorPaymentTypeCSHHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH06M))));
Individual: => IndicatorPaymentTypeCSHLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeCSH06M))));

// IndicatorPaymentTypeOTH##LOB

PolicyTerm: => IndicatorPaymentTypeOTH84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH84M))));
Individual: => IndicatorPaymentTypeOTHAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH84M))));
Individual: => IndicatorPaymentTypeOTHHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH84M))));
Individual: => IndicatorPaymentTypeOTHLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH84M))));

PolicyTerm: => IndicatorPaymentTypeOTH72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH72M))));
Individual: => IndicatorPaymentTypeOTHAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH72M))));
Individual: => IndicatorPaymentTypeOTHHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH72M))));
Individual: => IndicatorPaymentTypeOTHLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH72M))));

PolicyTerm: => IndicatorPaymentTypeOTH60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH60M))));
Individual: => IndicatorPaymentTypeOTHAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH60M))));
Individual: => IndicatorPaymentTypeOTHHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH60M))));
Individual: => IndicatorPaymentTypeOTHLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH60M))));

PolicyTerm: => IndicatorPaymentTypeOTH48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH48M))));
Individual: => IndicatorPaymentTypeOTHAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH48M))));
Individual: => IndicatorPaymentTypeOTHHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH48M))));
Individual: => IndicatorPaymentTypeOTHLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH48M))));

PolicyTerm: => IndicatorPaymentTypeOTH36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH36M))));
Individual: => IndicatorPaymentTypeOTHAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH36M))));
Individual: => IndicatorPaymentTypeOTHHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH36M))));
Individual: => IndicatorPaymentTypeOTHLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH36M))));

PolicyTerm: => IndicatorPaymentTypeOTH24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH24M))));
Individual: => IndicatorPaymentTypeOTHAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH24M))));
Individual: => IndicatorPaymentTypeOTHHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH24M))));
Individual: => IndicatorPaymentTypeOTHLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH24M))));

PolicyTerm: => IndicatorPaymentTypeOTH12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH12M))));
Individual: => IndicatorPaymentTypeOTHAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH12M))));
Individual: => IndicatorPaymentTypeOTHHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH12M))));
Individual: => IndicatorPaymentTypeOTHLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH12M))));

PolicyTerm: => IndicatorPaymentTypeOTH06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType = 'OTH')) AND NumPayTypeSPerTerm = 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeOTHALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH06M))));
Individual: => IndicatorPaymentTypeOTHAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH06M))));
Individual: => IndicatorPaymentTypeOTHHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH06M))));
Individual: => IndicatorPaymentTypeOTHLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeOTH06M))));

// IndicatorPaymentTypeMix##LOB
PolicyTerm: => IndicatorPaymentTypeMIX84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX84M))));
Individual: => IndicatorPaymentTypeMIXAuto84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX84M))));
Individual: => IndicatorPaymentTypeMIXHome84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX84M))));
Individual: => IndicatorPaymentTypeMIXLife84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX84M))));

PolicyTerm: => IndicatorPaymentTypeMIX72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX72M))));
Individual: => IndicatorPaymentTypeMIXAuto72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX72M))));
Individual: => IndicatorPaymentTypeMIXHome72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX72M))));
Individual: => IndicatorPaymentTypeMIXLife72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX72M))));

PolicyTerm: => IndicatorPaymentTypeMIX60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX60M))));
Individual: => IndicatorPaymentTypeMIXAuto60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX60M))));
Individual: => IndicatorPaymentTypeMIXHome60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX60M))));
Individual: => IndicatorPaymentTypeMIXLife60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX60M))));

PolicyTerm: => IndicatorPaymentTypeMIX48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX48M))));
Individual: => IndicatorPaymentTypeMIXAuto48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX48M))));
Individual: => IndicatorPaymentTypeMIXHome48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX48M))));
Individual: => IndicatorPaymentTypeMIXLife48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX48M))));

PolicyTerm: => IndicatorPaymentTypeMIX36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX36M))));
Individual: => IndicatorPaymentTypeMIXAuto36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX36M))));
Individual: => IndicatorPaymentTypeMIXHome36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX36M))));
Individual: => IndicatorPaymentTypeMIXLife36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX36M))));

PolicyTerm: => IndicatorPaymentTypeMIX24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX24M))));
Individual: => IndicatorPaymentTypeMIXAuto24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX24M))));
Individual: => IndicatorPaymentTypeMIXHome24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX24M))));
Individual: => IndicatorPaymentTypeMIXLife24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX24M))));

PolicyTerm: => IndicatorPaymentTypeMIX12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX12M))));
Individual: => IndicatorPaymentTypeMIXAuto12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX12M))));
Individual: => IndicatorPaymentTypeMIXHome12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX12M))));
Individual: => IndicatorPaymentTypeMIXLife12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX12M))));

PolicyTerm: => IndicatorPaymentTypeMIX06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentReceivedType:Null)) AND NumPayTypeSPerTerm > 1 AND NOT TermBeginDate:Null;
Individual: => IndicatorPaymentTypeMIXALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX06M))));
Individual: => IndicatorPaymentTypeMIXAuto06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX06M))));
Individual: => IndicatorPaymentTypeMIXHome06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX06M))));
Individual: => IndicatorPaymentTypeMIXLife06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND IndicatorPaymentTypeMIX06M))));


// IndicatorInitiallyPaidInFull##LOB

PolicyTerm: => ExistsPaidInFull84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y'));
Individual: => IndicatorInitiallyPaidInFullALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull84M))));
Individual: => IndicatorInitiallyPaidInFullAUTO84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull84M))));
Individual: => IndicatorInitiallyPaidInFullHOME84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull84M))));
Individual: => IndicatorInitiallyPaidInFullLIFE84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull84M))));

PolicyTerm: => ExistsPaidInFull72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull72M))));
Individual: => IndicatorInitiallyPaidInFullAUTO72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull72M))));
Individual: => IndicatorInitiallyPaidInFullHOME72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull72M))));
Individual: => IndicatorInitiallyPaidInFullLIFE72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull72M))));

PolicyTerm: => ExistsPaidInFull60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull60M))));
Individual: => IndicatorInitiallyPaidInFullAUTO60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull60M))));
Individual: => IndicatorInitiallyPaidInFullHOME60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull60M))));
Individual: => IndicatorInitiallyPaidInFullLIFE60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull60M))));

PolicyTerm: => ExistsPaidInFull48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull48M))));
Individual: => IndicatorInitiallyPaidInFullAUTO48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull48M))));
Individual: => IndicatorInitiallyPaidInFullHOME48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull48M))));
Individual: => IndicatorInitiallyPaidInFullLIFE48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull48M))));

PolicyTerm: => ExistsPaidInFull36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull36M))));
Individual: => IndicatorInitiallyPaidInFullAUTO36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull36M))));
Individual: => IndicatorInitiallyPaidInFullHOME36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull36M))));
Individual: => IndicatorInitiallyPaidInFullLIFE36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull36M))));

PolicyTerm: => ExistsPaidInFull24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull24M))));
Individual: => IndicatorInitiallyPaidInFullAUTO24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull24M))));
Individual: => IndicatorInitiallyPaidInFullHOME24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull24M))));
Individual: => IndicatorInitiallyPaidInFullLIFE24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull24M))));

PolicyTerm: => ExistsPaidInFull12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull12M))));
Individual: => IndicatorInitiallyPaidInFullAUTO12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull12M))));
Individual: => IndicatorInitiallyPaidInFullHOME12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull12M))));
Individual: => IndicatorInitiallyPaidInFullLIFE12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull12M))));

PolicyTerm: => ExistsPaidInFull06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND NumberOfInstallmentPayments = 1 AND IsPaidInFull = 'Y')) AND NOT TermBeginDate:Null;
Individual: => IndicatorInitiallyPaidInFullALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsPaidInFull06M))));
Individual: => IndicatorInitiallyPaidInFullAUTO06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsPaidInFull06M))));
Individual: => IndicatorInitiallyPaidInFullHOME06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsPaidInFull06M))));
Individual: => IndicatorInitiallyPaidInFullLIFE06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsPaidInFull06M))));


// IndicatorInstallmentPlan##LOB
//note, as long as there is one installment payment, which NumberOfInstallmentPayments > 1
PolicyTerm: => ExistsInstallmentPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan84M))));
Individual: => IndicatorInstallmentPlanAUTO84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan84M))));
Individual: => IndicatorInstallmentPlanHOME84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan84M))));
Individual: => IndicatorInstallmentPlanLIFE84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan84M))));

PolicyTerm: => ExistsInstallmentPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan72M))));
Individual: => IndicatorInstallmentPlanAUTO72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan72M))));
Individual: => IndicatorInstallmentPlanHOME72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan72M))));
Individual: => IndicatorInstallmentPlanLIFE72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan72M))));

PolicyTerm: => ExistsInstallmentPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan60M))));
Individual: => IndicatorInstallmentPlanAUTO60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan60M))));
Individual: => IndicatorInstallmentPlanHOME60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan60M))));
Individual: => IndicatorInstallmentPlanLIFE60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan60M))));

PolicyTerm: => ExistsInstallmentPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan48M))));
Individual: => IndicatorInstallmentPlanAUTO48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan48M))));
Individual: => IndicatorInstallmentPlanHOME48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan48M))));
Individual: => IndicatorInstallmentPlanLIFE48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan48M))));

PolicyTerm: => ExistsInstallmentPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan36M))));
Individual: => IndicatorInstallmentPlanAUTO36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan36M))));
Individual: => IndicatorInstallmentPlanHOME36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan36M))));
Individual: => IndicatorInstallmentPlanLIFE36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan36M))));

PolicyTerm: => ExistsInstallmentPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan24M))));
Individual: => IndicatorInstallmentPlanAUTO24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan24M))));
Individual: => IndicatorInstallmentPlanHOME24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan24M))));
Individual: => IndicatorInstallmentPlanLIFE24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan24M))));

PolicyTerm: => ExistsInstallmentPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan12M))));
Individual: => IndicatorInstallmentPlanAUTO12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan12M))));
Individual: => IndicatorInstallmentPlanHOME12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan12M))));
Individual: => IndicatorInstallmentPlanLIFE12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan12M))));

PolicyTerm: => ExistsInstallmentPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND NumberOfInstallmentPayments > 1)) AND NOT TermBeginDate:Null;
Individual: => IndicatorInstallmentPlanALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan06M))));
Individual: => IndicatorInstallmentPlanAUTO06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistsInstallmentPlan06M))));
Individual: => IndicatorInstallmentPlanHOME06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan06M))));
Individual: => IndicatorInstallmentPlanLIFE06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistsInstallmentPlan06M))));



// NumberPoliciesPayWeekly##LOB
//note: as long as there is one term was set as weekly pay plan, count this policy
PolicyTerm: => ExistWeeklyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE84M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE72M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE60M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE48M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE36M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE24M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE12M),CAP_999));

PolicyTerm: => ExistWeeklyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'A')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayWeeklyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayWeeklyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayWeeklyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayWeeklyLIFE06M),CAP_999));

// NumberPoliciesPayBiWeekly##LOB
PolicyTerm: => ExistBiWeeklyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE84M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE72M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE60M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE48M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE36M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE24M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE12M),CAP_999));

PolicyTerm: => ExistBiWeeklyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'B')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiWeeklyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayBiWeeklyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiWeeklyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiWeeklyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiWeeklyLIFE06M),CAP_999));

// NumberPoliciesPayBiMonthly##LOB
PolicyTerm: => ExistBiMonthlyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE84M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE72M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE60M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE48M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE36M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE24M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE12M),CAP_999));

PolicyTerm: => ExistBiMonthlyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'C')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayBiMonthlyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayBiMonthlyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistBiMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayBiMonthlyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayBiMonthlyLIFE06M),CAP_999));

// NumberPoliciesPayMonthly##LOB
PolicyTerm: => ExistMonthlyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE84M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE72M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE60M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE48M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE36M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE24M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE12M),CAP_999));

PolicyTerm: => ExistMonthlyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'D')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayMonthlyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayMonthlyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistMonthlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayMonthlyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayMonthlyLIFE06M),CAP_999));

// NumberPoliciesPaySemiAnnually##LOB
PolicyTerm: => ExistSemiAnnuallyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL84M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE84M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL72M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE72M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL60M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE60M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL48M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE48M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL36M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE36M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL24M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE24M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL12M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE12M),CAP_999));

PolicyTerm: => ExistSemiAnnuallyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'E')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPaySemiAnnuallyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyALL06M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPaySemiAnnuallyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistSemiAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPaySemiAnnuallyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPaySemiAnnuallyLIFE06M),CAP_999));

// NumberPoliciesPayAnnually##LOB: same condition with IndicatorInstallmentPlan
PolicyTerm: => CntUniquePaymentFreqPerTerms := COUNT(Details(NOT PaymentFrequency:Null){PaymentFrequency});//count the PaymentFrequency for each term

// PolicyTerm: => CntUniquePaymentFreq84M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE84M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq72M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE72M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq60M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE60M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq48M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE48M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq36M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND NOT PlanEffectiveDate:Null){PaymentFrequency});    
PolicyTerm: => ExistAnnuallyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE36M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq24M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE24M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq12M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND NOT TermBeginDate:Null AND PaymentFrequency = 'F' AND CntUniquePaymentFreqPerTerms = 1));
Individual: => SetNumberPoliciesPayAnnuallyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE12M),CAP_999));

// PolicyTerm: => CntUniquePaymentFreq06M := COUNT(PaymentPlan(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND NOT PlanEffectiveDate:Null){PaymentFrequency});
PolicyTerm: => ExistAnnuallyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'F')) AND NOT TermBeginDate:Null AND CntUniquePaymentFreqPerTerms = 1;
Individual: => SetNumberPoliciesPayAnnuallyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayAnnuallyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistAnnuallyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayAnnuallyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayAnnuallyLIFE06M),CAP_999));


// NumberPoliciesPayQuarterly##LOB
PolicyTerm: => ExistQuarterlyPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL84M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE84M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL72M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE72M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL60M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE60M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL48M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE48M),CAP_999));
    
PolicyTerm: => ExistQuarterlyPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL36M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE36M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL24M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE24M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL12M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE12M),CAP_999));

PolicyTerm: => ExistQuarterlyPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'Q')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayQuarterlyALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyALL06M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayQuarterlyLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistQuarterlyPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayQuarterlyLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayQuarterlyLIFE06M),CAP_999));

// NumberPoliciesPayOther##LOB
PolicyTerm: => ExistOtherPaymenPlan84M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 84 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL84M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO84M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME84M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE84M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan72M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 72 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL72M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO72M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME72M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE72M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan60M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 60 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL60M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO60M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME60M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE60M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan48M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 48 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL48M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO48M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME48M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE48M),CAP_999));
    
PolicyTerm: => ExistOtherPaymenPlan36M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 36 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL36M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO36M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME36M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE36M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan24M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 24 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL24M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO24M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME24M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE24M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan12M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 12 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL12M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO12M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME12M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE12M),CAP_999));

PolicyTerm: => ExistOtherPaymenPlan06M := EXISTS(Details(GNOTExcluded AND GMOSTermBeginDate >= 0 AND GMOSTermBeginDate <= 6 AND PaymentFrequency = 'X')) AND NOT TermBeginDate:Null;
Individual: => SetNumberPoliciesPayOtherALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherALL06M),CAP_999));
Individual: => SetNumberPoliciesPayOtherAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherAUTO06M),CAP_999));
Individual: => SetNumberPoliciesPayOtherHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherHOME06M),CAP_999));
Individual: => SetNumberPoliciesPayOtherLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistOtherPaymenPlan06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesPayOtherLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesPayOtherLIFE06M),CAP_999));

// NumberPoliciesReinstated##LOB
// PaymentPlan: => IsPolicyReinstatement := ONLY(PaymentDetails(EndorsementNumber = PaymentPlan.EndorsementNumber AND EndorsementDate = PaymentPlan.EndorsementDate){IsPolicyReinstatement}).IsPolicyReinstatement;
PolicyTerm.Details: => GMOSReinstatementDate := IF(PolicyReinstatementDate > CURRENTDATE(), 0, MONTHSBETWEEN(PolicyReinstatementDate,CURRENTDATE()));//count the future reinstatement case, and missing date will return null

PolicyTerm: => ExistReinstatement84M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 84 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL84M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL84M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL84M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO84M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO84M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO84M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME84M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME84M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME84M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE84M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement84M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE84M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE84M),CAP_999));

PolicyTerm: => ExistReinstatement72M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 72 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL72M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL72M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL72M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO72M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO72M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO72M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME72M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME72M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME72M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE72M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement72M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE72M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE72M),CAP_999));

PolicyTerm: => ExistReinstatement60M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 60 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL60M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL60M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL60M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO60M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO60M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO60M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME60M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME60M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME60M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE60M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement60M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE60M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE60M),CAP_999));

PolicyTerm: => ExistReinstatement48M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 48 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL48M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL48M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL48M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO48M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO48M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO48M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME48M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME48M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME48M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE48M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement48M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE48M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE48M),CAP_999));

PolicyTerm: => ExistReinstatement36M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 36 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL36M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL36M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL36M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO36M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO36M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO36M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME36M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME36M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME36M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE36M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement36M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE36M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE36M),CAP_999));

PolicyTerm: => ExistReinstatement24M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 24 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL24M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL24M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL24M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO24M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO24M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO24M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME24M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME24M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME24M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE24M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement24M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE24M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE24M),CAP_999));

PolicyTerm: => ExistReinstatement12M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 12 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL12M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL12M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL12M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO12M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO12M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO12M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME12M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME12M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME12M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE12M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement12M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE12M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE12M),CAP_999));

PolicyTerm: => ExistReinstatement06M := EXISTS(Details(GNOTExcluded AND PolicyReinstatementDate > VALIDDATE AND GMOSReinstatementDate >= 0 AND GMOSReinstatementDate <= 6 AND NOT PolicyReinstatementDate:Null));
Individual: => SetNumberPoliciesReinstatedALL06M := PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistReinstatement06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedALL06M := IF(SetDefault1All,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedALL06M),CAP_999));
Individual: => SetNumberPoliciesReinstatedAUTO06M := PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistReinstatement06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedAUTO06M := IF(SetDefault1Auto,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedAUTO06M),CAP_999));
Individual: => SetNumberPoliciesReinstatedHOME06M := PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistReinstatement06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedHOME06M := IF(SetDefault1Home,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedHOME06M),CAP_999));
Individual: => SetNumberPoliciesReinstatedLIFE06M := PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistReinstatement06M){PolicyNumber, PolicyPlan, AMBestNumber};
Individual: => NumberPoliciesReinstatedLIFE06M := IF(SetDefault1Life,DEFAULT_1,MIN(COUNT(SetNumberPoliciesReinstatedLIFE06M),CAP_999));

// IndicatorPartialPayment##LOB
PolicyTerm: => ExistPartialPayment84M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 84 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL84M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment84M))));
Individual: => IndicatorPartialPaymentAUTO84M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment84M))));
Individual: => IndicatorPartialPaymentHOME84M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment84M))));
Individual: => IndicatorPartialPaymentLIFE84M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment84M))));

PolicyTerm: => ExistPartialPayment72M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 72 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL72M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment72M))));
Individual: => IndicatorPartialPaymentAUTO72M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment72M))));
Individual: => IndicatorPartialPaymentHOME72M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment72M))));
Individual: => IndicatorPartialPaymentLIFE72M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment72M))));

PolicyTerm: => ExistPartialPayment60M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 60 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL60M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment60M))));
Individual: => IndicatorPartialPaymentAUTO60M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment60M))));
Individual: => IndicatorPartialPaymentHOME60M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment60M))));
Individual: => IndicatorPartialPaymentLIFE60M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment60M))));

PolicyTerm: => ExistPartialPayment48M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 48 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL48M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment48M))));
Individual: => IndicatorPartialPaymentAUTO48M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment48M))));
Individual: => IndicatorPartialPaymentHOME48M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment48M))));
Individual: => IndicatorPartialPaymentLIFE48M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment48M))));

PolicyTerm: => ExistPartialPayment36M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 36 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL36M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment36M))));
Individual: => IndicatorPartialPaymentAUTO36M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment36M))));
Individual: => IndicatorPartialPaymentHOME36M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment36M))));
Individual: => IndicatorPartialPaymentLIFE36M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment36M))));

PolicyTerm: => ExistPartialPayment24M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 24 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL24M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment24M))));
Individual: => IndicatorPartialPaymentAUTO24M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment24M))));
Individual: => IndicatorPartialPaymentHOME24M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment24M))));
Individual: => IndicatorPartialPaymentLIFE24M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment24M))));

PolicyTerm: => ExistPartialPayment12M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 12 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL12M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment12M))));
Individual: => IndicatorPartialPaymentAUTO12M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment12M))));
Individual: => IndicatorPartialPaymentHOME12M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment12M))));
Individual: => IndicatorPartialPaymentLIFE12M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment12M))));

PolicyTerm: => ExistPartialPayment06M := EXISTS(Details(GNOTExcluded AND GMOSPaymentReceived >= 0 AND GMOSPaymentReceived <= 6 AND PaymentReceivedDate > VALIDDATE AND NOT PaymentReceivedDate:Null AND NOT TransactionPaymentReceivedPercentage:Null AND TransactionPaymentReceivedPercentage < 100 AND TransactionPaymentReceivedPercentage > 0));
Individual: => IndicatorPartialPaymentALL06M := IF(SetDefault1All,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAllLOB AND ExistGNOTExcluded AND ExistPartialPayment06M))));
Individual: => IndicatorPartialPaymentAUTO06M := IF(SetDefault1Auto,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsAUTOLOB AND ExistGNOTExcluded AND ExistPartialPayment06M))));
Individual: => IndicatorPartialPaymentHOME06M := IF(SetDefault1Home,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsHOMELOB AND ExistGNOTExcluded AND ExistPartialPayment06M))));
Individual: => IndicatorPartialPaymentLIFE06M := IF(SetDefault1Life,DEFAULT_1,CastBL2Int(EXISTS(PrimaryPolicyOwner.PolicyTerm(IsLIFELOB AND ExistGNOTExcluded AND ExistPartialPayment06M))));
