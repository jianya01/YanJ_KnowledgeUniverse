IMPORT Velocity.Entities;

PersonAddress: CDI_SEG_LIST := ['CORE','DEAD','INACTIVE'];	
PersonAddress: => G_SearchDate := CURRENTDATE();
PersonAddress: => G_8YearsAgo := ADJUSTCALENDAR(G_SearchDate, -8, 0, 0);
PersonAddress: => G_1YearsAgo := ADJUSTCALENDAR(G_SearchDate, -1, 0, 0);
PersonAddress: => G_2YearsAgo := ADJUSTCALENDAR(G_SearchDate, -2, 0, 0);
PersonAddress: => G_3YearsAgo := ADJUSTCALENDAR(G_SearchDate, -3, 0, 0);
PersonAddress: => G_4YearsAgo := ADJUSTCALENDAR(G_SearchDate, -4, 0, 0);
PersonAddress: => G_5YearsAgo := ADJUSTCALENDAR(G_SearchDate, -5, 0, 0);
PersonAddress: => G_6YearsAgo := ADJUSTCALENDAR(G_SearchDate, -6, 0, 0);

PersonAddress: => G_6MonthsAgo := ADJUSTCALENDAR(G_SearchDate, 0, -6, 0);

PersonAddress: => G_SegCDI := Subject.SegmentCate IN CDI_SEG_LIST;

PersonAddress: => G_FirstTimeEverSeen := MIN(Dates(DtLastSeen>G_8YearsAgo), DtFirstSeen);
PersonAddress: => G_LastTimeEverSeen := MAX(MAX(Dates(DtLastSeen>G_8YearsAgo AND DtLastSeen<=G_SearchDate), DtLastSeen), 
																					MAX(Dates(DtLastSeen>G_8YearsAgo), DtFirstSeen));
PersonAddress: => G_IsOccupant1YrAgo := G_FirstTimeEverSeen<=G_1YearsAgo AND G_LastTimeEverSeen>=G_1YearsAgo;
PersonAddress: => G_IsOccupant2YrAgo := G_FirstTimeEverSeen<=G_2YearsAgo AND G_LastTimeEverSeen>=G_2YearsAgo;
PersonAddress: => G_IsOccupant3YrAgo := G_FirstTimeEverSeen<=G_3YearsAgo AND G_LastTimeEverSeen>=G_3YearsAgo;
PersonAddress: => G_IsOccupant4YrAgo := G_FirstTimeEverSeen<=G_4YearsAgo AND G_LastTimeEverSeen>=G_4YearsAgo;
PersonAddress: => G_IsOccupant5YrAgo := G_FirstTimeEverSeen<=G_5YearsAgo AND G_LastTimeEverSeen>=G_5YearsAgo;

PersonAddress: => G_MovedIn1stYr := G_FirstTimeEverSeen>=G_1YearsAgo;
PersonAddress: => G_MovedIn2ndYr := G_FirstTimeEverSeen>=G_2YearsAgo AND G_FirstTimeEverSeen<=G_1YearsAgo;
PersonAddress: => G_MovedIn3rdYr := G_FirstTimeEverSeen>=G_3YearsAgo AND G_FirstTimeEverSeen<=G_2YearsAgo;
PersonAddress: => G_MovedIn4thYr := G_FirstTimeEverSeen>=G_4YearsAgo AND G_FirstTimeEverSeen<=G_3YearsAgo;
PersonAddress: => G_MovedIn5thYr := G_FirstTimeEverSeen>=G_5YearsAgo AND G_FirstTimeEverSeen<=G_4YearsAgo;

// We assume the people is still living this address if we see the records in the past 6 months.
PersonAddress: => G_MovedOut1stYr := G_LastTimeEverSeen>=G_1YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MovedOut2ndYr := G_LastTimeEverSeen>=G_2YearsAgo AND G_LastTimeEverSeen<=G_1YearsAgo;
PersonAddress: => G_MovedOut3rdYr := G_LastTimeEverSeen>=G_3YearsAgo AND G_LastTimeEverSeen<=G_2YearsAgo;
PersonAddress: => G_MovedOut4thYr := G_LastTimeEverSeen>=G_4YearsAgo AND G_LastTimeEverSeen<=G_3YearsAgo;
PersonAddress: => G_MovedOut5thYr := G_LastTimeEverSeen>=G_5YearsAgo AND G_LastTimeEverSeen<=G_4YearsAgo;

Address: DEFAULT_CAP := 999;
Address: => Occupants1YrAgo := MIN(COUNT(PersonAddress(G_IsOccupant1YrAgo){Subject}), DEFAULT_CAP);
Address: => Occupants2YrAgo := MIN(COUNT(PersonAddress(G_IsOccupant2YrAgo){Subject}), DEFAULT_CAP);
Address: => Occupants3YrAgo := MIN(COUNT(PersonAddress(G_IsOccupant3YrAgo){Subject}), DEFAULT_CAP);
Address: => Occupants4YrAgo := MIN(COUNT(PersonAddress(G_IsOccupant4YrAgo){Subject}), DEFAULT_CAP);
Address: => Occupants5YrAgo := MIN(COUNT(PersonAddress(G_IsOccupant5YrAgo){Subject}), DEFAULT_CAP);

Address: => TurnoverIn1stYr := MIN(COUNT(PersonAddress(G_MovedIn1stYr){Subject}), DEFAULT_CAP);
Address: => TurnoverIn2ndYr := MIN(COUNT(PersonAddress(G_MovedIn2ndYr){Subject}), DEFAULT_CAP);
Address: => TurnoverIn3rdYr := MIN(COUNT(PersonAddress(G_MovedIn3rdYr){Subject}), DEFAULT_CAP);
Address: => TurnoverIn4thYr := MIN(COUNT(PersonAddress(G_MovedIn4thYr){Subject}), DEFAULT_CAP);
Address: => TurnoverIn5thYr := MIN(COUNT(PersonAddress(G_MovedIn5thYr){Subject}), DEFAULT_CAP);

Address: => TurnoverOut1stYr := MIN(COUNT(PersonAddress(G_MovedOut1stYr){Subject}), DEFAULT_CAP);
Address: => TurnoverOut2ndYr := MIN(COUNT(PersonAddress(G_MovedOut2ndYr){Subject}), DEFAULT_CAP);
Address: => TurnoverOut3rdYr := MIN(COUNT(PersonAddress(G_MovedOut3rdYr){Subject}), DEFAULT_CAP);
Address: => TurnoverOut4thYr := MIN(COUNT(PersonAddress(G_MovedOut4thYr){Subject}), DEFAULT_CAP);
Address: => TurnoverOut5thYr := MIN(COUNT(PersonAddress(G_MovedOut5thYr){Subject}), DEFAULT_CAP);

PersonAddress: => G_MoveOutWithin1Yr := G_LastTimeEverSeen>=G_1YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MoveOutWithin2Yr := G_LastTimeEverSeen>=G_2YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MoveOutWithin3Yr := G_LastTimeEverSeen>=G_3YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MoveOutWithin4Yr := G_LastTimeEverSeen>=G_4YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MoveOutWithin5Yr := G_LastTimeEverSeen>=G_5YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;
PersonAddress: => G_MoveOutWithin6Yr := G_LastTimeEverSeen>=G_6YearsAgo AND G_LastTimeEverSeen<=G_6MonthsAgo;

Address: => CntMoveOutWithin1Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin1Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin2Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin2Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin3Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin3Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin4Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin4Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin5Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin5Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin6Yr := MIN(COUNT(PersonAddress(G_MoveOutWithin6Yr){Subject}), DEFAULT_CAP);

PersonAddress: => G_MoveInWithin1Yr := G_FirstTimeEverSeen>=G_1YearsAgo;
PersonAddress: => G_MoveInWithin2Yr := G_FirstTimeEverSeen>=G_2YearsAgo;
PersonAddress: => G_MoveInWithin3Yr := G_FirstTimeEverSeen>=G_3YearsAgo;
PersonAddress: => G_MoveInWithin4Yr := G_FirstTimeEverSeen>=G_4YearsAgo;
PersonAddress: => G_MoveInWithin5Yr := G_FirstTimeEverSeen>=G_5YearsAgo;
PersonAddress: => G_MoveInWithin6Yr := G_FirstTimeEverSeen>=G_6YearsAgo;

Address: => CntMoveInWithin1Yr := MIN(COUNT(PersonAddress(G_MoveInWithin1Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin2Yr := MIN(COUNT(PersonAddress(G_MoveInWithin2Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin3Yr := MIN(COUNT(PersonAddress(G_MoveInWithin3Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin4Yr := MIN(COUNT(PersonAddress(G_MoveInWithin4Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin5Yr := MIN(COUNT(PersonAddress(G_MoveInWithin5Yr){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin6Yr := MIN(COUNT(PersonAddress(G_MoveInWithin6Yr){Subject}), DEFAULT_CAP);

PersonAddress: => G_OccupantsWithin6M := G_FirstTimeEverSeen>=G_6MonthsAgo OR G_LastTimeEverSeen>=G_6MonthsAgo;
PersonAddress: => G_OccupantsWithin1Yr := G_FirstTimeEverSeen>=G_1YearsAgo OR G_LastTimeEverSeen>=G_1YearsAgo;
PersonAddress: => G_OccupantsWithin2Yr := G_FirstTimeEverSeen>=G_2YearsAgo OR G_LastTimeEverSeen>=G_2YearsAgo;
PersonAddress: => G_OccupantsWithin3Yr := G_FirstTimeEverSeen>=G_3YearsAgo OR G_LastTimeEverSeen>=G_3YearsAgo;
PersonAddress: => G_OccupantsWithin4Yr := G_FirstTimeEverSeen>=G_4YearsAgo OR G_LastTimeEverSeen>=G_4YearsAgo;
PersonAddress: => G_OccupantsWithin5Yr := G_FirstTimeEverSeen>=G_5YearsAgo OR G_LastTimeEverSeen>=G_5YearsAgo;
PersonAddress: => G_OccupantsWithin6Yr := G_FirstTimeEverSeen>=G_6YearsAgo OR G_LastTimeEverSeen>=G_6YearsAgo;

Address: => CntOccupantsWithin6M := MIN(COUNT(PersonAddress(G_OccupantsWithin6M){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin1Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin1Yr){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin2Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin2Yr){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin3Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin3Yr){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin4Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin4Yr){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin5Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin5Yr){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin6Yr := MIN(COUNT(PersonAddress(G_OccupantsWithin6Yr){Subject}), DEFAULT_CAP);

Address: => CntMoveOutWithin1YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin1Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin2YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin2Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin3YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin3Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin4YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin4Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin5YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin5Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveOutWithin6YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveOutWithin6Yr AND G_SegCDI){Subject}), DEFAULT_CAP);

Address: => CntMoveInWithin1YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin1Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin2YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin2Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin3YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin3Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin4YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin4Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin5YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin5Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntMoveInWithin6YrInCatCDI := MIN(COUNT(PersonAddress(G_MoveInWithin6Yr AND G_SegCDI){Subject}), DEFAULT_CAP);

Address: => CntOccupantsWithin6MInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin6M AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin1YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin1Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin2YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin2Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin3YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin3Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin4YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin4Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin5YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin5Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
Address: => CntOccupantsWithin6YrInCatCDI := MIN(COUNT(PersonAddress(G_OccupantsWithin6Yr AND G_SegCDI){Subject}), DEFAULT_CAP);
