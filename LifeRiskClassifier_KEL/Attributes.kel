IMPORT KnowledgeUniverse.LifeRiskClassifier_KEL.Entities;
IMPORT LifeRiskClassifier_KEL.Uses;

// Major SVC in Life
MVRActivity: LIFE_MAJOR_SVC_LIST :=
[
'11710',
'11720',
'11730',
'12011',
'12012',
'12013',
'12030',
'12330',
'12350',
'12410',
'12430',
'12440',
'12450',
'12460',
'12610',
'12620',
'12630',
'12720',
'12730',
'13410',
'13420',
'13510',
'16110',
'16140',
'16150',
'16160',
'16170',
'16180',
'16210',
'16220',
'16230',
'16260',
'16290',
'16310',
'16320',
'16340',
'16420',
'16430',
'16460',
'16510',
'16690',
'16700',
'16710',
'16720',
'16730',
'16740',
'16750',
'16760',
'16810',
'16820',
'16830',
'16840',
'16850',
'16860',
'16890',
'16910',
'16920',
'16930',
'16940',
'16990',
'18120',
'18420',
'18430',
'18440',
'18450',
'18510',
'21340',
'22030',
'22040',
'22110',
'22600',
'22700',
'22710',
'22720',
'31180',
'311DI',
'311FH',
'311FI',
'311FZ',
'311GH',
'311GZ',
'311HI',
'311HN',
'311HZ',
'311IH',
'311II',
'311IJ',
'311IZ',
'311JI',
'311JJ',
'311JK',
'311JZ',
'311KZ',
'311LK',
'311LR',
'311LZ',
'311ML',
'311MR',
'311MZ',
'311NZ',
'311PI',
'311PP',
'311PZ',
'311RZ',
'311SZ',
'314JZ',
'31610',
'31620',
'35340',
'35350',
'51110',
'51120',
'51210',
'51220',
'51310',
'52100',
'52110',
'52120',
'52130',
'52140',
'52150',
'52160',
'52170',
'52180',
'52310',
'52320',
'52330',
'52810',
'52820',
'53210',
'53220',
'55110',
'55210',
'55220',
'55310',
'55320',
'55330', // 1/15/2020
'55340',
'55350', // 1/15/2020
'55360', // 1/15/2020
'56110',
'56210',
'56220',
'56230',
'56240',
'56310',
'57110',
'58110',
'58120',
'58210',
'82130',
'84140',
'84150',
'86110',
'88410'
];

// Additional Major SVC in Life with conditions
// MVRActivity: LIFE_MAJOR_SVC_G60_LIST := ['16520','16530','16540','16550','16560'];

// Valid MVRStatus 
MVReport: VALID_MVR_STATUS := ['C','R','Y','H','D'];
MVReport: DEFAULT_LV1 := -1;
MVReport: CAP_DEFAULT := 92;

MVRActivity: ACCI_TYPE := 'ACCI';


// MVReport: => InquiryDOB := ONLY(MVRReportInquiry.Transaction, DateOfBirth);
// MVReport: => InquiryAge := YEARSBETWEEN(InquiryDOB, Datestamp);
// MVRActivity: => InquiryAge := rMVReport.InquiryAge;
MVRActivity: => ProcessDate := ADJUSTCALENDAR(rMVReport.Datestamp,0,0,-1);

MVRActivity: => StdSVC := SUBSTR(StandardViolationCode,1,5);

// MVRActivity: => MajorViolations := (StdSVC IN LIFE_MAJOR_SVC_LIST) OR ((StdSVC IN LIFE_MAJOR_SVC_G60_LIST) AND (InquiryAge>60));
MVRActivity: => MajorViolations := StdSVC IN LIFE_MAJOR_SVC_LIST;
MVRActivity: => ViolDate := IF((ActivityType = ACCI_TYPE AND NOT VISUDate:Null) OR COREDate:Null,VISUDate, COREDate);
MVRActivity: => AgeOfViolationInM := MONTHSBETWEEN(ViolDate, ProcessDate);
MVRActivity: => AgeOfViolationInD := DAYSBETWEEN(ViolDate, rMVReport.Datestamp);


MVReport: => ValidReport := MVRStatus IN VALID_MVR_STATUS;

MVReport: => major_3y := IF(ValidReport, MIN(COUNT(MVRActivity(AgeOfViolationInM<36 AND AgeOfViolationInD >=0 AND MajorViolations)), CAP_DEFAULT), DEFAULT_LV1);

