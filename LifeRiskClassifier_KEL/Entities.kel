// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));

Inquiry := ENTITY(FLAT(UID(TransactionID),
		STRING TransactionID,
		STRING DriversLicenseNumber,
		STRING DriversLicenseState,
		STRING FullName,
		STRING FirstName,
		STRING MiddleName,
		STRING LastName,
		STRING NameSuffix,
		STRING Title,
		DATE DateOfBirth,
		STRING Gender,
		STRING SSN,
		STRING Quoteback),
	MODEL(UID,
		TransactionID, DriversLicenseNumber, DriversLicenseState,
		FullName, FirstName, MiddleName, LastName, NameSuffix, Title,
		DateOfBirth,Gender, SSN, Quoteback));

MVReport := ENTITY(FLAT(UID(TransactionID, ReportCounter),
		STRING TransactionID,
		INTEGER ReportCounter,
		STRING ReportSource,
		STRING OrderID,
		STRING StatePostalCode,
		STRING MVRStatus,
		DATE Datestamp,
		STRING AccountNumber,
		STRING DMVAccount,
		INTEGER DMVMessageCounter,
		STRING DMVMessageCode,
		STRING DMVMessage,
		INTEGER DMVSequenceNumber,
		INTEGER MessageCounter,
		STRING MessageCode,
		STRING Message,
		INTEGER SequenceNumber),
	MODEL(UID,
		TransactionID, ReportCounter,
		ReportSource, OrderID, StatePostalCode, MVRStatus, Datestamp, AccountNumber, DMVAccount,
		DMVMessages{DMVMessageCounter, DMVMessageCode, DMVMessage, DMVSequenceNumber},
		Messages{MessageCounter, MessageCode, Message, SequenceNumber}));

MVRActivity := ENTITY(FLAT(UID(TransactionID, ReportCounter, ActivityCounter),
		MVReport rMVReport = UID(TransactionID, ReportCounter),
		STRING TransactionID,
		INTEGER ReportCounter,
		INTEGER ActivityCounter,
		STRING InformationSource,
		STRING ActivityType,
		STRING ActivityState,
		DATE COREDate,
		DATE VISUDate,
		STRING StateActivityCode,
		INTEGER Points,
		STRING StandardViolationCode,
		STRING StandardViolationCodeDescription,
		STRING CustomerSpecificCode,
		STRING ActivitySeverity,
		INTEGER SequenceNumber,
		STRING ActivityDescription),
	MODEL(UID,
		rMVReport, TransactionID, ReportCounter, ActivityCounter,
		InformationSource, ActivityType, ActivityState,
		COREDate, VISUDate,
		StateActivityCode, Points, StandardViolationCode, StandardViolationCodeDescription, 
		CustomerSpecificCode, ActivitySeverity, SequenceNumber,
		ActivityDescriptions{ActivityDescription}));

Person := ENTITY(FLAT(UID(TransactionID, SocialSecurityNumber, ReportCounter),
		MVReport rMVReport = UID(TransactionID, ReportCounter),
		STRING TransactionID,
		INTEGER ReportCounter,
		INTEGER SocialSecurityNumber,
		STRING FullName,
		STRING Title,
		STRING FirstName,
		STRING MiddleName,
		STRING LastName,
		STRING NameSuffix,
		DATE DateOfBirth,
		STRING Gender,
		REAL Height,
		REAL Weight,
		STRING Race,
		STRING Eyecolor,
		STRING Haircolor),
	MODEL(UID,
		rMVReport, TransactionID, SocialSecurityNumber, ReportCounter,
		FullName, Title, FirstName, MiddleName, LastName, NameSuffix,
		DateOfBirth, 
		Gender, Height, Weight, Race, Eyecolor, Haircolor));
		
Address := ENTITY(FLAT(UID(TransactionID, StreetAddress1, StateCityZip, ReportCounter),
		MVReport rMVReport = UID(TransactionID, ReportCounter),
		STRING TransactionID,
		INTEGER ReportCounter,
		INTEGER StreetNumber,
		STRING StreetPreDirection,
		STRING StreetName,
		STRING StreetSuffix,
		STRING StreetPostDirection,
		STRING UnitDesignation,
		INTEGER UnitNumber,
		STRING StreetAddress1,
		STRING StreetAddress2,
		STRING City,
		STRING State,
		INTEGER Zip5,
		INTEGER Zip4,
		STRING County,
		STRING PostalCode,
		STRING StateCityZip),
	MODEL(UID,
		rMVReport, TransactionID, StreetNumber, StreetPreDirection, StreetName, StreetSuffix, StreetPostDirection, ReportCounter,
		UnitDesignation, UnitNumber,
		StreetAddress1,
		StreetAddress2,
		City, State, Zip5, Zip4, County, PostalCode,
		StateCityZip));
		
DriversLicense := ENTITY(FLAT(UID(TransactionID, LicenseNumber, LicenseState, ReportCounter),
		MVReport rMVReport = UID(TransactionID, ReportCounter),
		STRING TransactionID,
		INTEGER ReportCounter,
		STRING LicenseNumber,
		STRING LicenseState,
		STRING LicenseClass,
		DATE IssueDate,
		DATE ExpiryDate,
		STRING LicenseStatus,
		STRING LicenseRestriction,	//Not populated yet in USE.kel
		STRING Endorsement),	//Not populated yet in USE.kel
	MODEL(UID,
		rMVReport, TransactionID, LicenseNumber, LicenseState, ReportCounter,
		LicenseDetails{LicenseClass, IssueDate, ExpiryDate, LicenseStatus},
		LicenseRestrictions{LicenseRestriction},
		Endorsements{Endorsement}));
		
MVRReportInquiry := ASSOCIATION(FLAT(Inquiry Transaction=UID(TransactionID), MVReport Report=UID(TransactionID, ReportCounter)));