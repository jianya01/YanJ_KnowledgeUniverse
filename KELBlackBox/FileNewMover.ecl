IMPORT _Control, KELBlackBox, STD;

LayoutNewMover := RECORD
  string35 full_name;
  string6 name_prefix;
  string15 first_name;
  string1 middle_initial;
  string20 last_name;
  string6 name_suffix;
  string30 secondary_address;
  string30 primary_address;
  string10 street_number;
  string2 street_pre_directional;
  string28 street_name;
  string4 street_suffix;
  string2 street_post_directional;
  string6 unit_designator;
  string8 unit_number;
  string27 city_state_zip_zip4;
  string5 zip_code;
  string4 carrier_route;
  string5 state_county_lookup;
  string6 census_tract;
  string1 block_group;
  string25 county_name;
  string10 unscrubbed_do_not_use_phone;
  string3 special_usage_flag;
  string1 recipient_reliability_code;
  string8 date_on_file;
  string1 type_of_move_by_distance;
  string5 cbsa_code;
  string1 dwelling_code;
  string1 dwelling_change_ind;
  string1 prior_dwelling_type;
  string6 prior_cbsa_code;
  string30 prior_secondary_address;
  string30 prior_primary_address;
  string13 prior_city_name;
  string2 prior_state_abbr;
  string5 prior_zip_code;
  string4 prior_zip4;
  string6 prior_census_tract;
  string7 prior_block_group;
  string1 new_homeowner_database_source;
  string1 same_diff_state;
  string1 same_diff_scf;
  string1 same_diff_zip;
  string11 current_est_median_income;
  string1 state_income_deciles;
  string1 estimated_income;
  string1 gender;
  string1 marital_status_priority;
  string1 marital_status;
  string1 num_of_children;
  string1 presence_of_children;
  string2 day_of_birth;
  string2 month_of_birth;
  string4 year_of_birth;
  string3 exact_age;
  string1 exact_age_bit;
  string8 move_date;
  string1 ncoacode;
  string8 ncoadate;
  string25 p_city_name;
  string25 v_city_name;
  string1 cr_sort_sz;
  string2 fips_state;
  string10 geo_lat;
  string11 geo_long;
  string4 msa;
  string7 geo_blk;
  string1 geo_match;
  string25 address1;
  string25 address2;
  string28 city;
  string2 state;
  string5 zip;
  string4 zip4;
  string10 prim_range;
  string2 predir;
  string28 prim_name;
  string4 addr_suffix;
  string2 postdir;
  string10 unit_desig;
  string8 sec_range;
  string9 rr_umber;
  string9 rr_box;
  string2 ace_z4_record_type;
  string3 ace_county;
  string20 np_secaddr;
  string1 dpbc_check_digit;
  string2 dpbc;
  string4 carrier_rt_code;
  string1 trunc_flag;
  string1 dns_flag;
  string6 err_stat;
  string4 lot;
  string1 lot_order;
  string28 extraneous;
  string10 addr_numerics;
  string3 constant;
  string18 state_city_key;
  string10 telephone_number;
  string1 phone_flag;
  string3 unscrubbed_do_not_use_areacode;
  string50 address;
  unsigned2 source;
  unsigned4 publish_date_days_from_current;
  decimal5_2 hisp_pct;
  string1 first_match;
  string1 last_match;
  string2 hisp_score_drv;
  string1 slpi_drv;
  string1 trv_eligible_flag;
  string3 scf_drv;
  string9 zip9;
  unsigned4 seq_num;
  string1 mailflag;
  string15 uhk;
  string15 uik;
  string11 uak;
  unsigned8 lexid;
  unsigned8 lexhhid;
  unsigned2 xlink_weight;
  unsigned2 xlink_distance;
  unsigned2 xlink_score;
 END;

fileName := KELBlackBox.FileBlackBoxLocation + 'out::newmover::20170120::final';
EXPORT FileNewMover := IF(COUNT(_Control.LexIDFilterSet) <= 0, 
	DATASET(fileName, LayoutNewMover, THOR, __COMPRESSED__)((UNSIGNED8)LexID > 0 AND STD.Date.IsValidDate(STD.Date.FromStringToDate(date_on_file[1..6] + '01', '%Y%m%d'))),
	DATASET(fileName, LayoutNewMover, THOR, __COMPRESSED__)((UNSIGNED8)LexID IN _Control.LexIDFilterSet AND STD.Date.IsValidDate(STD.Date.FromStringToDate(date_on_file[1..6] + '01', '%Y%m%d')))); 