IMPORT PolicyProperty_KEL.Entities;

// USE Statements
USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropertyRoot(FLAT,
	PolicyProperty(
		DateFirstSeen = reportidsection.reportrequestid.dateoforder, // Contains information for ASOF
		DateLastSeen = reportidsection.reportrequestid.dateofcompletion, // Contains information for ASOF
		ReportRequestRecordCode = reportidsection.reportrequestid.RecordCode,
		Quoteback = reportidsection.reportrequestid.quoteback,
		ReportCode = reportidsection.reportrequestid.reportcode,
		ReportType = reportidsection.reportrequestid.reporttype,
		AccountNumber = reportidsection.reportrequestid.accountnumber,
		AccountSuffix = reportidsection.reportrequestid.accountsuffix,
		DateOfOrder = reportidsection.reportrequestid.dateoforder,
		DateOfReceipt = reportidsection.reportrequestid.dateofreceipt,
		DateOfCompletion = reportidsection.reportrequestid.dateofcompletion,
		ProcessingCompletionStatus = reportidsection.reportrequestid.processingcompletionstatus,
		ReportUsage = reportidsection.reportrequestid.reportusage,
		ReferenceNumber = reportidsection.reportrequestid.referencenumber,
		TimeOfReport = reportidsection.reportrequestid.timeofreport,
		Attach1ProcessStatus = reportidsection.reportrequestid.attach1processstatus,
		RecordVersion = reportidsection.reportrequestid.recordversion),
	PolicyPropertyRecap(
		InquiryRecapRecordCode = RecapProcessingSection.ReportLevelInquiryRecap.RecordCode,
		InquiryRecapClassification = RecapProcessingSection.ReportLevelInquiryRecap.Classification,
		InquiryRecapSpecialField1Type = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField1Type,
		InquiryRecapSpecialField1Count = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField1Count,
		InquiryRecapSpecialField2Type = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField2Type,
		InquiryRecapSpecialField2Status = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField2Status,
		InquiryRecapSpecialField3Type = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField3Type,
		InquiryRecapSpecialField3Count = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField3Count,
		InquiryRecapSpecialField4Type = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField4Type,
		InquiryRecapSpecialField4Status = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField4Status,
		InquiryRecapSpecialField4Count = RecapProcessingSection.ReportLevelInquiryRecap.SpecialField4Count),
	PERMITS([FCRA]));

USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropSubIDSets(FLAT,
	PolicyPropertySubject(
		SubjectUnitNumber = subject.unitnumber,
		SubjectRecordCode = subject.recordcode,
		SubjectClassification = subject.classification,
		SubjectLast = subject.last,
		SubjectFirst = subject.first,
		SubjectMiddle = subject.middle,
		SubjectSuffix = subject.suffix,
		SubjectDateOfBirth = subject.dateofbirth,
		SubjectSex = subject.sex,
		SubjectSsn = subject.ssn,
		CurrentOrRiskAddressUnitNumber = requiredaddressinformation.currentorriskaddress.unitnumber,
		CurrentOrRiskAddressRecordCode = requiredaddressinformation.currentorriskaddress.recordcode,
		CurrentOrRiskAddressClassification = requiredaddressinformation.currentorriskaddress.classification,
		CurrentOrRiskAddressGroupUsage = requiredaddressinformation.currentorriskaddress.groupusage,
		CurrentOrRiskAddressHouseNumber = requiredaddressinformation.currentorriskaddress.housenumber,
		CurrentOrRiskAddressStreetName = requiredaddressinformation.currentorriskaddress.streetname,
		CurrentOrRiskAddressAptNumber = requiredaddressinformation.currentorriskaddress.aptnumber,
		CurrentOrRiskAddressCity = requiredaddressinformation.currentorriskaddress.city,
		CurrentOrRiskAddressState = requiredaddressinformation.currentorriskaddress.state,
		CurrentOrRiskAddressZip = requiredaddressinformation.currentorriskaddress.zip,
		CurrentOrRiskAddressZip4 = requiredaddressinformation.currentorriskaddress.zip4,
		CurrentLicenseUnitNumber = currentlicense.unitnumber,
		CurrentLicenseRecordCode = currentlicense.recordcode,
		CurrentLicenseClassification = currentlicense.classification,
		CurrentLicenseLicenseNumber = currentlicense.licensenumber,
		CurrentLicenseState = currentlicense.state),
	PERMITS([FCRA]));

USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropSubjectRecap(FLAT,
	PolicyPropertyRecap(
		SubjectRecapUnitNumber = unitnumber,
		SubjectRecapRecordCode = recordcode,
		SubjectRecapClassification = classification,
		SubjectRecapSpecialField1Type = specialfield1type,
		SubjectRecapSpecialField1Count = specialfield1count,
		SubjectRecapSpecialField2Type = specialfield2type,
		SubjectRecapSpecialField2Status = specialfield2status,
		SubjectRecapSpecialField3Type = specialfield3type,
		SubjectRecapSpecialField3Status = specialfield3status,
		SubjectRecapSpecialField4Type = specialfield4type,
		SubjectRecapSpecialField5Type = specialfield5type,
		SubjectRecapSpecialField5Count = specialfield5count,
		SubjectRecapSpecialField6Type = specialfield6type,
		SubjectRecapSpecialField6Status = specialfield6status),
	PERMITS([FCRA]));

USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropGeneralMessages(FLAT,
	PolicyProperty(
		MessageRecordCounter = messagerecordcounter,
		MessageRecordCode = recordcode,
		MessageClassification = classification,
		MessageTypeRemarks = typeremarks,
		MessageRemarks1 = remarks1,
		MessageRemarks2 = remarks2,
		MessageRemarksCode1 = remarkscode1,
		MessageRemarksCode2 = remarkscode2),
	PERMITS([FCRA]));

USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropAdditionalMesg(FLAT,
	PolicyProperty(
		AddMessageRecordCounter = addmessagerecordcounter,
		AddMessageRecordCode = recordcode,
		AddMessageClassification = classification,
		AddMessageTypeRemarks = typeremarks,
		AddMessageRemarks1 = remarks1,
		AddMessageRemarks2 = remarks2,
		AddMessageRemarksCode1 = remarkscode1,
		AddMessageRemarksCode2 = remarkscode2),
	PERMITS([FCRA]));

USE KELBlackBox.FileCurrentCarrierPropNormalized.FileCCPropAttachmentSect(FLAT,
	PolicyPropertyAttachment(
		PersonRecordCounter = personrecordcounter,
		PersonRecordUnitNumber = personrecord.unitnumber,
		PersonRecordGroupSequenceNumber = personrecord.groupsequencenumber,
		PersonRecordRecordCode = personrecord.recordcode,
		PersonRecordClassification = personrecord.classification,
		PersonRecordLast = personrecord.last,
		PersonRecordFirst = personrecord.first,
		PersonRecordMiddle = personrecord.middle,
		PersonRecordSuffix = personrecord.suffix,
		PersonRecordDateOfBirth = personrecord.dateofbirth,
		PersonRecordSex = personrecord.sex,
		PersonRecordSsn = personrecord.ssn,
		DriverLicenseRecordUnitNumber = driverlicenserecord.unitnumber,
		DriverLicenseRecordGroupSequenceNumber = driverlicenserecord.groupsequencenumber,
		DriverLicenseRecordRecordCode = driverlicenserecord.recordcode,
		DriverLicenseRecordClassification = driverlicenserecord.classification,
		DriverLicenseRecordLicenseNumber = driverlicenserecord.licensenumber,
		DriverLicenseRecordState = driverlicenserecord.state),
	PERMITS([FCRA]));