#workunit('name', 'Testing_CLUE_Property_StateFarm');
#option('expandSelectCreateRow', true); // Added to improve overall compile time

IMPORT KELBlackBox, KELGlobal, SALT35, SALTRoutines, UT;

MaxResults := 250; // The maximum number of records to show in the workunit

TransactionIDs := DATASET([{29490}], {UNSIGNED TransactionID}); // 25 Risk Claims

StateFarmKELResults := KELGlobal.S_C_L_U_E_Property_State_Farm.Result(UID = TransactionIDs[1].TransactionID);
OUTPUT(CHOOSEN(StateFarmKELResults, MaxResults), NAMED('CLUEPropertyStateFarm_KEL_Results'));

/* Debugging Queries - Raw File Results */
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertyCleaned(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawProperty'));
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertySubjectID(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawSubjectID'));
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertyRiskClaim(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawRiskClaims'));
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertyRiskClaimPayments(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawRiskClaimsPayments'));
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertyInsuredClaim(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawInsuredClaims'));
OUTPUT(CHOOSEN(KELBlackBox.FileCLUECleaned.FileCLUEPropertyInsuredClaimPayments(RecordIdentifier = TransactionIDs[1].TransactionID), MaxResults), NAMED('RawInsuredClaimsPayments'));

/* Debugging Queries - KEL Results (NOTE: You must set #OPTION(persist, 0) in ClaimsProperty.kel before uncommenting these to run all at once, otherwise pick one and run) */
// OUTPUT(CHOOSEN(KELGlobal.Q_C_L_U_E_Property_Search_Information(TransactionIDs[1].TransactionID).Res0, MaxResults), NAMED('SearchInformation'));
// OUTPUT(CHOOSEN(KELGlobal.Q_C_L_U_E_Property_Risk_Claims(TransactionIDs[1].TransactionID).Res0, MaxResults), NAMED('RiskClaims'));
// OUTPUT(CHOOSEN(KELGlobal.Q_C_L_U_E_Property_Insured_Claims(TransactionIDs[1].TransactionID).Res0, MaxResults), NAMED('InsuredClaims'));

StateFarmLayout := RECORD
	UNSIGNED8 TransactionID;
	INTEGER SF691;
	INTEGER SF692;
	INTEGER SF693;
	INTEGER SF694;
	INTEGER SF695;
	INTEGER SF696;
	INTEGER SF697;
	INTEGER SF698;
	INTEGER SF699;
	INTEGER SF700;
	INTEGER SF701;
	INTEGER SF702;
	INTEGER SF703;
	INTEGER SF704;
	INTEGER SF705;
	INTEGER SF706;
	INTEGER SF709;
	INTEGER SF710;
	INTEGER SF711;
	INTEGER SF712;
	INTEGER SF713;
	INTEGER SF714;
	INTEGER SF715;
	INTEGER SF716;
	INTEGER SF717;
	INTEGER SF719;
	INTEGER SF720;
	INTEGER SF781;
	INTEGER SF782;
	INTEGER SF783;
	INTEGER SF784;
	INTEGER SF785;
	INTEGER SF787;
	INTEGER SF789;
	INTEGER SF791;
	INTEGER SF792;
	INTEGER SF793;
	INTEGER SF794;
	INTEGER SF795;
	INTEGER SF796;
	INTEGER SF797;
	INTEGER SF798;
	INTEGER SF799;
	INTEGER SF800;
	INTEGER SF806;
	INTEGER SF807;
	INTEGER SF808;
	INTEGER SF809;
	INTEGER SF876;
	INTEGER SF877;
	INTEGER SF878;
	INTEGER SF879;
	INTEGER SF880;
	INTEGER SF886;
	INTEGER SF887;
	INTEGER SF888;
	INTEGER SF889;
	INTEGER SF890;
	INTEGER SF896;
	INTEGER SF898;
	INTEGER SF896_TN;
	INTEGER SF897_TN;
	INTEGER SF898_TN;
	INTEGER SF899_TN;
	INTEGER SF966;
	INTEGER SF967;
	INTEGER SF968;
	INTEGER SF969;
	INTEGER SF970;
	INTEGER SF986;
	INTEGER SF987;
	INTEGER SF988;
	INTEGER SF989;
	INTEGER SF990;
	INTEGER SF1056;
	INTEGER SF1057;
	INTEGER SF1058;
	INTEGER SF1059;
	INTEGER SF1076;
	INTEGER SF1077;
	INTEGER SF1078;
	INTEGER SF1079;
	INTEGER SF1146;
	INTEGER SF1147;
	INTEGER SF1148;
	INTEGER SF1149;
	INTEGER SF1150;
	INTEGER SF1166;
	INTEGER SF1167;
	INTEGER SF1168;
	INTEGER SF1169;
	INTEGER SF1170;
	INTEGER SF1291;
	INTEGER SF1292;
	INTEGER SF1293;
	INTEGER SF1294;
	INTEGER SF1295;
	INTEGER SF1301;
	INTEGER SF1302;
	INTEGER SF1303;
	INTEGER SF1304;
	INTEGER SF1305;
	INTEGER SF1311;
	INTEGER SF1312;
	INTEGER SF1313;
	INTEGER SF1351;
	INTEGER SF1352;
	INTEGER SF1353;
	INTEGER SF1354;
	INTEGER SF1355;
	INTEGER SF1361;
	INTEGER SF1362;
	INTEGER SF1363;
	INTEGER SF1364;
	INTEGER SF1365;
	INTEGER SF1371;
	INTEGER SF1372;
	INTEGER SF1373;
	INTEGER SF1374;
	INTEGER SF1411;
	INTEGER SF1412;
	INTEGER SF1413;
	INTEGER SF1414;
	INTEGER SF1421;
	INTEGER SF1422;
	INTEGER SF1423;
	INTEGER SF1424;
	INTEGER SF1425;
	INTEGER SF1431;
	INTEGER SF1434;
	INTEGER SF1471;
	INTEGER SF1472;
	INTEGER SF1473;
	INTEGER SF1474;
	INTEGER SF1475;
	INTEGER SF1481;
	INTEGER SF1482;
	INTEGER SF1483;
	INTEGER SF1484;
	INTEGER SF1485;
	INTEGER SF1491;
	INTEGER SF1492;
	INTEGER SF1493;
	INTEGER SF1494;
	INTEGER SF1536;
	INTEGER SF1537;
	INTEGER SF1538;
	INTEGER SF1539;
	INTEGER SF1546;
	INTEGER SF1547;
	INTEGER SF1548;
	INTEGER SF1549;
	INTEGER SF1556;
	INTEGER SF1557;
	INTEGER SF1558;
END;

StateFarmLayout CleanAttributeNames(RECORDOF(StateFarmKELResults) le) := TRANSFORM
	SELF.TransactionID := le.UID;
	SELF.SF691 := le.Num_Weather_Clm_Within1_Yr_;
	SELF.SF692 := le.Num_Weather_Clm_Within2_Yr_;
	SELF.SF693 := le.Num_Weather_Clm_Within3_Yr_;
	SELF.SF694 := le.Num_Weather_Clm_Within4_Yr_;
	SELF.SF695 := le.Num_Weather_Clm_Within5_Yr_;
	SELF.SF696 := le.Num_N_Z_Weather_Clm_Within1_Yr_;
	SELF.SF697 := le.Num_N_Z_Weather_Clm_Within2_Yr_;
	SELF.SF698 := le.Num_N_Z_Weather_Clm_Within3_Yr_;
	SELF.SF699 := le.Num_N_Z_Weather_Clm_Within4_Yr_;
	SELF.SF700 := le.Num_N_Z_Weather_Clm_Within5_Yr_;
	SELF.SF701 := le.Num_Weather_Cat_Clm_Within1_Yr_;
	SELF.SF702 := le.Num_Weather_Cat_Clm_Within2_Yr_;
	SELF.SF703 := le.Num_Weather_Cat_Clm_Within3_Yr_;
	SELF.SF704 := le.Num_Weather_Cat_Clm_Within4_Yr_;
	SELF.SF705 := le.Num_Weather_Cat_Clm_Within5_Yr_;
	SELF.SF706 := le.Num_N_Z_Weather_Cat_Clm_Within1_Yr_;
	SELF.SF709 := le.Num_N_Z_Weather_Cat_Clm_Within4_Yr_;
	SELF.SF710 := le.Num_N_Z_Weather_Cat_Clm_Within5_Yr_;
	SELF.SF711 := le.Num_Weather_Non_Cat_Clm_Within1_Yr_;
	SELF.SF712 := le.Num_Weather_Non_Cat_Clm_Within2_Yr_;
	SELF.SF713 := le.Num_Weather_Non_Cat_Clm_Within3_Yr_;
	SELF.SF714 := le.Num_Weather_Non_Cat_Clm_Within4_Yr_;
	SELF.SF715 := le.Num_Weather_Non_Cat_Clm_Within5_Yr_;
	SELF.SF716 := le.Num_N_Z_Weather_Non_Cat_Clm_Within1_Yr_;
	SELF.SF717 := le.Num_N_Z_Weather_Non_Cat_Clm_Within2_Yr_;
	SELF.SF719 := le.Num_N_Z_Weather_Non_Cat_Clm_Within4_Yr_;
	SELF.SF720 := le.Num_N_Z_Weather_Non_Cat_Clm_Within5_Yr_;
	SELF.SF781 := le.Num_Non_Weather_Clm_Within1_Yr_;
	SELF.SF782 := le.Num_Non_Weather_Clm_Within2_Yr_;
	SELF.SF783 := le.Num_Non_Weather_Clm_Within3_Yr_;
	SELF.SF784 := le.Num_Non_Weather_Clm_Within4_Yr_;
	SELF.SF785 := le.Num_Non_Weather_Clm_Within5_Yr_;
	SELF.SF787 := le.Num_N_Z_Non_Weather_Clm_Within2_Yr_;
	SELF.SF789 := le.Num_N_Z_Non_Weather_Clm_Within4_Yr_;
	SELF.SF791 := le.Num_Non_Weather_Cat_Clm_Within1_Yr_;
	SELF.SF792 := le.Num_Non_Weather_Cat_Clm_Within2_Yr_;
	SELF.SF793 := le.Num_Non_Weather_Cat_Clm_Within3_Yr_;
	SELF.SF794 := le.Num_Non_Weather_Cat_Clm_Within4_Yr_;
	SELF.SF795 := le.Num_Non_Weather_Cat_Clm_Within5_Yr_;
	SELF.SF796 := le.Num_N_Z_Non_Weather_Cat_Clm_Within1_Yr_;
	SELF.SF797 := le.Num_N_Z_Non_Weather_Cat_Clm_Within2_Yr_;
	SELF.SF798 := le.Num_N_Z_Non_Weather_Cat_Clm_Within3_Yr_;
	SELF.SF799 := le.Num_N_Z_Non_Weather_Cat_Clm_Within4_Yr_;
	SELF.SF800 := le.Num_N_Z_Non_Weather_Cat_Clm_Within5_Yr_;
	SELF.SF806 := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within1_Yr_;
	SELF.SF807 := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within2_Yr_;
	SELF.SF808 := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within3_Yr_;
	SELF.SF809 := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within4_Yr_;
	SELF.SF876 := le.Num_N_Z_Non_Weather2_Clm_Within1_Yr_;
	SELF.SF877 := le.Num_N_Z_Non_Weather2_Clm_Within2_Yr_;
	SELF.SF878 := le.Num_N_Z_Non_Weather2_Clm_Within3_Yr_;
	SELF.SF879 := le.Num_N_Z_Non_Weather2_Clm_Within4_Yr_;
	SELF.SF880 := le.Num_N_Z_Non_Weather2_Clm_Within5_Yr_;
	SELF.SF886 := le.Num_N_Z_Non_Weather2_Cat_Clm_Within1_Yr_;
	SELF.SF887 := le.Num_N_Z_Non_Weather2_Cat_Clm_Within2_Yr_;
	SELF.SF888 := le.Num_N_Z_Non_Weather2_Cat_Clm_Within3_Yr_;
	SELF.SF889 := le.Num_N_Z_Non_Weather2_Cat_Clm_Within4_Yr_;
	SELF.SF890 := le.Num_N_Z_Non_Weather2_Cat_Clm_Within5_Yr_;
	SELF.SF896 := le.Num_N_Z_Non_Weather2_Non_Cat_Clm_Within1_Yr_;
	SELF.SF898 := le.Num_N_Z_Non_Weather2_Non_Cat_Clm_Within3_Yr_;
	SELF.SF896_TN := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within1_Yr_T_N_;
	SELF.SF897_TN := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within2_Yr_T_N_;
	SELF.SF898_TN := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within3_Yr_T_N_;
	SELF.SF899_TN := le.Num_N_Z_Non_Weather_Non_Cat_Clm_Within4_Yr_T_N_;
	SELF.SF966 := le.Num_N_Z_Fire_Smoke_Clm_Within1_Yr_;
	SELF.SF967 := le.Num_N_Z_Fire_Smoke_Clm_Within2_Yr_;
	SELF.SF968 := le.Num_N_Z_Fire_Smoke_Clm_Within3_Yr_;
	SELF.SF969 := le.Num_N_Z_Fire_Smoke_Clm_Within4_Yr_;
	SELF.SF970 := le.Num_N_Z_Fire_Smoke_Clm_Within5_Yr_;
	SELF.SF986 := le.Num_N_Z_Fire_Smoke_Non_Cat_Clm_Within1_Yr_;
	SELF.SF987 := le.Num_N_Z_Fire_Smoke_Non_Cat_Clm_Within2_Yr_;
	SELF.SF988 := le.Num_N_Z_Fire_Smoke_Non_Cat_Clm_Within3_Yr_;
	SELF.SF989 := le.Num_N_Z_Fire_Smoke_Non_Cat_Clm_Within4_Yr_;
	SELF.SF990 := le.Num_N_Z_Fire_Smoke_Non_Cat_Clm_Within5_Yr_;
	SELF.SF1056 := le.Num_N_Z_Crime_Clm_Within1_Yr_;
	SELF.SF1057 := le.Num_N_Z_Crime_Clm_Within2_Yr_;
	SELF.SF1058 := le.Num_N_Z_Crime_Clm_Within3_Yr_;
	SELF.SF1059 := le.Num_N_Z_Crime_Clm_Within4_Yr_;
	SELF.SF1076 := le.Num_N_Z_Crime_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1077 := le.Num_N_Z_Crime_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1078 := le.Num_N_Z_Crime_Non_Cat_Clm_Within3_Yr_;
	SELF.SF1079 := le.Num_N_Z_Crime_Non_Cat_Clm_Within4_Yr_;
	SELF.SF1146 := le.Num_N_Z_Liability_Clm_Within1_Yr_;
	SELF.SF1147 := le.Num_N_Z_Liability_Clm_Within2_Yr_;
	SELF.SF1148 := le.Num_N_Z_Liability_Clm_Within3_Yr_;
	SELF.SF1149 := le.Num_N_Z_Liability_Clm_Within4_Yr_;
	SELF.SF1150 := le.Num_N_Z_Liability_Clm_Within5_Yr_;
	SELF.SF1166 := le.Num_N_Z_Liability_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1167 := le.Num_N_Z_Liability_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1168 := le.Num_N_Z_Liability_Non_Cat_Clm_Within3_Yr_;
	SELF.SF1169 := le.Num_N_Z_Liability_Non_Cat_Clm_Within4_Yr_;
	SELF.SF1170 := le.Num_N_Z_Liability_Non_Cat_Clm_Within5_Yr_;
	SELF.SF1291 := le.Num_Col_A_G_E5000_Clm_Within1_Yr_;
	SELF.SF1292 := le.Num_Col_A_G_E5000_Clm_Within2_Yr_;
	SELF.SF1293 := le.Num_Col_A_G_E5000_Clm_Within3_Yr_;
	SELF.SF1294 := le.Num_Col_A_G_E5000_Clm_Within4_Yr_;
	SELF.SF1295 := le.Num_Col_A_G_E5000_Clm_Within5_Yr_;
	SELF.SF1301 := le.Num_Col_A_G_E5000_Cat_Clm_Within1_Yr_;
	SELF.SF1302 := le.Num_Col_A_G_E5000_Cat_Clm_Within2_Yr_;
	SELF.SF1303 := le.Num_Col_A_G_E5000_Cat_Clm_Within3_Yr_;
	SELF.SF1304 := le.Num_Col_A_G_E5000_Cat_Clm_Within4_Yr_;
	SELF.SF1305 := le.Num_Col_A_G_E5000_Cat_Clm_Within5_Yr_;
	SELF.SF1311 := le.Num_Col_A_G_E5000_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1312 := le.Num_Col_A_G_E5000_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1313 := le.Num_Col_A_G_E5000_Non_Cat_Clm_Within3_Yr_;
	SELF.SF1351 := le.Num_Col_B_G_E5000_Clm_Within1_Yr_;
	SELF.SF1352 := le.Num_Col_B_G_E5000_Clm_Within2_Yr_;
	SELF.SF1353 := le.Num_Col_B_G_E5000_Clm_Within3_Yr_;
	SELF.SF1354 := le.Num_Col_B_G_E5000_Clm_Within4_Yr_;
	SELF.SF1355 := le.Num_Col_B_G_E5000_Clm_Within5_Yr_;
	SELF.SF1361 := le.Num_Col_B_G_E5000_Cat_Clm_Within1_Yr_;
	SELF.SF1362 := le.Num_Col_B_G_E5000_Cat_Clm_Within2_Yr_;
	SELF.SF1363 := le.Num_Col_B_G_E5000_Cat_Clm_Within3_Yr_;
	SELF.SF1364 := le.Num_Col_B_G_E5000_Cat_Clm_Within4_Yr_;
	SELF.SF1365 := le.Num_Col_B_G_E5000_Cat_Clm_Within5_Yr_;
	SELF.SF1371 := le.Num_Col_B_G_E5000_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1372 := le.Num_Col_B_G_E5000_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1373 := le.Num_Col_B_G_E5000_Non_Cat_Clm_Within3_Yr_;
	SELF.SF1374 := le.Num_Col_B_G_E5000_Non_Cat_Clm_Within4_Yr_;
	SELF.SF1411 := le.Num_Col_A_G_E3000_Clm_Within1_Yr_;
	SELF.SF1412 := le.Num_Col_A_G_E3000_Clm_Within2_Yr_;
	SELF.SF1413 := le.Num_Col_A_G_E3000_Clm_Within3_Yr_;
	SELF.SF1414 := le.Num_Col_A_G_E3000_Clm_Within4_Yr_;
	SELF.SF1421 := le.Num_Col_A_G_E3000_Cat_Clm_Within1_Yr_;
	SELF.SF1422 := le.Num_Col_A_G_E3000_Cat_Clm_Within2_Yr_;
	SELF.SF1423 := le.Num_Col_A_G_E3000_Cat_Clm_Within3_Yr_;
	SELF.SF1424 := le.Num_Col_A_G_E3000_Cat_Clm_Within4_Yr_;
	SELF.SF1425 := le.Num_Col_A_G_E3000_Cat_Clm_Within5_Yr_;
	SELF.SF1431 := le.Num_Col_A_G_E3000_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1434 := le.Num_Col_A_G_E3000_Non_Cat_Clm_Within4_Yr_;
	SELF.SF1471 := le.Num_Col_B_G_E3000_Clm_Within1_Yr_;
	SELF.SF1472 := le.Num_Col_B_G_E3000_Clm_Within2_Yr_;
	SELF.SF1473 := le.Num_Col_B_G_E3000_Clm_Within3_Yr_;
	SELF.SF1474 := le.Num_Col_B_G_E3000_Clm_Within4_Yr_;
	SELF.SF1475 := le.Num_Col_B_G_E3000_Clm_Within5_Yr_;
	SELF.SF1481 := le.Num_Col_B_G_E3000_Cat_Clm_Within1_Yr_;
	SELF.SF1482 := le.Num_Col_B_G_E3000_Cat_Clm_Within2_Yr_;
	SELF.SF1483 := le.Num_Col_B_G_E3000_Cat_Clm_Within3_Yr_;
	SELF.SF1484 := le.Num_Col_B_G_E3000_Cat_Clm_Within4_Yr_;
	SELF.SF1485 := le.Num_Col_B_G_E3000_Cat_Clm_Within5_Yr_;
	SELF.SF1491 := le.Num_Col_B_G_E3000_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1492 := le.Num_Col_B_G_E3000_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1493 := le.Num_Col_B_G_E3000_Non_Cat_Clm_Within3_Yr_;
	SELF.SF1494 := le.Num_Col_B_G_E3000_Non_Cat_Clm_Within4_Yr_;
	SELF.SF1536 := le.Num_N_Z_Col_A_Clm_Within1_Yr_;
	SELF.SF1537 := le.Num_N_Z_Col_A_Clm_Within2_Yr_;
	SELF.SF1538 := le.Num_N_Z_Col_A_Clm_Within3_Yr_;
	SELF.SF1539 := le.Num_N_Z_Col_A_Clm_Within4_Yr_;
	SELF.SF1546 := le.Num_N_Z_Col_A_Cat_Clm_Within1_Yr_;
	SELF.SF1547 := le.Num_N_Z_Col_A_Cat_Clm_Within2_Yr_;
	SELF.SF1548 := le.Num_N_Z_Col_A_Cat_Clm_Within3_Yr_;
	SELF.SF1549 := le.Num_N_Z_Col_A_Cat_Clm_Within4_Yr_;
	SELF.SF1556 := le.Num_N_Z_Col_A_Non_Cat_Clm_Within1_Yr_;
	SELF.SF1557 := le.Num_N_Z_Col_A_Non_Cat_Clm_Within2_Yr_;
	SELF.SF1558 := le.Num_N_Z_Col_A_Non_Cat_Clm_Within3_Yr_;
END;

FinalStateFarmAttributes := PROJECT(StateFarmKELResults, CleanAttributeNames(LEFT));
OUTPUT(CHOOSEN(FinalStateFarmAttributes, MaxResults), NAMED('CLUEPropertyStateFarm_Final_Results'));