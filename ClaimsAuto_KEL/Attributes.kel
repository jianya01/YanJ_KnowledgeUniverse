IMPORT KnowledgeUniverse.ClaimsAuto_KEL.Entities;
IMPORT ClaimsAuto_KEL.Uses;

ClaimsAutoClaim: ACCIDENT_CODE_LIST := ['BI', 'CO', 'ME', 'MP', 'PD', 'PI', 'UM', 'UN'];
ClaimsAutoClaim: ACCIDENT_COMB2_CODE_LIST := ['ME', 'MP', 'PI', 'CO'];
ClaimsAutoClaim: GEN_MED_CODE_LIST := ['ME', 'MP', 'PI'];
ClaimsAutoClaim: AT_FAULT_CODE_LIST := ['BI', 'PD'];
ClaimsAutoClaim: NJ_CODE_LIST := ['BI', 'PD', 'CO'];
ClaimsAutoClaim: AR_CODE_LIST := ['BI', 'ME', 'MP', 'PD', 'PI', 'UM'];
ClaimsAutoClaim: NON_ACCIDENT_CODE_LIST := ['CP', 'OT', 'RR', 'TL'];

ClaimsAutoClaim: CP_CODE_LIST := ['CP'];
ClaimsAutoClaim: TL_CODE_LIST := ['TL'];
ClaimsAutoClaim: RR_CODE_LIST := ['RR'];
ClaimsAutoClaim: CO_CODE_LIST := ['CO'];
ClaimsAutoClaim: PD_CODE_LIST := ['PD'];
ClaimsAutoClaim: BI_CODE_LIST := ['BI'];
ClaimsAutoClaim: PI_CODE_LIST := ['PI'];
ClaimsAutoClaim: UM_CODE_LIST := ['UM'];
ClaimsAutoClaim: UN_CODE_LIST := ['UN'];
ClaimsAutoClaim: MP_CODE_LIST := ['MP'];

ClaimsAutoClaim: OPEN_DISPOSITION_LIST := ['O'];
ClaimsAutoClaim: CLOSED_DISPOSITION_LIST := ['C'];
ClaimsAutoClaim: SUBROGATION_DISPOSITION_LIST := ['S', ''];

ClaimsAutoClaim: FULL_SCOPE_CODE_LIST := ['F'];
ClaimsAutoClaim: CLSUB_CODE_LIST := ['CLSUB'];

ClaimsAutoClaim: => IsValidClaim := ISVALIDDATE(DateOfClaim) AND ISVALIDDATE(rClaimsAuto.DateOfReceipt) AND DateOfClaim < rClaimsAuto.DateOfReceipt AND rClaimsAuto.ProcessingCompletionStatus = 'C' AND ScopeOfClaim IN FULL_SCOPE_CODE_LIST AND SectionIdentifier IN CLSUB_CODE_LIST;

ClaimsAutoClaim: => AdjustedClaimDate := ADJUSTCALENDAR(DateOfClaim, 0, 0, 1);

ClaimsAutoClaim.Payments: => cClaimCatType := IF(ClaimCatType:Null, '', ClaimCatType);
//EDITS holds last 2 bytes of ClaimCatAmount for cents so 54300 is really $543.00
ClaimsAutoClaim.Payments: => cClaimCatAmount := IF(ClaimCatAmount:Null, 0, ClaimCatAmount);
ClaimsAutoClaim.Payments: => cClaimCatDisp := IF(ClaimCatDisp:Null, '', ClaimCatDisp);

ClaimsAutoClaim.Payments: => COSubException := ClaimCatType = 'CO' AND ClaimCatDisp = 'S';

ClaimsAutoClaim: => IsAccidentClaim :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST));
ClaimsAutoClaim: => IsAccidentClaimNZ :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsMultiCarClaim := EXISTS(Payments(cClaimCatType IN AT_FAULT_CODE_LIST));
ClaimsAutoClaim: => IsAtFaultClaim := EXISTS(Payments(cClaimCatType IN AT_FAULT_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsNonAccidentClaim :=  EXISTS(Payments(cClaimCatType IN NON_ACCIDENT_CODE_LIST));
ClaimsAutoClaim: => IsNonAccidentClaimNZ :=  EXISTS(Payments(cClaimCatType IN NON_ACCIDENT_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsAccidentComb2Claim :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_COMB2_CODE_LIST));
ClaimsAutoClaim: => IsAccidentComb2ClaimNZ :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_COMB2_CODE_LIST AND cClaimCatAmount > 0));

ClaimsAutoClaim: => IsPDPaymentGreater1000 := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST AND cClaimCatAmount > 1000));

ClaimsAutoClaim: => IsOnlyCPClaimNZ := ALL(Payments, cClaimCatType IN CP_CODE_LIST AND cClaimCatAmount > 0);
ClaimsAutoClaim: => IsOnlyTLClaimNZ := ALL(Payments, cClaimCatType IN TL_CODE_LIST AND cClaimCatAmount > 0);

ClaimsAutoClaim: => IsCOClaim := EXISTS(Payments(cClaimCatType IN CO_CODE_LIST));
ClaimsAutoClaim: => IsPIClaim := EXISTS(Payments(cClaimCatType IN PI_CODE_LIST));
ClaimsAutoClaim: => IsRRClaim := EXISTS(Payments(cClaimCatType IN RR_CODE_LIST));
ClaimsAutoClaim: => IsUMClaim := EXISTS(Payments(cClaimCatType IN UM_CODE_LIST));
ClaimsAutoClaim: => IsPDClaim := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST));
ClaimsAutoClaim: => IsMPClaim := EXISTS(Payments(cClaimCatType IN MP_CODE_LIST));
ClaimsAutoClaim: => IsGMClaim := EXISTS(Payments(cClaimCatType IN GEN_MED_CODE_LIST));
ClaimsAutoClaim: => IsCPClaim := EXISTS(Payments(cClaimCatType IN CP_CODE_LIST));
ClaimsAutoClaim: => IsBIClaim := EXISTS(Payments(cClaimCatType IN BI_CODE_LIST));

ClaimsAutoClaim: => IsPIClaimZ := EXISTS(Payments(cClaimCatType IN PI_CODE_LIST AND cClaimCatAmount = 0));
ClaimsAutoClaim: => IsPDClaimZ := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST AND cClaimCatAmount = 0));
ClaimsAutoClaim: => IsCPClaimZ := EXISTS(Payments(cClaimCatType IN CP_CODE_LIST AND cClaimCatAmount = 0));
ClaimsAutoClaim: => IsCOClaimZ := EXISTS(Payments(cClaimCatType IN CO_CODE_LIST AND cClaimCatAmount = 0));

ClaimsAutoClaim: => IsClaimNZ := EXISTS(Payments(cClaimCatAmount > 0));
ClaimsAutoClaim: => IsRRClaimNZ := EXISTS(Payments(cClaimCatType IN RR_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsCOClaimNZ := EXISTS(Payments(cClaimCatType IN CO_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsPDClaimNZ := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsTLClaimNZ := EXISTS(Payments(cClaimCatType IN TL_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsBIClaimNZ := EXISTS(Payments(cClaimCatType IN BI_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsCPClaimNZ := EXISTS(Payments(cClaimCatType IN CP_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsGMClaimNZ := EXISTS(Payments(cClaimCatType IN GEN_MED_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsUNClaimNZ := EXISTS(Payments(cClaimCatType IN UN_CODE_LIST AND cClaimCatAmount > 0));

ClaimsAutoClaim: => IsPIOpenClaim := EXISTS(Payments(cClaimCatType IN PI_CODE_LIST AND cClaimCatDisp IN OPEN_DISPOSITION_LIST));
ClaimsAutoClaim: => IsMPClosedClaim := EXISTS(Payments(cClaimCatType IN MP_CODE_LIST AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST));
ClaimsAutoClaim: => IsZeroClosedClaim := ALL(Payments,cClaimCatAmount = 0 AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST);

ClaimsAutoClaim: => IsBISubrogationClaim := EXISTS(Payments(cClaimCatType IN BI_CODE_LIST AND cClaimCatDisp IN SUBROGATION_DISPOSITION_LIST));

ClaimsAutoClaim: => IsNJSpecialCriteria := EXISTS(Payments(cClaimCatType IN NJ_CODE_LIST));
ClaimsAutoClaim: => IsARSpecialCriteriaNZ := EXISTS(Payments(cClaimCatType IN AR_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => IsNotARSpecialCriteria := EXISTS(Payments(NOT cClaimCatType IN AR_CODE_LIST));

ClaimsAutoClaim: => TotalClaimAmount := SUM(Payments, cClaimCatAmount); 

ClaimsAutoClaim: => ClaimAmountLessTL := SUM(Payments(NOT cClaimCatType IN TL_CODE_LIST), cClaimCatAmount);
ClaimsAutoClaim: => TotalAtFaultClaimAmount := SUM(Payments(cClaimCatType IN AT_FAULT_CODE_LIST), cClaimCatAmount);

ClaimsAutoClaim: =>	YrBetweenClaimDateAndReceiptDate := YEARSBETWEEN(AdjustedClaimDate, rClaimsAuto.DateOfReceipt);

ClaimsAuto: => LatestClaimDate := MAX(ClaimsAutoClaim(IsValidClaim AND TotalClaimAmount > 0), DateOfClaim);
ClaimsAuto: => LatestClaimDateAF := MAX(ClaimsAutoClaim(IsAtFaultClaim AND IsValidClaim), DateOfClaim);


//ACCPRV1 ACCPRV2 ACCPRV3	ACCPRV4 ACCPRV5 ACCPRV6 ACCPRV7
ClaimsAuto: => ExistAccidentClmWithin1Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin2Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin3Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin4Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin5Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin6Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistAccidentClmWithin7Yr := IF(ClaimsAutoClaim(IsAccidentClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//ACCNZPRV1 ACCNZPRV2 ACCNZPRV3	ACCNZPRV4 ACCNZPRV5 ACCNZPRV6 ACCNZPRV7
ClaimsAuto: => ExistNZAccidentClmWithin1Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin2Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin3Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin4Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin5Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin6Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNZAccidentClmWithin7Yr := IF(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// AVGPRV2 and AVGPRV3
ClaimsAuto: => TotalClmAmtWithin2YrTmp := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), TotalClaimAmount);
ClaimsAuto: => NumNZNonClosedClmWithin2Yr := COUNT(ClaimsAutoClaim(IsZeroClosedClaimV2 = FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2));
ClaimsAuto: => TotalClmAmtWithin3YrTmp := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), TotalClaimAmount);
ClaimsAuto: => NumNZNonClosedClmWithin3Yr := COUNT(ClaimsAutoClaim(IsZeroClosedClaimV2 = FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3));

ClaimsAuto: => AvgClmAmtWithin2Yr := MAP(NumNZNonClosedClmWithin2Yr = 0 => 9999999.99,
										NumClmWithin2Yr = 0 => 9999999.99, 
										MIN(TotalClmAmtWithin2YrTmp / NumClmWithin2Yr, 9999992));
ClaimsAuto: => AvgClmAmtWithin3Yr := MAP(NumNZNonClosedClmWithin3Yr = 0 => 9999999.99, 
										NumClmWithin3Yr = 0 => 9999999.99, 
										MIN(ROUND(TotalClmAmtWithin3YrTmp / NumClmWithin3Yr), 9999992));


//	ACLE1001	ACLE1002	ACLE1003	ACLE1004	ACLE1005	ACLE1006	ACLE1007
ClaimsAuto: => NumAccidentsLE100Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAccidentsLE100Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAccidentsLE100Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAccidentsLE100Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAccidentsLE100Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAccidentsLE100Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAccidentsLE100Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAccidentClaimNZ = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	AFGE10K1	AFGE10K2	AFGE10K3	AFGE10K4	AFGE10K5	AFGE10K6	AFGE10K7
ClaimsAuto: => NumAtFaultClmGE10000Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultClmGE10000Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);
  

//	AFGE15H1	AFGE15H2	AFGE15H3	AFGE15H4	AFGE15H5	AFGE15H6	AFGE15H7
ClaimsAuto: => NumAtFaultClmGE1500Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultClmGE1500Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	AFGE1K1	AFGE1K2	AFGE1K3	AFGE1K4	AFGE1K5	AFGE1K6	AFGE1K7
ClaimsAuto: => NumAtFaultClmGE1000Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultClmGE1000Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	AFGE5K1	AFGE5K2	AFGE5K3	AFGE5K4	AFGE5K5	AFGE5K6	AFGE5K7
ClaimsAuto: => NumAtFaultClmGE5000Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultClmGE5000Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	AFGE7501	AFGE7502	AFGE7503	AFGE7504	AFGE7505	AFGE7506	AFGE7507
ClaimsAuto: => NumAtFaultClmGE750Within1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultClmGE750Within7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	CPONLYCNT1	CPONLYCNT2	CPONLYCNT3	CPONLYCNT4	CPONLYCNT5	CPONLYCNT6	CPONLYCNT7
ClaimsAutoClaim: => IsZeroAmtClaimExceptCP := SUM(Payments(NOT cClaimCatType IN CP_CODE_LIST), cClaimCatAmount) = 0;
ClaimsAuto: => NumNZCompOnlyClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZCompOnlyClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptCP = TRUE AND IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	ALLGM1	ALLGM2	ALLGM3	ALLGM4	ALLGM5	ALLGM6	ALLGM7
ClaimsAuto: => NumNZGenMedClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZGenMedClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZGenMedClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZGenMedClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZGenMedClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZGenMedClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZGenMedClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	ALLRR1	ALLRR2	ALLRR3	ALLRR4	ALLRR5	ALLRR6	ALLRR7
ClaimsAuto: => NumNZRentalReimbClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZRentalReimbClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	ATFGM1	ATFGM2	ATFGM3	ATFGM4	ATFGM5	ATFGM6	ATFGM7
ClaimsAuto: => NumAtFaultNZGenMedClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultNZGenMedClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	ATFRR1	ATFRR2	ATFRR3	ATFRR4	ATFRR5	ATFRR6	ATFRR7
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumAtFaultNZRentalReimbClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	CO_CNT1NZ	CO_CNT2NZ	CO_CNT3NZ	CO_CNT4NZ	CO_CNT5NZ	CO_CNT6NZ	CO_CNT7NZ
ClaimsAuto: => NumNZCollCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZCollCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZCollCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZCollCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZCollCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZCollCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZCollCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	MAJCPRV1	MAJCPRV2	MAJCPRV3	MAJCPRV4	MAJCPRV5	MAJCPRV6	MAJCPRV7
ClaimsAuto: => NumClmGE5000Within1Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumClmGE5000Within2Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumClmGE5000Within3Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumClmGE5000Within4Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumClmGE5000Within5Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumClmGE5000Within6Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumClmGE5000Within7Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	MAJGE10K1	MAJGE10K2	MAJGE10K3	MAJGE10K4	MAJGE10K5	MAJGE10K6	MAJGE10K7
ClaimsAuto: => NumClmGE10000Within1Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumClmGE10000Within2Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumClmGE10000Within3Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumClmGE10000Within4Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumClmGE10000Within5Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumClmGE10000Within6Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumClmGE10000Within7Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	MINCCPV1	MINCCPV2	MINCCPV3	MINCCPV4	MINCCPV5	MINCCPV6	MINCCPV7
ClaimsAuto: => NumNZClmLE100Within1Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZClmLE100Within2Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZClmLE100Within3Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZClmLE100Within4Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZClmLE100Within5Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZClmLE100Within6Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZClmLE100Within7Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	MOSINCE	MOSINCAF		
ClaimsAuto: => NumMosSinceLastClm := IF(LatestClaimDate:Null, 9999, MONTHSBETWEEN(LatestClaimDate, ClaimsAuto.DateOfReceipt));
ClaimsAuto: => NumMosSinceLastAtFaultClm := IF(LatestClaimDateAF:Null, 9999, MONTHSBETWEEN(LatestClaimDateAF, ClaimsAuto.DateOfReceipt));


//	PD_CNT1NZ	PD_CNT2NZ	PD_CNT3NZ	PD_CNT4NZ	PD_CNT5NZ	PD_CNT6NZ	PD_CNT7NZ
ClaimsAuto: => NumNZPropDamCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZPropDamCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	PD_CNT3 PD_CNT
ClaimsAuto: => NumPropDamClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumPropDamClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsPDClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//	PD_Z_PR3
ClaimsAuto: => ExistPropDamZClmWithin3Yr := IF(ClaimsAutoClaim(IsPDClaimZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);


//	PD_PR1NZ PD_PR2NZ PD_PR3NZ PD_PR4NZ PD_PR5NZ PD_PR6NZ PD_PR7NZ
ClaimsAuto: => ExistPropDamNZClmWithin1Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin2Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin3Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin4Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin5Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin6Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistPropDamNZClmWithin7Yr := IF(ClaimsAutoClaim(IsPDClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//	SINGACC3
ClaimsAuto: => NumSingCarAccClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsMultiCarClaim = FALSE AND IsAccidentComb2Claim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);


//	SINGAC01	SINGAC02	SINGAC03	SINGAC04	SINGAC05	SINGAC06	SINGAC07
ClaimsAuto: => NumNotAtFaultNZAccClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNotAtFaultNZAccClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	SINGACC3_AR SINGACC3_NZ
ClaimsAuto: => NumSingCarAccClmWithin3YrAR := MIN(COUNT(ClaimsAutoClaim(IsMultiCarClaim = FALSE AND (IsGMClaimNZ = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZSingCarAccClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsMultiCarClaim = FALSE AND IsAccidentComb2ClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);


//	TL_CNT1NZ	TL_CNT2NZ	TL_CNT3NZ	TL_CNT4NZ	TL_CNT5NZ	TL_CNT6NZ	TL_CNT7NZ
ClaimsAuto: => NumNZTowLaborCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZTowLaborCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	TLONLYCNT1	TLONLYCNT2	TLONLYCNT3	TLONLYCNT4	TLONLYCNT5	TLONLYCNT6	TLONLYCNT7
ClaimsAutoClaim: => IsZeroAmtClaimExceptTL := SUM(Payments(NOT cClaimCatType IN TL_CODE_LIST), ClaimCatAmount) = 0;

ClaimsAuto: => NumNZTowLaborOnlyClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZTowLaborOnlyClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsZeroAmtClaimExceptTL = TRUE AND IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	BI_CNT1NZ	BI_CNT2NZ	BI_CNT3NZ	BI_CNT4NZ	BI_CNT5NZ	BI_CNT6NZ	BI_CNT7NZ
ClaimsAuto: => NumNZBodilyInjCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZBodilyInjCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	CLMS1NZ	CLMS2NZ	CLMS3NZ	CLMS4NZ	TOT_CLMSNZ	CLMS6NZ CLMS7NZ
ClaimsAuto: => NumNZClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992); 
ClaimsAuto: => NumNZClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	CP_CNT1NZ	CP_CNT2NZ	CP_CNT3NZ	CP_CNT4NZ	CP_CNT5NZ	CP_CNT6NZ	CP_CNT7NZ
ClaimsAuto: => NumNZCompCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZCompCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZCompCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZCompCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZCompCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZCompCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZCompCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	GM_CNT1NZ	GM_CNT2NZ	GM_CNT3NZ	GM_CNT4NZ	GM_CNT5NZ	GM_CNT6NZ	GM_CNT7NZ
ClaimsAutoClaim: => CntGMCompNZTmp := COUNT(Payments(cClaimCatType IN ClaimsAutoClaim.GEN_MED_CODE_LIST AND cClaimCatAmount > 0));

ClaimsAuto: => NumNZGenMedCpntWithin1Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin2Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin3Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin4Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin5Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin6Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), CntGMCompNZTmp);
ClaimsAuto: => NumNZGenMedCpntWithin7Yr := SUM(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), CntGMCompNZTmp);

//	RR_CNT1NZ	RR_CNT2NZ	RR_CNT3NZ	RR_CNT4NZ	RR_CNT5NZ	RR_CNT6NZ	RR_CNT7NZ
ClaimsAuto: => NumNZRentalReimbCpntWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZRentalReimbCpntWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	MINCBPV1	MINCBPV2	MINCBPV3	MINCBPV4	MINCBPV5	MINCBPV6	MINCBPV7
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin1Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin2Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin3Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin4Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin5Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin6Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZClmLE100NoTowLaborPmtWithin7Yr := MIN(COUNT(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


//	PDNOCO1	PDNOCO2	PDNOCO3	PDNOCO4	PDNOCO5	PDNOCO6	PDNOCO7
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumPropDamGT1000NoCollPmtWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNZ=FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


// TOT_ATFAULT1NZ	TOT_ATFAULT2NZ	TOT_ATFAULT3NZ TOT_ATFAULT4NZ TOT_ATFAULT5NZ	TOT_ATFAULT6NZ	TOT_ATFAULT7NZ
ClaimsAuto: => NumNZAtFaultClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin4Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin6Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6)), 992);
ClaimsAuto: => NumNZAtFaultClmWithin7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


// AFCLM45	AFCLM47	AFCLM67		
ClaimsAuto: => NumAtFaultClmFrom3YrTo5Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate >= 3 AND YrBetweenClaimDateAndReceiptDate < 5)), 992);
ClaimsAuto: => NumAtFaultClmFrom3YrTo7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate >= 3 AND YrBetweenClaimDateAndReceiptDate < 7)), 992);
ClaimsAuto: => NumAtFaultClmFrom5YrTo7Yr := MIN(COUNT(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate >= 5 AND YrBetweenClaimDateAndReceiptDate < 7)), 992);


// TOT_ATFAULT3 TOT_ATFAULT5
ClaimsAuto: => NumAtFaultClmWithin3YrTmp := MIN(COUNT(ClaimsAutoClaim(IsMultiCarClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumAtFaultClmWithin3Yr := IF(NumAtFaultClmWithin3YrTmp = 0, 999, NumAtFaultClmWithin3YrTmp);
ClaimsAuto: => NumAtFaultClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsMultiCarClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


// PI_CNT_1 PI_CNT_3 PI_CNT 
ClaimsAuto: => NumPersInjClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsPIClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumPersInjClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsPIClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumPersInjClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsPIClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


// PI_OP_N8
ClaimsAuto: => NumPersInjClmOpenDispWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsPIOpenClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);


// PILAST24
ClaimsAuto: => NumZPersInjClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsPIClaimZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);


// CLMSIND1 CLMSIND2 CLMSIND3 CLMSIND4 CLMSIND5 CLMSIND6 CLMSIND7
ClaimsAuto: => ExistClmWithin1Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistClmWithin2Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistClmWithin3Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistClmWithin4Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistClmWithin5Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistClmWithin6Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistClmWithin7Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND IsClaimNZ AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// CO_PR1NZ CO_PR2NZ CO_PR3NZ CO_PR4NZ CO_PR5NZ CO_PR6NZ CO_PR7NZ
ClaimsAuto: => ExistCollNZClmWithin1Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin2Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin3Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin4Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin5Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin6Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistCollNZClmWithin7Yr := IF(ClaimsAutoClaim(IsCOClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// ATFTPRV1 ATFTPRV2 ATFTPRV3 ATFTPRV4 ATFTPRV5 ATFTPRV6 ATFTPRV7
ClaimsAuto: => ExistAtFaultClmWithin1Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin2Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin3Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin4Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin5Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin6Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistAtFaultClmWithin7Yr := IF(ClaimsAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// MINICPV1 MINICPV2 MINICPV3 MINICPV4 MINICPV5 MINICPV6 MINICPV7
ClaimsAuto: => ExistNZClmLE100Within1Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within2Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within3Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within4Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within5Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within6Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNZClmLE100Within7Yr := IF(ClaimsAutoClaim(IsValidClaim = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// MINIBPV1 MINIBPV2 MINIBPV3 MINIBPV4 MINIBPV5 MINIBPV6 MINIBPV7
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin1Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin2Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin3Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin4Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin5Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin6Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNZClmLE100NoTowLaborPmtWithin7Yr := IF(ClaimsAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// MAJIPRV1 MAJIPRV2 MAJIPRV3 MAJIPRV4 MAJIPRV5 MAJIPRV6 MAJIPRV7
ClaimsAuto: => ExistClmGE5000Within1Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistClmGE5000Within2Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistClmGE5000Within3Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistClmGE5000Within4Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistClmGE5000Within5Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistClmGE5000Within6Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistClmGE5000Within7Yr := IF(ClaimsAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


// RR_PR1 RR_CNT_3 RR_CNT
ClaimsAuto: => ExistRentalReimbClmWithin1Yr := IF(ClaimsAutoClaim(IsRRClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistRentalReimbClmWithin3Yr := IF(ClaimsAutoClaim(IsRRClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistRentalReimbClmWithin5Yr := IF(ClaimsAutoClaim(IsRRClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);


//RR_PR1NZ, RR_PR2NZ, RR_PR3NZ, RR_PR4NZ, RR_PR5NZ, RR_PR6NZ, RR_PR7NZ
ClaimsAuto: => ExistNZRentalReimbClmWithin1Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin2Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin3Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin4Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin5Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin6Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNZRentalReimbClmWithin7Yr := IF(ClaimsAutoClaim(IsRRClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//	RR_CNT3
ClaimsAuto: => NumRentalReimbClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsRRClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);


//	TL_PR1NZ	TL_PR2NZ TL_PR53Z TL_PR4NZ TL_PR5NZ TL_PR6NZ TL_PR7NZ
ClaimsAuto: => ExistNZTowLaborClmWithin1Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin2Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin3Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin4Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin5Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin6Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNZTowLaborClmWithin7Yr := IF(ClaimsAutoClaim(IsTLClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//	TOT_CLMS TOT_CLMS_1 CLMS2 TOT_CLMS_3/CLMS3 
//	TOT_CLMS_3 and CLMS3 are identical
ClaimsAuto: => NumClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992);
ClaimsAuto: => NumClmWithin3Yr := MIN(COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//	TOT_CLMS_NJ
ClaimsAuto: => NumClmWithin5YrNJ := MIN(COUNT(ClaimsAutoClaim(((IsNJSpecialCriteria = TRUE AND TotalClaimAmount > 0 AND TotalClaimAmount < 1000) OR (IsNJSpecialCriteria = FALSE AND TotalClaimAmount > 0)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//	TOT_CLMSAR
ClaimsAuto: => NumClmWithin5YrAR := MIN(COUNT(ClaimsAutoClaim((IsARSpecialCriteriaNZ = TRUE OR IsNotARSpecialCriteria = TRUE) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//	UM_CNT_3 UM_CNT
ClaimsAuto: => ExistUninsMotClmWithin3Yr := IF(ClaimsAutoClaim(IsUMClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistUninsMotClmWithin5Yr := IF(ClaimsAutoClaim(IsUMClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);


//	UN_PR1NZ UNLAST24
ClaimsAuto: => ExistNZUnderinsMotClmWithin1Yr := IF(ClaimsAutoClaim(IsUNClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNZUnderinsMotClmWithin2Yr := IF(ClaimsAutoClaim(IsUNClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);


//	NACCPRV1 NACCPRV2 NACCPRV3 NACCPRV4 NACCPRV5 NACCPRV6 NACCPRV7 (To match Legacy codes)
ClaimsAutoClaim: => IsNonAccidentClaimCL55Line1 :=  EXISTS(Payments(cClaimCatType IN NON_ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 1));
ClaimsAutoClaim: => IsAccidentClaimCL55Line1 :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 1));
ClaimsAutoClaim: => IsNonAccidentClaimCL55Line2 :=  EXISTS(Payments(cClaimCatType IN NON_ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 2));
ClaimsAutoClaim: => IsAccidentClaimCL55Line2 :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 2));
ClaimsAutoClaim: => IsNonAccidentClaimCL55Line3 :=  EXISTS(Payments(cClaimCatType IN NON_ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 3));
ClaimsAutoClaim: => IsAccidentClaimCL55Line3 :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST AND ClaimLossRecordOccurance = 3));

ClaimsAuto: => ExistNonAccidentClmWithin1Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 1)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin2Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 2)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin3Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 3)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin4Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 4)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin5Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 5)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin6Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 6)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNonAccidentClmWithin7Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaim AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 7)) AND ClaimsAutoClaim(((IsNonAccidentClaimCL55Line1 AND IsAccidentClaimCL55Line1=FALSE) OR (IsNonAccidentClaimCL55Line2 AND IsAccidentClaimCL55Line2=FALSE) OR (IsNonAccidentClaimCL55Line3 AND IsAccidentClaimCL55Line3=FALSE)) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//	NACCNZPRV1 NACCNZPRV2 NACCNZPRV3 NACCNZPRV4 NACCNZPRV5 NACCNZPRV6 NACCNZPRV7 (To match SAS codes - "NACCPRV1 NACCPRV2 NACCPRV3 NACCPRV4 NACCPRV5 NACCPRV6 NACCPRV7")
ClaimsAuto: => ExistNonAccidentNZClmWithin1Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 1)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin2Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 2)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin3Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 3)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin4Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 4)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin5Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 5)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin6Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 6)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistNonAccidentNZClmWithin7Yr := IF(NOT EXISTS(ClaimsAutoClaim(IsAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 7)) AND ClaimsAutoClaim(IsNonAccidentClaimNZ AND IsValidClaim AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//	MP_CL_N8 
ClaimsAuto: => NumMedPmtCloseDispClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsMPClosedClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);


//	MP_CNT
ClaimsAuto: => NumMedPmtClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsMPClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//GM_PR1NZ GM_PR2NZ GM_PR3NZ GM_PR4NZ GM_PR5NZ GM_PR6NZ GM_PR7NZ
ClaimsAuto: => ExistGenMedNZClmWithin1Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin2Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin3Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin4Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin5Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin6Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistGenMedNZClmWithin7Yr := IF(ClaimsAutoClaim(IsGMClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//GM_PR1 
ClaimsAuto: => ExistGenMedClmWithin1Yr := IF(ClaimsAutoClaim(IsGMClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);


//CP_PR1NZ(== CPPRVN1) CP_PR2NZ CP_PR3NZ CP_PR4NZ CP_PR5NZ CP_PR6NZ CP_PR7NZ
ClaimsAuto: => ExistCompNZClmWithin1Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin2Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin3Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin4Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin5Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin6Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistCompNZClmWithin7Yr := IF(ClaimsAutoClaim(IsCPClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//CP_CNT
ClaimsAuto: => NumCompClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//CO_ZR_N1
ClaimsAuto: => NumCollZClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsCOClaimZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);


//BI_PR3
ClaimsAuto: => ExistBodilyInjClmWithin3Yr := IF(ClaimsAutoClaim(IsBIClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);


//BI_PR1NZ BI_PR2NZ BI_PR3NZ BI_PR4NZ BI_PR5NZ BI_PR6NZ BI_PR7NZ 
ClaimsAuto: => ExistBodilyInjNZClmWithin1Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin2Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin3Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin4Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 4), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin5Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin6Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 6), 1, 0);
ClaimsAuto: => ExistBodilyInjNZClmWithin7Yr := IF(ClaimsAutoClaim(IsBIClaimNZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 7), 1, 0);


//BI_CNT
ClaimsAuto: => NumBodilyInjClmWithin5Yr := MIN(COUNT(ClaimsAutoClaim(IsBIClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


//BI_OT_N8
ClaimsAuto: => NumBodilyInjOtherDispClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsBISubrogationClaim = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);


//CLAIMAMT
ClaimsAutoClaim: => IsZeroClosedClaimV2 := ALL(Payments,cClaimCatAmount = 0 AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST) AND (COUNT(Payments)/5 = COUNT(Payments) DIV 5);
ClaimsAutoClaim: => ClaimAmount5YrTmp1 := IF(IsZeroClosedClaimV2 = FALSE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5, TotalClaimAmount, 0);
ClaimsAuto: => TotalClmAmtWithin5Yr := MAP(NumClmWithin5Yr = 0 => 99999999,
											ALL(ClaimsAutoClaim(IsValidClaim=TRUE AND YrBetweenClaimDateAndReceiptDate < 5), IsZeroClosedClaimV2) => 99999999,
											MIN(SUM(ClaimsAutoClaim, ClaimAmount5YrTmp1), 99999992));


//CP_ZR_N1 CPLAST24
ClaimsAutoClaim: => IsCPClaimZCL55Line1 := EXISTS(Payments(ClaimLossRecordOccurance = 1 AND cClaimCatType IN CP_CODE_LIST)) AND SUM(Payments(ClaimLossRecordOccurance = 1), cClaimCatAmount)=0;
ClaimsAutoClaim: => IsCPClaimZCL55Line2 := EXISTS(Payments(ClaimLossRecordOccurance = 2 AND cClaimCatType IN CP_CODE_LIST)) AND SUM(Payments(ClaimLossRecordOccurance = 2), cClaimCatAmount)=0;
ClaimsAutoClaim: => IsCPClaimZCL55Line3 := EXISTS(Payments(ClaimLossRecordOccurance = 3 AND cClaimCatType IN CP_CODE_LIST)) AND SUM(Payments(ClaimLossRecordOccurance = 3), cClaimCatAmount)=0;

ClaimsAuto: => NumCompZClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsCPClaimZ = TRUE AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1)), 992);
ClaimsAuto: => NumCompZClmWithin2Yr := MIN(COUNT(ClaimsAutoClaim((IsCPClaimZCL55Line1 OR IsCPClaimZCL55Line2 OR IsCPClaimZCL55Line3) AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)), 992); 


//GM_CNT_1
ClaimsAutoClaim: => IsGMClaimCL55Line1 := EXISTS(Payments(cClaimCatType IN GEN_MED_CODE_LIST AND ClaimLossRecordOccurance = 1));
ClaimsAutoClaim: => IsGMClaimCL55Line2 := EXISTS(Payments(cClaimCatType IN GEN_MED_CODE_LIST AND ClaimLossRecordOccurance = 2));
ClaimsAutoClaim: => IsGMClaimCL55Line3 := EXISTS(Payments(cClaimCatType IN GEN_MED_CODE_LIST AND ClaimLossRecordOccurance = 3));

ClaimsAuto: => NumGenMedClmWithin1Yr := MIN(COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1 AND IsGMClaimCL55Line1)) +
											COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1 AND IsGMClaimCL55Line2)) +
											COUNT(ClaimsAutoClaim(IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 1 AND IsGMClaimCL55Line3)) , 992); 


// TOT_CLMS_3_SF TOT_CLMS_SF
ClaimsAutoClaim: => CntCL55Line1 := COUNT(Payments(ClaimLossRecordOccurance = 1));
ClaimsAutoClaim: => CntCL55Line2 := COUNT(Payments(ClaimLossRecordOccurance = 2));
ClaimsAutoClaim: => CntCL55Line3 := COUNT(Payments(ClaimLossRecordOccurance = 3));
ClaimsAutoClaim: => CntZeroClosedCL55Line1 := ALL(Payments(ClaimLossRecordOccurance = 1), cClaimCatAmount = 0 AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST) AND CntCL55Line1=5;
ClaimsAutoClaim: => CntZeroClosedCL55Line2 := ALL(Payments(ClaimLossRecordOccurance = 2), cClaimCatAmount = 0 AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST) AND CntCL55Line2=5;
ClaimsAutoClaim: => CntZeroClosedCL55Line3 := ALL(Payments(ClaimLossRecordOccurance = 3), cClaimCatAmount = 0 AND cClaimCatDisp IN CLOSED_DISPOSITION_LIST) AND CntCL55Line3=5;

ClaimsAuto: => NumClmWithin3YrSF := MIN(COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line1=FALSE AND CntCL55Line1!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)) +
										COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line2=FALSE AND CntCL55Line2!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)) +
										COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line3=FALSE AND CntCL55Line3!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 3)), 992);
ClaimsAuto: => NumClmWithin5YrSF := MIN(COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line1=FALSE AND CntCL55Line1!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)) +
										COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line2=FALSE AND CntCL55Line2!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)) +
										COUNT(ClaimsAutoClaim(CntZeroClosedCL55Line3=FALSE AND CntCL55Line3!=0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 5)), 992);


// CLMS2No0
ClaimsAutoClaim: => TotalClmCL55Line1 := SUM(Payments(ClaimLossRecordOccurance = 1), cClaimCatAmount);
ClaimsAutoClaim: => TotalClmCL55Line2 := SUM(Payments(ClaimLossRecordOccurance = 2), cClaimCatAmount);
ClaimsAutoClaim: => TotalClmCL55Line3 := SUM(Payments(ClaimLossRecordOccurance = 3), cClaimCatAmount);

ClaimsAuto: => NumNZCl55Within2Yr := MIN(COUNT(ClaimsAutoClaim(TotalClmCL55Line1>0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)) +
										COUNT(ClaimsAutoClaim(TotalClmCL55Line2>0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)) +
										COUNT(ClaimsAutoClaim(TotalClmCL55Line3>0 AND IsValidClaim = TRUE AND YrBetweenClaimDateAndReceiptDate < 2)) , 992);


//FOR FDN ATTRIBUTES: AVGPRV1, CP_PR1, CO_PR1, PD_PR1, AND CLMSPRV1;
ClaimsAuto: => IsValidReport := ProcessingCompletionStatus = 'C';


// IsValidClaimV2 is built for FDN Claim Discovery project.
ClaimsAutoClaim: => IsValidClaimV2 := ISVALIDDATE(DateOfClaim) AND ISVALIDDATE(rClaimsAuto.DateOfOrder) AND DateOfClaim < rClaimsAuto.DateOfOrder AND SectionIdentifier IN CLSUB_CODE_LIST;
ClaimsAutoClaim: =>	YrBetweenClaimDateAndOrderDate := YEARSBETWEEN(AdjustedClaimDate, rClaimsAuto.DateOfOrder);


// CLMSPRV1
// NumClmWithin1YrV2 is built for FDN Claim Discovery project.
ClaimsAuto: => NumClmWithin1YrV2 := IF(IsValidReport, COUNT(ClaimsAutoClaim(IsValidClaimV2 = TRUE AND YrBetweenClaimDateAndOrderDate < 1)), -1); 


//AVGPRV1
ClaimsAutoClaim: => ClaimAmountPRV1 := IF(IsValidClaimV2 = TRUE AND YrBetweenClaimDateAndOrderDate < 1, TotalClaimAmount, 0);
ClaimsAuto: => TotalClmAmtWithin1Yr := SUM(ClaimsAutoClaim, ClaimAmountPRV1);
ClaimsAuto: => AvgClmAmtWithin1Yr := MAP(NOT IsValidReport => -1, 
										NumClmWithin1YrV2 = 0 => -1,
										ROUND(TotalClmAmtWithin1Yr/NumClmWithin1YrV2));


//CP_PR1
ClaimsAuto: => NumCPClmWithin1YrTemp := COUNT(ClaimsAutoClaim(IsCPClaim = TRUE AND IsValidClaimV2 = TRUE AND YrBetweenClaimDateAndOrderDate < 1));
ClaimsAuto: => ExistCPClmWithin1Yr := IF(IsValidReport, MIN(NumCPClmWithin1YrTemp, 1), -1);


//PD_PR1
ClaimsAuto: => NumPDClmWithin1YrTemp := COUNT(ClaimsAutoClaim(IsPDClaim = TRUE AND IsValidClaimV2 = TRUE AND YrBetweenClaimDateAndOrderDate < 1));
ClaimsAuto: => ExistPDClmWithin1Yr := IF(IsValidReport, MIN(NumPDClmWithin1YrTemp, 1), -1);


//CO_PR1
ClaimsAuto: => NumCOClmWithin1YrTemp := COUNT(ClaimsAutoClaim(IsCOClaim = TRUE AND IsValidClaimV2 = TRUE AND YrBetweenClaimDateAndOrderDate < 1));
ClaimsAuto: => ExistCOClmWithin1Yr := IF(IsValidReport, MIN(NumCOClmWithin1YrTemp, 1), -1);




/*************************************************************************/
/*                                                                       */
/*                     Beginning of CLUE Auto 2.0                        */
/*                                                                       */
/*************************************************************************/


/*************************************************************************/
/*                                                                       */
/*                     Constants Value                                   */
/*                                                                       */
/*************************************************************************/

ClaimsAuto: C_DEFAULT_L1 := -1;
ClaimsAuto: C_DEFAULT_L4 := -4;
ClaimsAuto: C_CAP_992 := 992;
ClaimsAuto: C_CAP_9999999992 := 9999999992;
ClaimsAuto: C_CAP_100 := 100.00;
ClaimsAuto: C_CAP_DECIMAL_1 := 1.00;


//Constants for CLUE Auto 2.0 general attributes
ClaimsAutoClaim: C_GL_CODE_LIST := ['GL'];
ClaimsAutoClaim: C_ME_CODE_LIST := ['ME'];
ClaimsAutoClaim: C_OT_CODE_LIST := ['OT'];
ClaimsAutoClaim: C_SL_CODE_LIST := ['SL'];
ClaimsAutoClaim: C_CP_CODE_LIST := ['CP'];
ClaimsAutoClaim: C_TL_CODE_LIST := ['TL'];
ClaimsAutoClaim: C_RR_CODE_LIST := ['RR'];
ClaimsAutoClaim: C_CO_CODE_LIST := ['CO'];
ClaimsAutoClaim: C_PD_CODE_LIST := ['PD'];
ClaimsAutoClaim: C_BI_CODE_LIST := ['BI'];
ClaimsAutoClaim: C_PI_CODE_LIST := ['PI'];
ClaimsAutoClaim: C_UM_CODE_LIST := ['UM'];
ClaimsAutoClaim: C_UN_CODE_LIST := ['UN'];
ClaimsAutoClaim: C_MP_CODE_LIST := ['MP'];
ClaimsAutoClaim: C_BPR_CODE_LIST := ['BI','PD','RR'];
ClaimsAutoClaim: C_MED_BP_INJURY_CODE_LIST := ['ME', 'MP', 'BI','PI'];
ClaimsAutoClaim: C_MED_PERSONINJURY_CODE_LIST := ['ME', 'MP', 'PI'];
ClaimsAutoClaim: C_GFT_CODE_LIST := ['BI','PD'];

ClaimsAutoClaim: C_DISP_OPEN_LIST := ['O'];
ClaimsAutoClaim: C_DISP_CLOSED_LIST := ['C','P','D','W'];
ClaimsAutoClaim: C_DISP_OTHER_LIST := ['S', ''];
ClaimsAutoClaim: C_DISP_GFT_LIST := ['O','C'];

ClaimsAutoClaim: C_VEH_DISP_DAMAGED := 'D';
ClaimsAutoClaim: C_VEH_DISP_TOTALED := 'T';
ClaimsAutoClaim: C_AT_FAULT_INDICATOR_LIST := ['A','B','D','P'];


//Constants for CLUE Auto 2.0 Fault pack, Threshold pack, recency pack
ClaimsAutoClaim: C_FAULT_INDICATORS_N_C := ['N','C']; //not at fault
ClaimsAutoClaim: C_FAULT_INDICATORS_U := ['U']; //unknown fault
ClaimsAutoClaim: C_FAULT_INDICATORS_B_D := ['B','D'];
ClaimsAutoClaim: C_FAULT_INDICATORS_U_A_P := ['U','A','P'];
ClaimsAutoClaim: C_COVERAGE_LIA_COL := ['BI', 'CO', 'PD'];

// Below coverages also exclude OT per Ryan
ClaimsAutoClaim: C_COVERAGE_NOCPTLGL := ['BI', 'CO', 'PD','ME','MP','PI','RR','SL','UM','UN'];
ClaimsAutoClaim: C_COVERAGE_MEDUMUN := ['ME','MP','UM','UN'];

ClaimsAutoClaim: C_DISP_SUB_LIST := ['S'];


FUNCTION: ROUND2(REAL inreal) <= ECL(ROUND(inreal + 0.00000000001, 2))  RETURNS REAL;// round to 2 decimals
FUNCTION: NoVOSpecifiedRegex(STRING VOLastName, STRING VOFirstName) <= ECL(IF(REGEXFIND('.*(OCCUPIED|PARKED|UNKNOWN|DRIVER|VEHICLE|OPERATOR|RECORDED).*', VOLastName) OR REGEXFIND('.*(OCCUPIED|PARKED|UNKNOWN|DRIVER|VEHICLE|OPERATOR|RECORDED).*', VOFirstName), 1, 0)) RETURNS INTEGER;


/*************************************************************************/
/*                                                                       */
/*                     Global Function                                   */
/*                                                                       */
/*************************************************************************/

ClaimsAutoClaim: => G_IsValidClaimV3General := ISVALIDDATE(DateOfClaim) AND ISVALIDDATE(rClaimsAuto.DateOfReceipt) AND DateOfClaim < rClaimsAuto.DateOfReceipt AND rClaimsAuto.ProcessingCompletionStatus = 'C' AND SectionIdentifier IN CLSUB_CODE_LIST;

// In below situation, we cannnot identify the vehicle operator
ClaimsAutoClaim: => G_NoVOData := NoVOSpecifiedRegex(VehicleOperatorLastName, VehicleOperatorFirstName) = 1 OR VehicleOperatorLastName = 'NONE' OR VehicleOperatorFirstName = 'NONE' OR VehicleOperatorLastName:Null AND VehicleOperatorFirstName:Null;
// G_NoVOSpecified is only for testing purpose, could be deleted after specs audit
// ClaimsAutoClaim: => G_NoVOSpecified := NoVOSpecifiedRegex(VehicleOperatorLastName, VehicleOperatorFirstName);


ClaimsAutoClaim: => G_VOSameAsPH := (VehicleOperatorLastName:Null OR PolicyHolderLastName:Null OR VehicleOperatorLastName = PolicyHolderLastName) AND (VehicleOperatorFirstName:Null OR PolicyHolderFirstName:Null OR VehicleOperatorFirstName = PolicyHolderFirstName);

ClaimsAutoClaim: => G_IsValidClaimV3 := MAP(ClaimAssociationIndicator = 'V' => G_IsValidClaimV3General,
											G_NoVOData => G_IsValidClaimV3General,
											G_VOSameAsPH => G_IsValidClaimV3General,
											FALSE);


ClaimsAutoClaim: =>	G_MonthBtwClmDtAndRcptDt := MONTHSBETWEEN(DateOfClaim, rClaimsAuto.DateOfReceipt);
ClaimsAuto: => G_MostRecentClaimDateV3 := MAX(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount >= 0), DateOfClaim);
ClaimsAuto: => G_OldestClaimDateV3 := MIN(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount >= 0), DateOfClaim);

ClaimsAutoClaim: => G_IsBIClaim := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST));
ClaimsAutoClaim: => G_IsCOClaim := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST));
ClaimsAutoClaim: => G_IsCPClaim := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST));
ClaimsAutoClaim: => G_IsPDClaim := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST));
ClaimsAutoClaim: => G_IsPIClaim := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST));
ClaimsAutoClaim: => G_IsRRClaim := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST));
ClaimsAutoClaim: => G_IsUMClaim := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST));
ClaimsAutoClaim: => G_IsGLClaim := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST));
ClaimsAutoClaim: => G_IsMEClaim := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST));
ClaimsAutoClaim: => G_IsMPClaim := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST));
ClaimsAutoClaim: => G_IsOTClaim := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST));
ClaimsAutoClaim: => G_IsTLClaim := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST));
ClaimsAutoClaim: => G_IsSLClaim := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST));
ClaimsAutoClaim: => G_IsUNClaim := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST));
ClaimsAutoClaim: => G_IsBPRClaim := EXISTS(Payments(cClaimCatType IN C_BPR_CODE_LIST));
ClaimsAutoClaim: => G_IsMedInjuryClaim := EXISTS(Payments((cClaimCatType IN C_MED_BP_INJURY_CODE_LIST) AND (cClaimCatAmount > 0)));
ClaimsAutoClaim: => G_IsMedPIClaim := EXISTS(Payments((cClaimCatType IN C_MED_PERSONINJURY_CODE_LIST) AND (cClaimCatAmount > 0))) AND (NOT EXISTS(Payments((cClaimCatType IN C_GFT_CODE_LIST) AND (cClaimCatAmount > 0))));
ClaimsAutoClaim: => G_IsBIPDClaim := EXISTS(Payments(cClaimCatType IN C_GFT_CODE_LIST));

ClaimsAutoClaim: => G_IsGeneralAtFaultClaim := G_IsAtFaultIndicator OR EXISTS(Payments(cClaimCatType IN C_GFT_CODE_LIST AND cClaimCatAmount > 0 AND cClaimCatDisp IN C_DISP_GFT_LIST));

ClaimsAutoClaim: => G_IsAtFaultIndicator := AtFaultIndicator IN C_AT_FAULT_INDICATOR_LIST;

ClaimsAutoClaim: => G_TotalBIClaimAmount := SUM(Payments(cClaimCatType IN C_BI_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalCOClaimAmount := SUM(Payments(cClaimCatType IN C_CO_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalCPClaimAmount := SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalGLClaimAmount := SUM(Payments(cClaimCatType IN C_GL_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalMEClaimAmount := SUM(Payments(cClaimCatType IN C_ME_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalMPClaimAmount := SUM(Payments(cClaimCatType IN C_MP_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOTClaimAmount := SUM(Payments(cClaimCatType IN C_OT_CODE_LIST), cClaimCatAmount);
ClaimsAutoClaim: => G_TotalPDClaimAmount := SUM(Payments(cClaimCatType IN C_PD_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalPIClaimAmount := SUM(Payments(cClaimCatType IN C_PI_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalRRClaimAmount := SUM(Payments(cClaimCatType IN C_RR_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalSLClaimAmount := SUM(Payments(cClaimCatType IN C_SL_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalTLClaimAmount := SUM(Payments(cClaimCatType IN C_TL_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalUMClaimAmount := SUM(Payments(cClaimCatType IN C_UM_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalUNClaimAmount := SUM(Payments(cClaimCatType IN C_UN_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalBPRClaimAmount := SUM(Payments(cClaimCatType IN C_BPR_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalMedInjuryClaimAmount := SUM(Payments(cClaimCatType IN C_MED_BP_INJURY_CODE_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalMedPIClaimAmount := SUM(Payments(cClaimCatType IN C_MED_PERSONINJURY_CODE_LIST), cClaimCatAmount);


ClaimsAutoClaim: => G_TotalGeneralAtFaultClaimAmount := SUM(Payments(G_IsGeneralAtFaultClaim), cClaimCatAmount);

ClaimsAutoClaim: => G_TotalClosedBIClaimAmount := SUM(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedCOClaimAmount := SUM(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedCPClaimAmount := SUM(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedGLClaimAmount := SUM(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedMEClaimAmount := SUM(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedMPClaimAmount := SUM(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedOTClaimAmount := SUM(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount);
ClaimsAutoClaim: => G_TotalClosedPDClaimAmount := SUM(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedPIClaimAmount := SUM(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedRRClaimAmount := SUM(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedSLClaimAmount := SUM(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedTLClaimAmount := SUM(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedUMClaimAmount := SUM(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalClosedUNClaimAmount := SUM(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST), cClaimCatAmount); 


ClaimsAutoClaim: => G_TotalOpenBIClaimAmount := SUM(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenCOClaimAmount := SUM(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenCPClaimAmount := SUM(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenGLClaimAmount := SUM(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenMEClaimAmount := SUM(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenMPClaimAmount := SUM(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenOTClaimAmount := SUM(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount);
ClaimsAutoClaim: => G_TotalOpenPDClaimAmount := SUM(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenPIClaimAmount := SUM(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenRRClaimAmount := SUM(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenSLClaimAmount := SUM(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenTLClaimAmount := SUM(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenUMClaimAmount := SUM(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOpenUNClaimAmount := SUM(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST), cClaimCatAmount); 


ClaimsAutoClaim: => G_TotalOtherBIClaimAmount := SUM(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherCOClaimAmount := SUM(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherCPClaimAmount := SUM(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherGLClaimAmount := SUM(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherMEClaimAmount := SUM(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherMPClaimAmount := SUM(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherOTClaimAmount := SUM(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount);
ClaimsAutoClaim: => G_TotalOtherPDClaimAmount := SUM(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherPIClaimAmount := SUM(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherRRClaimAmount := SUM(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherSLClaimAmount := SUM(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherTLClaimAmount := SUM(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherUMClaimAmount := SUM(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 
ClaimsAutoClaim: => G_TotalOtherUNClaimAmount := SUM(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST), cClaimCatAmount); 


ClaimsAutoClaim: => G_TotalNoTLClaimAmount := SUM(Payments(NOT (cClaimCatType IN C_TL_CODE_LIST)), cClaimCatAmount); 


ClaimsAutoClaim: => G_IsBIClosedClaim := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCOClosedClaim := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCPClosedClaim := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsGLClosedClaim := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMEClosedClaim := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMPClosedClaim := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsOTClosedClaim := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPDClosedClaim := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPIClosedClaim := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsRRClosedClaim := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsSLClosedClaim := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsTLClosedClaim := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUMClosedClaim := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUNClosedClaim := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_CLOSED_LIST AND cClaimCatAmount > 0));


ClaimsAutoClaim: => G_IsBIOpenClaim := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCOOpenClaim := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCPOpenClaim := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPIOpenClaim := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsGLOpenClaim := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMEOpenClaim := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMPOpenClaim := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsOTOpenClaim := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPDOpenClaim := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsRROpenClaim := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsSLOpenClaim := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsTLOpenClaim := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUMOpenClaim := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUNOpenClaim := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_OPEN_LIST AND cClaimCatAmount > 0));


ClaimsAutoClaim: => G_IsBIOtherClaim := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCOOtherClaim := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCPOtherClaim := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsGLOtherClaim := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMEOtherClaim := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMPOtherClaim := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsOTOtherClaim := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPDOtherClaim := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPIOtherClaim := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsRROtherClaim := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsSLOtherClaim := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsTLOtherClaim := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUMOtherClaim := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUNOtherClaim := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatDisp IN C_DISP_OTHER_LIST AND cClaimCatAmount > 0));



ClaimsAutoClaim: => G_IsClaimZ := G_TotalClaimAmount = 0;
ClaimsAutoClaim: => G_IsBIZeroClaim := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsCOZeroClaim := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsCPZeroClaim := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsGLZeroClaim := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsMEZeroClaim := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsMPZeroClaim := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsOTZeroClaim := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsPDZeroClaim := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsPIZeroClaim := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsRRZeroClaim := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsSLZeroClaim := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsTLZeroClaim := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsUMZeroClaim := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatAmount=0));
ClaimsAutoClaim: => G_IsUNZeroClaim := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatAmount=0));


ClaimsAutoClaim: => G_IsBIClaimNZ := EXISTS(Payments(cClaimCatType IN C_BI_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCOClaimNZ := EXISTS(Payments(cClaimCatType IN C_CO_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsCPClaimNZ := EXISTS(Payments(cClaimCatType IN C_CP_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPDClaimNZ := EXISTS(Payments(cClaimCatType IN C_PD_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsRRClaimNZ := EXISTS(Payments(cClaimCatType IN C_RR_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsTLClaimNZ := EXISTS(Payments(cClaimCatType IN C_TL_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUNClaimNZ := EXISTS(Payments(cClaimCatType IN C_UN_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsGLClaimNZ := EXISTS(Payments(cClaimCatType IN C_GL_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsPIClaimNZ := EXISTS(Payments(cClaimCatType IN C_PI_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMEClaimNZ := EXISTS(Payments(cClaimCatType IN C_ME_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsMPClaimNZ := EXISTS(Payments(cClaimCatType IN C_MP_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsOTClaimNZ := EXISTS(Payments(cClaimCatType IN C_OT_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsSLClaimNZ := EXISTS(Payments(cClaimCatType IN C_SL_CODE_LIST AND cClaimCatAmount > 0));
ClaimsAutoClaim: => G_IsUMClaimNZ := EXISTS(Payments(cClaimCatType IN C_UM_CODE_LIST AND cClaimCatAmount > 0));


ClaimsAutoClaim: => G_IsAccidentClaim :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST));
ClaimsAutoClaim: => G_TotalClaimAmount := SUM(Payments, cClaimCatAmount);


//Control Variable
ClaimsAuto: => G_ControlLevel1:= ProcessingCompletionStatus != 'C' OR COUNT(ClaimsAutoClaim(SectionIdentifier IN CLSUB_CODE_LIST)) = 0; //check if processing completed and return results for the seached person and if the persion has any subject claim, 



/*************************************************************************/
/*                                                                       */
/*                     New CLUE Attributes                               */
/*                                                                       */
/*************************************************************************/

//ACCDNT1_CNT ACCDNT2_CNT ACCDNT3_CNT ACCDNT4_CNT ACCDNT5_CNT ACCDNT6_CNT ACCDNT7_CNT
//Description: Number of accidents in the past year (previous 12 months)
ClaimsAuto: => H_NumAccidentIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAccidentIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn1stYr,C_CAP_992));
//Description: Number of accidents in the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumAccidentIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntAccidentIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn2ndYr,C_CAP_992));
//Description: Number of accidents in the previous thid year (prior 25th-36th months)
ClaimsAuto: => H_NumAccidentIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAccidentIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn3rdYr,C_CAP_992));
//Description: Number of accidents in the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumAccidentIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntAccidentIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn4thYr,C_CAP_992));
//Description: Number of accidents in the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumAccidentIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAccidentIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn5thYr,C_CAP_992));
//Description: Number of accidents in the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumAccidentIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntAccidentIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn6thYr,C_CAP_992));
//Description: Number of accidents in the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumAccidentIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntAccidentIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentIn7thYr,C_CAP_992));


//CUM2_ACCDNT_CNT CUM3_ACCDNT_CNT CUM4_ACCDNT_CNT CUM5_ACCDNT_CNT CUM6_ACCDNT_CNT CUM7_ACCDNT_CNT
//Description: Number of accidents in the past 2 years
ClaimsAuto: => H_NumAccidentWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntAccidentWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin2Yr,C_CAP_992));

//Description: Number of accidents in the past 3 years
ClaimsAuto: => H_NumAccidentWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAccidentWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin3Yr,C_CAP_992));

//Description: Number of accidents in the past 4 years
ClaimsAuto: => H_NumAccidentWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntAccidentWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin4Yr,C_CAP_992));

//Description: Number of accidents in the past 5 years
ClaimsAuto: => H_NumAccidentWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAccidentWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin5Yr,C_CAP_992));

//Description: Number of accidents in the past 6 years
ClaimsAuto: => H_NumAccidentWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntAccidentWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin6Yr,C_CAP_992));

//Description: Number of accidents in the past 7 years
ClaimsAuto: => H_NumAccidentWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAccidentClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntAccidentWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumAccidentWithin7Yr,C_CAP_992));


//ACCDNT1_FLG ACCDNT2_FLG ACCDNT3_FLG ACCDNT4_FLG ACCDNT5_FLG ACCDNT6_FLG ACCDNT7_FLG
//Description: Accident Indicator for the past year (previous 12 months)
ClaimsAuto: => I_IndAccidentIn1stYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
//Description: Accident Indicator for the previous second year (prior 13th-24th months)
ClaimsAuto: => I_IndAccidentIn2ndYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
//Description: Accident Indicator for the previous thid year (prior 25th-36th months)
ClaimsAuto: => I_IndAccidentIn3thYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
//Description: Accident Indicator for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => I_IndAccidentIn4thYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48)), 1, 0);
//Description: Accident Indicator for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => I_IndAccidentIn5thYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60)), 1, 0);
//Description: Accident Indicator for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => I_IndAccidentIn6thYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72)), 1, 0);
//Description: Accident Indicator for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => I_IndAccidentIn7thYr := IF(EXISTS(ClaimsAutoClaim(G_IsAccidentClaim AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84)), 1, 0);


//CUM2_AMT CUM3_AMT CUM4_AMT CUM5_AMT CUM6_AMT CUM7_AMT

//Description: Total claim amount for the past 2 years
ClaimsAuto: => H_TotalClaimAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin24M,C_CAP_9999999992));

//Description: Total claim amount for the past 3 years
ClaimsAuto: => H_TotalClaimAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin36M,C_CAP_9999999992));

//Description: Total claim amount for the past 4 years
ClaimsAuto: => H_TotalClaimAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin48M,C_CAP_9999999992));

//Description: Total claim amount for the past 5 years
ClaimsAuto: => H_TotalClaimAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin60M,C_CAP_9999999992));

//Description: Total claim amount for the past 6 years
ClaimsAuto: => H_TotalClaimAmtWithin72M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin72M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin72M,C_CAP_9999999992));

//Description: Total claim amount for the past 7 years
ClaimsAuto: => H_TotalClaimAmtWithin84M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin84M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin84M,C_CAP_9999999992));


//YR1_AMT YR2_AMT YR3_AMT YR4_AMT YR5_AMT YR6_AMT YR7_AMT

//Description: The claim amount for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_TotalClaimAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn2ndYr,C_CAP_9999999992));

//Description: The claim amount for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_TotalClaimAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn3rdYr,C_CAP_9999999992));

//Description: The claim amount for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_TotalClaimAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn4thYr,C_CAP_9999999992));

//Description: The claim amount for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_TotalClaimAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn5thYr,C_CAP_9999999992));

//Description: The claim amount for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_TotalClaimAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn6thYr,C_CAP_9999999992));

//Description: The claim amount for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_TotalClaimAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtIn7thYr,C_CAP_9999999992));


//CUM2_CNT CUM3_CNT CUM4_CNT CUM5_CNT CUM6_CNT CUM7_CNT
//Description: # of claims for the past 2 years
ClaimsAuto: => H_NumClaimWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimWithin24M := MIN(H_NumClaimWithin24M,C_CAP_992);

//Description: # of claims for the past 3 years
ClaimsAuto: => H_NumClaimWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimWithin36M := MIN(H_NumClaimWithin36M,C_CAP_992);

//Description: # of claims for the past 4 years
ClaimsAuto: => H_NumClaimWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimWithin48M := MIN(H_NumClaimWithin48M,C_CAP_992);

//Description: # of claims for the past 5 years
ClaimsAuto: => H_NumClaimWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimWithin60M := MIN(H_NumClaimWithin60M,C_CAP_992);

//Description: # of claims for the past 6 years
ClaimsAuto: => H_NumClaimWithin72M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimWithin72M := MIN(H_NumClaimWithin72M,C_CAP_992);

//Description: # of claims for the past 7 years
ClaimsAuto: => H_NumClaimWithin84M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimWithin84M := MIN(H_NumClaimWithin84M,C_CAP_992);


//YR1_CNT YR2_CNT YR3_CNT YR4_CNT YR5_CNT YR6_CNT YR7_CNT
//Description: The number of claims for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumClaimIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimIn2ndYr := MIN(H_NumClaimIn2ndYr,C_CAP_992);

//Description: The number of claims for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumClaimIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimIn3rdYr := MIN(H_NumClaimIn3rdYr,C_CAP_992);

//Description: The number of claims for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumClaimIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimIn4thYr := MIN(H_NumClaimIn4thYr,C_CAP_992);

//Description: The number of claims for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumClaimIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimIn5thYr := MIN(H_NumClaimIn5thYr,C_CAP_992);

//Description: The number of claims for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumClaimIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimIn6thYr := MIN(H_NumClaimIn6thYr,C_CAP_992);

//Description: The number of claims for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumClaimIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimIn7thYr := MIN(H_NumClaimIn7thYr,C_CAP_992);


//YR1_NZCNT YR2_NZCNT YR3_NZCNT YR4_NZCNT YR5_NZCNT YR6_NZCNT YR7_NZCNT
//Description: The number of above-zero-payment claims for the previous second year (prior 13-24 months)
ClaimsAuto: => H_NumClaimNZIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimNZIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn2ndYr,C_CAP_992));

//Description: The number of above-zero-payment claims for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumClaimNZIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0  AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimNZIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn3rdYr,C_CAP_992));

//Description: The number of above-zero-payment claims for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumClaimNZIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0  AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimNZIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn4thYr,C_CAP_992));

//Description: The number of above-zero-payment claims for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumClaimNZIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0  AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimNZIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn5thYr,C_CAP_992));

//Description: The number of above-zero-payment claims for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumClaimNZIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0  AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimNZIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn6thYr,C_CAP_992));

//Description: The number of above-zero-payment claims for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumClaimNZIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalClaimAmount > 0  AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimNZIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZIn7thYr,C_CAP_992));


//CUM2_0CNT CUM3_0CNT CUM4_0CNT CUM5_0CNT CUM6_0CNT CUM7_0CNT
//Description: # of zero-payment claims for the past 2 years
ClaimsAuto: => H_NumClaimZeroAmtWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimZeroAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin2Yr,C_CAP_992));

//Description: # of zero-payment claims for the past 3 years
ClaimsAuto: => H_NumClaimZeroAmtWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimZeroAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin3Yr,C_CAP_992));

//Description: # of zero-payment claims for the past 4 years
ClaimsAuto: => H_NumClaimZeroAmtWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimZeroAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin4Yr,C_CAP_992));

//Description: # of zero-payment for the past 5 years
ClaimsAuto: => H_NumClaimZeroAmtWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimZeroAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin5Yr,C_CAP_992));

//Description: # of zero-payment claims for the past 6 years
ClaimsAuto: => H_NumClaimZeroAmtWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimZeroAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin6Yr,C_CAP_992));

//Description: # of zero-payment claims for the past 7 years
ClaimsAuto: => H_NumClaimZeroAmtWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimZeroAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtWithin7Yr,C_CAP_992));


//YR1_0CNT YR2_0CNT YR3_0CNT YR4_0CNT YR5_0CNT YR6_0CNT YR7_0CNT
//Description: The number of zero-payment claims for the past year (12 months)
ClaimsAuto: => H_NumClaimZeroAmtIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimZeroAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn1stYr,C_CAP_992));


//Description: The number of zero-payment claims for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumClaimZeroAmtIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimZeroAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn2ndYr,C_CAP_992));


//Description: The number of zero-payment claims for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumClaimZeroAmtIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimZeroAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn3rdYr,C_CAP_992));

//Description: The number of zero-payment claims for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumClaimZeroAmtIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimZeroAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn4thYr,C_CAP_992));

//Description: The number of zero-payment claims for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumClaimZeroAmtIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimZeroAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn5thYr,C_CAP_992));

//Description: The number of zero-payment claims for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumClaimZeroAmtIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimZeroAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn6thYr,C_CAP_992));

//Description: The number of zero-payment claims for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumClaimZeroAmtIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsClaimZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimZeroAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimZeroAmtIn7thYr,C_CAP_992));


//CLM_RCNDAYS CLM_RCNMONS
//Description: # of days since most recent claim
ClaimsAuto: => I_CntDaysSinceMostRecentClaim := IF(G_MostRecentClaimDateV3:Null, C_DEFAULT_L1, DAYSBETWEEN(G_MostRecentClaimDateV3, DateOfReceipt));
//Description: # of months since most recent claim
ClaimsAuto: => I_CntMonthsSinceMostRecentClaim := IF(G_MostRecentClaimDateV3:Null, C_DEFAULT_L1, MONTHSBETWEEN(G_MostRecentClaimDateV3, DateOfReceipt));

//CLM_LNGTH
//Description: # of days since oldest claim starting 7 years ago
ClaimsAuto: => I_CntDaysSinceOldestClaim := IF(G_OldestClaimDateV3:Null, C_DEFAULT_L1, DAYSBETWEEN(G_OldestClaimDateV3, DateOfReceipt));

//COMM100ER FLEETER FRQ10ER
//Description: Individuals with over 100 claims for the past 7-year history
ClaimsAuto: => I_IndClaimGE100Within7Yr := IF(H_NumClaimWithin84M >= 100, 1, 0);
//Description: Individuals with over 70 claims for the past 7-year history
ClaimsAuto: => I_IndClaimGE70Within7Yr := IF(H_NumClaimWithin84M >= 70, 1, 0);
//Description: Individuals with over 10 claims for the past 7-year history
ClaimsAuto: => I_IndClaimGE10Within7Yr := IF(H_NumClaimWithin84M >= 10, 1, 0);


//BI_6mon_AMT BI_12mon_AMT BI_18mon_AMT BI_24mon_AMT BI_30mon_AMT BI_36mon_AMT BI_42mon_AMT BI_48mon_AMT BI_54mon_AMT BI_60mon_AMT
//Description: Total BI claim amount in the past 6 months
ClaimsAuto: => H_TotalBIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin6M,C_CAP_9999999992));

//Description: Total BI claim amount in the past 12 months
ClaimsAuto: => H_TotalBIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin12M,C_CAP_9999999992));

//Description: Total BI claim amount in the past 18 months
ClaimsAuto: => H_TotalBIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin24M,C_CAP_9999999992));

//Description: Total BI claim amount in the past 30 months
ClaimsAuto: => H_TotalBIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin36M,C_CAP_9999999992));

//Description: Total BI claim amount in the past 42 months
ClaimsAuto: => H_TotalBIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin48M,C_CAP_9999999992));

//Description: Total BI claim amount in the past 54 months
ClaimsAuto: => H_TotalBIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin60M,C_CAP_9999999992));

//cum6_BI_AMT
//Description: Past 6-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin6Yr,C_CAP_9999999992));


//BI_AMT BI_AMT1 BI_AMT2 BI_AMT3 BI_AMT4 BI_AMT5 BI_AMT6 BI_AMT7

//Description: Past 7-year BI claim amount
ClaimsAuto: => H_TotalBIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtWithin7Yr,C_CAP_9999999992));





//Description: Previous 2nd-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Bodily Injury claim amount
ClaimsAuto: => H_TotalBIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalBIClaimAmount >=0), G_TotalBIClaimAmount);
ClaimsAuto: => I_TotBIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBIAmtIn7thYr,C_CAP_9999999992));



//BI_6mon_CNT BI_12mon_CNT BI_18mon_CNT BI_24mon_CNT BI_30mon_CNT BI_36mon_CNT BI_42mon_CNT BI_48mon_CNT BI_54mon_CNT BI_60mon_CNT
//Description: # of BI claims in the past 6 months
ClaimsAuto: => H_NumBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin6M,C_CAP_992));

//Description: # of BI claims in the past 12 months
ClaimsAuto: => H_NumBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin12M,C_CAP_992));

//Description: # of BI claims in the past 18 months
ClaimsAuto: => H_NumBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin18M,C_CAP_992));

//Description: Past 2-year number of BI claims
ClaimsAuto: => H_NumBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin24M,C_CAP_992));

//Description: # of BI claims in the past 30 months
ClaimsAuto: => H_NumBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin30M,C_CAP_992));

//Description: Past 3-year number of BI claims
ClaimsAuto: => H_NumBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin36M,C_CAP_992));

//Description: # of BI claims in the past 42 months
ClaimsAuto: => H_NumBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin42M,C_CAP_992));

//Description: Past 4-year number of BI claims
ClaimsAuto: => H_NumBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin48M,C_CAP_992));

//Description: # of BI claims in the past 54 months
ClaimsAuto: => H_NumBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin54M,C_CAP_992));

//Description: Past 5-year number of BI claims
ClaimsAuto: => H_NumBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin60M,C_CAP_992));

//cum6_BI_CNT
//Description: Past 6-year number of BI claims
ClaimsAuto: => H_NumBIWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntBIWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin6Yr,C_CAP_992));


//BI_CNT BI_CNT1 BI_CNT2 BI_CNT3 BI_CNT4 BI_CNT5 BI_CNT6 BI_CNT7

//Description: Past 7-year number of BI claims
ClaimsAuto: => H_NumBIWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntBIWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIWithin7Yr,C_CAP_992));

//Description: Previous 2nd-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Bodily Injury claims
ClaimsAuto: => H_NumBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBIIn7thYr,C_CAP_992));



//BI_6mon_NZCNT BI_12mon_NZCNT BI_18mon_NZCNT BI_24mon_NZCNT BI_30mon_NZCNT BI_36mon_NZCNT BI_42mon_NZCNT BI_48mon_NZCNT BI_54mon_NZCNT BI_60mon_NZCNT

//Description: # of above-zero-payment BI claims in the past 6 months
ClaimsAuto: => H_NumNZBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin6M,C_CAP_992));

//Description: # of above-zero-payment BI claims in the past 12 months
ClaimsAuto: => H_NumNZBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin12M,C_CAP_992));

//Description: # of above-zero-payment BI claims in the past 18 months
ClaimsAuto: => H_NumNZBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin18M,C_CAP_992));

//Description: Number of above-zero-payment BI claims in the past 2 years
ClaimsAuto: => H_NumNZBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin24M,C_CAP_992));

//Description: # of above-zero-payment BI claims in the past 30 months
ClaimsAuto: => H_NumNZBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin30M,C_CAP_992));

//Description: Number of above-zero-payment BI claims in the past 3 years
ClaimsAuto: => H_NumNZBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin36M,C_CAP_992));

//Description: # of above-zero-payment BI claims in the past 42 months
ClaimsAuto: => H_NumNZBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin42M,C_CAP_992));

//Description: Number of above-zero-payment BI claims in the past 4 years
ClaimsAuto: => H_NumNZBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin48M,C_CAP_992));

//Description: # of above-zero-payment BI claims in the past 54 months
ClaimsAuto: => H_NumNZBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin54M,C_CAP_992));

//Description: Number of above-zero-payment BI claims in the past 5 years
ClaimsAuto: => H_NumNZBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin60M,C_CAP_992));

//cum6_BI_NZCNT
//Description: Number of above-zero-payment BI claims in the past 6 years
ClaimsAuto: => H_NumNZBIWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZBIWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin6Yr,C_CAP_992));


//BI_NZCNT BI_NZCNT1 BI_NZCNT2 BI_NZCNT3 BI_NZCNT4 BI_NZCNT5 BI_NZCNT6 BI_NZCNT7
//Description: Number of above-zero-payment BI claims in the past 7 years
ClaimsAuto: => H_NumNZBIWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZBIWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Bodily Injury above-zero-payment claims
ClaimsAuto: => H_NumNZBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZBIIn7thYr,C_CAP_992));



//BI6mon_CL_A BI12mon_CL_A BI18mon_CL_A BI24mon_CL_A BI30mon_CL_A BI36mon_CL_A BI42mon_CL_A BI48mon_CL_A BI54mon_CL_A BI60mon_CL_A

//Description: Closed BI claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedBIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin6M,C_CAP_9999999992));

//Description: Closed BI claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedBIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin12M,C_CAP_9999999992));


//Description: Closed BI claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedBIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin18M,C_CAP_9999999992));


//Description: Past 2-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin24M,C_CAP_9999999992));

//Description: Closed BI claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedBIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin30M,C_CAP_9999999992));


//Description: Past 3-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin36M,C_CAP_9999999992));

//Description: Closed BI claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedBIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin42M,C_CAP_9999999992));


//Description: Past 4-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin48M,C_CAP_9999999992));

//Description: Closed BI claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedBIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin60M,C_CAP_9999999992));

//cum6_BI_CL_AMT
//Description: Past 6-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed BI claim amount
ClaimsAuto: => H_TotalClosedBIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtWithin7Yr,C_CAP_9999999992));



//BI_CL_A1 BI_CL_A2 BI_CL_A3 BI_CL_A4 BI_CL_A5 BI_CL_A6 BI_CL_A7 BI_CL_AMT
//Description: Previous 2nd-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Bodily Injury  claim amount
ClaimsAuto: => H_TotalClosedBIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedBIClaimAmount >=0), G_TotalClosedBIClaimAmount);
ClaimsAuto: => I_TotClosedBIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedBIAmtIn7thYr,C_CAP_9999999992));



//BI6mon_CL_N BI12mon_CL_N BI18mon_CL_N BI24mon_CL_N BI30mon_CL_N BI36mon_CL_N BI42mon_CL_N BI48mon_CL_N BI54mon_CL_N BI60mon_CL_N
//Description: # of Closed BI claims in the past 6 months
ClaimsAuto: => H_NumClosedBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin6M,C_CAP_992));

//Description: # of Closed BI claims in the past 12 months
ClaimsAuto: => H_NumClosedBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin12M,C_CAP_992));

//Description: # of Closed BI claims in the past 18 months
ClaimsAuto: => H_NumClosedBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin18M,C_CAP_992));

//Description: # of Closed BI claims in the past 24 months
ClaimsAuto: => H_NumClosedBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin24M,C_CAP_992));

//Description: # of Closed BI claims in the past 30 months
ClaimsAuto: => H_NumClosedBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin30M,C_CAP_992));

//Description: # of Closed BI claims in the past 36 months
ClaimsAuto: => H_NumClosedBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin36M,C_CAP_992));

//Description: # of Closed BI claims in the past 42 months
ClaimsAuto: => H_NumClosedBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin42M,C_CAP_992));

//Description: # of Closed BI claims in the past 48 months
ClaimsAuto: => H_NumClosedBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin48M,C_CAP_992));

//Description: # of Closed BI claims in the past 54 months
ClaimsAuto: => H_NumClosedBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin54M,C_CAP_992));

//Description: # of Closed BI claims in the past 60 months
ClaimsAuto: => H_NumClosedBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIWithin60M,C_CAP_992));



//BI_CL_N1 BI_CL_N2 BI_CL_N3 BI_CL_N4 BI_CL_N5 BI_CL_N6 BI_CL_N7

//Description: Previous 2nd-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Bodily Injury  claims
ClaimsAuto: => H_NumClosedBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedBIIn7thYr,C_CAP_992));


//BI6mon_OP_A BI12mon_OP_A BI18mon_OP_A BI24mon_OP_A BI30mon_OP_A BI36mon_OP_A BI42mon_OP_A BI48mon_OP_A BI54mon_OP_A BI60mon_OP_A

//Description: Open BI claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenBIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin6M,C_CAP_9999999992));


//Description: Open BI claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenBIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin12M,C_CAP_9999999992));


//Description: Open BI claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenBIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin18M,C_CAP_9999999992));


//Description: Past 2-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin24M,C_CAP_9999999992));

//Description: Open BI claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenBIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin36M,C_CAP_9999999992));

//Description: Open BI claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenBIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin48M,C_CAP_9999999992));

//Description: Open BI claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenBIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin60M,C_CAP_9999999992));


//BI_OP_A1 BI_OP_A2 BI_OP_A3 BI_OP_A4 BI_OP_A5 BI_OP_A6 BI_OP_A7 BI_OP_AMT

//Description: Previous 2nd-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Bodily Injury claim amount
ClaimsAuto: => H_TotalOpenBIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtIn7thYr,C_CAP_9999999992));


//Description: Past 7-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin7Yr,C_CAP_9999999992));

//cum6_BI_OP_AMT
//Description: Past 6-year open BI claim amount
ClaimsAuto: => H_TotalOpenBIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenBIClaimAmount >=0), G_TotalOpenBIClaimAmount);
ClaimsAuto: => I_TotOpenBIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenBIAmtWithin6Yr,C_CAP_9999999992));


//BI6mon_OP_N BI12mon_OP_N BI18mon_OP_N BI24mon_OP_N BI30mon_OP_N BI36mon_OP_N BI36mon_OP_N BI42mon_OP_N BI48mon_OP_N BI54mon_OP_N BI60mon_OP_N
//Description: # of Open BI claims in the past 6 months
ClaimsAuto: => H_NumOpenBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin6M,C_CAP_992));

//Description: # of Open BI claims in the past 12 months
ClaimsAuto: => H_NumOpenBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin12M,C_CAP_992));

//Description: # of Open BI claims in the past 18 months
ClaimsAuto: => H_NumOpenBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin18M,C_CAP_992));

//Description: # of Open BI claims in the past 24 months
ClaimsAuto: => H_NumOpenBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin24M,C_CAP_992));

//Description: # of Open BI claims in the past 30 months
ClaimsAuto: => H_NumOpenBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin30M,C_CAP_992));

//Description: # of Open BI claims in the past 36 months
ClaimsAuto: => H_NumOpenBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin36M,C_CAP_992));

//Description: # of Open BI claims in the past 42 months
ClaimsAuto: => H_NumOpenBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin42M,C_CAP_992));

//Description: # of Open BI claims in the past 48 months
ClaimsAuto: => H_NumOpenBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin48M,C_CAP_992));

//Description: # of Open BI claims in the past 54 months
ClaimsAuto: => H_NumOpenBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin54M,C_CAP_992));

//Description: # of Open BI claims in the past 60 months
ClaimsAuto: => H_NumOpenBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIWithin60M,C_CAP_992));



//BI_OP_N1 BI_OP_N2 BI_OP_N3 BI_OP_N4 BI_OP_N5 BI_OP_N6 BI_OP_N7
//Description: Previous 2nd-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Bodily Injury claims
ClaimsAuto: => H_NumOpenBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenBIIn7thYr,C_CAP_992));



//BI6mon_OT_A BI12mon_OT_A BI18mon_OT_A BI24mon_OT_A BI30mon_OT_A BI36mon_OT_A BI42mon_OT_A BI48mon_OT_A BI54mon_OT_A BI60mon_OT_A
//Description: Other BI claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherBIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin6M,C_CAP_9999999992));

//Description: Other BI claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherBIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin12M,C_CAP_9999999992));


//Description: Other BI claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherBIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin18M,C_CAP_9999999992));


//Description: Past 2-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin24M,C_CAP_9999999992));

//Description: Other BI claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherBIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin30M,C_CAP_9999999992));


//Description: Past 3-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin36M,C_CAP_9999999992));

//Description: Other BI claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherBIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin42M,C_CAP_9999999992));


//Description: Past 4-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin48M,C_CAP_9999999992));

//Description: Other BI claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherBIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin60M,C_CAP_9999999992));


//BI_OT_A1 BI_OT_A2 BI_OT_A3 BI_OT_A4 BI_OT_A5 BI_OT_A6 BI_OT_A7 BI_OT_AMT

//Description: Previous 2nd-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Bodily Injury claim amount
ClaimsAuto: => H_TotalOtherBIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtIn7thYr,C_CAP_9999999992));


//Description: Past 7-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin7Yr,C_CAP_9999999992));


//cum6_BI_OT_AMT
//Description: Past 6-year other BI claim amount
ClaimsAuto: => H_TotalOtherBIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherBIClaimAmount >=0), G_TotalOtherBIClaimAmount);
ClaimsAuto: => I_TotOtherBIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherBIAmtWithin6Yr,C_CAP_9999999992));



//BI6mon_OT_N BI12mon_OT_N BI18mon_OT_N BI24mon_OT_N BI30mon_OT_N BI36mon_OT_N BI42mon_OT_N BI48mon_OT_N BI54mon_OT_N BI60mon_OT_N
//Description: # of Other BI claims in the past 6 months
ClaimsAuto: => H_NumOtherBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin6M,C_CAP_992));

//Description: # of Other BI claims in the past 12 months
ClaimsAuto: => H_NumOtherBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin12M,C_CAP_992));

//Description: # of Other BI claims in the past 18 months
ClaimsAuto: => H_NumOtherBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin18M,C_CAP_992));

//Description: # of Other BI claims in the past 24 months
ClaimsAuto: => H_NumOtherBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin24M,C_CAP_992));

//Description: # of Other BI claims in the past 30 months
ClaimsAuto: => H_NumOtherBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin30M,C_CAP_992));

//Description: # of Other BI claims in the past 36 months
ClaimsAuto: => H_NumOtherBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin36M,C_CAP_992));

//Description: # of Other BI claims in the past 42 months
ClaimsAuto: => H_NumOtherBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin42M,C_CAP_992));


//Description: # of Other BI claims in the past 48 months
ClaimsAuto: => H_NumOtherBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin48M,C_CAP_992));


//Description: # of Other BI claims in the past 54 months
ClaimsAuto: => H_NumOtherBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin54M,C_CAP_992));

//Description: # of Other BI claims in the past 60 months
ClaimsAuto: => H_NumOtherBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIWithin60M,C_CAP_992));



//BI_OT_N1 BI_OT_N2 BI_OT_N3 BI_OT_N4 BI_OT_N5 BI_OT_N6 BI_OT_N7
//Description: Previous 2nd-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Bodily Injury claims
ClaimsAuto: => H_NumOtherBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherBIIn7thYr,C_CAP_992));

//BI6mon_ZR_N BI12mon_ZR_N BI18mon_ZR_N BI24mon_ZR_N BI30mon_ZR_N BI36mon_ZR_N BI42mon_ZR_N BI48mon_ZR_N BI54mon_ZR_N BI60mon_ZR_N


//Description: # of Zero-payment BI claims in the past 6 months
ClaimsAuto: => H_NumZeroBIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroBIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin6M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 12 months
ClaimsAuto: => H_NumZeroBIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroBIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin12M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 18 months
ClaimsAuto: => H_NumZeroBIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroBIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin18M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 24 months
ClaimsAuto: => H_NumZeroBIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroBIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin24M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 30 months
ClaimsAuto: => H_NumZeroBIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroBIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin30M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 36 months
ClaimsAuto: => H_NumZeroBIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroBIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin36M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 42 months
ClaimsAuto: => H_NumZeroBIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroBIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin42M,C_CAP_992));


//Description: # of Zero-payment BI claims in the past 48 months
ClaimsAuto: => H_NumZeroBIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroBIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin48M,C_CAP_992));


//Description: # of Zero-payment BI claims in the past 54 months
ClaimsAuto: => H_NumZeroBIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroBIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin54M,C_CAP_992));

//Description: # of Zero-payment BI claims in the past 60 months
ClaimsAuto: => H_NumZeroBIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroBIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIWithin60M,C_CAP_992));

//BI_ZR_N1 BI_ZR_N2 BI_ZR_N3 BI_ZR_N4 BI_ZR_N5 BI_ZR_N6 BI_ZR_N7


//Description: Previous 2nd-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroBIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroBIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroBIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroBIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroBIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Bodily Injury claims
ClaimsAuto: => H_NumZeroBIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroBIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroBIIn7thYr,C_CAP_992));



//CUM2_BPRAMT CUM3_BPRAMT CUM4_BPRAMT CUM5_BPRAMT CUM6_BPRAMT CUM7_BPRAMT
//Description: Past 2-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin2Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin2Yr,C_CAP_9999999992));

//Description: Past 3-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin3Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin3Yr,C_CAP_9999999992));

//Description: Past 4-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin4Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin4Yr,C_CAP_9999999992));

//Description: Past 5-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin5Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin5Yr,C_CAP_9999999992));

//Description: Past 6-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year Total claim payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtWithin7Yr,C_CAP_9999999992));


//YR1BPRAMT YR2BPRAMT YR3BPRAMT YR4BPRAMT YR5BPRAMT YR6BPRAMT YR7BPRAMT
//Description: Past 1-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn1stYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn1stYr,C_CAP_9999999992));

//Description: Previous 2nd-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year Total Claim Payout due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalBPRAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalBPRClaimAmount >=0), G_TotalBPRClaimAmount);
ClaimsAuto: => I_TotBPRAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalBPRAmtIn7thYr,C_CAP_9999999992));


//CUM2_BPRCNT CUM3_BPRCNT CUM4_BPRCNT CUM5_BPRCNT CUM6_BPRCNT CUM7_BPRCNT
//Description: Past 2-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntBPRWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin2Yr,C_CAP_992));

//Description: Past 3-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntBPRWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin3Yr,C_CAP_992));

//Description: Past 4-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntBPRWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin4Yr,C_CAP_992));

//Description: Past 5-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntBPRWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin5Yr,C_CAP_992));

//Description: Past 6-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntBPRWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin6Yr,C_CAP_992));

//Description: Past 7-year Total # of Claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntBPRWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRWithin7Yr,C_CAP_992));


//YR1BPRCNT YR2BPRCNT YR3BPRCNT YR4BPRCNT YR5BPRCNT YR6BPRCNT YR7BPRCNT
//Description: Past 1-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntBPRIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntBPRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntBPRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntBPRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntBPRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntBPRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims due to Bodily Injury, Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumBPRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsBPRClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntBPRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumBPRIn7thYr,C_CAP_992));



//CO_6mon_AMT CO_12mon_AMT CO_18mon_AMT CO_24mon_AMT CO_30mon_AMT CO_36mon_AMT CO_42mon_AMT CO_48mon_AMT CO_54mon_AMT CO_60mon_AMT
//Description: Total CO claim amount in the past 6 months
ClaimsAuto: => H_TotalCOAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin6M,C_CAP_9999999992));

//Description: Total CO claim amount in the past 12 months
ClaimsAuto: => H_TotalCOAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin12M,C_CAP_9999999992));

//Description: Total CO claim amount in the past 18 months
ClaimsAuto: => H_TotalCOAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin24M,C_CAP_9999999992));

//Description: Total CO claim amount in the past 30 months
ClaimsAuto: => H_TotalCOAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin36M,C_CAP_9999999992));

//Description: Total CO claim amount in the past 42 months
ClaimsAuto: => H_TotalCOAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin48M,C_CAP_9999999992));

//Description: Total CO claim amount in the past 54 months
ClaimsAuto: => H_TotalCOAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin60M,C_CAP_9999999992));

//cum6_CO_AMT
//Description: Past 6-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin6Yr,C_CAP_9999999992));

//CO_AMT CO_AMT1 CO_AMT2 CO_AMT3 CO_AMT4 CO_AMT5 CO_AMT6 CO_AMT7
//Description: Past 7-year CO claim amount
ClaimsAuto: => H_TotalCOAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtWithin7Yr,C_CAP_9999999992));




//Description: Previous 2nd-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Collision Loss claim amount
ClaimsAuto: => H_TotalCOAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalCOClaimAmount >=0), G_TotalCOClaimAmount);
ClaimsAuto: => I_TotCOAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCOAmtIn7thYr,C_CAP_9999999992));



//CO_6mon_CNT CO_12mon_CNT CO_18mon_CNT CO_24mon_CNT CO_30mon_CNT CO_36mon_CNT CO_42mon_CNT CO_48mon_CNT CO_54mon_CNT CO_60mon_CNT
//Description: # of CO claims in the past 6 months
ClaimsAuto: => H_NumCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin6M,C_CAP_992));

//Description: # of CO claims in the past 12 months
ClaimsAuto: => H_NumCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin12M,C_CAP_992));

//Description: # of CO claims in the past 18 months
ClaimsAuto: => H_NumCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin18M,C_CAP_992));

//Description: Past 2-year number of CO claims
ClaimsAuto: => H_NumCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin24M,C_CAP_992));

//Description: # of CO claims in the past 30 months
ClaimsAuto: => H_NumCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin30M,C_CAP_992));

//Description: Past 3-year number of CO claims
ClaimsAuto: => H_NumCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin36M,C_CAP_992));

//Description: # of CO claims in the past 42 months
ClaimsAuto: => H_NumCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin42M,C_CAP_992));

//Description: Past 4-year number of CO claims
ClaimsAuto: => H_NumCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin48M,C_CAP_992));

//Description: # of CO claims in the past 54 months
ClaimsAuto: => H_NumCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin54M,C_CAP_992));

//Description: Past 5-year number of CO claims
ClaimsAuto: => H_NumCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin60M,C_CAP_992));


//CO_CNT CO_CNT1 CO_CNT2 CO_CNT3 CO_CNT4 CO_CNT5 CO_CNT6 CO_CNT7
//Description: Past 7-year number of CO claims
ClaimsAuto: => H_NumCOWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntCOWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin7Yr,C_CAP_992));

//Description: Previous 2nd-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Collision Loss claims
ClaimsAuto: => H_NumCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOIn7thYr,C_CAP_992));


//cum6_CO_CNT
//Description: Past 6-year number of CO claims
ClaimsAuto: => H_NumCOWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntCOWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCOWithin6Yr,C_CAP_992));


//CO_6mon_NZCNT CO_12mon_NZCNT CO_18mon_NZCNT CO_24mon_NZCNT CO_30mon_NZCNT CO_36mon_NZCNT CO_42mon_NZCNT CO_48mon_NZCNT CO_54mon_NZCNT CO_60mon_NZCNT
//Description: # of above-zero-payment CO claims in the past 6 months
ClaimsAuto: => H_NumNZCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin6M,C_CAP_992));

//Description: # of above-zero-payment CO claims in the past 12 months
ClaimsAuto: => H_NumNZCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin12M,C_CAP_992));

//Description: # of above-zero-payment CO claims in the past 18 months
ClaimsAuto: => H_NumNZCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin18M,C_CAP_992));

//Description: Number of above-zero-payment CO claims in the past 2 years
ClaimsAuto: => H_NumNZCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin24M,C_CAP_992));

//Description: # of above-zero-payment CO claims in the past 30 months
ClaimsAuto: => H_NumNZCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin30M,C_CAP_992));

//Description: Number of above-zero-payment CO claims in the past 3 years
ClaimsAuto: => H_NumNZCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin36M,C_CAP_992));

//Description: # of above-zero-payment CO claims in the past 42 months
ClaimsAuto: => H_NumNZCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin42M,C_CAP_992));

//Description: Number of above-zero-payment CO claims in the past 4 years
ClaimsAuto: => H_NumNZCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin48M,C_CAP_992));

//Description: # of above-zero-payment CO claims in the past 54 months
ClaimsAuto: => H_NumNZCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin54M,C_CAP_992));

//Description: Number of above-zero-payment CO claims in the past 5 years
ClaimsAuto: => H_NumNZCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin60M,C_CAP_992));


//CO_NZCNT CO_NZCNT1 CO_NZCNT2 CO_NZCNT3 CO_NZCNT4 CO_NZCNT5 CO_NZCNT6 CO_NZCNT7
//Description: Number of above-zero-payment CO claims in the past 7 years
ClaimsAuto: => H_NumNZCOWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZCOWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin7Yr,C_CAP_992));

//Description: Previous 2nd-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Collision Loss above-zero-payment claims
ClaimsAuto: => H_NumNZCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOIn7thYr,C_CAP_992));


//cum6_CO_NZCNT
//Description: Number of above-zero-payment CO claims in the past 6 years
ClaimsAuto: => H_NumNZCOWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZCOWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCOWithin6Yr,C_CAP_992));


//CO6mon_CL_A CO12mon_CL_A CO18mon_CL_A CO24mon_CL_A CO30mon_CL_A CO36mon_CL_A CO42mon_CL_A CO48mon_CL_A CO54mon_CL_A CO60mon_CL_A
//Description: Closed CO claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedCOAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin6M,C_CAP_9999999992));

//Description: Closed CO claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedCOAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin12M,C_CAP_9999999992));

//Description: Closed CO claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedCOAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin24M,C_CAP_9999999992));

//Description: Closed CO claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedCOAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin36M,C_CAP_9999999992));

//Description: Closed CO claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedCOAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin48M,C_CAP_9999999992));

//Description: Closed CO claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedCOAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin60M,C_CAP_9999999992));



//CO_CL_A1 CO_CL_A2 CO_CL_A3 CO_CL_A4 CO_CL_A5 CO_CL_A6 CO_CL_A7 CO_CL_AMT
//Description: Previous 2nd-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Collision Loss claim amount
ClaimsAuto: => H_TotalClosedCOAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtIn7thYr,C_CAP_9999999992));


//Description: Past 7-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin7Yr,C_CAP_9999999992));


//cum6_CO_CL_AMT
//Description: Past 6-year closed CO claim amount
ClaimsAuto: => H_TotalClosedCOAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedCOClaimAmount >=0), G_TotalClosedCOClaimAmount);
ClaimsAuto: => I_TotClosedCOAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCOAmtWithin6Yr,C_CAP_9999999992));


//CO6mon_CL_N CO12mon_CL_N CO18mon_CL_N CO24mon_CL_N CO30mon_CL_N CO36mon_CL_N CO42mon_CL_N CO48mon_CL_N CO54mon_CL_N CO60mon_CL_N
//Description: # of Closed CO claims in the past 6 months
ClaimsAuto: => H_NumClosedCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin6M,C_CAP_992));

//Description: # of Closed CO claims in the past 12 months
ClaimsAuto: => H_NumClosedCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin12M,C_CAP_992));

//Description: # of Closed CO claims in the past 18 months
ClaimsAuto: => H_NumClosedCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin18M,C_CAP_992));

//Description: # of Closed CO claims in the past 24 months
ClaimsAuto: => H_NumClosedCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin24M,C_CAP_992));

//Description: # of Closed CO claims in the past 30 months
ClaimsAuto: => H_NumClosedCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin30M,C_CAP_992));

//Description: # of Closed CO claims in the past 36 months
ClaimsAuto: => H_NumClosedCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin36M,C_CAP_992));

//Description: # of Closed CO claims in the past 42 months
ClaimsAuto: => H_NumClosedCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin42M,C_CAP_992));

//Description: # of Closed CO claims in the past 48 months
ClaimsAuto: => H_NumClosedCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin48M,C_CAP_992));

//Description: # of Closed CO claims in the past 54 months
ClaimsAuto: => H_NumClosedCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin54M,C_CAP_992));

//Description: # of Closed CO claims in the past 60 months
ClaimsAuto: => H_NumClosedCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOWithin60M,C_CAP_992));



//CO_CL_N1 CO_CL_N2 CO_CL_N3 CO_CL_N4 CO_CL_N5 CO_CL_N6 CO_CL_N7
//Description: Previous 2nd-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Collision Loss claims
ClaimsAuto: => H_NumClosedCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCOIn7thYr,C_CAP_992));


//CO6mon_OP_A CO12mon_OP_A CO18mon_OP_A CO24mon_OP_A CO30mon_OP_A CO36mon_OP_A CO42mon_OP_A CO48mon_OP_A CO54mon_OP_A CO60mon_OP_A
//Description: Open CO claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenCOAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin6M,C_CAP_9999999992));

//Description: Open CO claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenCOAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin12M,C_CAP_9999999992));

//Description: Open CO claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenCOAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin24M,C_CAP_9999999992));

//Description: Open CO claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenCOAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin36M,C_CAP_9999999992));

//Description: Open CO claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenCOAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin48M,C_CAP_9999999992));

//Description: Open CO claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenCOAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin60M,C_CAP_9999999992));


//CO_OP_A1 CO_OP_A2 CO_OP_A3 CO_OP_A4 CO_OP_A5 CO_OP_A6 CO_OP_A7 CO_OP_AMT
//Description: Previous 2nd-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Collision Loss claim amount
ClaimsAuto: => H_TotalOpenCOAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtIn7thYr,C_CAP_9999999992));

//Description: Past 7-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin7Yr,C_CAP_9999999992));

//cum6_CO_OP_AMT
//Description: Past 6-year open CO claim amount
ClaimsAuto: => H_TotalOpenCOAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenCOClaimAmount >=0), G_TotalOpenCOClaimAmount);
ClaimsAuto: => I_TotOpenCOAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCOAmtWithin6Yr,C_CAP_9999999992));


//CO6mon_OP_N CO12mon_OP_N CO18mon_OP_N CO24mon_OP_N CO30mon_OP_N CO36mon_OP_N CO36mon_OP_N CO42mon_OP_N CO48mon_OP_N CO54mon_OP_N CO60mon_OP_N
//Description: # of Open CO claims in the past 6 months
ClaimsAuto: => H_NumOpenCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin6M,C_CAP_992));

//Description: # of Open CO claims in the past 12 months
ClaimsAuto: => H_NumOpenCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin12M,C_CAP_992));

//Description: # of Open CO claims in the past 18 months
ClaimsAuto: => H_NumOpenCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin18M,C_CAP_992));

//Description: # of Open CO claims in the past 24 months
ClaimsAuto: => H_NumOpenCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin24M,C_CAP_992));

//Description: # of Open CO claims in the past 30 months
ClaimsAuto: => H_NumOpenCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin30M,C_CAP_992));

//Description: # of Open CO claims in the past 36 months
ClaimsAuto: => H_NumOpenCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin36M,C_CAP_992));

//Description: # of Open CO claims in the past 42 months
ClaimsAuto: => H_NumOpenCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin42M,C_CAP_992));

//Description: # of Open CO claims in the past 48 months
ClaimsAuto: => H_NumOpenCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin48M,C_CAP_992));

//Description: # of Open CO claims in the past 54 months
ClaimsAuto: => H_NumOpenCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin54M,C_CAP_992));

//Description: # of Open CO claims in the past 60 months
ClaimsAuto: => H_NumOpenCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOWithin60M,C_CAP_992));



//CO_OP_N1 CO_OP_N2 CO_OP_N3 CO_OP_N4 CO_OP_N5 CO_OP_N6 CO_OP_N7
//Description: Previous 2nd-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Collision Loss claims
ClaimsAuto: => H_NumOpenCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCOIn7thYr,C_CAP_992));



//CO6mon_OT_A CO12mon_OT_A CO18mon_OT_A CO24mon_OT_A CO30mon_OT_A CO36mon_OT_A CO42mon_OT_A CO48mon_OT_A CO54mon_OT_A CO60mon_OT_A
//Description: Other CO claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherCOAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin6M,C_CAP_9999999992));

//Description: Other CO claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherCOAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin12M,C_CAP_9999999992));

//Description: Other CO claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherCOAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year number of other CO claims
ClaimsAuto: => H_TotalOtherCOAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin24M,C_CAP_9999999992));

//Description: Other CO claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherCOAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other CO claim amount
ClaimsAuto: => H_TotalOtherCOAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin36M,C_CAP_9999999992));

//Description: Other CO claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherCOAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other CO claim amount
ClaimsAuto: => H_TotalOtherCOAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin48M,C_CAP_9999999992));

//Description: Other CO claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherCOAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other CO claim amount
ClaimsAuto: => H_TotalOtherCOAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin60M,C_CAP_9999999992));


//CO_OT_A1 CO_OT_A2 CO_OT_A3 CO_OT_A4 CO_OT_A5 CO_OT_A6 CO_OT_A7 CO_OT_AMT
//Description: Previous 2nd-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Collision Loss claim amount
ClaimsAuto: => H_TotalOtherCOAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtIn7thYr,C_CAP_9999999992));



//Description: Past 7-year other CO claim amount
ClaimsAuto: => H_TotalOtherCOAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin7Yr,C_CAP_9999999992));

//cum6_CO_OT_AMT
//Description: Past 6-year other CO claim amount
ClaimsAuto: => H_TotalOtherCOAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherCOClaimAmount >=0), G_TotalOtherCOClaimAmount);
ClaimsAuto: => I_TotOtherCOAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCOAmtWithin6Yr,C_CAP_9999999992));


//CO6mon_OT_N CO12mon_OT_N CO18mon_OT_N CO24mon_OT_N CO30mon_OT_N CO36mon_OT_N CO42mon_OT_N CO48mon_OT_N CO54mon_OT_N CO60mon_OT_N
//Description: # of Other CO claims in the past 6 months
ClaimsAuto: => H_NumOtherCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin6M,C_CAP_992));

//Description: # of Other CO claims in the past 12 months
ClaimsAuto: => H_NumOtherCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin12M,C_CAP_992));

//Description: # of Other CO claims in the past 18 months
ClaimsAuto: => H_NumOtherCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin18M,C_CAP_992));

//Description: # of Other CO claims in the past 24 months
ClaimsAuto: => H_NumOtherCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin24M,C_CAP_992));

//Description: # of Other CO claims in the past 30 months
ClaimsAuto: => H_NumOtherCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin30M,C_CAP_992));

//Description: # of Other CO claims in the past 36 months
ClaimsAuto: => H_NumOtherCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin36M,C_CAP_992));

//Description: # of Other CO claims in the past 42 months
ClaimsAuto: => H_NumOtherCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin42M,C_CAP_992));

//Description: # of Other CO claims in the past 48 months
ClaimsAuto: => H_NumOtherCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin48M,C_CAP_992));

//Description: # of Other CO claims in the past 54 months
ClaimsAuto: => H_NumOtherCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin54M,C_CAP_992));

//Description: # of Other CO claims in the past 60 months
ClaimsAuto: => H_NumOtherCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOWithin60M,C_CAP_992));



//CO_OT_N1 CO_OT_N2 CO_OT_N3 CO_OT_N4 CO_OT_N5 CO_OT_N6 CO_OT_N7
//Description: Previous 2nd-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Collision Loss claims
ClaimsAuto: => H_NumOtherCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCOIn7thYr,C_CAP_992));



//CO6mon_ZR_N CO12mon_ZR_N CO18mon_ZR_N CO24mon_ZR_N CO30mon_ZR_N CO36mon_ZR_N CO42mon_ZR_N CO48mon_ZR_N CO54mon_ZR_N CO60mon_ZR_N
//Description: # of Zero-payment CO claims in the past 6 months
ClaimsAuto: => H_NumZeroCOWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroCOWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin6M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 12 months
ClaimsAuto: => H_NumZeroCOWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroCOWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin12M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 18 months
ClaimsAuto: => H_NumZeroCOWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroCOWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin18M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 24 months
ClaimsAuto: => H_NumZeroCOWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroCOWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin24M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 30 months
ClaimsAuto: => H_NumZeroCOWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroCOWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin30M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 36 months
ClaimsAuto: => H_NumZeroCOWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroCOWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin36M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 42 months
ClaimsAuto: => H_NumZeroCOWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroCOWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin42M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 48 months
ClaimsAuto: => H_NumZeroCOWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroCOWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin48M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 54 months
ClaimsAuto: => H_NumZeroCOWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroCOWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin54M,C_CAP_992));

//Description: # of Zero-payment CO claims in the past 60 months
ClaimsAuto: => H_NumZeroCOWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroCOWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOWithin60M,C_CAP_992));



//CO_ZR_N1 CO_ZR_N2 CO_ZR_N3 CO_ZR_N4 CO_ZR_N5 CO_ZR_N6 CO_ZR_N7
//Description: Previous 2nd-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroCOIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroCOIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroCOIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroCOIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroCOIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Collision Loss claims
ClaimsAuto: => H_NumZeroCOIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCOZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroCOIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCOIn7thYr,C_CAP_992));



//CP_6mon_AMT CP_12mon_AMT CP_18mon_AMT CP_24mon_AMT CP_30mon_AMT CP_36mon_AMT CP_42mon_AMT CP_48mon_AMT CP_54mon_AMT CP_60mon_AMT
//Description: Total CP claim amount in the past 6 months
ClaimsAuto: => H_TotalCPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin6M,C_CAP_9999999992));

//Description: Past 1-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin12M,C_CAP_9999999992));

//Description: Total CP claim amount in the past 18 months
ClaimsAuto: => H_TotalCPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin24M,C_CAP_9999999992));

//Description: Total CP claim amount in the past 30 months
ClaimsAuto: => H_TotalCPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin36M,C_CAP_9999999992));

//Description: Total CP claim amount in the past 42 months
ClaimsAuto: => H_TotalCPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin48M,C_CAP_9999999992));

//Description: Total CP claim amount in the past 54 months
ClaimsAuto: => H_TotalCPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin60M,C_CAP_9999999992));

//cum6_CP_AMT
//Description: Past 6-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin6Yr,C_CAP_9999999992));


//CP_AMT CP_AMT1 CP_AMT2 CP_AMT3 CP_AMT4 CP_AMT5 CP_AMT6 CP_AMT7
//Description: Past 7-year CP claim amount
ClaimsAuto: => H_TotalCPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Comprehensive-only claim amount
ClaimsAuto: => H_TotalCPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalCPClaimAmount >=0), G_TotalCPClaimAmount);
ClaimsAuto: => I_TotCPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalCPAmtIn7thYr,C_CAP_9999999992));



//CP_6mon_CNT CP_12mon_CNT CP_18mon_CNT CP_24mon_CNT CP_30mon_CNT CP_36mon_CNT CP_42mon_CNT CP_48mon_CNT CP_54mon_CNT CP_60mon_CNT
//Description: # of CP claims in the past 6 months
ClaimsAuto: => H_NumCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin6M,C_CAP_992));

//Description: Past 1-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin12M,C_CAP_992));

//Description: # of CP claims in the past 18 months
ClaimsAuto: => H_NumCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin18M,C_CAP_992));

//Description: Past 2-year number of CP claims
ClaimsAuto: => H_NumCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin24M,C_CAP_992));

//Description: # of CP claims in the past 30 months
ClaimsAuto: => H_NumCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin30M,C_CAP_992));

//Description: Past 3-year number of CP claims
ClaimsAuto: => H_NumCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin36M,C_CAP_992));

//Description: # of CP claims in the past 42 months
ClaimsAuto: => H_NumCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin42M,C_CAP_992));

//Description: Past 4-year number of CP claims
ClaimsAuto: => H_NumCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin48M,C_CAP_992));

//Description: # of CP claims in the past 54 months
ClaimsAuto: => H_NumCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin54M,C_CAP_992));

//Description: Past 5-year number of CP claims
ClaimsAuto: => H_NumCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin60M,C_CAP_992));

//cum6_CP_CNT
//Description: Past 6-year number of CP claims
ClaimsAuto: => H_NumCPWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntCPWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin6Yr,C_CAP_992));

//CP_CNT CP_CNT1 CP_CNT2 CP_CNT3 CP_CNT4 CP_CNT5 CP_CNT6 CP_CNT7
//Description: Past 7-year number of CP claims
ClaimsAuto: => H_NumCPWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntCPWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn4thYr,C_CAP_992));


//Description: Previous 5th-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn5thYr,C_CAP_992));


//Description: Previous 6th-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year total # of Comprehensive-only claims
ClaimsAuto: => H_NumCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumCPIn7thYr,C_CAP_992));



//CP_6mon_NZCNT CP_12mon_NZCNT CP_18mon_NZCNT CP_24mon_NZCNT CP_30mon_NZCNT CP_36mon_NZCNT CP_42mon_NZCNT CP_48mon_NZCNT CP_54mon_NZCNT CP_60mon_NZCNT
//Description: # of above-zero-payment CP claims in the past 6 months
ClaimsAuto: => H_NumNZCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin6M,C_CAP_992));

//Description: # of above-zero-payment CP claims in the past 12 months
ClaimsAuto: => H_NumNZCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin12M,C_CAP_992));

//Description: # of above-zero-payment CP claims in the past 18 months
ClaimsAuto: => H_NumNZCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin18M,C_CAP_992));

//Description: Number of above-zero-payment CP claims in the past 2 years
ClaimsAuto: => H_NumNZCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin24M,C_CAP_992));

//Description: # of above-zero-payment CP claims in the past 30 months
ClaimsAuto: => H_NumNZCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin30M,C_CAP_992));

//Description: Number of above-zero-payment CP claims in the past 3 years
ClaimsAuto: => H_NumNZCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin36M,C_CAP_992));

//Description: # of above-zero-payment CP claims in the past 42 months
ClaimsAuto: => H_NumNZCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin42M,C_CAP_992));

//Description: Number of above-zero-payment CP claims in the past 4 years
ClaimsAuto: => H_NumNZCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin48M,C_CAP_992));

//Description: # of above-zero-payment CP claims in the past 54 months
ClaimsAuto: => H_NumNZCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin54M,C_CAP_992));

//Description: Number of above-zero-payment CP claims in the past 5 years
ClaimsAuto: => H_NumNZCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin60M,C_CAP_992));

//cum6_CP_NZCNT
//Description: Number of above-zero-payment CP claims in the past 6 years
ClaimsAuto: => H_NumNZCPWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZCPWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin6Yr,C_CAP_992));

//CP_NZCNT CP_NZCNT1 CP_NZCNT2 CP_NZCNT3 CP_NZCNT4 CP_NZCNT5 CP_NZCNT6 CP_NZCNT7
//Description: Number of above-zero-payment CP claims in the past 7 years
ClaimsAuto: => H_NumNZCPWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZCPWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Comprehensive above-zero-payment claims
ClaimsAuto: => H_NumNZCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZCPIn7thYr,C_CAP_992));



//CP6mon_CL_A CP12mon_CL_A CP18mon_CL_A CP24mon_CL_A CP30mon_CL_A CP36mon_CL_A CP42mon_CL_A CP48mon_CL_A CP54mon_CL_A CP60mon_CL_A
//Description: Closed CP claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedCPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin6M,C_CAP_9999999992));

//Description: Closed CP claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedCPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin12M,C_CAP_9999999992));

//Description: Closed CP claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedCPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin24M,C_CAP_9999999992));

//Description: Closed CP claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedCPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin30M,C_CAP_9999999992));


//Description: Past 3-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin36M,C_CAP_9999999992));

//Description: Closed CP claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedCPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin48M,C_CAP_9999999992));

//Description: Closed CP claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedCPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin60M,C_CAP_9999999992));

//cum6_CP_CL_AMT
//Description: Past 6-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed CP claim amount
ClaimsAuto: => H_TotalClosedCPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtWithin7Yr,C_CAP_9999999992));



//CP_CL_A1 CP_CL_A2 CP_CL_A3 CP_CL_A4 CP_CL_A5 CP_CL_A6 CP_CL_A7 CP_CL_AMT
//Description: Past 2-year other CO claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Comprehensive claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Comprehensive claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Comprehensive claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Comprehensive claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Comprehensive claim amount
ClaimsAuto: => H_TotalClosedCPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedCPClaimAmount >=0), G_TotalClosedCPClaimAmount);
ClaimsAuto: => I_TotClosedCPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedCPAmtIn7thYr,C_CAP_9999999992));



//CP6mon_CL_N CP12mon_CL_N CP18mon_CL_N CP24mon_CL_N CP30mon_CL_N CP36mon_CL_N CP42mon_CL_N CP48mon_CL_N CP54mon_CL_N CP60mon_CL_N
//Description: # of Closed CP claims in the past 6 months
ClaimsAuto: => H_NumClosedCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin6M,C_CAP_992));

//Description: # of Closed CP claims in the past 12 months
ClaimsAuto: => H_NumClosedCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin12M,C_CAP_992));

//Description: # of Closed CP claims in the past 18 months
ClaimsAuto: => H_NumClosedCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin18M,C_CAP_992));

//Description: # of Closed CP claims in the past 24 months
ClaimsAuto: => H_NumClosedCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin24M,C_CAP_992));

//Description: # of Closed CP claims in the past 30 months
ClaimsAuto: => H_NumClosedCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin30M,C_CAP_992));

//Description: # of Closed CP claims in the past 36 months
ClaimsAuto: => H_NumClosedCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin36M,C_CAP_992));

//Description: # of Closed CP claims in the past 42 months
ClaimsAuto: => H_NumClosedCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin42M,C_CAP_992));

//Description: # of Closed CP claims in the past 48 months
ClaimsAuto: => H_NumClosedCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin48M,C_CAP_992));

//Description: # of Closed CP claims in the past 54 months
ClaimsAuto: => H_NumClosedCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin54M,C_CAP_992));

//Description: # of Closed CP claims in the past 60 months
ClaimsAuto: => H_NumClosedCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPWithin60M,C_CAP_992));



//CP_CL_N1 CP_CL_N2 CP_CL_N3 CP_CL_N4 CP_CL_N5 CP_CL_N6 CP_CL_N7
//Description: Previous 2nd-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Comprehensive  claims
ClaimsAuto: => H_NumClosedCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedCPIn7thYr,C_CAP_992));


//CP6mon_OP_A CP12mon_OP_A CP18mon_OP_A CP24mon_OP_A CP30mon_OP_A CP36mon_OP_A CP42mon_OP_A CP48mon_OP_A CP54mon_OP_A CP60mon_OP_A
//Description: Open CP claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenCPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin6M,C_CAP_9999999992));

//Description: Open CP claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenCPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin12M,C_CAP_9999999992));

//Description: Open CP claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenCPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin24M,C_CAP_9999999992));

//Description: Open CP claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenCPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin36M,C_CAP_9999999992));

//Description: Open CP claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenCPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin48M,C_CAP_9999999992));

//Description: Open CP claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenCPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin60M,C_CAP_9999999992));

//cum6_CP_OP_AMT
//Description: Past 6-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open CP claim amount
ClaimsAuto: => H_TotalOpenCPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtWithin7Yr,C_CAP_9999999992));


//CP_OP_A1 CP_OP_A2 CP_OP_A3 CP_OP_A4 CP_OP_A5 CP_OP_A6 CP_OP_A7 CP_OP_AMT
//Description: Previous 2nd-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Comprehensive claim amount
ClaimsAuto: => H_TotalOpenCPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenCPClaimAmount >=0), G_TotalOpenCPClaimAmount);
ClaimsAuto: => I_TotOpenCPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenCPAmtIn7thYr,C_CAP_9999999992));


//CP6mon_OP_N CP12mon_OP_N CP18mon_OP_N CP24mon_OP_N CP30mon_OP_N CP36mon_OP_N CP36mon_OP_N CP42mon_OP_N CP48mon_OP_N CP54mon_OP_N CP60mon_OP_N
//Description: # of Open CP claims in the past 6 months
ClaimsAuto: => H_NumOpenCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin6M,C_CAP_992));

//Description: # of Open CP claims in the past 12 months
ClaimsAuto: => H_NumOpenCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin12M,C_CAP_992));

//Description: # of Open CP claims in the past 18 months
ClaimsAuto: => H_NumOpenCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin18M,C_CAP_992));

//Description: # of Open CP claims in the past 24 months
ClaimsAuto: => H_NumOpenCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin24M,C_CAP_992));

//Description: # of Open CP claims in the past 30 months
ClaimsAuto: => H_NumOpenCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin30M,C_CAP_992));

//Description: # of Open CP claims in the past 36 months
ClaimsAuto: => H_NumOpenCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin36M,C_CAP_992));

//Description: # of Open CP claims in the past 42 months
ClaimsAuto: => H_NumOpenCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin42M,C_CAP_992));

//Description: # of Open CP claims in the past 48 months
ClaimsAuto: => H_NumOpenCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin48M,C_CAP_992));

//Description: # of Open CP claims in the past 54 months
ClaimsAuto: => H_NumOpenCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin54M,C_CAP_992));

//Description: # of Open CP claims in the past 60 months
ClaimsAuto: => H_NumOpenCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPWithin60M,C_CAP_992));



//CP_OP_N1 CP_OP_N2 CP_OP_N3 CP_OP_N4 CP_OP_N5 CP_OP_N6 CP_OP_N7
//Description: Previous 2nd-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Comprehensive claims
ClaimsAuto: => H_NumOpenCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenCPIn7thYr,C_CAP_992));



//CP6mon_OT_A CP12mon_OT_A CP18mon_OT_A CP24mon_OT_A CP30mon_OT_A CP36mon_OT_A CP42mon_OT_A CP48mon_OT_A CP54mon_OT_A CP60mon_OT_A
//Description: Other CP claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherCPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin6M,C_CAP_9999999992));

//Description: Other CP claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherCPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin12M,C_CAP_9999999992));


//Description: Other CP claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherCPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin18M,C_CAP_9999999992));


//Description: Past 2-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin24M,C_CAP_9999999992));

//Description: Other CP claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherCPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin30M,C_CAP_9999999992));


//Description: Past 3-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin36M,C_CAP_9999999992));

//Description: Other CP claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherCPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin42M,C_CAP_9999999992));


//Description: Past 4-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin48M,C_CAP_9999999992));

//Description: Other CP claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherCPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin60M,C_CAP_9999999992));

//cum6_CP_OT_AMT
//Description: Past 6-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other CP claim amount
ClaimsAuto: => H_TotalOtherCPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtWithin7Yr,C_CAP_9999999992));


//CP_OT_A1 CP_OT_A2 CP_OT_A3 CP_OT_A4 CP_OT_A5 CP_OT_A6 CP_OT_A7 CP_OT_AMT
//Description: Previous 2nd-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Comprehensive claim amount
ClaimsAuto: => H_TotalOtherCPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherCPClaimAmount >=0), G_TotalOtherCPClaimAmount);
ClaimsAuto: => I_TotOtherCPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherCPAmtIn7thYr,C_CAP_9999999992));



//CP6mon_OT_N CP12mon_OT_N CP18mon_OT_N CP24mon_OT_N CP30mon_OT_N CP36mon_OT_N CP42mon_OT_N CP48mon_OT_N CP54mon_OT_N CP60mon_OT_N
//Description: # of Other CP claims in the past 6 months
ClaimsAuto: => H_NumOtherCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin6M,C_CAP_992));

//Description: # of Other CP claims in the past 12 months
ClaimsAuto: => H_NumOtherCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin12M,C_CAP_992));

//Description: # of Other CP claims in the past 18 months
ClaimsAuto: => H_NumOtherCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin18M,C_CAP_992));

//Description: # of Other CP claims in the past 24 months
ClaimsAuto: => H_NumOtherCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin24M,C_CAP_992));

//Description: # of Other CP claims in the past 30 months
ClaimsAuto: => H_NumOtherCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin30M,C_CAP_992));

//Description: # of Other CP claims in the past 36 months
ClaimsAuto: => H_NumOtherCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin36M,C_CAP_992));

//Description: # of Other CP claims in the past 42 months
ClaimsAuto: => H_NumOtherCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin42M,C_CAP_992));

//Description: # of Other CP claims in the past 48 months
ClaimsAuto: => H_NumOtherCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin48M,C_CAP_992));

//Description: # of Other CP claims in the past 54 months
ClaimsAuto: => H_NumOtherCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin54M,C_CAP_992));

//Description: # of Other CP claims in the past 60 months
ClaimsAuto: => H_NumOtherCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPWithin60M,C_CAP_992));



//CP_OT_N1 CP_OT_N2 CP_OT_N3 CP_OT_N4 CP_OT_N5 CP_OT_N6 CP_OT_N7
//Description: Previous 2nd-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Comprehensive claims
ClaimsAuto: => H_NumOtherCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherCPIn7thYr,C_CAP_992));



//CP6mon_ZR_N CP12mon_ZR_N CP18mon_ZR_N CP24mon_ZR_N CP30mon_ZR_N CP36mon_ZR_N CP42mon_ZR_N CP48mon_ZR_N CP54mon_ZR_N CP60mon_ZR_N
//Description: # of Zero-payment CP claims in the past 6 months
ClaimsAuto: => H_NumZeroCPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroCPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin6M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 12 months
ClaimsAuto: => H_NumZeroCPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroCPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin12M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 18 months
ClaimsAuto: => H_NumZeroCPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroCPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin18M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 24 months
ClaimsAuto: => H_NumZeroCPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroCPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin24M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 30 months
ClaimsAuto: => H_NumZeroCPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroCPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin30M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 36 months
ClaimsAuto: => H_NumZeroCPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroCPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin36M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 42 months
ClaimsAuto: => H_NumZeroCPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroCPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin42M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 48 months
ClaimsAuto: => H_NumZeroCPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroCPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin48M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 54 months
ClaimsAuto: => H_NumZeroCPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroCPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin54M,C_CAP_992));

//Description: # of Zero-payment CP claims in the past 60 months
ClaimsAuto: => H_NumZeroCPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroCPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPWithin60M,C_CAP_992));


//CP_ZR_N1 CP_ZR_N2 CP_ZR_N3 CP_ZR_N4 CP_ZR_N5 CP_ZR_N6 CP_ZR_N7
//Description: Previous 2nd-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroCPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroCPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroCPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroCPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroCPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Comprehensive claims
ClaimsAuto: => H_NumZeroCPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroCPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroCPIn7thYr,C_CAP_992));



//YR1GE2KCNT YR2GE2KCNT YR3GE2KCNT YR4GE2KCNT YR5GE2KCNT YR6GE2KCNT YR7GE2KCNT
//Description: Past 1-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE2000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE2000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE2000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE2000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE2000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE2000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $2000)
ClaimsAuto: => H_NumClaimGE2000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE2000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE2000In7thYr,C_CAP_992));



//YR1GE1KCNT YR2GE1KCNT YR3GE1KCNT YR4GE1KCNT YR5GE1KCNT YR6GE1KCNT YR7GE1KCNT
//Description: Past 1-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE1000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE1000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE1000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE1000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE1000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE1000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $1000)
ClaimsAuto: => H_NumClaimGE1000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE1000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE1000In7thYr,C_CAP_992));


//YR1GE750CNT YR2GE750CNT YR3GE750CNT YR4GE750CNT YR5GE750CNT YR6GE750CNT YR7GE750CNT
//Description: Past 1-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE750In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE750In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE750In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE750In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE750In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE750In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $750)
ClaimsAuto: => H_NumClaimGE750In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE750In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE750In7thYr,C_CAP_992));


//YR1GE500CNT YR2GE500CNT YR3GE500CNT YR4GE500CNT YR5GE500CNT YR6GE500CNT YR7GE500CNT
//Description: Past 1-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE500In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE500In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE500In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE500In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE500In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE500In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $500)
ClaimsAuto: => H_NumClaimGE500In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE500In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE500In7thYr,C_CAP_992));



//GL_6mon_AMT GL_12mon_AMT GL_18mon_AMT GL_24mon_AMT GL_30mon_AMT GL_36mon_AMT GL_42mon_AMT GL_48mon_AMT GL_54mon_AMT GL_60mon_AMT
//Description: Total GL claim amount in the past 6 months
ClaimsAuto: => H_TotalGLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin6M,C_CAP_9999999992));

//Description: Total GL claim amount in the past 12 months
ClaimsAuto: => H_TotalGLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin12M,C_CAP_9999999992));

//Description: Total GL claim amount in the past 18 months
ClaimsAuto: => H_TotalGLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin24M,C_CAP_9999999992));

//Description: Total GL claim amount in the past 30 months
ClaimsAuto: => H_TotalGLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin36M,C_CAP_9999999992));

//Description: Total GL claim amount in the past 42 months
ClaimsAuto: => H_TotalGLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin48M,C_CAP_9999999992));

//Description: Total GL claim amount in the past 54 months
ClaimsAuto: => H_TotalGLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin60M,C_CAP_9999999992));

//cum6_GL_AMT
//Description: Past 6-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin6Yr,C_CAP_9999999992));

//GL_AMT GL_AMT1 GL_AMT2 GL_AMT3 GL_AMT4 GL_AMT5 GL_AMT6 GL_AMT7
//Description: Past 7-year GL claim amount
ClaimsAuto: => H_TotalGLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Glass claim amount
ClaimsAuto: => H_TotalGLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalGLClaimAmount >=0), G_TotalGLClaimAmount);
ClaimsAuto: => I_TotGLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGLAmtIn7thYr,C_CAP_9999999992));



//GL_6mon_CNT GL_12mon_CNT GL_18mon_CNT GL_24mon_CNT GL_30mon_CNT GL_36mon_CNT GL_42mon_CNT GL_48mon_CNT GL_54mon_CNT GL_60mon_CNT
//Description: # of GL claims in the past 6 months
ClaimsAuto: => H_NumGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin6M,C_CAP_992));

//Description: # of GL claims in the past 12 months
ClaimsAuto: => H_NumGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin12M,C_CAP_992));

//Description: # of GL claims in the past 18 months
ClaimsAuto: => H_NumGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin18M,C_CAP_992));

//Description: Past 2-year number of GL claims
ClaimsAuto: => H_NumGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin24M,C_CAP_992));

//Description: # of GL claims in the past 30 months
ClaimsAuto: => H_NumGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin30M,C_CAP_992));

//Description: Past 3-year number of GL claims
ClaimsAuto: => H_NumGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin36M,C_CAP_992));

//Description: # of GL claims in the past 42 months
ClaimsAuto: => H_NumGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin42M,C_CAP_992));

//Description: Past 4-year number of GL claims
ClaimsAuto: => H_NumGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin48M,C_CAP_992));

//Description: # of GL claims in the past 54 months
ClaimsAuto: => H_NumGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin54M,C_CAP_992));

//Description: Past 5-year number of GL claims
ClaimsAuto: => H_NumGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin60M,C_CAP_992));

//cum6_GL_CNT
//Description: Past 6-year number of GL claims
ClaimsAuto: => H_NumGLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin6Yr,C_CAP_992));

//GL_CNT GL_CNT1 GL_CNT2 GL_CNT3 GL_CNT4 GL_CNT5 GL_CNT6 GL_CNT7
//Description: Past 7-year number of GL claims
ClaimsAuto: => H_NumGLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Glass claims
ClaimsAuto: => H_NumGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Glass claims
ClaimsAuto: => H_NumGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Glass claims
ClaimsAuto: => H_NumGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Glass claims
ClaimsAuto: => H_NumGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Glass claims
ClaimsAuto: => H_NumGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Glass claims
ClaimsAuto: => H_NumGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGLIn7thYr,C_CAP_992));




//GL_6mon_NZCNT GL_12mon_NZCNT GL_18mon_NZCNT GL_24mon_NZCNT GL_30mon_NZCNT GL_36mon_NZCNT GL_42mon_NZCNT GL_48mon_NZCNT GL_54mon_NZCNT GL_60mon_NZCNT
//Description: # of above-zero-payment GL claims in the past 6 months
ClaimsAuto: => H_NumNZGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin6M,C_CAP_992));

//Description: # of above-zero-payment GL claims in the past 12 months
ClaimsAuto: => H_NumNZGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin12M,C_CAP_992));

//Description: # of above-zero-payment GL claims in the past 18 months
ClaimsAuto: => H_NumNZGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin18M,C_CAP_992));

//Description: Number of above-zero-payment GL claims in the past 2 years
ClaimsAuto: => H_NumNZGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin24M,C_CAP_992));

//Description: # of above-zero-payment GL claims in the past 30 months
ClaimsAuto: => H_NumNZGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin30M,C_CAP_992));

//Description: Number of above-zero-payment GL claims in the past 3 years
ClaimsAuto: => H_NumNZGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin36M,C_CAP_992));

//Description: # of above-zero-payment GL claims in the past 42 months
ClaimsAuto: => H_NumNZGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin42M,C_CAP_992));

//Description: Number of above-zero-payment GL claims in the past 4 years
ClaimsAuto: => H_NumNZGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin48M,C_CAP_992));

//Description: # of above-zero-payment GL claims in the past 54 months
ClaimsAuto: => H_NumNZGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin54M,C_CAP_992));

//Description: Number of above-zero-payment GL claims in the past 5 years
ClaimsAuto: => H_NumNZGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin60M,C_CAP_992));

//cum6_GL_NZCNT
//Description: Number of above-zero-payment GL claims in the past 6 years
ClaimsAuto: => H_NumNZGLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZGLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin6Yr,C_CAP_992));

//GL_NZCNT GL_NZCNT1 GL_NZCNT2 GL_NZCNT3 GL_NZCNT4 GL_NZCNT5 GL_NZCNT6 GL_NZCNT7
//Description: Number of above-zero-payment GL claims in the past 7 years
ClaimsAuto: => H_NumNZGLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZGLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Glass above-zero-payment claims
ClaimsAuto: => H_NumNZGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZGLIn7thYr,C_CAP_992));



//GL6mon_CL_A GL12mon_CL_A GL18mon_CL_A GL24mon_CL_A GL30mon_CL_A GL36mon_CL_A GL42mon_CL_A GL48mon_CL_A GL54mon_CL_A GL60mon_CL_A

//Description: Closed GL claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedGLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin6M,C_CAP_9999999992));

//Description: Closed GL claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedGLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin12M,C_CAP_9999999992));

//Description: Closed GL claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedGLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin24M,C_CAP_9999999992));

//Description: Closed GL claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedGLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin36M,C_CAP_9999999992));

//Description: Closed GL claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedGLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin48M,C_CAP_9999999992));

//Description: Closed GL claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedGLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin60M,C_CAP_9999999992));

//cum6_GL_CL_AMT
//Description: Past 6-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed GL claim amount
ClaimsAuto: => H_TotalClosedGLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtWithin7Yr,C_CAP_9999999992));



//GL_CL_A1 GL_CL_A2 GL_CL_A3 GL_CL_A4 GL_CL_A5 GL_CL_A6 GL_CL_A7 GL_CL_AMT
//Description: Previous 2nd-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Glass claim amount
ClaimsAuto: => H_TotalClosedGLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedGLClaimAmount >=0), G_TotalClosedGLClaimAmount);
ClaimsAuto: => I_TotClosedGLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedGLAmtIn7thYr,C_CAP_9999999992));




//GL6mon_CL_N GL12mon_CL_N GL18mon_CL_N GL24mon_CL_N GL30mon_CL_N GL36mon_CL_N GL42mon_CL_N GL48mon_CL_N GL54mon_CL_N GL60mon_CL_N
//Description: # of Closed GL claims in the past 6 months
ClaimsAuto: => H_NumClosedGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin6M,C_CAP_992));

//Description: # of Closed GL claims in the past 12 months
ClaimsAuto: => H_NumClosedGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin12M,C_CAP_992));

//Description: # of Closed GL claims in the past 18 months
ClaimsAuto: => H_NumClosedGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin18M,C_CAP_992));

//Description: # of Closed GL claims in the past 24 months
ClaimsAuto: => H_NumClosedGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin24M,C_CAP_992));

//Description: # of Closed GL claims in the past 30 months
ClaimsAuto: => H_NumClosedGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin30M,C_CAP_992));

//Description: # of Closed GL claims in the past 36 months
ClaimsAuto: => H_NumClosedGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin36M,C_CAP_992));

//Description: # of Closed GL claims in the past 42 months
ClaimsAuto: => H_NumClosedGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin42M,C_CAP_992));

//Description: # of Closed GL claims in the past 48 months
ClaimsAuto: => H_NumClosedGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin48M,C_CAP_992));

//Description: # of Closed GL claims in the past 54 months
ClaimsAuto: => H_NumClosedGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin54M,C_CAP_992));

//Description: # of Closed GL claims in the past 60 months
ClaimsAuto: => H_NumClosedGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLWithin60M,C_CAP_992));



//GL_CL_N1 GL_CL_N2 GL_CL_N3 GL_CL_N4 GL_CL_N5 GL_CL_N6 GL_CL_N7
//Description: Previous 2nd-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Glass claims
ClaimsAuto: => H_NumClosedGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedGLIn7thYr,C_CAP_992));



//GL6mon_OP_A GL12mon_OP_A GL18mon_OP_A GL24mon_OP_A GL30mon_OP_A GL36mon_OP_A GL42mon_OP_A GL48mon_OP_A GL54mon_OP_A GL60mon_OP_A
//Description: Open GL claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenGLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin6M,C_CAP_9999999992));

//Description: Open GL claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenGLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin12M,C_CAP_9999999992));

//Description: Open GL claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenGLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin24M,C_CAP_9999999992));

//Description: Open GL claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenGLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin36M,C_CAP_9999999992));

//Description: Open GL claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenGLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin48M,C_CAP_9999999992));

//Description: Open GL claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenGLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin60M,C_CAP_9999999992));

//cum6_GL_OP_AMT
//Description: Past 6-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open GL claim amount
ClaimsAuto: => H_TotalOpenGLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtWithin7Yr,C_CAP_9999999992));



//GL_OP_A1 GL_OP_A2 GL_OP_A3 GL_OP_A4 GL_OP_A5 GL_OP_A6 GL_OP_A7 GL_OP_AMT
//Description: Previous 2nd-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Glass claim amount
ClaimsAuto: => H_TotalOpenGLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenGLClaimAmount >=0), G_TotalOpenGLClaimAmount);
ClaimsAuto: => I_TotOpenGLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenGLAmtIn7thYr,C_CAP_9999999992));




//GL6mon_OP_N GL12mon_OP_N GL18mon_OP_N GL24mon_OP_N GL30mon_OP_N GL36mon_OP_N GL36mon_OP_N GL42mon_OP_N GL48mon_OP_N GL54mon_OP_N GL60mon_OP_N
//Description: # of Open GL claims in the past 6 months
ClaimsAuto: => H_NumOpenGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin6M,C_CAP_992));

//Description: # of Open GL claims in the past 12 months
ClaimsAuto: => H_NumOpenGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin12M,C_CAP_992));

//Description: # of Open GL claims in the past 18 months
ClaimsAuto: => H_NumOpenGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin18M,C_CAP_992));

//Description: # of Open GL claims in the past 24 months
ClaimsAuto: => H_NumOpenGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin24M,C_CAP_992));

//Description: # of Open GL claims in the past 30 months
ClaimsAuto: => H_NumOpenGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin30M,C_CAP_992));

//Description: # of Open GL claims in the past 36 months
ClaimsAuto: => H_NumOpenGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin36M,C_CAP_992));

//Description: # of Open GL claims in the past 42 months
ClaimsAuto: => H_NumOpenGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin42M,C_CAP_992));

//Description: # of Open GL claims in the past 48 months
ClaimsAuto: => H_NumOpenGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin48M,C_CAP_992));

//Description: # of Open GL claims in the past 54 months
ClaimsAuto: => H_NumOpenGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin54M,C_CAP_992));

//Description: # of Open GL claims in the past 60 months
ClaimsAuto: => H_NumOpenGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLWithin60M,C_CAP_992));



//GL_OP_N1 GL_OP_N2 GL_OP_N3 GL_OP_N4 GL_OP_N5 GL_OP_N6 GL_OP_N7
//Description: Previous 2nd-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Glass claims
ClaimsAuto: => H_NumOpenGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenGLIn7thYr,C_CAP_992));



//GL6mon_OT_A GL12mon_OT_A GL18mon_OT_A GL24mon_OT_A GL30mon_OT_A GL36mon_OT_A GL42mon_OT_A GL48mon_OT_A GL54mon_OT_A GL60mon_OT_A
//Description: Other GL claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherGLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin6M,C_CAP_9999999992));

//Description: Other GL claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherGLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin12M,C_CAP_9999999992));

//Description: Other GL claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherGLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin24M,C_CAP_9999999992));

//Description: Other GL claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherGLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin36M,C_CAP_9999999992));

//Description: Other GL claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherGLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin48M,C_CAP_9999999992));

//Description: Other GL claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherGLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin60M,C_CAP_9999999992));

//cum6_GL_OT_AMT
//Description: Past 6-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other GL claim amount
ClaimsAuto: => H_TotalOtherGLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtWithin7Yr,C_CAP_9999999992));



//GL_OT_A1 GL_OT_A2 GL_OT_A3 GL_OT_A4 GL_OT_A5 GL_OT_A6 GL_OT_A7 GL_OT_AMT
//Description: Previous 2nd-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Glass claim amount
ClaimsAuto: => H_TotalOtherGLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherGLClaimAmount >=0), G_TotalOtherGLClaimAmount);
ClaimsAuto: => I_TotOtherGLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherGLAmtIn7thYr,C_CAP_9999999992));



//GL6mon_OT_N GL12mon_OT_N GL18mon_OT_N GL24mon_OT_N GL30mon_OT_N GL36mon_OT_N GL42mon_OT_N GL48mon_OT_N GL54mon_OT_N GL60mon_OT_N
//Description: # of Other GL claims in the past 6 months
ClaimsAuto: => H_NumOtherGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin6M,C_CAP_992));

//Description: # of Other GL claims in the past 12 months
ClaimsAuto: => H_NumOtherGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin12M,C_CAP_992));

//Description: # of Other GL claims in the past 18 months
ClaimsAuto: => H_NumOtherGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin18M,C_CAP_992));

//Description: # of Other GL claims in the past 24 months
ClaimsAuto: => H_NumOtherGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin24M,C_CAP_992));

//Description: # of Other GL claims in the past 30 months
ClaimsAuto: => H_NumOtherGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin30M,C_CAP_992));

//Description: # of Other GL claims in the past 36 months
ClaimsAuto: => H_NumOtherGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin36M,C_CAP_992));

//Description: # of Other GL claims in the past 42 months
ClaimsAuto: => H_NumOtherGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin42M,C_CAP_992));

//Description: # of Other GL claims in the past 48 months
ClaimsAuto: => H_NumOtherGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin48M,C_CAP_992));

//Description: # of Other GL claims in the past 54 months
ClaimsAuto: => H_NumOtherGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin54M,C_CAP_992));

//Description: # of Other GL claims in the past 60 months
ClaimsAuto: => H_NumOtherGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLWithin60M,C_CAP_992));



//GL_OT_N1 GL_OT_N2 GL_OT_N3 GL_OT_N4 GL_OT_N5 GL_OT_N6 GL_OT_N7
//Description: Previous 2nd-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Glass claims
ClaimsAuto: => H_NumOtherGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherGLIn7thYr,C_CAP_992));



//GL6mon_ZR_N GL12mon_ZR_N GL18mon_ZR_N GL24mon_ZR_N GL30mon_ZR_N GL36mon_ZR_N GL42mon_ZR_N GL48mon_ZR_N GL54mon_ZR_N GL60mon_ZR_N
//Description: # of Zero-payment GL claims in the past 6 months
ClaimsAuto: => H_NumZeroGLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroGLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin6M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 12 months
ClaimsAuto: => H_NumZeroGLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroGLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin12M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 18 months
ClaimsAuto: => H_NumZeroGLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroGLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin18M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 24 months
ClaimsAuto: => H_NumZeroGLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroGLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin24M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 30 months
ClaimsAuto: => H_NumZeroGLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroGLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin30M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 36 months
ClaimsAuto: => H_NumZeroGLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroGLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin36M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 42 months
ClaimsAuto: => H_NumZeroGLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroGLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin42M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 48 months
ClaimsAuto: => H_NumZeroGLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroGLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin48M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 54 months
ClaimsAuto: => H_NumZeroGLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroGLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin54M,C_CAP_992));

//Description: # of Zero-payment GL claims in the past 60 months
ClaimsAuto: => H_NumZeroGLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroGLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLWithin60M,C_CAP_992));



//GL_ZR_N1 GL_ZR_N2 GL_ZR_N3 GL_ZR_N4 GL_ZR_N5 GL_ZR_N6 GL_ZR_N7
//Description: Previous 2nd-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroGLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroGLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroGLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroGLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroGLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Glass claims
ClaimsAuto: => H_NumZeroGLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroGLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroGLIn7thYr,C_CAP_992));


//HY6mon_AMT HY12mon_AMT HY18mon_AMT HY24mon_AMT HY30mon_AMT HY36mon_AMT HY42mon_AMT HY48mon_AMT HY54mon_AMT HY60mon_AMT
//Description: Paid claim amount in the past 6 months
ClaimsAuto: => H_TotalClaimAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin6M,C_CAP_9999999992));

//Description: The claim amount for the past year (12 months)
ClaimsAuto: => H_TotalClaimAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin12M,C_CAP_9999999992));

//Description: Paid claim amount in the past 18 months
ClaimsAuto: => H_TotalClaimAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin18M,C_CAP_9999999992));

//Description: Paid claim amount in the past 30 months
ClaimsAuto: => H_TotalClaimAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin30M,C_CAP_9999999992));

//Description: Paid claim amount in the past 42 months
ClaimsAuto: => H_TotalClaimAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin42M,C_CAP_9999999992));

//Description: Paid claim amount in the past 54 months
ClaimsAuto: => H_TotalClaimAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClaimAmount >=0), G_TotalClaimAmount);
ClaimsAuto: => I_TotClaimAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClaimAmtWithin54M,C_CAP_9999999992));


//HY6mon_CNT HY12mon_CNT HY18mon_CNT HY24mon_CNT HY30mon_CNT HY36mon_CNT HY42mon_CNT HY48mon_CNT HY54mon_CNT HY60mon_CNT
//Description: # of claims in the past 6 months
ClaimsAuto: => H_NumClaimWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClaimWithin6M := MIN(H_NumClaimWithin6M,C_CAP_992);

//Description: The number of claims for the past year (12 months)
ClaimsAuto: => H_NumClaimWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimWithin12M := MIN(H_NumClaimWithin12M,C_CAP_992);

//Description: # of claims in the past 18 months
ClaimsAuto: => H_NumClaimWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClaimWithin18M := MIN(H_NumClaimWithin18M,C_CAP_992);

//Description: # of claims in the past 30 months
ClaimsAuto: => H_NumClaimWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClaimWithin30M := MIN(H_NumClaimWithin30M,C_CAP_992);

//Description: # of claims in the past 42 months
ClaimsAuto: => H_NumClaimWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClaimWithin42M := MIN(H_NumClaimWithin42M,C_CAP_992);

//Description: # of claims in the past 54 months
ClaimsAuto: => H_NumClaimWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClaimWithin54M := MIN(H_NumClaimWithin54M,C_CAP_992);


//HY6mon_NZCNT HY12mon_NZCNT HY18mon_NZCNT HY24mon_NZCNT HY30mon_NZCNT HY36mon_NZCNT HY42mon_NZCNT HY48mon_NZCNT HY54mon_NZCNT HY60mon_NZCNT
//Description: # of above-zero-payment claims in the past 6 months
ClaimsAuto: => H_NumClaimNZWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin6M,C_CAP_992));

//Description: The number of above-zero-payment claims for the past year (12 months)
ClaimsAuto: => H_NumClaimNZWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin12M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 18 months
ClaimsAuto: => H_NumClaimNZWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin18M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 24 months
ClaimsAuto: => H_NumClaimNZWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin24M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 30 months
ClaimsAuto: => H_NumClaimNZWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin30M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 36 months
ClaimsAuto: => H_NumClaimNZWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin36M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 42 months
ClaimsAuto: => H_NumClaimNZWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin42M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 48 months
ClaimsAuto: => H_NumClaimNZWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin48M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 54 months
ClaimsAuto: => H_NumClaimNZWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin54M,C_CAP_992));

//Description: # of above-zero-payment claims in the past 60 months
ClaimsAuto: => H_NumClaimNZWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin60M,C_CAP_992));

//CUM6_NZCNT CUM7_NZCNT
//Description: # of above-zero-payment claims for the past 6 years
ClaimsAuto: => H_NumClaimNZWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin6Yr,C_CAP_992));

//Description: # of above-zero-payment claims for the past 7 years
ClaimsAuto: => H_NumClaimNZWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClaimAmount >0));
ClaimsAuto: => I_CntClaimNZWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimNZWithin7Yr,C_CAP_992));



//MAJ1GE10K MAJ2GE10K MAJ3GE10K MAJ4GE10K MAJ5GE10K MAJ6GE10K MAJ7GE10K MAJGE10KCNT
//Description: Past 1-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE10000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE10000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE10000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE10000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE10000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE10000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE10000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000In7thYr,C_CAP_992));


//CUM2_MAJGE10K_CNT CUM3_MAJGE10K_CNT CUM4_MAJGE10K_CNT CUM5_MAJGE10K_CNT CUM6_MAJGE10K_CNT CUM7_MAJGE10K_CNT
//Description: Past 2-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE10000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within2Yr,C_CAP_992));

//Description: Past 3-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE10000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within3Yr,C_CAP_992));

//Description: Past 4-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE10000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within4Yr,C_CAP_992));

//Description: Past 5-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE10000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within5Yr,C_CAP_992));

//Description: Past 6-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE10000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within6Yr,C_CAP_992));

//Description: Past 7-year total # of major claims (=> $10000)
ClaimsAuto: => H_NumClaimGE10000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE10000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE10000Within7Yr,C_CAP_992));


//MAJ1GE7K MAJ2GE7K MAJ3GE7K MAJ4GE7K MAJ5GE7K MAJ6GE7K MAJ7GE7K MAJGE7KCNT
//Description: Past 1-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE7000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE7000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE7000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE7000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE7000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE7000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE7000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000In7thYr,C_CAP_992));


//CUM2_MAJGE7K_CNT CUM3_MAJGE7K_CNT CUM4_MAJGE7K_CNT CUM5_MAJGE7K_CNT CUM6_MAJGE7K_CNT CUM7_MAJGE7K_CNT
//Description: Past 2-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE7000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within2Yr,C_CAP_992));

//Description: Past 3-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE7000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within3Yr,C_CAP_992));

//Description: Past 4-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE7000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within4Yr,C_CAP_992));

//Description: Past 5-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE7000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within5Yr,C_CAP_992));

//Description: Past 6-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE7000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within6Yr,C_CAP_992));

//Description: Past 7-year total # of major claims (=> $7000)
ClaimsAuto: => H_NumClaimGE7000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 7000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE7000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE7000Within7Yr,C_CAP_992));


//MAJ1GE5K MAJ2GE5K MAJ3GE5K MAJ4GE5K MAJ5GE5K MAJ6GE5K MAJ7GE5K MAJGE5KCNT
//Description: Past 1-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimGE5000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE5000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE5000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE5000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE5000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE5000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE5000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000In7thYr,C_CAP_992));


//CUM2_MAJGE5K_CNT CUM3_MAJGE5K_CNT CUM4_MAJGE5K_CNT CUM5_MAJGE5K_CNT CUM6_MAJGE5K_CNT CUM7_MAJGE5K_CNT
//Description: Past 2-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimGE5000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within2Yr,C_CAP_992));

//Description: Past 3-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimGE5000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within3Yr,C_CAP_992));

//Description: Past 4-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimGE5000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within4Yr,C_CAP_992));

//Description: Past 5-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimGE5000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within5Yr,C_CAP_992));

//Description: Past 6-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimGE5000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within6Yr,C_CAP_992));

//Description: Past 7-year total # of major claims (=> $5000)
ClaimsAuto: => H_NumClaimGE5000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimGE5000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimGE5000Within7Yr,C_CAP_992));



//ME_6mon_AMT ME_12mon_AMT ME_18mon_AMT ME_24mon_AMT ME_30mon_AMT ME_36mon_AMT ME_42mon_AMT ME_48mon_AMT ME_54mon_AMT ME_60mon_AMT
//Description: Total ME claim amount in the past 6 months
ClaimsAuto: => H_TotalMEAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin6M,C_CAP_9999999992));

//Description: Total ME claim amount in the past 12 months
ClaimsAuto: => H_TotalMEAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin12M,C_CAP_9999999992));

//Description: Total ME claim amount in the past 18 months
ClaimsAuto: => H_TotalMEAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin24M,C_CAP_9999999992));

//Description: Total ME claim amount in the past 30 months
ClaimsAuto: => H_TotalMEAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin36M,C_CAP_9999999992));

//Description: Total ME claim amount in the past 42 months
ClaimsAuto: => H_TotalMEAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin48M,C_CAP_9999999992));

//Description: Total ME claim amount in the past 54 months
ClaimsAuto: => H_TotalMEAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin60M,C_CAP_9999999992));

//cum6_ME_AMT
//Description: Past 6-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin6Yr,C_CAP_9999999992));

//ME_AMT ME_AMT1 ME_AMT2 ME_AMT3 ME_AMT4 ME_AMT5 ME_AMT6 ME_AMT7
//Description: Past 7-year ME claim amount
ClaimsAuto: => H_TotalMEAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Medical Expense claim amount
ClaimsAuto: => H_TotalMEAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMEClaimAmount >=0), G_TotalMEClaimAmount);
ClaimsAuto: => I_TotMEAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMEAmtIn7thYr,C_CAP_9999999992));



//ME_6mon_CNT ME_12mon_CNT ME_18mon_CNT ME_24mon_CNT ME_30mon_CNT ME_36mon_CNT ME_42mon_CNT ME_48mon_CNT ME_54mon_CNT ME_60mon_CNT
//Description: # of ME claims in the past 6 months
ClaimsAuto: => H_NumMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin6M,C_CAP_992));

//Description: # of ME claims in the past 12 months
ClaimsAuto: => H_NumMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin12M,C_CAP_992));

//Description: # of ME claims in the past 18 months
ClaimsAuto: => H_NumMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin18M,C_CAP_992));

//Description: Past 2-year number of ME claims
ClaimsAuto: => H_NumMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin24M,C_CAP_992));

//Description: # of ME claims in the past 30 months
ClaimsAuto: => H_NumMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin30M,C_CAP_992));

//Description: Past 3-year number of ME claims
ClaimsAuto: => H_NumMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin36M,C_CAP_992));

//Description: # of ME claims in the past 42 months
ClaimsAuto: => H_NumMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin42M,C_CAP_992));

//Description: Past 4-year number of ME claims
ClaimsAuto: => H_NumMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin48M,C_CAP_992));

//Description: # of ME claims in the past 54 months
ClaimsAuto: => H_NumMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin54M,C_CAP_992));

//Description: Past 5-year number of ME claims
ClaimsAuto: => H_NumMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin60M,C_CAP_992));

//cum6_ME_CNT
//Description: Past 6-year number of ME claims
ClaimsAuto: => H_NumMEWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMEWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin6Yr,C_CAP_992));

//ME_CNT ME_CNT1 ME_CNT2 ME_CNT3 ME_CNT4 ME_CNT5 ME_CNT6 ME_CNT7
//Description: Past 7-year number of ME claims
ClaimsAuto: => H_NumMEWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMEWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Medical Expense claims
ClaimsAuto: => H_NumMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMEIn7thYr,C_CAP_992));




//ME_6mon_NZCNT ME_12mon_NZCNT ME_18mon_NZCNT ME_24mon_NZCNT ME_30mon_NZCNT ME_36mon_NZCNT ME_42mon_NZCNT ME_48mon_NZCNT ME_54mon_NZCNT ME_60mon_NZCNT
//Description: # of above-zero-payment ME claims in the past 6 months
ClaimsAuto: => H_NumNZMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin6M,C_CAP_992));

//Description: # of above-zero-payment ME claims in the past 12 months
ClaimsAuto: => H_NumNZMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin12M,C_CAP_992));

//Description: # of above-zero-payment ME claims in the past 18 months
ClaimsAuto: => H_NumNZMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin18M,C_CAP_992));

//Description: Number of above-zero-payment ME claims in the past 2 years
ClaimsAuto: => H_NumNZMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin24M,C_CAP_992));

//Description: # of above-zero-payment ME claims in the past 30 months
ClaimsAuto: => H_NumNZMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin30M,C_CAP_992));

//Description: Number of above-zero-payment ME claims in the past 3 years
ClaimsAuto: => H_NumNZMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin36M,C_CAP_992));

//Description: # of above-zero-payment ME claims in the past 42 months
ClaimsAuto: => H_NumNZMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin42M,C_CAP_992));

//Description: Number of above-zero-payment ME claims in the past 4 years
ClaimsAuto: => H_NumNZMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin48M,C_CAP_992));

//Description: # of above-zero-payment ME claims in the past 54 months
ClaimsAuto: => H_NumNZMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin54M,C_CAP_992));

//Description: Number of above-zero-payment ME claims in the past 5 years
ClaimsAuto: => H_NumNZMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin60M,C_CAP_992));

//cum6_ME_NZCNT
//Description: Number of above-zero-payment ME claims in the past 6 years
ClaimsAuto: => H_NumNZMEWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZMEWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin6Yr,C_CAP_992));

//ME_NZCNT ME_NZCNT1 ME_NZCNT2 ME_NZCNT3 ME_NZCNT4 ME_NZCNT5 ME_NZCNT6 ME_NZCNT7
//Description: Number of above-zero-payment ME claims in the past 7 years
ClaimsAuto: => H_NumNZMEWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZMEWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Medical Expense above-zero-payment claims
ClaimsAuto: => H_NumNZMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMEIn7thYr,C_CAP_992));



//ME6mon_CL_A ME12mon_CL_A ME18mon_CL_A ME24mon_CL_A ME30mon_CL_A ME36mon_CL_A ME42mon_CL_A ME48mon_CL_A ME54mon_CL_A ME60mon_CL_A
//Description: Closed ME claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedMEAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin6M,C_CAP_9999999992));

//Description: Closed ME claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedMEAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin12M,C_CAP_9999999992));

//Description: Closed ME claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedMEAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin24M,C_CAP_9999999992));

//Description: Closed ME claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedMEAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin36M,C_CAP_9999999992));

//Description: Closed ME claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedMEAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin48M,C_CAP_9999999992));

//Description: Closed ME claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedMEAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin60M,C_CAP_9999999992));

//cum6_ME_CL_AMT
//Description: Past 6-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed ME claim amount
ClaimsAuto: => H_TotalClosedMEAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtWithin7Yr,C_CAP_9999999992));



//ME_CL_A1 ME_CL_A2 ME_CL_A3 ME_CL_A4 ME_CL_A5 ME_CL_A6 ME_CL_A7 ME_CL_AMT
//Description: Previous 2nd-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Medical Expense  claim amount
ClaimsAuto: => H_TotalClosedMEAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedMEClaimAmount >=0), G_TotalClosedMEClaimAmount);
ClaimsAuto: => I_TotClosedMEAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMEAmtIn7thYr,C_CAP_9999999992));



//ME6mon_CL_N ME12mon_CL_N ME18mon_CL_N ME24mon_CL_N ME30mon_CL_N ME36mon_CL_N ME42mon_CL_N ME48mon_CL_N ME54mon_CL_N ME60mon_CL_N
//Description: # of Closed ME claims in the past 6 months
ClaimsAuto: => H_NumClosedMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin6M,C_CAP_992));

//Description: # of Closed ME claims in the past 12 months
ClaimsAuto: => H_NumClosedMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin12M,C_CAP_992));

//Description: # of Closed ME claims in the past 18 months
ClaimsAuto: => H_NumClosedMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin18M,C_CAP_992));

//Description: # of Closed ME claims in the past 24 months
ClaimsAuto: => H_NumClosedMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin24M,C_CAP_992));

//Description: # of Closed ME claims in the past 30 months
ClaimsAuto: => H_NumClosedMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin30M,C_CAP_992));

//Description: # of Closed ME claims in the past 36 months
ClaimsAuto: => H_NumClosedMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin36M,C_CAP_992));

//Description: # of Closed ME claims in the past 42 months
ClaimsAuto: => H_NumClosedMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin42M,C_CAP_992));

//Description: # of Closed ME claims in the past 48 months
ClaimsAuto: => H_NumClosedMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin48M,C_CAP_992));

//Description: # of Closed ME claims in the past 54 months
ClaimsAuto: => H_NumClosedMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin54M,C_CAP_992));

//Description: # of Closed ME claims in the past 60 months
ClaimsAuto: => H_NumClosedMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEWithin60M,C_CAP_992));



//ME_CL_N1 ME_CL_N2 ME_CL_N3 ME_CL_N4 ME_CL_N5 ME_CL_N6 ME_CL_N7
//Description: Previous 2nd-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Medical Expense  claims
ClaimsAuto: => H_NumClosedMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMEIn7thYr,C_CAP_992));



//ME6mon_OP_A ME12mon_OP_A ME18mon_OP_A ME24mon_OP_A ME30mon_OP_A ME36mon_OP_A ME42mon_OP_A ME48mon_OP_A ME54mon_OP_A ME60mon_OP_A
//Description: Open ME claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenMEAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin6M,C_CAP_9999999992));

//Description: Open ME claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenMEAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin12M,C_CAP_9999999992));

//Description: Open ME claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenMEAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin24M,C_CAP_9999999992));

//Description: Open ME claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenMEAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin36M,C_CAP_9999999992));

//Description: Open ME claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenMEAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin48M,C_CAP_9999999992));

//Description: Open ME claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenMEAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin60M,C_CAP_9999999992));

//cum6_ME_OP_AMT
//Description: Past 6-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open ME claim amount
ClaimsAuto: => H_TotalOpenMEAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtWithin7Yr,C_CAP_9999999992));



//ME_OP_A1 ME_OP_A2 ME_OP_A3 ME_OP_A4 ME_OP_A5 ME_OP_A6 ME_OP_A7 ME_OP_AMT
//Description: Previous 2nd-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Medical Expense claim amount
ClaimsAuto: => H_TotalOpenMEAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenMEClaimAmount >=0), G_TotalOpenMEClaimAmount);
ClaimsAuto: => I_TotOpenMEAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMEAmtIn7thYr,C_CAP_9999999992));



//ME6mon_OP_N ME12mon_OP_N ME18mon_OP_N ME24mon_OP_N ME30mon_OP_N ME36mon_OP_N ME36mon_OP_N ME42mon_OP_N ME48mon_OP_N ME54mon_OP_N ME60mon_OP_N
//Description: # of Open ME claims in the past 6 months
ClaimsAuto: => H_NumOpenMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin6M,C_CAP_992));

//Description: # of Open ME claims in the past 12 months
ClaimsAuto: => H_NumOpenMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin12M,C_CAP_992));

//Description: # of Open ME claims in the past 18 months
ClaimsAuto: => H_NumOpenMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin18M,C_CAP_992));

//Description: # of Open ME claims in the past 24 months
ClaimsAuto: => H_NumOpenMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin24M,C_CAP_992));

//Description: # of Open ME claims in the past 30 months
ClaimsAuto: => H_NumOpenMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin30M,C_CAP_992));

//Description: # of Open ME claims in the past 36 months
ClaimsAuto: => H_NumOpenMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin36M,C_CAP_992));

//Description: # of Open ME claims in the past 42 months
ClaimsAuto: => H_NumOpenMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin42M,C_CAP_992));

//Description: # of Open ME claims in the past 48 months
ClaimsAuto: => H_NumOpenMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin48M,C_CAP_992));

//Description: # of Open ME claims in the past 54 months
ClaimsAuto: => H_NumOpenMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin54M,C_CAP_992));

//Description: # of Open ME claims in the past 60 months
ClaimsAuto: => H_NumOpenMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEWithin60M,C_CAP_992));



//ME_OP_N1 ME_OP_N2 ME_OP_N3 ME_OP_N4 ME_OP_N5 ME_OP_N6 ME_OP_N7
//Description: Previous 2nd-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Medical Expense claims
ClaimsAuto: => H_NumOpenMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMEIn7thYr,C_CAP_992));



//ME6mon_OT_A ME12mon_OT_A ME18mon_OT_A ME24mon_OT_A ME30mon_OT_A ME36mon_OT_A ME42mon_OT_A ME48mon_OT_A ME54mon_OT_A ME60mon_OT_A
//Description: Other ME claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherMEAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin6M,C_CAP_9999999992));

//Description: Other ME claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherMEAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin12M,C_CAP_9999999992));

//Description: Other ME claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherMEAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin24M,C_CAP_9999999992));

//Description: Other ME claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherMEAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin36M,C_CAP_9999999992));

//Description: Other ME claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherMEAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin48M,C_CAP_9999999992));

//Description: Other ME claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherMEAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin60M,C_CAP_9999999992));

//cum6_ME_OT_AMT
//Description: Past 6-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other ME claim amount
ClaimsAuto: => H_TotalOtherMEAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtWithin7Yr,C_CAP_9999999992));



//ME_OT_A1 ME_OT_A2 ME_OT_A3 ME_OT_A4 ME_OT_A5 ME_OT_A6 ME_OT_A7 ME_OT_AMT
//Description: Previous 2nd-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Medical Expense claim amount
ClaimsAuto: => H_TotalOtherMEAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherMEClaimAmount >=0), G_TotalOtherMEClaimAmount);
ClaimsAuto: => I_TotOtherMEAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMEAmtIn7thYr,C_CAP_9999999992));



//ME6mon_OT_N ME12mon_OT_N ME18mon_OT_N ME24mon_OT_N ME30mon_OT_N ME36mon_OT_N ME42mon_OT_N ME48mon_OT_N ME54mon_OT_N ME60mon_OT_N
//Description: # of Other ME claims in the past 6 months
ClaimsAuto: => H_NumOtherMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin6M,C_CAP_992));

//Description: # of Other ME claims in the past 12 months
ClaimsAuto: => H_NumOtherMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin12M,C_CAP_992));

//Description: # of Other ME claims in the past 18 months
ClaimsAuto: => H_NumOtherMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin18M,C_CAP_992));

//Description: # of Other ME claims in the past 24 months
ClaimsAuto: => H_NumOtherMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin24M,C_CAP_992));

//Description: # of Other ME claims in the past 30 months
ClaimsAuto: => H_NumOtherMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin30M,C_CAP_992));

//Description: # of Other ME claims in the past 36 months
ClaimsAuto: => H_NumOtherMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin36M,C_CAP_992));

//Description: # of Other ME claims in the past 42 months
ClaimsAuto: => H_NumOtherMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin42M,C_CAP_992));

//Description: # of Other ME claims in the past 48 months
ClaimsAuto: => H_NumOtherMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin48M,C_CAP_992));

//Description: # of Other ME claims in the past 54 months
ClaimsAuto: => H_NumOtherMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin54M,C_CAP_992));

//Description: # of Other ME claims in the past 60 months
ClaimsAuto: => H_NumOtherMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEWithin60M,C_CAP_992));



//ME_OT_N1 ME_OT_N2 ME_OT_N3 ME_OT_N4 ME_OT_N5 ME_OT_N6 ME_OT_N7
//Description: Previous 2nd-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Medical Expense claims
ClaimsAuto: => H_NumOtherMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMEIn7thYr,C_CAP_992));


//ME6mon_ZR_N ME12mon_ZR_N ME18mon_ZR_N ME24mon_ZR_N ME30mon_ZR_N ME36mon_ZR_N ME42mon_ZR_N ME48mon_ZR_N ME54mon_ZR_N ME60mon_ZR_N
//Description: # of Zero-payment ME claims in the past 6 months
ClaimsAuto: => H_NumZeroMEWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroMEWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin6M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 12 months
ClaimsAuto: => H_NumZeroMEWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroMEWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin12M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 18 months
ClaimsAuto: => H_NumZeroMEWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroMEWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin18M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 24 months
ClaimsAuto: => H_NumZeroMEWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroMEWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin24M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 30 months
ClaimsAuto: => H_NumZeroMEWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroMEWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin30M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 36 months
ClaimsAuto: => H_NumZeroMEWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroMEWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin36M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 42 months
ClaimsAuto: => H_NumZeroMEWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroMEWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin42M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 48 months
ClaimsAuto: => H_NumZeroMEWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroMEWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin48M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 54 months
ClaimsAuto: => H_NumZeroMEWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroMEWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin54M,C_CAP_992));

//Description: # of Zero-payment ME claims in the past 60 months
ClaimsAuto: => H_NumZeroMEWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroMEWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEWithin60M,C_CAP_992));



//ME_ZR_N1 ME_ZR_N2 ME_ZR_N3 ME_ZR_N4 ME_ZR_N5 ME_ZR_N6 ME_ZR_N7
//Description: Previous 2nd-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroMEIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroMEIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroMEIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroMEIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroMEIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Medical Expense claims
ClaimsAuto: => H_NumZeroMEIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMEZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroMEIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMEIn7thYr,C_CAP_992));



//CUM2_MMPAMT CUM3_MMPAMT CUM4_MMPAMT CUM5_MMPAMT CUM6_MMPAMT CUM7_MMPAMT
//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 2 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin2Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 24), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin2Yr,C_CAP_9999999992));

//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 3 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin3Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 36), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin3Yr,C_CAP_9999999992));

//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 4 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin4Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 48), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin4Yr,C_CAP_9999999992));

//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 5 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin5Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 60), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin5Yr,C_CAP_9999999992));

//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 6 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 72), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin6Yr,C_CAP_9999999992));

//Description: Total amount owing to medical expense, medical payment, bodily injury, personal injury for the past 7 years
ClaimsAuto: => H_TotalMedInjuryAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 84), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtWithin7Yr,C_CAP_9999999992));



//YR1MMPAMT YR2MMPAMT YR3MMPAMT YR4MMPAMT YR5MMPAMT YR6MMPAMT YR7MMPAMT
//Description: Past 1-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn1stYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 12), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn1stYr,C_CAP_9999999992));

//Description: Previous 2nd-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total claim amount involving ME, MP, and PI
ClaimsAuto: => H_TotalMedInjuryAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84), G_TotalMedInjuryClaimAmount);
ClaimsAuto: => I_TotMedInjuryAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedInjuryAmtIn7thYr,C_CAP_9999999992));



//CUM2_MMPCNT CUM3_MMPCNT CUM4_MMPCNT CUM5_MMPCNT CUM6_MMPCNT CUM7_MMPCNT
//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin2Yr,C_CAP_992));

//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin3Yr,C_CAP_992));

//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin4Yr,C_CAP_992));

//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin5Yr,C_CAP_992));

//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin6Yr,C_CAP_992));

//Description: # of claims owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryWithin7Yr,C_CAP_992));



//YR1MMPCNT YR2MMPCNT YR3MMPCNT YR4MMPCNT YR5MMPCNT YR6MMPCNT YR7MMPCNT
//Description: Past 1-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedInjuryIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims involving ME, MP, and PI
ClaimsAuto: => H_NumMedInjuryIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryIn7thYr,C_CAP_992));



//CUM2_MMP_NOBPAMT CUM3_MMP_NOBPAMT CUM4_MMP_NOBPAMT CUM5_MMP_NOBPAMT CUM6_MMP_NOBPAMT CUM7_MMP_NOBPAMT
//Description: Past 2-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin2Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin2Yr,C_CAP_9999999992));

//Description: Past 3-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin3Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin3Yr,C_CAP_9999999992));

//Description: Past 4-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin4Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin4Yr,C_CAP_9999999992));

//Description: Past 5-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin5Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin5Yr,C_CAP_9999999992));

//Description: Past 6-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year total claim amount owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtWithin7Yr,C_CAP_9999999992));


//YR1MMP_NOBPAMT YR2MMP_NOBPAMT YR3MMP_NOBPAMT YR4MMP_NOBPAMT YR5MMP_NOBPAMT YR6MMP_NOBPAMT YR7MMP_NOBPAMT
//Description: Past 1-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn1stYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn1stYr,C_CAP_9999999992));

//Description: Previous 2nd-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total amount of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_TotalMedPIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMedPIClaimAmount >=0), G_TotalMedPIClaimAmount);
ClaimsAuto: => I_TotMedPIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMedPIAmtIn7thYr,C_CAP_9999999992));



//CUM2_MMP_NOBPCNT CUM3_MMP_NOBPCNT CUM4_MMP_NOBPCNT CUM5_MMP_NOBPCNT CUM6_MMP_NOBPCNT CUM7_MMP_NOBPCNT
//Description: Past 2-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedPIWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin2Yr,C_CAP_992));

//Description: Past 3-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedPIWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin3Yr,C_CAP_992));

//Description: Past 4-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedPIWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin4Yr,C_CAP_992));

//Description: Past 5-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedPIWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin5Yr,C_CAP_992));

//Description: Past 6-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedPIWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin6Yr,C_CAP_992));

//Description: Past 7-year total # claims owing to Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedPIWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIWithin7Yr,C_CAP_992));


//YR1MMP_NOBPCNT YR2MMP_NOBPCNT YR3MMP_NOBPCNT YR4MMP_NOBPCNT YR5MMP_NOBPCNT YR6MMP_NOBPCNT YR7MMP_NOBPCNT
//Description: Past 1-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedPIIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year total # of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage, or Rental Reimbursement
ClaimsAuto: => H_NumMedPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMedPIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedPIIn7thYr,C_CAP_992));



//CUM2_MMPGE10KCNT CUM3_MMPGE10KCNT CUM4_MMPGE10KCNT CUM5_MMPGE10KCNT CUM6_MMPGE10KCNT CUM7_MMPGE10KCNT
//Description: # of claims with claim amount over $10000 for the past 2 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE10000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within2Yr,C_CAP_992));

//Description: # of claims with claim amount over $10000 for the past 3 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE10000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within3Yr,C_CAP_992));

//Description: # of claims with claim amount over $10000 for the past 4 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE10000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within4Yr,C_CAP_992));

//Description: # of claims with claim amount over $10000 for the past 5 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE10000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within5Yr,C_CAP_992));

//Description: # of claims with claim amount over $10000 for the past 6 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE10000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within6Yr,C_CAP_992));

//Description: # of claims with claim amount over $10000 for the past 7 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE10000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE10000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000Within7Yr,C_CAP_992));


//MMP1GE10KCNT MMP2GE10KCNT MMP3GE10KCNT MMP4GE10KCNT MMP5GE10KCNT MMP6GE10KCNT MMP7GE10KCNT
//Description: Past 1-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In1stYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedInjuryGE10000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE10000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE10000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In4thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE10000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In5thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE10000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In6thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE10000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims involving ME, MP, and PI with claim amount => $10,000
ClaimsAuto: => H_NumMedInjuryGE10000In7thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE10000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE10000In7thYr,C_CAP_992));


//CUM2_MMPGE5KCNT CUM3_MMPGE5KCNT CUM4_MMPGE5KCNT CUM5_MMPGE5KCNT CUM6_MMPGE5KCNT CUM7_MMPGE5KCNT
//Description: # of claims with claim amount over $5000 for the past 2 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE5000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within2Yr,C_CAP_992));

//Description: # of claims with claim amount over $5000 for the past 3 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE5000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within3Yr,C_CAP_992));

//Description: # of claims with claim amount over $5000 for the past 4 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE5000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within4Yr,C_CAP_992));

//Description: # of claims with claim amount over $5000 for the past 5 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE5000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within5Yr,C_CAP_992));

//Description: # of claims with claim amount over $5000 for the past 6 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE5000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within6Yr,C_CAP_992));

//Description: # of claims with claim amount over $5000 for the past 7 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE5000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE5000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000Within7Yr,C_CAP_992));


//MMP1GE5KCNT MMP2GE5KCNT MMP3GE5KCNT MMP4GE5KCNT MMP5GE5KCNT MMP6GE5KCNT MMP7GE5KCNT
//Description: Past 1-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In1stYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedInjuryGE5000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE5000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE5000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In4thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE5000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In5thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE5000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In6thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE5000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims involving ME, MP, and PI with claim amount => $5,000
ClaimsAuto: => H_NumMedInjuryGE5000In7thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE5000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE5000In7thYr,C_CAP_992));


//CUM2_MMPGE2KCNT CUM3_MMPGE2KCNT CUM4_MMPGE2KCNT CUM5_MMPGE2KCNT CUM6_MMPGE2KCNT CUM7_MMPGE2KCNT
//Description: # of claims with claim amount over $2000 for the past 2 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE2000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within2Yr,C_CAP_992));

//Description: # of claims with claim amount over $2000 for the past 3 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE2000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within3Yr,C_CAP_992));

//Description: # of claims with claim amount over $2000 for the past 4 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE2000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within4Yr,C_CAP_992));

//Description: # of claims with claim amount over $2000 for the past 5 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE2000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within5Yr,C_CAP_992));

//Description: # of claims with claim amount over $2000 for the past 6 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE2000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within6Yr,C_CAP_992));

//Description: # of claims with claim amount over $2000 for the past 7 years owing to medical expense, medical payment, bodily injury, personal injury
ClaimsAuto: => H_NumMedInjuryGE2000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE2000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000Within7Yr,C_CAP_992));


//MMP1GE2KCNT MMP2GE2KCNT MMP3GE2KCNT MMP4GE2KCNT MMP5GE2KCNT MMP6GE2KCNT MMP7GE2KCNT
//Description: Past 1-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In1stYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedInjuryGE2000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMedInjuryGE2000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedInjuryGE2000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In4thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMedInjuryGE2000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In5thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedInjuryGE2000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In6thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMedInjuryGE2000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of claims involving ME, MP, and PI with claim amount => $2,000
ClaimsAuto: => H_NumMedInjuryGE2000In7thYr := COUNT(ClaimsAutoClaim(G_TotalMedInjuryClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsMedInjuryClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMedInjuryGE2000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMedInjuryGE2000In7thYr,C_CAP_992));



//CUM2_MMPPCT CUM3_MMPPCT CUM4_MMPPCT CUM5_MMPPCT CUM6_MMPPCT CUM7_MMPPCT
ClaimsAuto: => R_RatMedInjuryTotAmtWithin2Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1, 
												H_TotalClaimAmtWithin24M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin2Yr / H_TotalClaimAmtWithin24M), C_CAP_DECIMAL_1));

ClaimsAuto: => R_RatMedInjuryTotAmtWithin3Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1,
												H_TotalClaimAmtWithin36M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin3Yr / H_TotalClaimAmtWithin36M), C_CAP_DECIMAL_1));

ClaimsAuto: => R_RatMedInjuryTotAmtWithin4Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1,
												H_TotalClaimAmtWithin48M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin4Yr / H_TotalClaimAmtWithin48M), C_CAP_DECIMAL_1));

ClaimsAuto: => R_RatMedInjuryTotAmtWithin5Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1,
												H_TotalClaimAmtWithin60M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin5Yr / H_TotalClaimAmtWithin60M), C_CAP_DECIMAL_1));

ClaimsAuto: => R_RatMedInjuryTotAmtWithin6Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1,
												H_TotalClaimAmtWithin72M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin6Yr / H_TotalClaimAmtWithin72M), C_CAP_DECIMAL_1));

ClaimsAuto: => R_RatMedInjuryTotAmtWithin7Yr := MAP(G_ControlLevel1 => C_DEFAULT_L1,
												H_TotalClaimAmtWithin84M = 0 => C_DEFAULT_L4,
												MIN(ROUND2(H_TotalMedInjuryAmtWithin7Yr / H_TotalClaimAmtWithin84M), C_CAP_DECIMAL_1));



//CUM2_MNR1H_CNT CUM3_MNR1H_CNT CUM4_MNR1H_CNT CUM5_MNR1H_CNT CUM6_MNR1H_CNT CUM7_MNR1H_CNT
//Description: Past 2-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimLE1000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within2Yr,C_CAP_992));

//Description: Past 3-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimLE1000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within3Yr,C_CAP_992));

//Description: Past 4-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimLE1000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within4Yr,C_CAP_992));

//Description: Past 5-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimLE1000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within5Yr,C_CAP_992));

//Description: Past 6-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimLE1000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within6Yr,C_CAP_992));

//Description: Past 7-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimLE1000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000Within7Yr,C_CAP_992));



//MNR1_1HCNT MNR2_1HCNT MNR3_1HCNT MNR4_1HCNT MNR5_1HCNT MNR6_1HCNT MNR7_1HCNT
//Description: Past 1-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimLE1000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimLE1000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimLE1000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimLE1000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimLE1000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimLE1000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of minor claims (<= $1000)
ClaimsAuto: => H_NumClaimLE1000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 1000 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimLE1000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE1000In7thYr,C_CAP_992));



//CUM2_MNR1H_CNT CUM3_MNR1H_CNT CUM4_MNR1H_CNT CUM5_MNR1H_CNT CUM6_MNR1H_CNT CUM7_MNR1H_CNT
//Description: Past 2-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimLE100Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within2Yr,C_CAP_992));

//Description: Past 3-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimLE100Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within3Yr,C_CAP_992));

//Description: Past 4-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimLE100Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within4Yr,C_CAP_992));

//Description: Past 5-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimLE100Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within5Yr,C_CAP_992));

//Description: Past 6-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimLE100Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within6Yr,C_CAP_992));

//Description: Past 7-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimLE100Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100Within7Yr,C_CAP_992));



//MNR1_1HCNT MNR2_1HCNT MNR3_1HCNT MNR4_1HCNT MNR5_1HCNT MNR6_1HCNT MNR7_1HCNT
//Description: Past 1-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClaimLE100In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClaimLE100In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClaimLE100In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClaimLE100In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClaimLE100In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClaimLE100In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumClaimLE100In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount > 0 AND G_TotalClaimAmount <= 100 AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClaimLE100In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClaimLE100In7thYr,C_CAP_992));



//MP_6mon_AMT MP_12mon_AMT MP_18mon_AMT MP_24mon_AMT MP_30mon_AMT MP_36mon_AMT MP_42mon_AMT MP_48mon_AMT MP_54mon_AMT MP_60mon_AMT
//Description: Total MP claim amount in the past 6 months
ClaimsAuto: => H_TotalMPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin6M,C_CAP_9999999992));

//Description: Total MP claim amount in the past 12 months
ClaimsAuto: => H_TotalMPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin12M,C_CAP_9999999992));

//Description: Total MP claim amount in the past 18 months
ClaimsAuto: => H_TotalMPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin24M,C_CAP_9999999992));

//Description: Total MP claim amount in the past 30 months
ClaimsAuto: => H_TotalMPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin36M,C_CAP_9999999992));

//Description: Total MP claim amount in the past 42 months
ClaimsAuto: => H_TotalMPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin48M,C_CAP_9999999992));

//Description: Total MP claim amount in the past 54 months
ClaimsAuto: => H_TotalMPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin60M,C_CAP_9999999992));

//cum6_MP_AMT
//Description: Past 6-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin6Yr,C_CAP_9999999992));

//MP_AMT MP_AMT1 MP_AMT2 MP_AMT3 MP_AMT4 MP_AMT5 MP_AMT6 MP_AMT7
//Description: Past 7-year MP claim amount
ClaimsAuto: => H_TotalMPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Medical Payment claim amount
ClaimsAuto: => H_TotalMPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalMPClaimAmount >=0), G_TotalMPClaimAmount);
ClaimsAuto: => I_TotMPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalMPAmtIn7thYr,C_CAP_9999999992));



//MP_6mon_CNT MP_12mon_CNT MP_18mon_CNT MP_24mon_CNT MP_30mon_CNT MP_36mon_CNT MP_42mon_CNT MP_48mon_CNT MP_54mon_CNT MP_60mon_CNT
//Description: # of MP claims in the past 6 months
ClaimsAuto: => H_NumMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin6M,C_CAP_992));

//Description: # of MP claims in the past 12 months
ClaimsAuto: => H_NumMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin12M,C_CAP_992));

//Description: # of MP claims in the past 18 months
ClaimsAuto: => H_NumMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin18M,C_CAP_992));

//Description: Past 2-year number of MP claims
ClaimsAuto: => H_NumMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin24M,C_CAP_992));

//Description: # of MP claims in the past 30 months
ClaimsAuto: => H_NumMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin30M,C_CAP_992));

//Description: Past 3-year number of MP claims
ClaimsAuto: => H_NumMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin36M,C_CAP_992));

//Description: # of MP claims in the past 42 months
ClaimsAuto: => H_NumMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin42M,C_CAP_992));

//Description: Past 4-year number of MP claims
ClaimsAuto: => H_NumMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin48M,C_CAP_992));

//Description: # of MP claims in the past 54 months
ClaimsAuto: => H_NumMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin54M,C_CAP_992));

//Description: Past 5-year number of MP claims
ClaimsAuto: => H_NumMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin60M,C_CAP_992));

//cum6_MP_CNT
//Description: Past 6-year number of MP claims
ClaimsAuto: => H_NumMPWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMPWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin6Yr,C_CAP_992));

//MP_CNT MP_CNT1 MP_CNT2 MP_CNT3 MP_CNT4 MP_CNT5 MP_CNT6 MP_CNT7
//Description: Past 7-year number of MP claims
ClaimsAuto: => H_NumMPWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMPWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Medical Payment claims
ClaimsAuto: => H_NumMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumMPIn7thYr,C_CAP_992));



//MP_6mon_NZCNT MP_12mon_NZCNT MP_18mon_NZCNT MP_24mon_NZCNT MP_30mon_NZCNT MP_36mon_NZCNT MP_42mon_NZCNT MP_48mon_NZCNT MP_54mon_NZCNT MP_60mon_NZCNT
//Description: # of above-zero-payment MP claims in the past 6 months
ClaimsAuto: => H_NumNZMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin6M,C_CAP_992));

//Description: # of above-zero-payment MP claims in the past 12 months
ClaimsAuto: => H_NumNZMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin12M,C_CAP_992));

//Description: # of above-zero-payment MP claims in the past 18 months
ClaimsAuto: => H_NumNZMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin18M,C_CAP_992));

//Description: Number of above-zero-payment MP claims in the past 2 years
ClaimsAuto: => H_NumNZMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin24M,C_CAP_992));

//Description: # of above-zero-payment MP claims in the past 30 months
ClaimsAuto: => H_NumNZMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin30M,C_CAP_992));

//Description: Number of above-zero-payment MP claims in the past 3 years
ClaimsAuto: => H_NumNZMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin36M,C_CAP_992));

//Description: # of above-zero-payment MP claims in the past 42 months
ClaimsAuto: => H_NumNZMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin42M,C_CAP_992));

//Description: Number of above-zero-payment MP claims in the past 4 years
ClaimsAuto: => H_NumNZMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin48M,C_CAP_992));

//Description: # of above-zero-payment MP claims in the past 54 months
ClaimsAuto: => H_NumNZMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin54M,C_CAP_992));

//Description: Number of above-zero-payment MP claims in the past 5 years
ClaimsAuto: => H_NumNZMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin60M,C_CAP_992));

//cum6_MP_NZCNT
//Description: Number of above-zero-payment MP claims in the past 6 years
ClaimsAuto: => H_NumNZMPWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZMPWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin6Yr,C_CAP_992));

//MP_NZCNT MP_NZCNT1 MP_NZCNT2 MP_NZCNT3 MP_NZCNT4 MP_NZCNT5 MP_NZCNT6 MP_NZCNT7
//Description: Number of above-zero-payment MP claims in the past 7 years
ClaimsAuto: => H_NumNZMPWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZMPWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Medical Payment above-zero-payment claims
ClaimsAuto: => H_NumNZMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZMPIn7thYr,C_CAP_992));



//MP6mon_CL_A MP12mon_CL_A MP18mon_CL_A MP24mon_CL_A MP30mon_CL_A MP36mon_CL_A MP42mon_CL_A MP48mon_CL_A MP54mon_CL_A MP60mon_CL_A
//Description: Closed MP claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedMPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin6M,C_CAP_9999999992));

//Description: Closed MP claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedMPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin12M,C_CAP_9999999992));

//Description: Closed MP claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedMPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin24M,C_CAP_9999999992));

//Description: Closed MP claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedMPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin36M,C_CAP_9999999992));

//Description: Closed MP claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedMPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin48M,C_CAP_9999999992));

//Description: Closed MP claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedMPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin60M,C_CAP_9999999992));

//cum6_MP_CL_AMT
//Description: Past 6-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed MP claim amount
ClaimsAuto: => H_TotalClosedMPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtWithin7Yr,C_CAP_9999999992));



//MP_CL_A1 MP_CL_A2 MP_CL_A3 MP_CL_A4 MP_CL_A5 MP_CL_A6 MP_CL_A7 MP_CL_AMT
//Description: Previous 2nd-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Medical Payment  claim amount
ClaimsAuto: => H_TotalClosedMPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedMPClaimAmount >=0), G_TotalClosedMPClaimAmount);
ClaimsAuto: => I_TotClosedMPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedMPAmtIn7thYr,C_CAP_9999999992));



//MP6mon_CL_N MP12mon_CL_N MP18mon_CL_N MP24mon_CL_N MP30mon_CL_N MP36mon_CL_N MP42mon_CL_N MP48mon_CL_N MP54mon_CL_N MP60mon_CL_N
//Description: # of Closed MP claims in the past 6 months
ClaimsAuto: => H_NumClosedMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin6M,C_CAP_992));

//Description: # of Closed MP claims in the past 12 months
ClaimsAuto: => H_NumClosedMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin12M,C_CAP_992));

//Description: # of Closed MP claims in the past 18 months
ClaimsAuto: => H_NumClosedMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin18M,C_CAP_992));

//Description: # of Closed MP claims in the past 24 months
ClaimsAuto: => H_NumClosedMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin24M,C_CAP_992));

//Description: # of Closed MP claims in the past 30 months
ClaimsAuto: => H_NumClosedMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin30M,C_CAP_992));

//Description: # of Closed MP claims in the past 36 months
ClaimsAuto: => H_NumClosedMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin36M,C_CAP_992));

//Description: # of Closed MP claims in the past 42 months
ClaimsAuto: => H_NumClosedMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin42M,C_CAP_992));

//Description: # of Closed MP claims in the past 48 months
ClaimsAuto: => H_NumClosedMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin48M,C_CAP_992));

//Description: # of Closed MP claims in the past 54 months
ClaimsAuto: => H_NumClosedMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin54M,C_CAP_992));

//Description: # of Closed MP claims in the past 60 months
ClaimsAuto: => H_NumClosedMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPWithin60M,C_CAP_992));



//MP_CL_N1 MP_CL_N2 MP_CL_N3 MP_CL_N4 MP_CL_N5 MP_CL_N6 MP_CL_N7
//Description: Previous 2nd-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Medical Payment  claims
ClaimsAuto: => H_NumClosedMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedMPIn7thYr,C_CAP_992));



//MP6mon_OP_A MP12mon_OP_A MP18mon_OP_A MP24mon_OP_A MP30mon_OP_A MP36mon_OP_A MP42mon_OP_A MP48mon_OP_A MP54mon_OP_A MP60mon_OP_A
//Description: Open MP claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenMPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin6M,C_CAP_9999999992));

//Description: Open MP claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenMPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin12M,C_CAP_9999999992));

//Description: Open MP claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenMPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin24M,C_CAP_9999999992));

//Description: Open MP claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenMPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin36M,C_CAP_9999999992));

//Description: Open MP claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenMPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin48M,C_CAP_9999999992));

//Description: Open MP claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenMPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin60M,C_CAP_9999999992));

//cum6_MP_OP_AMT
//Description: Past 6-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open MP claim amount
ClaimsAuto: => H_TotalOpenMPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtWithin7Yr,C_CAP_9999999992));



//MP_OP_A1 MP_OP_A2 MP_OP_A3 MP_OP_A4 MP_OP_A5 MP_OP_A6 MP_OP_A7 MP_OP_AMT
//Description: Previous 2nd-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Medical Payment claim amount
ClaimsAuto: => H_TotalOpenMPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenMPClaimAmount >=0), G_TotalOpenMPClaimAmount);
ClaimsAuto: => I_TotOpenMPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenMPAmtIn7thYr,C_CAP_9999999992));



//MP6mon_OP_N MP12mon_OP_N MP18mon_OP_N MP24mon_OP_N MP30mon_OP_N MP36mon_OP_N MP36mon_OP_N MP42mon_OP_N MP48mon_OP_N MP54mon_OP_N MP60mon_OP_N
//Description: # of Open MP claims in the past 6 months
ClaimsAuto: => H_NumOpenMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin6M,C_CAP_992));

//Description: # of Open MP claims in the past 12 months
ClaimsAuto: => H_NumOpenMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin12M,C_CAP_992));

//Description: # of Open MP claims in the past 18 months
ClaimsAuto: => H_NumOpenMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin18M,C_CAP_992));

//Description: # of Open MP claims in the past 24 months
ClaimsAuto: => H_NumOpenMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin24M,C_CAP_992));

//Description: # of Open MP claims in the past 30 months
ClaimsAuto: => H_NumOpenMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin30M,C_CAP_992));

//Description: # of Open MP claims in the past 36 months
ClaimsAuto: => H_NumOpenMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin36M,C_CAP_992));

//Description: # of Open MP claims in the past 42 months
ClaimsAuto: => H_NumOpenMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin42M,C_CAP_992));

//Description: # of Open MP claims in the past 48 months
ClaimsAuto: => H_NumOpenMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin48M,C_CAP_992));

//Description: # of Open MP claims in the past 54 months
ClaimsAuto: => H_NumOpenMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin54M,C_CAP_992));

//Description: # of Open MP claims in the past 60 months
ClaimsAuto: => H_NumOpenMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPWithin60M,C_CAP_992));



//MP_OP_N1 MP_OP_N2 MP_OP_N3 MP_OP_N4 MP_OP_N5 MP_OP_N6 MP_OP_N7
//Description: Previous 2nd-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Medical Payment claims
ClaimsAuto: => H_NumOpenMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenMPIn7thYr,C_CAP_992));



//MP6mon_OT_A MP12mon_OT_A MP18mon_OT_A MP24mon_OT_A MP30mon_OT_A MP36mon_OT_A MP42mon_OT_A MP48mon_OT_A MP54mon_OT_A MP60mon_OT_A
//Description: Other MP claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherMPAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin6M,C_CAP_9999999992));

//Description: Other MP claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherMPAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin12M,C_CAP_9999999992));

//Description: Other MP claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherMPAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin24M,C_CAP_9999999992));

//Description: Other MP claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherMPAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin36M,C_CAP_9999999992));

//Description: Other MP claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherMPAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin48M,C_CAP_9999999992));

//Description: Other MP claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherMPAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin60M,C_CAP_9999999992));

//cum6_MP_OT_AMT
//Description: Past 6-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other MP claim amount
ClaimsAuto: => H_TotalOtherMPAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtWithin7Yr,C_CAP_9999999992));



//MP_OT_A1 MP_OT_A2 MP_OT_A3 MP_OT_A4 MP_OT_A5 MP_OT_A6 MP_OT_A7 MP_OT_AMT
//Description: Previous 2nd-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Medical Payment claim amount
ClaimsAuto: => H_TotalOtherMPAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherMPClaimAmount >=0), G_TotalOtherMPClaimAmount);
ClaimsAuto: => I_TotOtherMPAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherMPAmtIn7thYr,C_CAP_9999999992));



//MP6mon_OT_N MP12mon_OT_N MP18mon_OT_N MP24mon_OT_N MP30mon_OT_N MP36mon_OT_N MP42mon_OT_N MP48mon_OT_N MP54mon_OT_N MP60mon_OT_N
//Description: # of Other MP claims in the past 6 months
ClaimsAuto: => H_NumOtherMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin6M,C_CAP_992));

//Description: # of Other MP claims in the past 12 months
ClaimsAuto: => H_NumOtherMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin12M,C_CAP_992));

//Description: # of Other MP claims in the past 18 months
ClaimsAuto: => H_NumOtherMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin18M,C_CAP_992));

//Description: # of Other MP claims in the past 24 months
ClaimsAuto: => H_NumOtherMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin24M,C_CAP_992));

//Description: # of Other MP claims in the past 30 months
ClaimsAuto: => H_NumOtherMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin30M,C_CAP_992));

//Description: # of Other MP claims in the past 36 months
ClaimsAuto: => H_NumOtherMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin36M,C_CAP_992));

//Description: # of Other MP claims in the past 42 months
ClaimsAuto: => H_NumOtherMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin42M,C_CAP_992));

//Description: # of Other MP claims in the past 48 months
ClaimsAuto: => H_NumOtherMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin48M,C_CAP_992));

//Description: # of Other MP claims in the past 54 months
ClaimsAuto: => H_NumOtherMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin54M,C_CAP_992));

//Description: # of Other MP claims in the past 60 months
ClaimsAuto: => H_NumOtherMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPWithin60M,C_CAP_992));




//MP_OT_N1 MP_OT_N2 MP_OT_N3 MP_OT_N4 MP_OT_N5 MP_OT_N6 MP_OT_N7
//Description: Previous 2nd-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Medical Payment claims
ClaimsAuto: => H_NumOtherMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherMPIn7thYr,C_CAP_992));



//MP6mon_ZR_N MP12mon_ZR_N MP18mon_ZR_N MP24mon_ZR_N MP30mon_ZR_N MP36mon_ZR_N MP42mon_ZR_N MP48mon_ZR_N MP54mon_ZR_N MP60mon_ZR_N
//Description: # of Zero-payment MP claims in the past 6 months
ClaimsAuto: => H_NumZeroMPWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroMPWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin6M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 12 months
ClaimsAuto: => H_NumZeroMPWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroMPWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin12M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 18 months
ClaimsAuto: => H_NumZeroMPWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroMPWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin18M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 24 months
ClaimsAuto: => H_NumZeroMPWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroMPWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin24M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 30 months
ClaimsAuto: => H_NumZeroMPWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroMPWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin30M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 36 months
ClaimsAuto: => H_NumZeroMPWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroMPWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin36M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 42 months
ClaimsAuto: => H_NumZeroMPWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroMPWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin42M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 48 months
ClaimsAuto: => H_NumZeroMPWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroMPWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin48M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 54 months
ClaimsAuto: => H_NumZeroMPWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroMPWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin54M,C_CAP_992));

//Description: # of Zero-payment MP claims in the past 60 months
ClaimsAuto: => H_NumZeroMPWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroMPWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPWithin60M,C_CAP_992));



//MP_ZR_N1 MP_ZR_N2 MP_ZR_N3 MP_ZR_N4 MP_ZR_N5 MP_ZR_N6 MP_ZR_N7
//Description: Previous 2nd-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroMPIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroMPIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroMPIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroMPIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroMPIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Medical Payment claims
ClaimsAuto: => H_NumZeroMPIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsMPZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroMPIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroMPIn7thYr,C_CAP_992));



//CUM2_MRNT1H_CNT CUM3_MRNT1H_CNT CUM4_MRNT1H_CNT CUM5_MRNT1H_CNT CUM6_MRNT1H_CNT CUM7_MRNT1H_CNT
//Description: Past 2-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within2Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNoTLClaimLE100Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within2Yr,C_CAP_992));

//Description: Past 3-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within3Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoTLClaimLE100Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within3Yr,C_CAP_992));

//Description: Past 4-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within4Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNoTLClaimLE100Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within4Yr,C_CAP_992));

//Description: Past 5-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within5Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoTLClaimLE100Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within5Yr,C_CAP_992));

//Description: Past 6-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within6Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNoTLClaimLE100Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within6Yr,C_CAP_992));

//Description: Past 7-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100Within7Yr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNoTLClaimLE100Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100Within7Yr,C_CAP_992));


//MRNT11H_CNT MRNT21H_CNT MRNT31H_CNT MRNT41H_CNT MRNT51H_CNT MRNT61H_CNT MRNT71H_CNT
//Description: Past 1-year total # of minor claims (<= $100)
ClaimsAuto: => H_NumNoTLClaimLE100In1stYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoTLClaimLE100In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In1stYr,C_CAP_992));

//Description: Previous 2nd-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In2ndYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNoTLClaimLE100In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In3rdYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoTLClaimLE100In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In4thYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNoTLClaimLE100In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In4thYr,C_CAP_992));

//Description: Previous 5th-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In5thYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoTLClaimLE100In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In5thYr,C_CAP_992));

//Description: Previous 6th-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In6thYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNoTLClaimLE100In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In6thYr,C_CAP_992));

//Description: Previous 7th-year total # of minor claims (<= $100) while no TL claims
ClaimsAuto: => H_NumNoTLClaimLE100In7thYr := COUNT(ClaimsAutoClaim(G_TotalNoTLClaimAmount > 0 AND G_TotalNoTLClaimAmount <= 100 AND G_IsValidClaimV3 AND (NOT G_IsTLClaimNZ) AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNoTLClaimLE100In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNoTLClaimLE100In7thYr,C_CAP_992));



//OT_6mon_AMT OT_12mon_AMT OT_18mon_AMT OT_24mon_AMT OT_30mon_AMT OT_36mon_AMT OT_42mon_AMT OT_48mon_AMT OT_54mon_AMT OT_60mon_AMT
//Description: Total OT claim amount in the past 6 months
ClaimsAuto: => H_TotalOTAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin6M,C_CAP_9999999992));

//Description: Total OT claim amount in the past 12 months
ClaimsAuto: => H_TotalOTAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin12M,C_CAP_9999999992));

//Description: Total OT claim amount in the past 18 months
ClaimsAuto: => H_TotalOTAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin24M,C_CAP_9999999992));

//Description: Total OT claim amount in the past 30 months
ClaimsAuto: => H_TotalOTAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin36M,C_CAP_9999999992));

//Description: Total OT claim amount in the past 42 months
ClaimsAuto: => H_TotalOTAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin48M,C_CAP_9999999992));

//Description: Total OT claim amount in the past 54 months
ClaimsAuto: => H_TotalOTAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin60M,C_CAP_9999999992));

//cum6_OT_AMT
//Description: Past 6-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin6Yr,C_CAP_9999999992));

//OT_AMT OT_AMT1 OT_AMT2 OT_AMT3 OT_AMT4 OT_AMT5 OT_AMT6 OT_AMT7
//Description: Past 7-year OT claim amount
ClaimsAuto: => H_TotalOTAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Other claim amount
ClaimsAuto: => H_TotalOTAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOTClaimAmount >=0), G_TotalOTClaimAmount);
ClaimsAuto: => I_TotOTAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOTAmtIn7thYr,C_CAP_9999999992));



//OT_6mon_CNT OT_12mon_CNT OT_18mon_CNT OT_24mon_CNT OT_30mon_CNT OT_36mon_CNT OT_42mon_CNT OT_48mon_CNT OT_54mon_CNT OT_60mon_CNT
//Description: # of OT claims in the past 6 months
ClaimsAuto: => H_NumOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin6M,C_CAP_992));

//Description: # of OT claims in the past 12 months
ClaimsAuto: => H_NumOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin12M,C_CAP_992));

//Description: # of OT claims in the past 18 months
ClaimsAuto: => H_NumOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin18M,C_CAP_992));

//Description: Past 2-year number of OT claims
ClaimsAuto: => H_NumOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin24M,C_CAP_992));

//Description: # of OT claims in the past 30 months
ClaimsAuto: => H_NumOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin30M,C_CAP_992));

//Description: Past 3-year number of OT claims
ClaimsAuto: => H_NumOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin36M,C_CAP_992));

//Description: # of OT claims in the past 42 months
ClaimsAuto: => H_NumOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin42M,C_CAP_992));

//Description: Past 4-year number of OT claims
ClaimsAuto: => H_NumOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin48M,C_CAP_992));

//Description: # of OT claims in the past 54 months
ClaimsAuto: => H_NumOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin54M,C_CAP_992));

//Description: Past 5-year number of OT claims
ClaimsAuto: => H_NumOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin60M,C_CAP_992));

//cum6_OT_CNT
//Description: Past 6-year number of OT claims
ClaimsAuto: => H_NumOTWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOTWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin6Yr,C_CAP_992));

//OT_CNT OT_CNT1 OT_CNT2 OT_CNT3 OT_CNT4 OT_CNT5 OT_CNT6 OT_CNT7
//Description: Past 7-year number of OT claims
ClaimsAuto: => H_NumOTWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOTWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Other claims
ClaimsAuto: => H_NumOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Other claims
ClaimsAuto: => H_NumOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Other claims
ClaimsAuto: => H_NumOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Other claims
ClaimsAuto: => H_NumOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Other claims
ClaimsAuto: => H_NumOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Other claims
ClaimsAuto: => H_NumOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOTIn7thYr,C_CAP_992));



//OT_6mon_NZCNT OT_12mon_NZCNT OT_18mon_NZCNT OT_24mon_NZCNT OT_30mon_NZCNT OT_36mon_NZCNT OT_42mon_NZCNT OT_48mon_NZCNT OT_54mon_NZCNT OT_60mon_NZCNT
//Description: # of above-zero-payment OT claims in the past 6 months
ClaimsAuto: => H_NumNZOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin6M,C_CAP_992));

//Description: # of above-zero-payment OT claims in the past 12 months
ClaimsAuto: => H_NumNZOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin12M,C_CAP_992));

//Description: # of above-zero-payment OT claims in the past 18 months
ClaimsAuto: => H_NumNZOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin18M,C_CAP_992));

//Description: Number of above-zero-payment OT claims in the past 2 years
ClaimsAuto: => H_NumNZOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin24M,C_CAP_992));

//Description: # of above-zero-payment OT claims in the past 30 months
ClaimsAuto: => H_NumNZOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin30M,C_CAP_992));

//Description: Number of above-zero-payment OT claims in the past 3 years
ClaimsAuto: => H_NumNZOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin36M,C_CAP_992));

//Description: # of above-zero-payment OT claims in the past 42 months
ClaimsAuto: => H_NumNZOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin42M,C_CAP_992));

//Description: Number of above-zero-payment OT claims in the past 4 years
ClaimsAuto: => H_NumNZOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin48M,C_CAP_992));

//Description: # of above-zero-payment OT claims in the past 54 months
ClaimsAuto: => H_NumNZOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin54M,C_CAP_992));


//Description: Number of above-zero-payment OT claims in the past 5 years
ClaimsAuto: => H_NumNZOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin60M,C_CAP_992));

//cum6_OT_NZCNT
//Description: Number of above-zero-payment OT claims in the past 6 years
ClaimsAuto: => H_NumNZOTWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZOTWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin6Yr,C_CAP_992));

//OT_NZCNT OT_NZCNT1 OT_NZCNT2 OT_NZCNT3 OT_NZCNT4 OT_NZCNT5 OT_NZCNT6 OT_NZCNT7
//Description: Number of above-zero-payment OT claims in the past 7 years
ClaimsAuto: => H_NumNZOTWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZOTWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Other above-zero-payment claims
ClaimsAuto: => H_NumNZOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZOTIn7thYr,C_CAP_992));



//OT6mon_CL_A OT12mon_CL_A OT18mon_CL_A OT24mon_CL_A OT30mon_CL_A OT36mon_CL_A OT42mon_CL_A OT48mon_CL_A OT54mon_CL_A OT60mon_CL_A
//Description: Closed OT claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedOTAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin6M,C_CAP_9999999992));

//Description: Closed OT claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedOTAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin12M,C_CAP_9999999992));

//Description: Closed OT claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedOTAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin24M,C_CAP_9999999992));

//Description: Closed OT claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedOTAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin36M,C_CAP_9999999992));

//Description: Closed OT claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedOTAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin48M,C_CAP_9999999992));

//Description: Closed OT claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedOTAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin60M,C_CAP_9999999992));

//cum6_OT_CL_AMT
//Description: Past 6-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed OT claim amount
ClaimsAuto: => H_TotalClosedOTAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtWithin7Yr,C_CAP_9999999992));



//OT_CL_A1 OT_CL_A2 OT_CL_A3 OT_CL_A4 OT_CL_A5 OT_CL_A6 OT_CL_A7 OT_CL_AMT
//Description: Previous 2nd-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Other  claim amount
ClaimsAuto: => H_TotalClosedOTAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedOTClaimAmount >=0), G_TotalClosedOTClaimAmount);
ClaimsAuto: => I_TotClosedOTAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedOTAmtIn7thYr,C_CAP_9999999992));



//OT6mon_CL_N OT12mon_CL_N OT18mon_CL_N OT24mon_CL_N OT30mon_CL_N OT36mon_CL_N OT42mon_CL_N OT48mon_CL_N OT54mon_CL_N OT60mon_CL_N
//Description: # of Closed OT claims in the past 6 months
ClaimsAuto: => H_NumClosedOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin6M,C_CAP_992));

//Description: # of Closed OT claims in the past 12 months
ClaimsAuto: => H_NumClosedOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin12M,C_CAP_992));

//Description: # of Closed OT claims in the past 18 months
ClaimsAuto: => H_NumClosedOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin18M,C_CAP_992));

//Description: # of Closed OT claims in the past 24 months
ClaimsAuto: => H_NumClosedOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin24M,C_CAP_992));

//Description: # of Closed OT claims in the past 30 months
ClaimsAuto: => H_NumClosedOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin30M,C_CAP_992));

//Description: # of Closed OT claims in the past 36 months
ClaimsAuto: => H_NumClosedOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin36M,C_CAP_992));

//Description: # of Closed OT claims in the past 42 months
ClaimsAuto: => H_NumClosedOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin42M,C_CAP_992));

//Description: # of Closed OT claims in the past 48 months
ClaimsAuto: => H_NumClosedOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin48M,C_CAP_992));

//Description: # of Closed OT claims in the past 54 months
ClaimsAuto: => H_NumClosedOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin54M,C_CAP_992));

//Description: # of Closed OT claims in the past 60 months
ClaimsAuto: => H_NumClosedOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTWithin60M,C_CAP_992));



//OT_CL_N1 OT_CL_N2 OT_CL_N3 OT_CL_N4 OT_CL_N5 OT_CL_N6 OT_CL_N7
//Description: Previous 2nd-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Other  claims
ClaimsAuto: => H_NumClosedOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedOTIn7thYr,C_CAP_992));



//OT6mon_OP_A OT12mon_OP_A OT18mon_OP_A OT24mon_OP_A OT30mon_OP_A OT36mon_OP_A OT42mon_OP_A OT48mon_OP_A OT54mon_OP_A OT60mon_OP_A
//Description: Open OT claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenOTAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin6M,C_CAP_9999999992));

//Description: Open OT claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenOTAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin12M,C_CAP_9999999992));

//Description: Open OT claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenOTAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin24M,C_CAP_9999999992));

//Description: Open OT claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenOTAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin36M,C_CAP_9999999992));

//Description: Open OT claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenOTAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin48M,C_CAP_9999999992));

//Description: Open OT claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenOTAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin60M,C_CAP_9999999992));

//cum6_OT_OP_AMT
//Description: Past 6-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open OT claim amount
ClaimsAuto: => H_TotalOpenOTAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtWithin7Yr,C_CAP_9999999992));



//OT_OP_A1 OT_OP_A2 OT_OP_A3 OT_OP_A4 OT_OP_A5 OT_OP_A6 OT_OP_A7 OT_OP_AMT
//Description: Previous 2nd-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Other claim amount
ClaimsAuto: => H_TotalOpenOTAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenOTClaimAmount >=0), G_TotalOpenOTClaimAmount);
ClaimsAuto: => I_TotOpenOTAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenOTAmtIn7thYr,C_CAP_9999999992));



//OT6mon_OP_N OT12mon_OP_N OT18mon_OP_N OT24mon_OP_N OT30mon_OP_N OT36mon_OP_N OT36mon_OP_N OT42mon_OP_N OT48mon_OP_N OT54mon_OP_N OT60mon_OP_N
//Description: # of Open OT claims in the past 6 months
ClaimsAuto: => H_NumOpenOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin6M,C_CAP_992));

//Description: # of Open OT claims in the past 12 months
ClaimsAuto: => H_NumOpenOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin12M,C_CAP_992));

//Description: # of Open OT claims in the past 18 months
ClaimsAuto: => H_NumOpenOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin18M,C_CAP_992));

//Description: # of Open OT claims in the past 24 months
ClaimsAuto: => H_NumOpenOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin24M,C_CAP_992));

//Description: # of Open OT claims in the past 30 months
ClaimsAuto: => H_NumOpenOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin30M,C_CAP_992));

//Description: # of Open OT claims in the past 36 months
ClaimsAuto: => H_NumOpenOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin36M,C_CAP_992));

//Description: # of Open OT claims in the past 42 months
ClaimsAuto: => H_NumOpenOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin42M,C_CAP_992));

//Description: # of Open OT claims in the past 48 months
ClaimsAuto: => H_NumOpenOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin48M,C_CAP_992));

//Description: # of Open OT claims in the past 54 months
ClaimsAuto: => H_NumOpenOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin54M,C_CAP_992));

//Description: # of Open OT claims in the past 60 months
ClaimsAuto: => H_NumOpenOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTWithin60M,C_CAP_992));



//OT_OP_N1 OT_OP_N2 OT_OP_N3 OT_OP_N4 OT_OP_N5 OT_OP_N6 OT_OP_N7
//Description: Previous 2nd-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Other claims
ClaimsAuto: => H_NumOpenOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenOTIn7thYr,C_CAP_992));



//OT6mon_OT_A OT12mon_OT_A OT18mon_OT_A OT24mon_OT_A OT30mon_OT_A OT36mon_OT_A OT42mon_OT_A OT48mon_OT_A OT54mon_OT_A OT60mon_OT_A
//Description: Other OT claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherOTAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin6M,C_CAP_9999999992));

//Description: Other OT claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherOTAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin12M,C_CAP_9999999992));

//Description: Other OT claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherOTAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin24M,C_CAP_9999999992));

//Description: Other OT claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherOTAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin36M,C_CAP_9999999992));

//Description: Other OT claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherOTAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin48M,C_CAP_9999999992));

//Description: Other OT claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherOTAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin60M,C_CAP_9999999992));

//cum6_OT_OT_AMT
//Description: Past 6-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other OT claim amount
ClaimsAuto: => H_TotalOtherOTAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtWithin7Yr,C_CAP_9999999992));



//OT_OT_A1 OT_OT_A2 OT_OT_A3 OT_OT_A4 OT_OT_A5 OT_OT_A6 OT_OT_A7 OT_OT_AMT
//Description: Previous 2nd-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Other claim amount
ClaimsAuto: => H_TotalOtherOTAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherOTClaimAmount >=0), G_TotalOtherOTClaimAmount);
ClaimsAuto: => I_TotOtherOTAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherOTAmtIn7thYr,C_CAP_9999999992));



//OT6mon_OT_N OT12mon_OT_N OT18mon_OT_N OT24mon_OT_N OT30mon_OT_N OT36mon_OT_N OT42mon_OT_N OT48mon_OT_N OT54mon_OT_N OT60mon_OT_N
//Description: # of Other OT claims in the past 6 months
ClaimsAuto: => H_NumOtherOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin6M,C_CAP_992));

//Description: # of Other OT claims in the past 12 months
ClaimsAuto: => H_NumOtherOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin12M,C_CAP_992));

//Description: # of Other OT claims in the past 18 months
ClaimsAuto: => H_NumOtherOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin18M,C_CAP_992));

//Description: # of Other OT claims in the past 24 months
ClaimsAuto: => H_NumOtherOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin24M,C_CAP_992));

//Description: # of Other OT claims in the past 30 months
ClaimsAuto: => H_NumOtherOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin30M,C_CAP_992));

//Description: # of Other OT claims in the past 36 months
ClaimsAuto: => H_NumOtherOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin36M,C_CAP_992));

//Description: # of Other OT claims in the past 42 months
ClaimsAuto: => H_NumOtherOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin42M,C_CAP_992));

//Description: # of Other OT claims in the past 48 months
ClaimsAuto: => H_NumOtherOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin48M,C_CAP_992));

//Description: # of Other OT claims in the past 54 months
ClaimsAuto: => H_NumOtherOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin54M,C_CAP_992));

//Description: # of Other OT claims in the past 60 months
ClaimsAuto: => H_NumOtherOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTWithin60M,C_CAP_992));




//OT_OT_N1 OT_OT_N2 OT_OT_N3 OT_OT_N4 OT_OT_N5 OT_OT_N6 OT_OT_N7
//Description: Previous 2nd-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Other claims
ClaimsAuto: => H_NumOtherOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherOTIn7thYr,C_CAP_992));



//OT6mon_ZR_N OT12mon_ZR_N OT18mon_ZR_N OT24mon_ZR_N OT30mon_ZR_N OT36mon_ZR_N OT42mon_ZR_N OT48mon_ZR_N OT54mon_ZR_N OT60mon_ZR_N
//Description: # of Zero-payment OT claims in the past 6 months
ClaimsAuto: => H_NumZeroOTWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroOTWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin6M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 12 months
ClaimsAuto: => H_NumZeroOTWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroOTWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin12M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 18 months
ClaimsAuto: => H_NumZeroOTWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroOTWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin18M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 24 months
ClaimsAuto: => H_NumZeroOTWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroOTWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin24M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 30 months
ClaimsAuto: => H_NumZeroOTWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroOTWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin30M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 36 months
ClaimsAuto: => H_NumZeroOTWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroOTWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin36M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 42 months
ClaimsAuto: => H_NumZeroOTWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroOTWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin42M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 48 months
ClaimsAuto: => H_NumZeroOTWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroOTWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin48M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 54 months
ClaimsAuto: => H_NumZeroOTWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroOTWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin54M,C_CAP_992));

//Description: # of Zero-payment OT claims in the past 60 months
ClaimsAuto: => H_NumZeroOTWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroOTWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTWithin60M,C_CAP_992));



//OT_ZR_N1 OT_ZR_N2 OT_ZR_N3 OT_ZR_N4 OT_ZR_N5 OT_ZR_N6 OT_ZR_N7
//Description: Previous 2nd-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroOTIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroOTIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroOTIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroOTIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroOTIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Other claims
ClaimsAuto: => H_NumZeroOTIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsOTZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroOTIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroOTIn7thYr,C_CAP_992));



//PD_6mon_AMT PD_12mon_AMT PD_18mon_AMT PD_24mon_AMT PD_30mon_AMT PD_36mon_AMT PD_42mon_AMT PD_48mon_AMT PD_54mon_AMT PD_60mon_AMT
//Description: Total PD claim amount in the past 6 months
ClaimsAuto: => H_TotalPDAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin6M,C_CAP_9999999992));

//Description: Total PD claim amount in the past 12 months
ClaimsAuto: => H_TotalPDAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin12M,C_CAP_9999999992));

//Description: Total PD claim amount in the past 18 months
ClaimsAuto: => H_TotalPDAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin24M,C_CAP_9999999992));

//Description: Total PD claim amount in the past 30 months
ClaimsAuto: => H_TotalPDAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin36M,C_CAP_9999999992));

//Description: Total PD claim amount in the past 42 months
ClaimsAuto: => H_TotalPDAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin48M,C_CAP_9999999992));

//Description: Total PD claim amount in the past 54 months
ClaimsAuto: => H_TotalPDAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin60M,C_CAP_9999999992));

//cum6_PD_AMT
//Description: Past 6-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin6Yr,C_CAP_9999999992));

//PD_AMT PD_AMT1 PD_AMT2 PD_AMT3 PD_AMT4 PD_AMT5 PD_AMT6 PD_AMT7
//Description: Past 7-year PD claim amount
ClaimsAuto: => H_TotalPDAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Property Damage claim amount
ClaimsAuto: => H_TotalPDAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalPDClaimAmount >=0), G_TotalPDClaimAmount);
ClaimsAuto: => I_TotPDAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPDAmtIn7thYr,C_CAP_9999999992));



//PD_6mon_CNT PD_12mon_CNT PD_18mon_CNT PD_24mon_CNT PD_30mon_CNT PD_36mon_CNT PD_42mon_CNT PD_48mon_CNT PD_54mon_CNT PD_60mon_CNT
//Description: # of PD claims in the past 6 months
ClaimsAuto: => H_NumPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin6M,C_CAP_992));

//Description: # of PD claims in the past 12 months
ClaimsAuto: => H_NumPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin12M,C_CAP_992));

//Description: # of PD claims in the past 18 months
ClaimsAuto: => H_NumPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin18M,C_CAP_992));

//Description: Past 2-year number of PD claims
ClaimsAuto: => H_NumPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin24M,C_CAP_992));

//Description: # of PD claims in the past 30 months
ClaimsAuto: => H_NumPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin30M,C_CAP_992));

//Description: Past 3-year number of PD claims
ClaimsAuto: => H_NumPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin36M,C_CAP_992));

//Description: # of PD claims in the past 42 months
ClaimsAuto: => H_NumPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin42M,C_CAP_992));

//Description: Past 4-year number of PD claims
ClaimsAuto: => H_NumPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin48M,C_CAP_992));

//Description: # of PD claims in the past 54 months
ClaimsAuto: => H_NumPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin54M,C_CAP_992));

//Description: Past 5-year number of PD claims
ClaimsAuto: => H_NumPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin60M,C_CAP_992));

//cum6_PD_CNT
//Description: Past 6-year number of PD claims
ClaimsAuto: => H_NumPDWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntPDWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin6Yr,C_CAP_992));

//PD_CNT PD_CNT1 PD_CNT2 PD_CNT3 PD_CNT4 PD_CNT5 PD_CNT6 PD_CNT7
//Description: Past 7-year number of PD claims
ClaimsAuto: => H_NumPDWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntPDWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Property Damage claims
ClaimsAuto: => H_NumPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPDIn7thYr,C_CAP_992));



//PD_6mon_NZCNT PD_12mon_NZCNT PD_18mon_NZCNT PD_24mon_NZCNT PD_30mon_NZCNT PD_36mon_NZCNT PD_42mon_NZCNT PD_48mon_NZCNT PD_54mon_NZCNT PD_60mon_NZCNT
//Description: # of above-zero-payment PD claims in the past 6 months
ClaimsAuto: => H_NumNZPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin6M,C_CAP_992));

//Description: # of above-zero-payment PD claims in the past 12 months
ClaimsAuto: => H_NumNZPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin12M,C_CAP_992));

//Description: # of above-zero-payment PD claims in the past 18 months
ClaimsAuto: => H_NumNZPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin18M,C_CAP_992));

//Description: Number of above-zero-payment PD claims in the past 2 years
ClaimsAuto: => H_NumNZPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin24M,C_CAP_992));

//Description: # of above-zero-payment PD claims in the past 30 months
ClaimsAuto: => H_NumNZPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin30M,C_CAP_992));

//Description: Number of above-zero-payment PD claims in the past 3 years
ClaimsAuto: => H_NumNZPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin36M,C_CAP_992));

//Description: # of above-zero-payment PD claims in the past 42 months
ClaimsAuto: => H_NumNZPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin42M,C_CAP_992));

//Description: Number of above-zero-payment PD claims in the past 4 years
ClaimsAuto: => H_NumNZPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin48M,C_CAP_992));

//Description: # of above-zero-payment PD claims in the past 54 months
ClaimsAuto: => H_NumNZPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin54M,C_CAP_992));

//Description: Number of above-zero-payment PD claims in the past 5 years
ClaimsAuto: => H_NumNZPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin60M,C_CAP_992));

//cum6_PD_NZCNT
//Description: Number of above-zero-payment PD claims in the past 6 years
ClaimsAuto: => H_NumNZPDWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZPDWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin6Yr,C_CAP_992));

//PD_NZCNT PD_NZCNT1 PD_NZCNT2 PD_NZCNT3 PD_NZCNT4 PD_NZCNT5 PD_NZCNT6 PD_NZCNT7
//Description: Number of above-zero-payment PD claims in the past 7 years
ClaimsAuto: => H_NumNZPDWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZPDWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Property Damage above-zero-payment claims
ClaimsAuto: => H_NumNZPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPDIn7thYr,C_CAP_992));



//PD6mon_CL_A PD12mon_CL_A PD18mon_CL_A PD24mon_CL_A PD30mon_CL_A PD36mon_CL_A PD42mon_CL_A PD48mon_CL_A PD54mon_CL_A PD60mon_CL_A
//Description: Closed PD claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedPDAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin6M,C_CAP_9999999992));

//Description: Closed PD claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedPDAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin12M,C_CAP_9999999992));

//Description: Closed PD claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedPDAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin24M,C_CAP_9999999992));

//Description: Closed PD claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedPDAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin36M,C_CAP_9999999992));

//Description: Closed PD claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedPDAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin48M,C_CAP_9999999992));

//Description: Closed PD claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedPDAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin60M,C_CAP_9999999992));

//cum6_PD_CL_AMT
//Description: Past 6-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed PD claim amount
ClaimsAuto: => H_TotalClosedPDAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtWithin7Yr,C_CAP_9999999992));



//PD_CL_A1 PD_CL_A2 PD_CL_A3 PD_CL_A4 PD_CL_A5 PD_CL_A6 PD_CL_A7 PD_CL_AMT
//Description: Previous 2nd-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Property Damage  claim amount
ClaimsAuto: => H_TotalClosedPDAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedPDClaimAmount >=0), G_TotalClosedPDClaimAmount);
ClaimsAuto: => I_TotClosedPDAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPDAmtIn7thYr,C_CAP_9999999992));



//PD6mon_CL_N PD12mon_CL_N PD18mon_CL_N PD24mon_CL_N PD30mon_CL_N PD36mon_CL_N PD42mon_CL_N PD48mon_CL_N PD54mon_CL_N PD60mon_CL_N
//Description: # of Closed PD claims in the past 6 months
ClaimsAuto: => H_NumClosedPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin6M,C_CAP_992));

//Description: # of Closed PD claims in the past 12 months
ClaimsAuto: => H_NumClosedPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin12M,C_CAP_992));

//Description: # of Closed PD claims in the past 18 months
ClaimsAuto: => H_NumClosedPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin18M,C_CAP_992));

//Description: # of Closed PD claims in the past 24 months
ClaimsAuto: => H_NumClosedPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin24M,C_CAP_992));

//Description: # of Closed PD claims in the past 30 months
ClaimsAuto: => H_NumClosedPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin30M,C_CAP_992));

//Description: # of Closed PD claims in the past 36 months
ClaimsAuto: => H_NumClosedPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin36M,C_CAP_992));

//Description: # of Closed PD claims in the past 42 months
ClaimsAuto: => H_NumClosedPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin42M,C_CAP_992));

//Description: # of Closed PD claims in the past 48 months
ClaimsAuto: => H_NumClosedPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin48M,C_CAP_992));

//Description: # of Closed PD claims in the past 54 months
ClaimsAuto: => H_NumClosedPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin54M,C_CAP_992));

//Description: # of Closed PD claims in the past 60 months
ClaimsAuto: => H_NumClosedPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDWithin60M,C_CAP_992));



//PD_CL_N1 PD_CL_N2 PD_CL_N3 PD_CL_N4 PD_CL_N5 PD_CL_N6 PD_CL_N7
//Description: Previous 2nd-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Property Damage  claims
ClaimsAuto: => H_NumClosedPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPDIn7thYr,C_CAP_992));



//PD6mon_OP_A PD12mon_OP_A PD18mon_OP_A PD24mon_OP_A PD30mon_OP_A PD36mon_OP_A PD42mon_OP_A PD48mon_OP_A PD54mon_OP_A PD60mon_OP_A
//Description: Open PD claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenPDAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin6M,C_CAP_9999999992));

//Description: Open PD claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenPDAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin12M,C_CAP_9999999992));

//Description: Open PD claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenPDAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin24M,C_CAP_9999999992));

//Description: Open PD claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenPDAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin36M,C_CAP_9999999992));

//Description: Open PD claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenPDAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin48M,C_CAP_9999999992));

//Description: Open PD claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenPDAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin60M,C_CAP_9999999992));

//cum6_PD_OP_AMT
//Description: Past 6-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open PD claim amount
ClaimsAuto: => H_TotalOpenPDAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtWithin7Yr,C_CAP_9999999992));



//PD_OP_A1 PD_OP_A2 PD_OP_A3 PD_OP_A4 PD_OP_A5 PD_OP_A6 PD_OP_A7 PD_OP_AMT
//Description: Previous 2nd-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Property Damage claim amount
ClaimsAuto: => H_TotalOpenPDAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenPDClaimAmount >=0), G_TotalOpenPDClaimAmount);
ClaimsAuto: => I_TotOpenPDAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPDAmtIn7thYr,C_CAP_9999999992));



//PD6mon_OP_N PD12mon_OP_N PD18mon_OP_N PD24mon_OP_N PD30mon_OP_N PD36mon_OP_N PD36mon_OP_N PD42mon_OP_N PD48mon_OP_N PD54mon_OP_N PD60mon_OP_N
//Description: # of Open PD claims in the past 6 months
ClaimsAuto: => H_NumOpenPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin6M,C_CAP_992));

//Description: # of Open PD claims in the past 12 months
ClaimsAuto: => H_NumOpenPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin12M,C_CAP_992));

//Description: # of Open PD claims in the past 18 months
ClaimsAuto: => H_NumOpenPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin18M,C_CAP_992));

//Description: # of Open PD claims in the past 24 months
ClaimsAuto: => H_NumOpenPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin24M,C_CAP_992));

//Description: # of Open PD claims in the past 30 months
ClaimsAuto: => H_NumOpenPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin30M,C_CAP_992));

//Description: # of Open PD claims in the past 36 months
ClaimsAuto: => H_NumOpenPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin36M,C_CAP_992));

//Description: # of Open PD claims in the past 42 months
ClaimsAuto: => H_NumOpenPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin42M,C_CAP_992));

//Description: # of Open PD claims in the past 48 months
ClaimsAuto: => H_NumOpenPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin48M,C_CAP_992));

//Description: # of Open PD claims in the past 54 months
ClaimsAuto: => H_NumOpenPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin54M,C_CAP_992));

//Description: # of Open PD claims in the past 60 months
ClaimsAuto: => H_NumOpenPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDWithin60M,C_CAP_992));



//PD_OP_N1 PD_OP_N2 PD_OP_N3 PD_OP_N4 PD_OP_N5 PD_OP_N6 PD_OP_N7
//Description: Previous 2nd-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Property Damage claims
ClaimsAuto: => H_NumOpenPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPDIn7thYr,C_CAP_992));



//PD6mon_OT_A PD12mon_OT_A PD18mon_OT_A PD24mon_OT_A PD30mon_OT_A PD36mon_OT_A PD42mon_OT_A PD48mon_OT_A PD54mon_OT_A PD60mon_OT_A
//Description: Other PD claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherPDAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin6M,C_CAP_9999999992));

//Description: Other PD claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherPDAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin12M,C_CAP_9999999992));

//Description: Other PD claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherPDAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year number of other PD claims
ClaimsAuto: => H_TotalOtherPDAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin24M,C_CAP_9999999992));

//Description: Other PD claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherPDAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other PD claim amount
ClaimsAuto: => H_TotalOtherPDAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin36M,C_CAP_9999999992));

//Description: Other PD claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherPDAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other PD claim amount
ClaimsAuto: => H_TotalOtherPDAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin48M,C_CAP_9999999992));

//Description: Other PD claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherPDAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other PD claim amount
ClaimsAuto: => H_TotalOtherPDAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin60M,C_CAP_9999999992));

//cum6_PD_OT_AMT
//Description: Past 6-year other PD claim amount
ClaimsAuto: => H_TotalOtherPDAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other PD claim amount
ClaimsAuto: => H_TotalOtherPDAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtWithin7Yr,C_CAP_9999999992));



//PD_OT_A1 PD_OT_A2 PD_OT_A3 PD_OT_A4 PD_OT_A5 PD_OT_A6 PD_OT_A7 PD_OT_AMT
//Description: Previous 2nd-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Property Damage claim amount
ClaimsAuto: => H_TotalOtherPDAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherPDClaimAmount >=0), G_TotalOtherPDClaimAmount);
ClaimsAuto: => I_TotOtherPDAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPDAmtIn7thYr,C_CAP_9999999992));



//PD6mon_OT_N PD12mon_OT_N PD18mon_OT_N PD24mon_OT_N PD30mon_OT_N PD36mon_OT_N PD42mon_OT_N PD48mon_OT_N PD54mon_OT_N PD60mon_OT_N
//Description: # of Other PD claims in the past 6 months
ClaimsAuto: => H_NumOtherPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin6M,C_CAP_992));

//Description: # of Other PD claims in the past 12 months
ClaimsAuto: => H_NumOtherPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin12M,C_CAP_992));

//Description: # of Other PD claims in the past 18 months
ClaimsAuto: => H_NumOtherPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin18M,C_CAP_992));

//Description: # of Other PD claims in the past 24 months
ClaimsAuto: => H_NumOtherPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin24M,C_CAP_992));

//Description: # of Other PD claims in the past 30 months
ClaimsAuto: => H_NumOtherPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin30M,C_CAP_992));

//Description: # of Other PD claims in the past 36 months
ClaimsAuto: => H_NumOtherPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin36M,C_CAP_992));

//Description: # of Other PD claims in the past 42 months
ClaimsAuto: => H_NumOtherPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin42M,C_CAP_992));

//Description: # of Other PD claims in the past 48 months
ClaimsAuto: => H_NumOtherPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin48M,C_CAP_992));

//Description: # of Other PD claims in the past 54 months
ClaimsAuto: => H_NumOtherPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin54M,C_CAP_992));

//Description: # of Other PD claims in the past 60 months
ClaimsAuto: => H_NumOtherPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDWithin60M,C_CAP_992));



//PD_OT_N1 PD_OT_N2 PD_OT_N3 PD_OT_N4 PD_OT_N5 PD_OT_N6 PD_OT_N7
//Description: Previous 2nd-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Property Damage claims
ClaimsAuto: => H_NumOtherPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPDIn7thYr,C_CAP_992));



//PD6mon_ZR_N PD12mon_ZR_N PD18mon_ZR_N PD24mon_ZR_N PD30mon_ZR_N PD36mon_ZR_N PD42mon_ZR_N PD48mon_ZR_N PD54mon_ZR_N PD60mon_ZR_N
//Description: # of Zero-payment PD claims in the past 6 months
ClaimsAuto: => H_NumZeroPDWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroPDWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin6M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 12 months
ClaimsAuto: => H_NumZeroPDWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroPDWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin12M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 18 months
ClaimsAuto: => H_NumZeroPDWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroPDWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin18M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 24 months
ClaimsAuto: => H_NumZeroPDWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroPDWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin24M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 30 months
ClaimsAuto: => H_NumZeroPDWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroPDWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin30M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 36 months
ClaimsAuto: => H_NumZeroPDWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroPDWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin36M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 42 months
ClaimsAuto: => H_NumZeroPDWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroPDWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin42M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 48 months
ClaimsAuto: => H_NumZeroPDWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroPDWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin48M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 54 months
ClaimsAuto: => H_NumZeroPDWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroPDWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin54M,C_CAP_992));

//Description: # of Zero-payment PD claims in the past 60 months
ClaimsAuto: => H_NumZeroPDWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroPDWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDWithin60M,C_CAP_992));



//PD_ZR_N1 PD_ZR_N2 PD_ZR_N3 PD_ZR_N4 PD_ZR_N5 PD_ZR_N6 PD_ZR_N7
//Description: Previous 2nd-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroPDIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroPDIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroPDIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroPDIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroPDIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Property Damage claims
ClaimsAuto: => H_NumZeroPDIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPDZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroPDIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPDIn7thYr,C_CAP_992));



//PI_6mon_AMT PI_12mon_AMT PI_18mon_AMT PI_24mon_AMT PI_30mon_AMT PI_36mon_AMT PI_42mon_AMT PI_48mon_AMT PI_54mon_AMT PI_60mon_AMT
//Description: Total PI claim amount in the past 6 months
ClaimsAuto: => H_TotalPIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin6M,C_CAP_9999999992));

//Description: Total PI claim amount in the past 12 months
ClaimsAuto: => H_TotalPIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin12M,C_CAP_9999999992));

//Description: Total PI claim amount in the past 18 months
ClaimsAuto: => H_TotalPIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin24M,C_CAP_9999999992));

//Description: Total PI claim amount in the past 30 months
ClaimsAuto: => H_TotalPIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin36M,C_CAP_9999999992));

//Description: Total PI claim amount in the past 42 months
ClaimsAuto: => H_TotalPIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin48M,C_CAP_9999999992));

//Description: Total PI claim amount in the past 54 months
ClaimsAuto: => H_TotalPIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin60M,C_CAP_9999999992));

//cum6_PI_AMT
//Description: Past 6-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin6Yr,C_CAP_9999999992));

//PI_AMT PI_AMT1 PI_AMT2 PI_AMT3 PI_AMT4 PI_AMT5 PI_AMT6 PI_AMT7
//Description: Past 7-year PI claim amount
ClaimsAuto: => H_TotalPIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Personal Injury claim amount
ClaimsAuto: => H_TotalPIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalPIClaimAmount >=0), G_TotalPIClaimAmount);
ClaimsAuto: => I_TotPIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalPIAmtIn7thYr,C_CAP_9999999992));



//PI_6mon_CNT PI_12mon_CNT PI_18mon_CNT PI_24mon_CNT PI_30mon_CNT PI_36mon_CNT PI_42mon_CNT PI_48mon_CNT PI_54mon_CNT PI_60mon_CNT
//Description: # of PI claims in the past 6 months
ClaimsAuto: => H_NumPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin6M,C_CAP_992));

//Description: # of PI claims in the past 12 months
ClaimsAuto: => H_NumPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin12M,C_CAP_992));

//Description: # of PI claims in the past 18 months
ClaimsAuto: => H_NumPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin18M,C_CAP_992));

//Description: Past 2-year number of PI claims
ClaimsAuto: => H_NumPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin24M,C_CAP_992));

//Description: # of PI claims in the past 30 months
ClaimsAuto: => H_NumPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin30M,C_CAP_992));

//Description: Past 3-year number of PI claims
ClaimsAuto: => H_NumPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin36M,C_CAP_992));

//Description: # of PI claims in the past 42 months
ClaimsAuto: => H_NumPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin42M,C_CAP_992));

//Description: Past 4-year number of PI claims
ClaimsAuto: => H_NumPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin48M,C_CAP_992));

//Description: # of PI claims in the past 54 months
ClaimsAuto: => H_NumPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin54M,C_CAP_992));

//Description: Past 5-year number of PI claims
ClaimsAuto: => H_NumPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin60M,C_CAP_992));

//cum6_PI_CNT
//Description: Past 6-year number of PI claims
ClaimsAuto: => H_NumPIWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntPIWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin6Yr,C_CAP_992));

//PI_CNT PI_CNT1 PI_CNT2 PI_CNT3 PI_CNT4 PI_CNT5 PI_CNT6 PI_CNT7
//Description: Past 7-year number of PI claims
ClaimsAuto: => H_NumPIWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntPIWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Personal Injury claims
ClaimsAuto: => H_NumPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumPIIn7thYr,C_CAP_992));



//PI_6mon_NZCNT PI_12mon_NZCNT PI_18mon_NZCNT PI_24mon_NZCNT PI_30mon_NZCNT PI_36mon_NZCNT PI_42mon_NZCNT PI_48mon_NZCNT PI_54mon_NZCNT PI_60mon_NZCNT
//Description: # of above-zero-payment PI claims in the past 6 months
ClaimsAuto: => H_NumNZPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin6M,C_CAP_992));

//Description: # of above-zero-payment PI claims in the past 12 months
ClaimsAuto: => H_NumNZPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin12M,C_CAP_992));

//Description: # of above-zero-payment PI claims in the past 18 months
ClaimsAuto: => H_NumNZPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin18M,C_CAP_992));

//Description: Number of above-zero-payment PI claims in the past 2 years
ClaimsAuto: => H_NumNZPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin24M,C_CAP_992));

//Description: # of above-zero-payment PI claims in the past 30 months
ClaimsAuto: => H_NumNZPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin30M,C_CAP_992));

//Description: Number of above-zero-payment PI claims in the past 3 years
ClaimsAuto: => H_NumNZPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin36M,C_CAP_992));

//Description: # of above-zero-payment PI claims in the past 42 months
ClaimsAuto: => H_NumNZPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin42M,C_CAP_992));

//Description: Number of above-zero-payment PI claims in the past 4 years
ClaimsAuto: => H_NumNZPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin48M,C_CAP_992));

//Description: # of above-zero-payment PI claims in the past 54 months
ClaimsAuto: => H_NumNZPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin54M,C_CAP_992));

//Description: Number of above-zero-payment PI claims in the past 5 years
ClaimsAuto: => H_NumNZPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin60M,C_CAP_992));

//cum6_PI_NZCNT
//Description: Number of above-zero-payment PI claims in the past 6 years
ClaimsAuto: => H_NumNZPIWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZPIWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin6Yr,C_CAP_992));

//PI_NZCNT PI_NZCNT1 PI_NZCNT2 PI_NZCNT3 PI_NZCNT4 PI_NZCNT5 PI_NZCNT6 PI_NZCNT7
//Description: Number of above-zero-payment PI claims in the past 7 years
ClaimsAuto: => H_NumNZPIWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZPIWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of above-zero-payment Personal Injury claims
ClaimsAuto: => H_NumNZPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Personal Injury above-zero-payment claims
ClaimsAuto: => H_NumNZPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Personal Injury above-zero-payment claims
ClaimsAuto: => H_NumNZPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Personal Injury above-zero-payment claims
ClaimsAuto: => H_NumNZPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Personal Injury above-zero-payment claims
ClaimsAuto: => H_NumNZPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Personal Injury above-zero-payment claims
ClaimsAuto: => H_NumNZPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZPIIn7thYr,C_CAP_992));



//PI6mon_CL_A PI12mon_CL_A PI18mon_CL_A PI24mon_CL_A PI30mon_CL_A PI36mon_CL_A PI42mon_CL_A PI48mon_CL_A PI54mon_CL_A PI60mon_CL_A
//Description: Closed PI claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedPIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin6M,C_CAP_9999999992));

//Description: Closed PI claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedPIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin12M,C_CAP_9999999992));

//Description: Closed PI claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedPIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin24M,C_CAP_9999999992));

//Description: Closed PI claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedPIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin36M,C_CAP_9999999992));

//Description: Closed PI claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedPIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin48M,C_CAP_9999999992));

//Description: Closed PI claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedPIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin60M,C_CAP_9999999992));

//cum6_PI_CL_AMT
//Description: Past 6-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed PI claim amount
ClaimsAuto: => H_TotalClosedPIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtWithin7Yr,C_CAP_9999999992));



//PI_CL_A1 PI_CL_A2 PI_CL_A3 PI_CL_A4 PI_CL_A5 PI_CL_A6 PI_CL_A7 PI_CL_AMT
//Description: Previous 2nd-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Personal Injury  claim amount
ClaimsAuto: => H_TotalClosedPIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedPIClaimAmount >=0), G_TotalClosedPIClaimAmount);
ClaimsAuto: => I_TotClosedPIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedPIAmtIn7thYr,C_CAP_9999999992));



//PI6mon_CL_N PI12mon_CL_N PI18mon_CL_N PI24mon_CL_N PI30mon_CL_N PI36mon_CL_N PI42mon_CL_N PI48mon_CL_N PI54mon_CL_N PI60mon_CL_N
//Description: # of Closed PI claims in the past 6 months
ClaimsAuto: => H_NumClosedPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin6M,C_CAP_992));

//Description: # of Closed PI claims in the past 12 months
ClaimsAuto: => H_NumClosedPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin12M,C_CAP_992));

//Description: # of Closed PI claims in the past 18 months
ClaimsAuto: => H_NumClosedPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin18M,C_CAP_992));

//Description: # of Closed PI claims in the past 24 months
ClaimsAuto: => H_NumClosedPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin24M,C_CAP_992));

//Description: # of Closed PI claims in the past 30 months
ClaimsAuto: => H_NumClosedPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin30M,C_CAP_992));

//Description: # of Closed PI claims in the past 36 months
ClaimsAuto: => H_NumClosedPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin36M,C_CAP_992));

//Description: # of Closed PI claims in the past 42 months
ClaimsAuto: => H_NumClosedPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin42M,C_CAP_992));

//Description: # of Closed PI claims in the past 48 months
ClaimsAuto: => H_NumClosedPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin48M,C_CAP_992));

//Description: # of Closed PI claims in the past 54 months
ClaimsAuto: => H_NumClosedPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin54M,C_CAP_992));

//Description: # of Closed PI claims in the past 60 months
ClaimsAuto: => H_NumClosedPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIWithin60M,C_CAP_992));



//PI_CL_N1 PI_CL_N2 PI_CL_N3 PI_CL_N4 PI_CL_N5 PI_CL_N6 PI_CL_N7
//Description: Previous 2nd-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Personal Injury  claims
ClaimsAuto: => H_NumClosedPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedPIIn7thYr,C_CAP_992));



//PI6mon_OP_A PI12mon_OP_A PI18mon_OP_A PI24mon_OP_A PI30mon_OP_A PI36mon_OP_A PI42mon_OP_A PI48mon_OP_A PI54mon_OP_A PI60mon_OP_A
//Description: Open PI claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenPIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin6M,C_CAP_9999999992));

//Description: Open PI claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenPIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin12M,C_CAP_9999999992));

//Description: Open PI claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenPIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin24M,C_CAP_9999999992));

//Description: Open PI claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenPIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin36M,C_CAP_9999999992));

//Description: Open PI claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenPIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin48M,C_CAP_9999999992));

//Description: Open PI claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenPIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin60M,C_CAP_9999999992));

//cum6_PI_OP_AMT
//Description: Past 6-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open PI claim amount
ClaimsAuto: => H_TotalOpenPIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtWithin7Yr,C_CAP_9999999992));



//PI_OP_A1 PI_OP_A2 PI_OP_A3 PI_OP_A4 PI_OP_A5 PI_OP_A6 PI_OP_A7 PI_OP_AMT
//Description: Previous 2nd-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Personal Injury claim amount
ClaimsAuto: => H_TotalOpenPIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenPIClaimAmount >=0), G_TotalOpenPIClaimAmount);
ClaimsAuto: => I_TotOpenPIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenPIAmtIn7thYr,C_CAP_9999999992));



//PI6mon_OP_N PI12mon_OP_N PI18mon_OP_N PI24mon_OP_N PI30mon_OP_N PI36mon_OP_N PI36mon_OP_N PI42mon_OP_N PI48mon_OP_N PI54mon_OP_N PI60mon_OP_N
//Description: # of Open PI claims in the past 6 months
ClaimsAuto: => H_NumOpenPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin6M,C_CAP_992));

//Description: # of Open PI claims in the past 12 months
ClaimsAuto: => H_NumOpenPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin12M,C_CAP_992));

//Description: # of Open PI claims in the past 18 months
ClaimsAuto: => H_NumOpenPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin18M,C_CAP_992));

//Description: # of Open PI claims in the past 24 months
ClaimsAuto: => H_NumOpenPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin24M,C_CAP_992));

//Description: # of Open PI claims in the past 30 months
ClaimsAuto: => H_NumOpenPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin30M,C_CAP_992));

//Description: # of Open PI claims in the past 36 months
ClaimsAuto: => H_NumOpenPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin36M,C_CAP_992));

//Description: # of Open PI claims in the past 42 months
ClaimsAuto: => H_NumOpenPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin42M,C_CAP_992));

//Description: # of Open PI claims in the past 48 months
ClaimsAuto: => H_NumOpenPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin48M,C_CAP_992));

//Description: # of Open PI claims in the past 54 months
ClaimsAuto: => H_NumOpenPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin54M,C_CAP_992));

//Description: # of Open PI claims in the past 60 months
ClaimsAuto: => H_NumOpenPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIWithin60M,C_CAP_992));



//PI_OP_N1 PI_OP_N2 PI_OP_N3 PI_OP_N4 PI_OP_N5 PI_OP_N6 PI_OP_N7
//Description: Previous 2nd-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Personal Injury claims
ClaimsAuto: => H_NumOpenPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenPIIn7thYr,C_CAP_992));



//PI6mon_OT_A PI12mon_OT_A PI18mon_OT_A PI24mon_OT_A PI30mon_OT_A PI36mon_OT_A PI42mon_OT_A PI48mon_OT_A PI54mon_OT_A PI60mon_OT_A
//Description: Other PI claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherPIAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin6M,C_CAP_9999999992));

//Description: Other PI claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherPIAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin12M,C_CAP_9999999992));

//Description: Other PI claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherPIAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year number of other PI claims
ClaimsAuto: => H_TotalOtherPIAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin24M,C_CAP_9999999992));

//Description: Other PI claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherPIAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other PI claim amount
ClaimsAuto: => H_TotalOtherPIAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin36M,C_CAP_9999999992));

//Description: Other PI claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherPIAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other PI claim amount
ClaimsAuto: => H_TotalOtherPIAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin48M,C_CAP_9999999992));

//Description: Other PI claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherPIAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other PI claim amount
ClaimsAuto: => H_TotalOtherPIAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin60M,C_CAP_9999999992));

//cum6_PI_OT_AMT
//Description: Past 6-year other PI claim amount
ClaimsAuto: => H_TotalOtherPIAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other PI claim amount
ClaimsAuto: => H_TotalOtherPIAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtWithin7Yr,C_CAP_9999999992));



//PI_OT_A1 PI_OT_A2 PI_OT_A3 PI_OT_A4 PI_OT_A5 PI_OT_A6 PI_OT_A7 PI_OT_AMT
//Description: Previous 2nd-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Personal Injury claim amount
ClaimsAuto: => H_TotalOtherPIAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherPIClaimAmount >=0), G_TotalOtherPIClaimAmount);
ClaimsAuto: => I_TotOtherPIAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherPIAmtIn7thYr,C_CAP_9999999992));



//PI6mon_OT_N PI12mon_OT_N PI18mon_OT_N PI24mon_OT_N PI30mon_OT_N PI36mon_OT_N PI42mon_OT_N PI48mon_OT_N PI54mon_OT_N PI60mon_OT_N
//Description: # of Other PI claims in the past 6 months
ClaimsAuto: => H_NumOtherPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin6M,C_CAP_992));

//Description: # of Other PI claims in the past 12 months
ClaimsAuto: => H_NumOtherPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin12M,C_CAP_992));

//Description: # of Other PI claims in the past 18 months
ClaimsAuto: => H_NumOtherPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin18M,C_CAP_992));

//Description: # of Other PI claims in the past 24 months
ClaimsAuto: => H_NumOtherPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin24M,C_CAP_992));

//Description: # of Other PI claims in the past 30 months
ClaimsAuto: => H_NumOtherPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin30M,C_CAP_992));

//Description: # of Other PI claims in the past 36 months
ClaimsAuto: => H_NumOtherPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin36M,C_CAP_992));

//Description: # of Other PI claims in the past 42 months
ClaimsAuto: => H_NumOtherPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin42M,C_CAP_992));

//Description: # of Other PI claims in the past 48 months
ClaimsAuto: => H_NumOtherPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin48M,C_CAP_992));

//Description: # of Other PI claims in the past 54 months
ClaimsAuto: => H_NumOtherPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin54M,C_CAP_992));

//Description: # of Other PI claims in the past 60 months
ClaimsAuto: => H_NumOtherPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIWithin60M,C_CAP_992));



//PI_OT_N1 PI_OT_N2 PI_OT_N3 PI_OT_N4 PI_OT_N5 PI_OT_N6 PI_OT_N7
//Description: Previous 2nd-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Personal Injury claims
ClaimsAuto: => H_NumOtherPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherPIIn7thYr,C_CAP_992));



//PI6mon_ZR_N PI12mon_ZR_N PI18mon_ZR_N PI24mon_ZR_N PI30mon_ZR_N PI36mon_ZR_N PI42mon_ZR_N PI48mon_ZR_N PI54mon_ZR_N PI60mon_ZR_N
//Description: # of Zero-payment PI claims in the past 6 months
ClaimsAuto: => H_NumZeroPIWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroPIWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin6M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 12 months
ClaimsAuto: => H_NumZeroPIWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroPIWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin12M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 18 months
ClaimsAuto: => H_NumZeroPIWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroPIWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin18M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 24 months
ClaimsAuto: => H_NumZeroPIWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroPIWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin24M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 30 months
ClaimsAuto: => H_NumZeroPIWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroPIWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin30M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 36 months
ClaimsAuto: => H_NumZeroPIWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroPIWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin36M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 42 months
ClaimsAuto: => H_NumZeroPIWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroPIWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin42M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 48 months
ClaimsAuto: => H_NumZeroPIWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroPIWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin48M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 54 months
ClaimsAuto: => H_NumZeroPIWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroPIWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin54M,C_CAP_992));

//Description: # of Zero-payment PI claims in the past 60 months
ClaimsAuto: => H_NumZeroPIWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroPIWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIWithin60M,C_CAP_992));



//PI_ZR_N1 PI_ZR_N2 PI_ZR_N3 PI_ZR_N4 PI_ZR_N5 PI_ZR_N6 PI_ZR_N7
//Description: Previous 2nd-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroPIIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroPIIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroPIIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroPIIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroPIIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Personal Injury claims
ClaimsAuto: => H_NumZeroPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsPIZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroPIIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroPIIn7thYr,C_CAP_992));



//RR_6mon_AMT RR_12mon_AMT RR_18mon_AMT RR_24mon_AMT RR_30mon_AMT RR_36mon_AMT RR_42mon_AMT RR_48mon_AMT RR_54mon_AMT RR_60mon_AMT
//Description: Total RR claim amount in the past 6 months
ClaimsAuto: => H_TotalRRAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin6M,C_CAP_9999999992));

//Description: Past 1-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin12M,C_CAP_9999999992));

//Description: Total RR claim amount in the past 18 months
ClaimsAuto: => H_TotalRRAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin24M,C_CAP_9999999992));

//Description: Total RR claim amount in the past 30 months
ClaimsAuto: => H_TotalRRAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin36M,C_CAP_9999999992));

//Description: Total RR claim amount in the past 42 months
ClaimsAuto: => H_TotalRRAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin48M,C_CAP_9999999992));

//Description: Total RR claim amount in the past 54 months
ClaimsAuto: => H_TotalRRAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin60M,C_CAP_9999999992));

//cum6_RR_AMT
//Description: Past 6-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin6Yr,C_CAP_9999999992));

//RR_AMT RR_AMT1 RR_AMT2 RR_AMT3 RR_AMT4 RR_AMT5 RR_AMT6 RR_AMT7
//Description: Past 7-year RR claim amount
ClaimsAuto: => H_TotalRRAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total claim  Rental Reimbursement amount
ClaimsAuto: => H_TotalRRAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalRRClaimAmount >=0), G_TotalRRClaimAmount);
ClaimsAuto: => I_TotRRAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalRRAmtIn7thYr,C_CAP_9999999992));



//RR_6mon_CNT RR_12mon_CNT RR_18mon_CNT RR_24mon_CNT RR_30mon_CNT RR_36mon_CNT RR_42mon_CNT RR_48mon_CNT RR_54mon_CNT RR_60mon_CNT
//Description: # of RR claims in the past 6 months
ClaimsAuto: => H_NumRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin6M,C_CAP_992));

//Description: Past 1-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin12M,C_CAP_992));

//Description: # of RR claims in the past 18 months
ClaimsAuto: => H_NumRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin18M,C_CAP_992));

//Description: Past 2-year number of RR claims
ClaimsAuto: => H_NumRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin24M,C_CAP_992));

//Description: # of RR claims in the past 30 months
ClaimsAuto: => H_NumRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin30M,C_CAP_992));

//Description: Past 3-year number of RR claims
ClaimsAuto: => H_NumRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin36M,C_CAP_992));

//Description: # of RR claims in the past 42 months
ClaimsAuto: => H_NumRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin42M,C_CAP_992));

//Description: Past 4-year number of RR claims
ClaimsAuto: => H_NumRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin48M,C_CAP_992));

//Description: # of RR claims in the past 54 months
ClaimsAuto: => H_NumRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin54M,C_CAP_992));

//Description: Past 5-year number of RR claims
ClaimsAuto: => H_NumRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin60M,C_CAP_992));

//cum6_RR_CNT
//Description: Past 6-year number of RR claims
ClaimsAuto: => H_NumRRWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRRWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin6Yr,C_CAP_992));

//RR_CNT RR_CNT1 RR_CNT2 RR_CNT3 RR_CNT4 RR_CNT5 RR_CNT6 RR_CNT7
//Description: Past 7-year number of RR claims
ClaimsAuto: => H_NumRRWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRRWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year total # of Rental Reimbursement claims
ClaimsAuto: => H_NumRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRRIn7thYr,C_CAP_992));



//RR_6mon_NZCNT RR_12mon_NZCNT RR_18mon_NZCNT RR_24mon_NZCNT RR_30mon_NZCNT RR_36mon_NZCNT RR_42mon_NZCNT RR_48mon_NZCNT RR_54mon_NZCNT RR_60mon_NZCNT
//Description: # of above-zero-payment RR claims in the past 6 months
ClaimsAuto: => H_NumNZRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin6M,C_CAP_992));

//Description: # of above-zero-payment RR claims in the past 12 months
ClaimsAuto: => H_NumNZRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin12M,C_CAP_992));

//Description: # of above-zero-payment RR claims in the past 18 months
ClaimsAuto: => H_NumNZRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin18M,C_CAP_992));

//Description: Number of above-zero-payment RR claims in the past 2 years
ClaimsAuto: => H_NumNZRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin24M,C_CAP_992));

//Description: # of above-zero-payment RR claims in the past 30 months
ClaimsAuto: => H_NumNZRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin30M,C_CAP_992));

//Description: Number of above-zero-payment RR claims in the past 3 years
ClaimsAuto: => H_NumNZRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin36M,C_CAP_992));

//Description: # of above-zero-payment RR claims in the past 42 months
ClaimsAuto: => H_NumNZRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin42M,C_CAP_992));

//Description: Number of above-zero-payment RR claims in the past 4 years
ClaimsAuto: => H_NumNZRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin48M,C_CAP_992));

//Description: # of above-zero-payment RR claims in the past 54 months
ClaimsAuto: => H_NumNZRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin54M,C_CAP_992));

//Description: Number of above-zero-payment RR claims in the past 5 years
ClaimsAuto: => H_NumNZRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin60M,C_CAP_992));

//cum6_RR_NZCNT
//Description: Number of above-zero-payment RR claims in the past 6 years
ClaimsAuto: => H_NumNZRRWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZRRWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin6Yr,C_CAP_992));

//RR_NZCNT RR_NZCNT1 RR_NZCNT2 RR_NZCNT3 RR_NZCNT4 RR_NZCNT5 RR_NZCNT6 RR_NZCNT7
//Description: Number of above-zero-payment RR claims in the past 7 years
ClaimsAuto: => H_NumNZRRWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZRRWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Rental Reimbursement above-zero-payment claims
ClaimsAuto: => H_NumNZRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZRRIn7thYr,C_CAP_992));



//RR6mon_CL_A RR12mon_CL_A RR18mon_CL_A RR24mon_CL_A RR30mon_CL_A RR36mon_CL_A RR42mon_CL_A RR48mon_CL_A RR54mon_CL_A RR60mon_CL_A
//Description: Closed RR claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedRRAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin6M,C_CAP_9999999992));

//Description: Closed RR claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedRRAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin12M,C_CAP_9999999992));

//Description: Closed RR claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedRRAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin24M,C_CAP_9999999992));

//Description: Closed RR claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedRRAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin36M,C_CAP_9999999992));

//Description: Closed RR claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedRRAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin48M,C_CAP_9999999992));

//Description: Closed RR claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedRRAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin60M,C_CAP_9999999992));

//cum6_RR_CL_AMT
//Description: Past 6-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed RR claim amount
ClaimsAuto: => H_TotalClosedRRAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtWithin7Yr,C_CAP_9999999992));



//RR_CL_A1 RR_CL_A2 RR_CL_A3 RR_CL_A4 RR_CL_A5 RR_CL_A6 RR_CL_A7 RR_CL_AMT
//Description: Previous 2nd-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Rental Reimbursement  claim amount
ClaimsAuto: => H_TotalClosedRRAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedRRClaimAmount >=0), G_TotalClosedRRClaimAmount);
ClaimsAuto: => I_TotClosedRRAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedRRAmtIn7thYr,C_CAP_9999999992));



//RR6mon_CL_N RR12mon_CL_N RR18mon_CL_N RR24mon_CL_N RR30mon_CL_N RR36mon_CL_N RR42mon_CL_N RR48mon_CL_N RR54mon_CL_N RR60mon_CL_N
//Description: # of Closed RR claims in the past 6 months
ClaimsAuto: => H_NumClosedRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin6M,C_CAP_992));

//Description: # of Closed RR claims in the past 12 months
ClaimsAuto: => H_NumClosedRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin12M,C_CAP_992));

//Description: # of Closed RR claims in the past 18 months
ClaimsAuto: => H_NumClosedRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin18M,C_CAP_992));

//Description: # of Closed RR claims in the past 24 months
ClaimsAuto: => H_NumClosedRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin24M,C_CAP_992));

//Description: # of Closed RR claims in the past 30 months
ClaimsAuto: => H_NumClosedRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin30M,C_CAP_992));

//Description: # of Closed RR claims in the past 36 months
ClaimsAuto: => H_NumClosedRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin36M,C_CAP_992));

//Description: # of Closed RR claims in the past 42 months
ClaimsAuto: => H_NumClosedRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin42M,C_CAP_992));

//Description: # of Closed RR claims in the past 48 months
ClaimsAuto: => H_NumClosedRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin48M,C_CAP_992));

//Description: # of Closed RR claims in the past 54 months
ClaimsAuto: => H_NumClosedRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin54M,C_CAP_992));

//Description: # of Closed RR claims in the past 60 months
ClaimsAuto: => H_NumClosedRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRWithin60M,C_CAP_992));



//RR_CL_N1 RR_CL_N2 RR_CL_N3 RR_CL_N4 RR_CL_N5 RR_CL_N6 RR_CL_N7
//Description: Previous 2nd-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Rental Reimbursement  claims
ClaimsAuto: => H_NumClosedRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedRRIn7thYr,C_CAP_992));



//RR6mon_OP_A RR12mon_OP_A RR18mon_OP_A RR24mon_OP_A RR30mon_OP_A RR36mon_OP_A RR42mon_OP_A RR48mon_OP_A RR54mon_OP_A RR60mon_OP_A
//Description: Open RR claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenRRAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin6M,C_CAP_9999999992));

//Description: Open RR claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenRRAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin12M,C_CAP_9999999992));

//Description: Open RR claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenRRAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin24M,C_CAP_9999999992));

//Description: Open RR claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenRRAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin36M,C_CAP_9999999992));

//Description: Open RR claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenRRAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin48M,C_CAP_9999999992));

//Description: Open RR claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenRRAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin60M,C_CAP_9999999992));

//cum6_RR_OP_AMT
//Description: Past 6-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open RR claim amount
ClaimsAuto: => H_TotalOpenRRAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtWithin7Yr,C_CAP_9999999992));



//RR_OP_A1 RR_OP_A2 RR_OP_A3 RR_OP_A4 RR_OP_A5 RR_OP_A6 RR_OP_A7 RR_OP_AMT
//Description: Previous 2nd-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOpenRRAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenRRClaimAmount >=0), G_TotalOpenRRClaimAmount);
ClaimsAuto: => I_TotOpenRRAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenRRAmtIn7thYr,C_CAP_9999999992));



//RR6mon_OP_N RR12mon_OP_N RR18mon_OP_N RR24mon_OP_N RR30mon_OP_N RR36mon_OP_N RR36mon_OP_N RR42mon_OP_N RR48mon_OP_N RR54mon_OP_N RR60mon_OP_N
//Description: # of Open RR claims in the past 6 months
ClaimsAuto: => H_NumOpenRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin6M,C_CAP_992));

//Description: # of Open RR claims in the past 12 months
ClaimsAuto: => H_NumOpenRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin12M,C_CAP_992));

//Description: # of Open RR claims in the past 18 months
ClaimsAuto: => H_NumOpenRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin18M,C_CAP_992));

//Description: # of Open RR claims in the past 24 months
ClaimsAuto: => H_NumOpenRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin24M,C_CAP_992));

//Description: # of Open RR claims in the past 30 months
ClaimsAuto: => H_NumOpenRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin30M,C_CAP_992));

//Description: # of Open RR claims in the past 36 months
ClaimsAuto: => H_NumOpenRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin36M,C_CAP_992));

//Description: # of Open RR claims in the past 42 months
ClaimsAuto: => H_NumOpenRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin42M,C_CAP_992));

//Description: # of Open RR claims in the past 48 months
ClaimsAuto: => H_NumOpenRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin48M,C_CAP_992));

//Description: # of Open RR claims in the past 54 months
ClaimsAuto: => H_NumOpenRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin54M,C_CAP_992));

//Description: # of Open RR claims in the past 60 months
ClaimsAuto: => H_NumOpenRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRWithin60M,C_CAP_992));



//RR_OP_N1 RR_OP_N2 RR_OP_N3 RR_OP_N4 RR_OP_N5 RR_OP_N6 RR_OP_N7
//Description: Previous 2nd-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Rental Reimbursement claims
ClaimsAuto: => H_NumOpenRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenRRIn7thYr,C_CAP_992));



//RR6mon_OT_A RR12mon_OT_A RR18mon_OT_A RR24mon_OT_A RR30mon_OT_A RR36mon_OT_A RR42mon_OT_A RR48mon_OT_A RR54mon_OT_A RR60mon_OT_A
//Description: Other RR claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherRRAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin6M,C_CAP_9999999992));

//Description: Other RR claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherRRAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin12M,C_CAP_9999999992));

//Description: Other RR claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherRRAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin24M,C_CAP_9999999992));

//Description: Other RR claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherRRAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin36M,C_CAP_9999999992));

//Description: Other RR claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherRRAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin48M,C_CAP_9999999992));

//Description: Other RR claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherRRAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin60M,C_CAP_9999999992));

//cum6_RR_OT_AMT
//Description: Past 6-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other RR claim amount
ClaimsAuto: => H_TotalOtherRRAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtWithin7Yr,C_CAP_9999999992));



//RR_OT_A1 RR_OT_A2 RR_OT_A3 RR_OT_A4 RR_OT_A5 RR_OT_A6 RR_OT_A7 RR_OT_AMT
//Description: Previous 2nd-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Rental Reimbursement claim amount
ClaimsAuto: => H_TotalOtherRRAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherRRClaimAmount >=0), G_TotalOtherRRClaimAmount);
ClaimsAuto: => I_TotOtherRRAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherRRAmtIn7thYr,C_CAP_9999999992));



//RR6mon_OT_N RR12mon_OT_N RR18mon_OT_N RR24mon_OT_N RR30mon_OT_N RR36mon_OT_N RR42mon_OT_N RR48mon_OT_N RR54mon_OT_N RR60mon_OT_N
//Description: # of Other RR claims in the past 6 months
ClaimsAuto: => H_NumOtherRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin6M,C_CAP_992));

//Description: # of Other RR claims in the past 12 months
ClaimsAuto: => H_NumOtherRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin12M,C_CAP_992));

//Description: # of Other RR claims in the past 18 months
ClaimsAuto: => H_NumOtherRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin18M,C_CAP_992));

//Description: # of Other RR claims in the past 24 months
ClaimsAuto: => H_NumOtherRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin24M,C_CAP_992));

//Description: # of Other RR claims in the past 30 months
ClaimsAuto: => H_NumOtherRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin30M,C_CAP_992));

//Description: # of Other RR claims in the past 36 months
ClaimsAuto: => H_NumOtherRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin36M,C_CAP_992));

//Description: # of Other RR claims in the past 42 months
ClaimsAuto: => H_NumOtherRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin42M,C_CAP_992));

//Description: # of Other RR claims in the past 48 months
ClaimsAuto: => H_NumOtherRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin48M,C_CAP_992));

//Description: # of Other RR claims in the past 54 months
ClaimsAuto: => H_NumOtherRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin54M,C_CAP_992));

//Description: # of Other RR claims in the past 60 months
ClaimsAuto: => H_NumOtherRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRWithin60M,C_CAP_992));



//RR_OT_N1 RR_OT_N2 RR_OT_N3 RR_OT_N4 RR_OT_N5 RR_OT_N6 RR_OT_N7
//Description: Previous 2nd-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Rental Reimbursement claims
ClaimsAuto: => H_NumOtherRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRROtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherRRIn7thYr,C_CAP_992));



//RR6mon_ZR_N RR12mon_ZR_N RR18mon_ZR_N RR24mon_ZR_N RR30mon_ZR_N RR36mon_ZR_N RR42mon_ZR_N RR48mon_ZR_N RR54mon_ZR_N RR60mon_ZR_N
//Description: # of Zero-payment RR claims in the past 6 months
ClaimsAuto: => H_NumZeroRRWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroRRWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin6M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 12 months
ClaimsAuto: => H_NumZeroRRWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroRRWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin12M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 18 months
ClaimsAuto: => H_NumZeroRRWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroRRWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin18M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 24 months
ClaimsAuto: => H_NumZeroRRWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroRRWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin24M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 30 months
ClaimsAuto: => H_NumZeroRRWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroRRWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin30M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 36 months
ClaimsAuto: => H_NumZeroRRWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroRRWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin36M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 42 months
ClaimsAuto: => H_NumZeroRRWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroRRWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin42M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 48 months
ClaimsAuto: => H_NumZeroRRWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroRRWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin48M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 54 months
ClaimsAuto: => H_NumZeroRRWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroRRWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin54M,C_CAP_992));

//Description: # of Zero-payment RR claims in the past 60 months
ClaimsAuto: => H_NumZeroRRWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroRRWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRWithin60M,C_CAP_992));



//RR_ZR_N1 RR_ZR_N2 RR_ZR_N3 RR_ZR_N4 RR_ZR_N5 RR_ZR_N6 RR_ZR_N7
//Description: Previous 2nd-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroRRIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroRRIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroRRIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroRRIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroRRIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Rental Reimbursement claims
ClaimsAuto: => H_NumZeroRRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsRRZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroRRIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroRRIn7thYr,C_CAP_992));



//SL_6mon_AMT SL_12mon_AMT SL_18mon_AMT SL_24mon_AMT SL_30mon_AMT SL_36mon_AMT SL_42mon_AMT SL_48mon_AMT SL_54mon_AMT SL_60mon_AMT
//Description: Total SL claim amount in the past 6 months
ClaimsAuto: => H_TotalSLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin6M,C_CAP_9999999992));

//Description: Total SL claim amount in the past 12 months
ClaimsAuto: => H_TotalSLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin12M,C_CAP_9999999992));

//Description: Total SL claim amount in the past 18 months
ClaimsAuto: => H_TotalSLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin24M,C_CAP_9999999992));

//Description: Total SL claim amount in the past 30 months
ClaimsAuto: => H_TotalSLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin36M,C_CAP_9999999992));

//Description: Total SL claim amount in the past 42 months
ClaimsAuto: => H_TotalSLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin48M,C_CAP_9999999992));

//Description: Total SL claim amount in the past 54 months
ClaimsAuto: => H_TotalSLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin60M,C_CAP_9999999992));

//cum6_SL_AMT
//Description: Past 6-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin6Yr,C_CAP_9999999992));

//SL_AMT SL_AMT1 SL_AMT2 SL_AMT3 SL_AMT4 SL_AMT5 SL_AMT6 SL_AMT7
//Description: Past 7-year SL claim amount
ClaimsAuto: => H_TotalSLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Spousal Liability claim amount
ClaimsAuto: => H_TotalSLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalSLClaimAmount >=0), G_TotalSLClaimAmount);
ClaimsAuto: => I_TotSLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalSLAmtIn7thYr,C_CAP_9999999992));



//SL_6mon_CNT SL_12mon_CNT SL_18mon_CNT SL_24mon_CNT SL_30mon_CNT SL_36mon_CNT SL_42mon_CNT SL_48mon_CNT SL_54mon_CNT SL_60mon_CNT
//Description: # of SL claims in the past 6 months
ClaimsAuto: => H_NumSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin6M,C_CAP_992));

//Description: # of SL claims in the past 12 months
ClaimsAuto: => H_NumSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin12M,C_CAP_992));

//Description: # of SL claims in the past 18 months
ClaimsAuto: => H_NumSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin18M,C_CAP_992));

//Description: Past 2-year number of SL claims
ClaimsAuto: => H_NumSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin24M,C_CAP_992));

//Description: # of SL claims in the past 30 months
ClaimsAuto: => H_NumSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin30M,C_CAP_992));

//Description: Past 3-year number of SL claims
ClaimsAuto: => H_NumSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin36M,C_CAP_992));

//Description: # of SL claims in the past 42 months
ClaimsAuto: => H_NumSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin42M,C_CAP_992));

//Description: Past 4-year number of SL claims
ClaimsAuto: => H_NumSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin48M,C_CAP_992));

//Description: # of SL claims in the past 54 months
ClaimsAuto: => H_NumSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin54M,C_CAP_992));

//Description: Past 5-year number of SL claims
ClaimsAuto: => H_NumSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin60M,C_CAP_992));

//cum6_SL_CNT
//Description: Past 6-year number of SL claims
ClaimsAuto: => H_NumSLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntSLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin6Yr,C_CAP_992));

//SL_CNT SL_CNT1 SL_CNT2 SL_CNT3 SL_CNT4 SL_CNT5 SL_CNT6 SL_CNT7
//Description: Past 7-year number of SL claims
ClaimsAuto: => H_NumSLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntSLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Spousal Liability claims
ClaimsAuto: => H_NumSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumSLIn7thYr,C_CAP_992));



//SL_6mon_NZCNT SL_12mon_NZCNT SL_18mon_NZCNT SL_24mon_NZCNT SL_30mon_NZCNT SL_36mon_NZCNT SL_42mon_NZCNT SL_48mon_NZCNT SL_54mon_NZCNT SL_60mon_NZCNT
//Description: # of above-zero-payment SL claims in the past 6 months
ClaimsAuto: => H_NumNZSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin6M,C_CAP_992));

//Description: # of above-zero-payment SL claims in the past 12 months
ClaimsAuto: => H_NumNZSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin12M,C_CAP_992));

//Description: # of above-zero-payment SL claims in the past 18 months
ClaimsAuto: => H_NumNZSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin18M,C_CAP_992));

//Description: Number of above-zero-payment SL claims in the past 2 years
ClaimsAuto: => H_NumNZSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin24M,C_CAP_992));

//Description: # of above-zero-payment SL claims in the past 30 months
ClaimsAuto: => H_NumNZSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin30M,C_CAP_992));

//Description: Number of above-zero-payment SL claims in the past 3 years
ClaimsAuto: => H_NumNZSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin36M,C_CAP_992));

//Description: # of above-zero-payment SL claims in the past 42 months
ClaimsAuto: => H_NumNZSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin42M,C_CAP_992));

//Description: Number of above-zero-payment SL claims in the past 4 years
ClaimsAuto: => H_NumNZSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin48M,C_CAP_992));

//Description: # of above-zero-payment SL claims in the past 54 months
ClaimsAuto: => H_NumNZSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin54M,C_CAP_992));

//Description: Number of above-zero-payment SL claims in the past 5 years
ClaimsAuto: => H_NumNZSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin60M,C_CAP_992));

//cum6_SL_NZCNT
//Description: Number of above-zero-payment SL claims in the past 6 years
ClaimsAuto: => H_NumNZSLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZSLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin6Yr,C_CAP_992));

//SL_NZCNT SL_NZCNT1 SL_NZCNT2 SL_NZCNT3 SL_NZCNT4 SL_NZCNT5 SL_NZCNT6 SL_NZCNT7
//Description: Number of above-zero-payment SL claims in the past 7 years
ClaimsAuto: => H_NumNZSLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZSLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Spousal Liability above-zero-payment claims
ClaimsAuto: => H_NumNZSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZSLIn7thYr,C_CAP_992));



//SL6mon_CL_A SL12mon_CL_A SL18mon_CL_A SL24mon_CL_A SL30mon_CL_A SL36mon_CL_A SL42mon_CL_A SL48mon_CL_A SL54mon_CL_A SL60mon_CL_A
//Description: Closed SL claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedSLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin6M,C_CAP_9999999992));

//Description: Closed SL claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedSLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin12M,C_CAP_9999999992));

//Description: Closed SL claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedSLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin24M,C_CAP_9999999992));

//Description: Closed SL claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedSLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin36M,C_CAP_9999999992));

//Description: Closed SL claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedSLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin48M,C_CAP_9999999992));

//Description: Closed SL claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedSLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin60M,C_CAP_9999999992));

//cum6_SL_CL_AMT
//Description: Past 6-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed SL claim amount
ClaimsAuto: => H_TotalClosedSLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtWithin7Yr,C_CAP_9999999992));



//SL_CL_A1 SL_CL_A2 SL_CL_A3 SL_CL_A4 SL_CL_A5 SL_CL_A6 SL_CL_A7 SL_CL_AMT
//Description: Previous 2nd-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Spousal Liability  claim amount
ClaimsAuto: => H_TotalClosedSLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedSLClaimAmount >=0), G_TotalClosedSLClaimAmount);
ClaimsAuto: => I_TotClosedSLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedSLAmtIn7thYr,C_CAP_9999999992));



//SL6mon_CL_N SL12mon_CL_N SL18mon_CL_N SL24mon_CL_N SL30mon_CL_N SL36mon_CL_N SL42mon_CL_N SL48mon_CL_N SL54mon_CL_N SL60mon_CL_N
//Description: # of Closed SL claims in the past 6 months
ClaimsAuto: => H_NumClosedSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin6M,C_CAP_992));

//Description: # of Closed SL claims in the past 12 months
ClaimsAuto: => H_NumClosedSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin12M,C_CAP_992));

//Description: # of Closed SL claims in the past 18 months
ClaimsAuto: => H_NumClosedSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin18M,C_CAP_992));

//Description: # of Closed SL claims in the past 24 months
ClaimsAuto: => H_NumClosedSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin24M,C_CAP_992));

//Description: # of Closed SL claims in the past 30 months
ClaimsAuto: => H_NumClosedSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin30M,C_CAP_992));

//Description: # of Closed SL claims in the past 36 months
ClaimsAuto: => H_NumClosedSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin36M,C_CAP_992));

//Description: # of Closed SL claims in the past 42 months
ClaimsAuto: => H_NumClosedSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin42M,C_CAP_992));

//Description: # of Closed SL claims in the past 48 months
ClaimsAuto: => H_NumClosedSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin48M,C_CAP_992));

//Description: # of Closed SL claims in the past 54 months
ClaimsAuto: => H_NumClosedSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin54M,C_CAP_992));

//Description: # of Closed SL claims in the past 60 months
ClaimsAuto: => H_NumClosedSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLWithin60M,C_CAP_992));



//SL_CL_N1 SL_CL_N2 SL_CL_N3 SL_CL_N4 SL_CL_N5 SL_CL_N6 SL_CL_N7
//Description: Previous 2nd-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Spousal Liability  claims
ClaimsAuto: => H_NumClosedSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedSLIn7thYr,C_CAP_992));



//SL6mon_OP_A SL12mon_OP_A SL18mon_OP_A SL24mon_OP_A SL30mon_OP_A SL36mon_OP_A SL42mon_OP_A SL48mon_OP_A SL54mon_OP_A SL60mon_OP_A
//Description: Open SL claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenSLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin6M,C_CAP_9999999992));

//Description: Open SL claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenSLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin12M,C_CAP_9999999992));

//Description: Open SL claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenSLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin24M,C_CAP_9999999992));

//Description: Open SL claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenSLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin36M,C_CAP_9999999992));

//Description: Open SL claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenSLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin48M,C_CAP_9999999992));

//Description: Open SL claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenSLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin60M,C_CAP_9999999992));

//cum6_SL_OP_AMT
//Description: Past 6-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open SL claim amount
ClaimsAuto: => H_TotalOpenSLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtWithin7Yr,C_CAP_9999999992));



//SL_OP_A1 SL_OP_A2 SL_OP_A3 SL_OP_A4 SL_OP_A5 SL_OP_A6 SL_OP_A7 SL_OP_AMT
//Description: Previous 2nd-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Spousal Liability claim amount
ClaimsAuto: => H_TotalOpenSLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenSLClaimAmount >=0), G_TotalOpenSLClaimAmount);
ClaimsAuto: => I_TotOpenSLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenSLAmtIn7thYr,C_CAP_9999999992));



//SL6mon_OP_N SL12mon_OP_N SL18mon_OP_N SL24mon_OP_N SL30mon_OP_N SL36mon_OP_N SL36mon_OP_N SL42mon_OP_N SL48mon_OP_N SL54mon_OP_N SL60mon_OP_N
//Description: # of Open SL claims in the past 6 months
ClaimsAuto: => H_NumOpenSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin6M,C_CAP_992));

//Description: # of Open SL claims in the past 12 months
ClaimsAuto: => H_NumOpenSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin12M,C_CAP_992));

//Description: # of Open SL claims in the past 18 months
ClaimsAuto: => H_NumOpenSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin18M,C_CAP_992));

//Description: # of Open SL claims in the past 24 months
ClaimsAuto: => H_NumOpenSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin24M,C_CAP_992));

//Description: # of Open SL claims in the past 30 months
ClaimsAuto: => H_NumOpenSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin30M,C_CAP_992));

//Description: # of Open SL claims in the past 36 months
ClaimsAuto: => H_NumOpenSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin36M,C_CAP_992));

//Description: # of Open SL claims in the past 42 months
ClaimsAuto: => H_NumOpenSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin42M,C_CAP_992));

//Description: # of Open SL claims in the past 48 months
ClaimsAuto: => H_NumOpenSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin48M,C_CAP_992));

//Description: # of Open SL claims in the past 54 months
ClaimsAuto: => H_NumOpenSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin54M,C_CAP_992));

//Description: # of Open SL claims in the past 60 months
ClaimsAuto: => H_NumOpenSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLWithin60M,C_CAP_992));



//SL_OP_N1 SL_OP_N2 SL_OP_N3 SL_OP_N4 SL_OP_N5 SL_OP_N6 SL_OP_N7
//Description: Previous 2nd-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Spousal Liability claims
ClaimsAuto: => H_NumOpenSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenSLIn7thYr,C_CAP_992));



//SL6mon_OT_A SL12mon_OT_A SL18mon_OT_A SL24mon_OT_A SL30mon_OT_A SL36mon_OT_A SL42mon_OT_A SL48mon_OT_A SL54mon_OT_A SL60mon_OT_A
//Description: Other SL claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherSLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin6M,C_CAP_9999999992));

//Description: Other SL claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherSLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin12M,C_CAP_9999999992));

//Description: Other SL claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherSLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin24M,C_CAP_9999999992));

//Description: Other SL claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherSLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin36M,C_CAP_9999999992));

//Description: Other SL claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherSLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin48M,C_CAP_9999999992));

//Description: Other SL claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherSLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin60M,C_CAP_9999999992));

//cum6_SL_OT_AMT
//Description: Past 6-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other SL claim amount
ClaimsAuto: => H_TotalOtherSLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtWithin7Yr,C_CAP_9999999992));



//SL_OT_A1 SL_OT_A2 SL_OT_A3 SL_OT_A4 SL_OT_A5 SL_OT_A6 SL_OT_A7 SL_OT_AMT
//Description: Previous 2nd-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Spousal Liability claim amount
ClaimsAuto: => H_TotalOtherSLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherSLClaimAmount >=0), G_TotalOtherSLClaimAmount);
ClaimsAuto: => I_TotOtherSLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherSLAmtIn7thYr,C_CAP_9999999992));



//SL6mon_OT_N SL12mon_OT_N SL18mon_OT_N SL24mon_OT_N SL30mon_OT_N SL36mon_OT_N SL42mon_OT_N SL48mon_OT_N SL54mon_OT_N SL60mon_OT_N
//Description: # of Other SL claims in the past 6 months
ClaimsAuto: => H_NumOtherSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin6M,C_CAP_992));

//Description: # of Other SL claims in the past 12 months
ClaimsAuto: => H_NumOtherSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin12M,C_CAP_992));

//Description: # of Other SL claims in the past 18 months
ClaimsAuto: => H_NumOtherSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin18M,C_CAP_992));

//Description: # of Other SL claims in the past 24 months
ClaimsAuto: => H_NumOtherSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin24M,C_CAP_992));

//Description: # of Other SL claims in the past 30 months
ClaimsAuto: => H_NumOtherSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin30M,C_CAP_992));

//Description: # of Other SL claims in the past 36 months
ClaimsAuto: => H_NumOtherSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin36M,C_CAP_992));

//Description: # of Other SL claims in the past 42 months
ClaimsAuto: => H_NumOtherSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin42M,C_CAP_992));

//Description: # of Other SL claims in the past 48 months
ClaimsAuto: => H_NumOtherSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin48M,C_CAP_992));

//Description: # of Other SL claims in the past 54 months
ClaimsAuto: => H_NumOtherSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin54M,C_CAP_992));

//Description: # of Other SL claims in the past 60 months
ClaimsAuto: => H_NumOtherSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLWithin60M,C_CAP_992));



//SL_OT_N1 SL_OT_N2 SL_OT_N3 SL_OT_N4 SL_OT_N5 SL_OT_N6 SL_OT_N7
//Description: Previous 2nd-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Spousal Liability claims
ClaimsAuto: => H_NumOtherSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherSLIn7thYr,C_CAP_992));



//SL6mon_ZR_N SL12mon_ZR_N SL18mon_ZR_N SL24mon_ZR_N SL30mon_ZR_N SL36mon_ZR_N SL42mon_ZR_N SL48mon_ZR_N SL54mon_ZR_N SL60mon_ZR_N
//Description: # of Zero-payment SL claims in the past 6 months
ClaimsAuto: => H_NumZeroSLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroSLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin6M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 12 months
ClaimsAuto: => H_NumZeroSLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroSLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin12M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 18 months
ClaimsAuto: => H_NumZeroSLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroSLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin18M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 24 months
ClaimsAuto: => H_NumZeroSLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroSLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin24M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 30 months
ClaimsAuto: => H_NumZeroSLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroSLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin30M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 36 months
ClaimsAuto: => H_NumZeroSLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroSLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin36M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 42 months
ClaimsAuto: => H_NumZeroSLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroSLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin42M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 48 months
ClaimsAuto: => H_NumZeroSLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroSLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin48M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 54 months
ClaimsAuto: => H_NumZeroSLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroSLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin54M,C_CAP_992));

//Description: # of Zero-payment SL claims in the past 60 months
ClaimsAuto: => H_NumZeroSLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroSLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLWithin60M,C_CAP_992));



//SL_ZR_N1 SL_ZR_N2 SL_ZR_N3 SL_ZR_N4 SL_ZR_N5 SL_ZR_N6 SL_ZR_N7
//Description: Previous 2nd-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroSLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroSLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroSLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroSLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroSLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Spousal Liability claims
ClaimsAuto: => H_NumZeroSLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsSLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroSLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroSLIn7thYr,C_CAP_992));



//TL_6mon_AMT TL_12mon_AMT TL_18mon_AMT TL_24mon_AMT TL_30mon_AMT TL_36mon_AMT TL_42mon_AMT TL_48mon_AMT TL_54mon_AMT TL_60mon_AMT
//Description: Total TL claim amount in the past 6 months
ClaimsAuto: => H_TotalTLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin6M,C_CAP_9999999992));

//Description: Total TL claim amount in the past 12 months
ClaimsAuto: => H_TotalTLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin12M,C_CAP_9999999992));

//Description: Total TL claim amount in the past 18 months
ClaimsAuto: => H_TotalTLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin24M,C_CAP_9999999992));

//Description: Total TL claim amount in the past 30 months
ClaimsAuto: => H_TotalTLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin36M,C_CAP_9999999992));

//Description: Total TL claim amount in the past 42 months
ClaimsAuto: => H_TotalTLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin48M,C_CAP_9999999992));

//Description: Total TL claim amount in the past 54 months
ClaimsAuto: => H_TotalTLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin60M,C_CAP_9999999992));

//cum6_TL_AMT
//Description: Past 6-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin6Yr,C_CAP_9999999992));

//TL_AMT TL_AMT1 TL_AMT2 TL_AMT3 TL_AMT4 TL_AMT5 TL_AMT6 TL_AMT7
//Description: Past 7-year TL claim amount
ClaimsAuto: => H_TotalTLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Towing/Labor claim amount
ClaimsAuto: => H_TotalTLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalTLClaimAmount >=0), G_TotalTLClaimAmount);
ClaimsAuto: => I_TotTLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalTLAmtIn7thYr,C_CAP_9999999992));



//TL_6mon_CNT TL_12mon_CNT TL_18mon_CNT TL_24mon_CNT TL_30mon_CNT TL_36mon_CNT TL_42mon_CNT TL_48mon_CNT TL_54mon_CNT TL_60mon_CNT
//Description: # of TL claims in the past 6 months
ClaimsAuto: => H_NumTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin6M,C_CAP_992));

//Description: # of TL claims in the past 12 months
ClaimsAuto: => H_NumTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin12M,C_CAP_992));

//Description: # of TL claims in the past 18 months
ClaimsAuto: => H_NumTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin18M,C_CAP_992));

//Description: Past 2-year number of TL claims
ClaimsAuto: => H_NumTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin24M,C_CAP_992));

//Description: # of TL claims in the past 30 months
ClaimsAuto: => H_NumTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin30M,C_CAP_992));

//Description: Past 3-year number of TL claims
ClaimsAuto: => H_NumTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin36M,C_CAP_992));

//Description: # of TL claims in the past 42 months
ClaimsAuto: => H_NumTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin42M,C_CAP_992));

//Description: Past 4-year number of TL claims
ClaimsAuto: => H_NumTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin48M,C_CAP_992));

//Description: # of TL claims in the past 54 months
ClaimsAuto: => H_NumTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin54M,C_CAP_992));

//Description: Past 5-year number of TL claims
ClaimsAuto: => H_NumTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin60M,C_CAP_992));

//cum6_TL_CNT
//Description: Past 6-year number of TL claims
ClaimsAuto: => H_NumTLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntTLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin6Yr,C_CAP_992));

//TL_CNT TL_CNT1 TL_CNT2 TL_CNT3 TL_CNT4 TL_CNT5 TL_CNT6 TL_CNT7
//Description: Past 7-year number of TL claims
ClaimsAuto: => H_NumTLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntTLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Towing/Labor claims
ClaimsAuto: => H_NumTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumTLIn7thYr,C_CAP_992));



//TL_6mon_NZCNT TL_12mon_NZCNT TL_18mon_NZCNT TL_24mon_NZCNT TL_30mon_NZCNT TL_36mon_NZCNT TL_42mon_NZCNT TL_48mon_NZCNT TL_54mon_NZCNT TL_60mon_NZCNT
//Description: # of above-zero-payment TL claims in the past 6 months
ClaimsAuto: => H_NumNZTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin6M,C_CAP_992));

//Description: # of above-zero-payment TL claims in the past 12 months
ClaimsAuto: => H_NumNZTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin12M,C_CAP_992));

//Description: # of above-zero-payment TL claims in the past 18 months
ClaimsAuto: => H_NumNZTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin18M,C_CAP_992));

//Description: Number of above-zero-payment TL claims in the past 2 years
ClaimsAuto: => H_NumNZTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin24M,C_CAP_992));

//Description: # of above-zero-payment TL claims in the past 30 months
ClaimsAuto: => H_NumNZTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin30M,C_CAP_992));

//Description: Number of above-zero-payment TL claims in the past 3 years
ClaimsAuto: => H_NumNZTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin36M,C_CAP_992));

//Description: # of above-zero-payment TL claims in the past 42 months
ClaimsAuto: => H_NumNZTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin42M,C_CAP_992));

//Description: Number of above-zero-payment TL claims in the past 4 years
ClaimsAuto: => H_NumNZTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin48M,C_CAP_992));

//Description: # of above-zero-payment TL claims in the past 54 months
ClaimsAuto: => H_NumNZTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin54M,C_CAP_992));

//Description: Number of above-zero-payment TL claims in the past 5 years
ClaimsAuto: => H_NumNZTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin60M,C_CAP_992));

//cum6_TL_NZCNT
//Description: Number of above-zero-payment TL claims in the past 6 years
ClaimsAuto: => H_NumNZTLWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZTLWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin6Yr,C_CAP_992));

//TL_NZCNT TL_NZCNT1 TL_NZCNT2 TL_NZCNT3 TL_NZCNT4 TL_NZCNT5 TL_NZCNT6 TL_NZCNT7
//Description: Number of above-zero-payment TL claims in the past 7 years
ClaimsAuto: => H_NumNZTLWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZTLWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Towing/Labor claims
ClaimsAuto: => H_NumNZTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Towing/Labor above-zero-payment claims
ClaimsAuto: => H_NumNZTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Towing/Labor above-zero-payment claims
ClaimsAuto: => H_NumNZTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Towing/Labor above-zero-payment claims
ClaimsAuto: => H_NumNZTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Towing/Labor above-zero-payment claims
ClaimsAuto: => H_NumNZTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Towing/Labor above-zero-payment claims
ClaimsAuto: => H_NumNZTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZTLIn7thYr,C_CAP_992));



//TL6mon_CL_A TL12mon_CL_A TL18mon_CL_A TL24mon_CL_A TL30mon_CL_A TL36mon_CL_A TL42mon_CL_A TL48mon_CL_A TL54mon_CL_A TL60mon_CL_A
//Description: Closed TL claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedTLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin6M,C_CAP_9999999992));

//Description: Closed TL claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedTLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin12M,C_CAP_9999999992));

//Description: Closed TL claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedTLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin24M,C_CAP_9999999992));

//Description: Closed TL claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedTLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin36M,C_CAP_9999999992));

//Description: Closed TL claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedTLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin48M,C_CAP_9999999992));

//Description: Closed TL claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedTLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin60M,C_CAP_9999999992));

//cum6_TL_CL_AMT
//Description: Past 6-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed TL claim amount
ClaimsAuto: => H_TotalClosedTLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtWithin7Yr,C_CAP_9999999992));



//TL_CL_A1 TL_CL_A2 TL_CL_A3 TL_CL_A4 TL_CL_A5 TL_CL_A6 TL_CL_A7 TL_CL_AMT
//Description: Previous 2nd-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Towing/Labor  claim amount
ClaimsAuto: => H_TotalClosedTLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedTLClaimAmount >=0), G_TotalClosedTLClaimAmount);
ClaimsAuto: => I_TotClosedTLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedTLAmtIn7thYr,C_CAP_9999999992));



//TL6mon_CL_N TL12mon_CL_N TL18mon_CL_N TL24mon_CL_N TL30mon_CL_N TL36mon_CL_N TL42mon_CL_N TL48mon_CL_N TL54mon_CL_N TL60mon_CL_N
//Description: # of Closed TL claims in the past 6 months
ClaimsAuto: => H_NumClosedTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin6M,C_CAP_992));

//Description: # of Closed TL claims in the past 12 months
ClaimsAuto: => H_NumClosedTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin12M,C_CAP_992));

//Description: # of Closed TL claims in the past 18 months
ClaimsAuto: => H_NumClosedTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin18M,C_CAP_992));

//Description: # of Closed TL claims in the past 24 months
ClaimsAuto: => H_NumClosedTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin24M,C_CAP_992));

//Description: # of Closed TL claims in the past 30 months
ClaimsAuto: => H_NumClosedTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin30M,C_CAP_992));

//Description: # of Closed TL claims in the past 36 months
ClaimsAuto: => H_NumClosedTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin36M,C_CAP_992));

//Description: # of Closed TL claims in the past 42 months
ClaimsAuto: => H_NumClosedTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin42M,C_CAP_992));

//Description: # of Closed TL claims in the past 48 months
ClaimsAuto: => H_NumClosedTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin48M,C_CAP_992));

//Description: # of Closed TL claims in the past 54 months
ClaimsAuto: => H_NumClosedTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin54M,C_CAP_992));

//Description: # of Closed TL claims in the past 60 months
ClaimsAuto: => H_NumClosedTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLWithin60M,C_CAP_992));



//TL_CL_N1 TL_CL_N2 TL_CL_N3 TL_CL_N4 TL_CL_N5 TL_CL_N6 TL_CL_N7
//Description: Previous 2nd-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Towing/Labor  claims
ClaimsAuto: => H_NumClosedTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedTLIn7thYr,C_CAP_992));



//TL6mon_OP_A TL12mon_OP_A TL18mon_OP_A TL24mon_OP_A TL30mon_OP_A TL36mon_OP_A TL42mon_OP_A TL48mon_OP_A TL54mon_OP_A TL60mon_OP_A
//Description: Open TL claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenTLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin6M,C_CAP_9999999992));

//Description: Open TL claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenTLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin12M,C_CAP_9999999992));

//Description: Open TL claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenTLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin24M,C_CAP_9999999992));

//Description: Open TL claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenTLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin36M,C_CAP_9999999992));

//Description: Open TL claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenTLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin48M,C_CAP_9999999992));

//Description: Open TL claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenTLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin60M,C_CAP_9999999992));

//cum6_TL_OP_AMT
//Description: Past 6-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open TL claim amount
ClaimsAuto: => H_TotalOpenTLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtWithin7Yr,C_CAP_9999999992));



//TL_OP_A1 TL_OP_A2 TL_OP_A3 TL_OP_A4 TL_OP_A5 TL_OP_A6 TL_OP_A7 TL_OP_AMT
//Description: Previous 2nd-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Towing/Labor claim amount
ClaimsAuto: => H_TotalOpenTLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenTLClaimAmount >=0), G_TotalOpenTLClaimAmount);
ClaimsAuto: => I_TotOpenTLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenTLAmtIn7thYr,C_CAP_9999999992));



//TL6mon_OP_N TL12mon_OP_N TL18mon_OP_N TL24mon_OP_N TL30mon_OP_N TL36mon_OP_N TL36mon_OP_N TL42mon_OP_N TL48mon_OP_N TL54mon_OP_N TL60mon_OP_N
//Description: # of Open TL claims in the past 6 months
ClaimsAuto: => H_NumOpenTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin6M,C_CAP_992));

//Description: # of Open TL claims in the past 12 months
ClaimsAuto: => H_NumOpenTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin12M,C_CAP_992));

//Description: # of Open TL claims in the past 18 months
ClaimsAuto: => H_NumOpenTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin18M,C_CAP_992));

//Description: # of Open TL claims in the past 24 months
ClaimsAuto: => H_NumOpenTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin24M,C_CAP_992));

//Description: # of Open TL claims in the past 30 months
ClaimsAuto: => H_NumOpenTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin30M,C_CAP_992));

//Description: # of Open TL claims in the past 36 months
ClaimsAuto: => H_NumOpenTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin36M,C_CAP_992));

//Description: # of Open TL claims in the past 42 months
ClaimsAuto: => H_NumOpenTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin42M,C_CAP_992));

//Description: # of Open TL claims in the past 48 months
ClaimsAuto: => H_NumOpenTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin48M,C_CAP_992));

//Description: # of Open TL claims in the past 54 months
ClaimsAuto: => H_NumOpenTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin54M,C_CAP_992));

//Description: # of Open TL claims in the past 60 months
ClaimsAuto: => H_NumOpenTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLWithin60M,C_CAP_992));



//TL_OP_N1 TL_OP_N2 TL_OP_N3 TL_OP_N4 TL_OP_N5 TL_OP_N6 TL_OP_N7
//Description: Previous 2nd-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Towing/Labor claims
ClaimsAuto: => H_NumOpenTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenTLIn7thYr,C_CAP_992));



//TL6mon_OT_A TL12mon_OT_A TL18mon_OT_A TL24mon_OT_A TL30mon_OT_A TL36mon_OT_A TL42mon_OT_A TL48mon_OT_A TL54mon_OT_A TL60mon_OT_A
//Description: Other TL claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherTLAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin6M,C_CAP_9999999992));

//Description: Other TL claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherTLAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin12M,C_CAP_9999999992));

//Description: Other TL claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherTLAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other TL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin24M,C_CAP_9999999992));

//Description: Other TL claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherTLAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other TL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin36M,C_CAP_9999999992));

//Description: Other TL claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherTLAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other SL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin48M,C_CAP_9999999992));

//Description: Other TL claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherTLAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other TL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin60M,C_CAP_9999999992));

//cum6_TL_OT_AMT
//Description: Past 6-year other TL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other TL claim amount
ClaimsAuto: => H_TotalOtherTLAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtWithin7Yr,C_CAP_9999999992));



//TL_OT_A1 TL_OT_A2 TL_OT_A3 TL_OT_A4 TL_OT_A5 TL_OT_A6 TL_OT_A7 TL_OT_AMT
//Description: Previous 2nd-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Towing/Labor claim amount
ClaimsAuto: => H_TotalOtherTLAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherTLClaimAmount >=0), G_TotalOtherTLClaimAmount);
ClaimsAuto: => I_TotOtherTLAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherTLAmtIn7thYr,C_CAP_9999999992));



//TL6mon_OT_N TL12mon_OT_N TL18mon_OT_N TL24mon_OT_N TL30mon_OT_N TL36mon_OT_N TL42mon_OT_N TL48mon_OT_N TL54mon_OT_N TL60mon_OT_N
//Description: # of Other TL claims in the past 6 months
ClaimsAuto: => H_NumOtherTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin6M,C_CAP_992));

//Description: # of Other TL claims in the past 12 months
ClaimsAuto: => H_NumOtherTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin12M,C_CAP_992));

//Description: # of Other TL claims in the past 18 months
ClaimsAuto: => H_NumOtherTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin18M,C_CAP_992));

//Description: # of Other TL claims in the past 24 months
ClaimsAuto: => H_NumOtherTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin24M,C_CAP_992));

//Description: # of Other TL claims in the past 30 months
ClaimsAuto: => H_NumOtherTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin30M,C_CAP_992));

//Description: # of Other TL claims in the past 36 months
ClaimsAuto: => H_NumOtherTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin36M,C_CAP_992));

//Description: # of Other TL claims in the past 42 months
ClaimsAuto: => H_NumOtherTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin42M,C_CAP_992));

//Description: # of Other TL claims in the past 48 months
ClaimsAuto: => H_NumOtherTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin48M,C_CAP_992));

//Description: # of Other TL claims in the past 54 months
ClaimsAuto: => H_NumOtherTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin54M,C_CAP_992));

//Description: # of Other TL claims in the past 60 months
ClaimsAuto: => H_NumOtherTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLWithin60M,C_CAP_992));



//TL_OT_N1 TL_OT_N2 TL_OT_N3 TL_OT_N4 TL_OT_N5 TL_OT_N6 TL_OT_N7
//Description: Previous 2nd-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Towing/Labor claims
ClaimsAuto: => H_NumOtherTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherTLIn7thYr,C_CAP_992));



//TL6mon_ZR_N TL12mon_ZR_N TL18mon_ZR_N TL24mon_ZR_N TL30mon_ZR_N TL36mon_ZR_N TL42mon_ZR_N TL48mon_ZR_N TL54mon_ZR_N TL60mon_ZR_N
//Description: # of Zero-payment TL claims in the past 6 months
ClaimsAuto: => H_NumZeroTLWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroTLWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin6M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 12 months
ClaimsAuto: => H_NumZeroTLWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroTLWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin12M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 18 months
ClaimsAuto: => H_NumZeroTLWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroTLWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin18M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 24 months
ClaimsAuto: => H_NumZeroTLWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroTLWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin24M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 30 months
ClaimsAuto: => H_NumZeroTLWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroTLWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin30M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 36 months
ClaimsAuto: => H_NumZeroTLWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroTLWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin36M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 42 months
ClaimsAuto: => H_NumZeroTLWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroTLWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin42M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 48 months
ClaimsAuto: => H_NumZeroTLWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroTLWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin48M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 54 months
ClaimsAuto: => H_NumZeroTLWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroTLWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin54M,C_CAP_992));

//Description: # of Zero-payment TL claims in the past 60 months
ClaimsAuto: => H_NumZeroTLWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroTLWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLWithin60M,C_CAP_992));



//TL_ZR_N1 TL_ZR_N2 TL_ZR_N3 TL_ZR_N4 TL_ZR_N5 TL_ZR_N6 TL_ZR_N7
//Description: Previous 2nd-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroTLIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroTLIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroTLIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroTLIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroTLIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Towing/Labor claims
ClaimsAuto: => H_NumZeroTLIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsTLZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroTLIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroTLIn7thYr,C_CAP_992));



///UM_6mon_AMT UM_12mon_AMT UM_18mon_AMT UM_24mon_AMT UM_30mon_AMT UM_36mon_AMT UM_42mon_AMT UM_48mon_AMT UM_54mon_AMT UM_60mon_AMT
//Description: Total UM claim amount in the past 6 months
ClaimsAuto: => H_TotalUMAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin6M,C_CAP_9999999992));

//Description: Total UM claim amount in the past 12 months
ClaimsAuto: => H_TotalUMAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin12M,C_CAP_9999999992));

//Description: Total UM claim amount in the past 18 months
ClaimsAuto: => H_TotalUMAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin24M,C_CAP_9999999992));

//Description: Total UM claim amount in the past 30 months
ClaimsAuto: => H_TotalUMAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin36M,C_CAP_9999999992));

//Description: Total UM claim amount in the past 42 months
ClaimsAuto: => H_TotalUMAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin48M,C_CAP_9999999992));

//Description: Total UM claim amount in the past 54 months
ClaimsAuto: => H_TotalUMAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin60M,C_CAP_9999999992));

//cum6_UM_AMT
//Description: Past 6-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin6Yr,C_CAP_9999999992));

//UM_AMT UM_AMT1 UM_AMT2 UM_AMT3 UM_AMT4 UM_AMT5 UM_AMT6 UM_AMT7
//Description: Past 7-year UM claim amount
ClaimsAuto: => H_TotalUMAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Uninsured Motorist claim amount
ClaimsAuto: => H_TotalUMAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalUMClaimAmount >=0), G_TotalUMClaimAmount);
ClaimsAuto: => I_TotUMAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUMAmtIn7thYr,C_CAP_9999999992));



//UM_6mon_CNT UM_12mon_CNT UM_18mon_CNT UM_24mon_CNT UM_30mon_CNT UM_36mon_CNT UM_42mon_CNT UM_48mon_CNT UM_54mon_CNT UM_60mon_CNT
//Description: # of UM claims in the past 6 months
ClaimsAuto: => H_NumUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin6M,C_CAP_992));

//Description: # of UM claims in the past 12 months
ClaimsAuto: => H_NumUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin12M,C_CAP_992));

//Description: # of UM claims in the past 18 months
ClaimsAuto: => H_NumUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin18M,C_CAP_992));

//Description: Past 2-year number of UM claims
ClaimsAuto: => H_NumUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin24M,C_CAP_992));

//Description: # of UM claims in the past 30 months
ClaimsAuto: => H_NumUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin30M,C_CAP_992));

//Description: Past 3-year number of UM claims
ClaimsAuto: => H_NumUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin36M,C_CAP_992));

//Description: # of UM claims in the past 42 months
ClaimsAuto: => H_NumUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin42M,C_CAP_992));

//Description: Past 4-year number of UM claims
ClaimsAuto: => H_NumUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin48M,C_CAP_992));

//Description: # of UM claims in the past 54 months
ClaimsAuto: => H_NumUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin54M,C_CAP_992));

//Description: Past 5-year number of UM claims
ClaimsAuto: => H_NumUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin60M,C_CAP_992));

//cum6_UM_CNT
//Description: Past 6-year number of UM claims
ClaimsAuto: => H_NumUMWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntUMWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin6Yr,C_CAP_992));

//UM_CNT UM_CNT1 UM_CNT2 UM_CNT3 UM_CNT4 UM_CNT5 UM_CNT6 UM_CNT7
//Description: Past 7-year number of UM claims
ClaimsAuto: => H_NumUMWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntUMWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Uninsured Motorist claims
ClaimsAuto: => H_NumUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUMIn7thYr,C_CAP_992));



//UM_6mon_NZCNT UM_12mon_NZCNT UM_18mon_NZCNT UM_24mon_NZCNT UM_30mon_NZCNT UM_36mon_NZCNT UM_42mon_NZCNT UM_48mon_NZCNT UM_54mon_NZCNT UM_60mon_NZCNT
//Description: # of above-zero-payment UM claims in the past 6 months
ClaimsAuto: => H_NumNZUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin6M,C_CAP_992));

//Description: # of above-zero-payment UM claims in the past 12 months
ClaimsAuto: => H_NumNZUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin12M,C_CAP_992));

//Description: # of above-zero-payment UM claims in the past 18 months
ClaimsAuto: => H_NumNZUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin18M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 2 years
ClaimsAuto: => H_NumNZUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin24M,C_CAP_992));

//Description: # of above-zero-payment UM claims in the past 30 months
ClaimsAuto: => H_NumNZUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin30M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 3 years
ClaimsAuto: => H_NumNZUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin36M,C_CAP_992));

//Description: # of above-zero-payment UM claims in the past 42 months
ClaimsAuto: => H_NumNZUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin42M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 4 years
ClaimsAuto: => H_NumNZUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin48M,C_CAP_992));

//Description: # of above-zero-payment UM claims in the past 54 months
ClaimsAuto: => H_NumNZUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin54M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 5 years
ClaimsAuto: => H_NumNZUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin60M,C_CAP_992));

//cum6_UM_NZCNT
//Description: Number of above-zero-payment UM claims in the past 6 years
ClaimsAuto: => H_NumNZUMWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZUMWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin6Yr,C_CAP_992));

//UM_NZCNT UM_NZCNT1 UM_NZCNT2 UM_NZCNT3 UM_NZCNT4 UM_NZCNT5 UM_NZCNT6 UM_NZCNT7
//Description: Number of above-zero-payment UM claims in the past 7 years
ClaimsAuto: => H_NumNZUMWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZUMWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Uninsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUMIn7thYr,C_CAP_992));



//UM6mon_CL_A UM12mon_CL_A UM18mon_CL_A UM24mon_CL_A UM30mon_CL_A UM36mon_CL_A UM42mon_CL_A UM48mon_CL_A UM54mon_CL_A UM60mon_CL_A
//Description: Closed UM claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedUMAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin6M,C_CAP_9999999992));

//Description: Closed UM claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedUMAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin12M,C_CAP_9999999992));

//Description: Closed UM claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedUMAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin24M,C_CAP_9999999992));

//Description: Closed UM claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedUMAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin36M,C_CAP_9999999992));

//Description: Closed UM claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedUMAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin48M,C_CAP_9999999992));

//Description: Closed UM claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedUMAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin60M,C_CAP_9999999992));

//cum6_UM_CL_AMT
//Description: Past 6-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed UM claim amount
ClaimsAuto: => H_TotalClosedUMAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtWithin7Yr,C_CAP_9999999992));



//UM_CL_A1 UM_CL_A2 UM_CL_A3 UM_CL_A4 UM_CL_A5 UM_CL_A6 UM_CL_A7 UM_CL_AMT
//Description: Previous 2nd-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Uninsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUMAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedUMClaimAmount >=0), G_TotalClosedUMClaimAmount);
ClaimsAuto: => I_TotClosedUMAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUMAmtIn7thYr,C_CAP_9999999992));



//UM6mon_CL_N UM12mon_CL_N UM18mon_CL_N UM24mon_CL_N UM30mon_CL_N UM36mon_CL_N UM42mon_CL_N UM48mon_CL_N UM54mon_CL_N UM60mon_CL_N
//Description: # of Closed UM claims in the past 6 months
ClaimsAuto: => H_NumClosedUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin6M,C_CAP_992));

//Description: # of Closed UM claims in the past 12 months
ClaimsAuto: => H_NumClosedUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin12M,C_CAP_992));

//Description: # of Closed UM claims in the past 18 months
ClaimsAuto: => H_NumClosedUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin18M,C_CAP_992));

//Description: # of Closed UM claims in the past 24 months
ClaimsAuto: => H_NumClosedUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin24M,C_CAP_992));

//Description: # of Closed UM claims in the past 30 months
ClaimsAuto: => H_NumClosedUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin30M,C_CAP_992));

//Description: # of Closed UM claims in the past 36 months
ClaimsAuto: => H_NumClosedUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin36M,C_CAP_992));

//Description: # of Closed UM claims in the past 42 months
ClaimsAuto: => H_NumClosedUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin42M,C_CAP_992));

//Description: # of Closed UM claims in the past 48 months
ClaimsAuto: => H_NumClosedUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin48M,C_CAP_992));

//Description: # of Closed UM claims in the past 54 months
ClaimsAuto: => H_NumClosedUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin54M,C_CAP_992));

//Description: # of Closed UM claims in the past 60 months
ClaimsAuto: => H_NumClosedUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMWithin60M,C_CAP_992));



//UM_CL_N1 UM_CL_N2 UM_CL_N3 UM_CL_N4 UM_CL_N5 UM_CL_N6 UM_CL_N7
//Description: Previous 2nd-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Uninsured Motorist  claims
ClaimsAuto: => H_NumClosedUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUMIn7thYr,C_CAP_992));



//UM6mon_OP_A UM12mon_OP_A UM18mon_OP_A UM24mon_OP_A UM30mon_OP_A UM36mon_OP_A UM42mon_OP_A UM48mon_OP_A UM54mon_OP_A UM60mon_OP_A
//Description: Open UM claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenUMAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin6M,C_CAP_9999999992));

//Description: Open UM claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenUMAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin12M,C_CAP_9999999992));

//Description: Open UM claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenUMAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin24M,C_CAP_9999999992));

//Description: Open UM claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenUMAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin36M,C_CAP_9999999992));

//Description: Open UM claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenUMAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin48M,C_CAP_9999999992));

//Description: Open UM claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenUMAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin60M,C_CAP_9999999992));

//cum6_UM_OP_AMT
//Description: Past 6-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open UM claim amount
ClaimsAuto: => H_TotalOpenUMAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtWithin7Yr,C_CAP_9999999992));



//UM_OP_A1 UM_OP_A2 UM_OP_A3 UM_OP_A4 UM_OP_A5 UM_OP_A6 UM_OP_A7 UM_OP_AMT
//Description: Previous 2nd-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUMAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenUMClaimAmount >=0), G_TotalOpenUMClaimAmount);
ClaimsAuto: => I_TotOpenUMAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUMAmtIn7thYr,C_CAP_9999999992));



//UM6mon_OP_N UM12mon_OP_N UM18mon_OP_N UM24mon_OP_N UM30mon_OP_N UM36mon_OP_N UM36mon_OP_N UM42mon_OP_N UM48mon_OP_N UM54mon_OP_N UM60mon_OP_N
//Description: # of Open UM claims in the past 6 months
ClaimsAuto: => H_NumOpenUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin6M,C_CAP_992));

//Description: # of Open UM claims in the past 12 months
ClaimsAuto: => H_NumOpenUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin12M,C_CAP_992));

//Description: # of Open UM claims in the past 18 months
ClaimsAuto: => H_NumOpenUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin18M,C_CAP_992));

//Description: # of Open UM claims in the past 24 months
ClaimsAuto: => H_NumOpenUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin24M,C_CAP_992));

//Description: # of Open UM claims in the past 30 months
ClaimsAuto: => H_NumOpenUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin30M,C_CAP_992));

//Description: # of Open UM claims in the past 36 months
ClaimsAuto: => H_NumOpenUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin36M,C_CAP_992));

//Description: # of Open UM claims in the past 42 months
ClaimsAuto: => H_NumOpenUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin42M,C_CAP_992));

//Description: # of Open UM claims in the past 48 months
ClaimsAuto: => H_NumOpenUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin48M,C_CAP_992));

//Description: # of Open UM claims in the past 54 months
ClaimsAuto: => H_NumOpenUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin54M,C_CAP_992));

//Description: # of Open UM claims in the past 60 months
ClaimsAuto: => H_NumOpenUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMWithin60M,C_CAP_992));



//UM_OP_N1 UM_OP_N2 UM_OP_N3 UM_OP_N4 UM_OP_N5 UM_OP_N6 UM_OP_N7
//Description: Previous 2nd-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Uninsured Motorist claims
ClaimsAuto: => H_NumOpenUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUMIn7thYr,C_CAP_992));



//UM6mon_OT_A UM12mon_OT_A UM18mon_OT_A UM24mon_OT_A UM30mon_OT_A UM36mon_OT_A UM42mon_OT_A UM48mon_OT_A UM54mon_OT_A UM60mon_OT_A
//Description: Other UM claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherUMAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin6M,C_CAP_9999999992));

//Description: Other UM claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherUMAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin12M,C_CAP_9999999992));

//Description: Other UM claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherUMAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other UM claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin24M,C_CAP_9999999992));

//Description: Other UM claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherUMAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other UM claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin36M,C_CAP_9999999992));

//Description: Other UM claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherUMAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other UM claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin48M,C_CAP_9999999992));

//Description: Other UM claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherUMAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other TL claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin60M,C_CAP_9999999992));

//cum6_UM_OT_AMT
//Description: Past 6-year other UM claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year other UM claim amount
ClaimsAuto: => H_TotalOtherUMAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtWithin7Yr,C_CAP_9999999992));



//UM_OT_A1 UM_OT_A2 UM_OT_A3 UM_OT_A4 UM_OT_A5 UM_OT_A6 UM_OT_A7 UM_OT_AMT
//Description: Previous 2nd-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Uninsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUMAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherUMClaimAmount >=0), G_TotalOtherUMClaimAmount);
ClaimsAuto: => I_TotOtherUMAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUMAmtIn7thYr,C_CAP_9999999992));



//UM6mon_OT_N UM12mon_OT_N UM18mon_OT_N UM24mon_OT_N UM30mon_OT_N UM36mon_OT_N UM42mon_OT_N UM48mon_OT_N UM54mon_OT_N UM60mon_OT_N
//Description: # of Other UM claims in the past 6 months
ClaimsAuto: => H_NumOtherUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin6M,C_CAP_992));

//Description: # of Other UM claims in the past 12 months
ClaimsAuto: => H_NumOtherUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin12M,C_CAP_992));

//Description: # of Other UM claims in the past 18 months
ClaimsAuto: => H_NumOtherUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin18M,C_CAP_992));

//Description: # of Other UM claims in the past 24 months
ClaimsAuto: => H_NumOtherUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin24M,C_CAP_992));

//Description: # of Other UM claims in the past 30 months
ClaimsAuto: => H_NumOtherUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin30M,C_CAP_992));

//Description: # of Other UM claims in the past 36 months
ClaimsAuto: => H_NumOtherUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin36M,C_CAP_992));

//Description: # of Other UM claims in the past 42 months
ClaimsAuto: => H_NumOtherUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin42M,C_CAP_992));

//Description: # of Other UM claims in the past 48 months
ClaimsAuto: => H_NumOtherUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin48M,C_CAP_992));

//Description: # of Other UM claims in the past 54 months
ClaimsAuto: => H_NumOtherUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin54M,C_CAP_992));

//Description: # of Other UM claims in the past 60 months
ClaimsAuto: => H_NumOtherUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMWithin60M,C_CAP_992));



//UM_OT_N1 UM_OT_N2 UM_OT_N3 UM_OT_N4 UM_OT_N5 UM_OT_N6 UM_OT_N7
//Description: Previous 2nd-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Uninsured Motorist claims
ClaimsAuto: => H_NumOtherUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUMIn7thYr,C_CAP_992));



//UM6mon_ZR_N UM12mon_ZR_N UM18mon_ZR_N UM24mon_ZR_N UM30mon_ZR_N UM36mon_ZR_N UM42mon_ZR_N UM48mon_ZR_N UM54mon_ZR_N UM60mon_ZR_N
//Description: # of Zero-payment UM claims in the past 6 months
ClaimsAuto: => H_NumZeroUMWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroUMWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin6M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 12 months
ClaimsAuto: => H_NumZeroUMWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroUMWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin12M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 18 months
ClaimsAuto: => H_NumZeroUMWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroUMWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin18M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 24 months
ClaimsAuto: => H_NumZeroUMWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroUMWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin24M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 30 months
ClaimsAuto: => H_NumZeroUMWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroUMWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin30M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 36 months
ClaimsAuto: => H_NumZeroUMWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroUMWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin36M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 42 months
ClaimsAuto: => H_NumZeroUMWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroUMWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin42M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 48 months
ClaimsAuto: => H_NumZeroUMWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroUMWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin48M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 54 months
ClaimsAuto: => H_NumZeroUMWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroUMWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin54M,C_CAP_992));

//Description: # of Zero-payment UM claims in the past 60 months
ClaimsAuto: => H_NumZeroUMWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroUMWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMWithin60M,C_CAP_992));



//UM_ZR_N1 UM_ZR_N2 UM_ZR_N3 UM_ZR_N4 UM_ZR_N5 UM_ZR_N6 UM_ZR_N7
//Description: Previous 2nd-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroUMIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroUMIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroUMIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroUMIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroUMIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Uninsured Motorist claims
ClaimsAuto: => H_NumZeroUMIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUMZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroUMIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUMIn7thYr,C_CAP_992));



//UN_6mon_AMT UN_12mon_AMT UN_18mon_AMT UN_24mon_AMT UN_30mon_AMT UN_36mon_AMT UN_42mon_AMT UN_48mon_AMT UN_54mon_AMT UN_60mon_AMT
//Description: Total UN claim amount in the past 6 months
ClaimsAuto: => H_TotalUNAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin6M,C_CAP_9999999992));

//Description: Total UN claim amount in the past 12 months
ClaimsAuto: => H_TotalUNAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin12M,C_CAP_9999999992));

//Description: Total UN claim amount in the past 18 months
ClaimsAuto: => H_TotalUNAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin24M,C_CAP_9999999992));

//Description: Total UN claim amount in the past 30 months
ClaimsAuto: => H_TotalUNAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin36M,C_CAP_9999999992));

//Description: Total UN claim amount in the past 42 months
ClaimsAuto: => H_TotalUNAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin48M,C_CAP_9999999992));

//Description: Total UN claim amount in the past 54 months
ClaimsAuto: => H_TotalUNAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin60M,C_CAP_9999999992));

//cum6_UN_AMT
//Description: Past 6-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin6Yr,C_CAP_9999999992));

//UN_AMT UN_AMT1 UN_AMT2 UN_AMT3 UN_AMT4 UN_AMT5 UN_AMT6 UN_AMT7
//Description: Past 7-year UN claim amount
ClaimsAuto: => H_TotalUNAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtWithin7Yr,C_CAP_9999999992));



//Description: Previous 2nd-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year total Underinsured Motorist claim amount
ClaimsAuto: => H_TotalUNAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalUNClaimAmount >=0), G_TotalUNClaimAmount);
ClaimsAuto: => I_TotUNAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalUNAmtIn7thYr,C_CAP_9999999992));



//UN_6mon_CNT UN_12mon_CNT UN_18mon_CNT UN_24mon_CNT UN_30mon_CNT UN_36mon_CNT UN_42mon_CNT UN_48mon_CNT UN_54mon_CNT UN_60mon_CNT
//Description: # of UN claims in the past 6 months
ClaimsAuto: => H_NumUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin6M,C_CAP_992));

//Description: # of UN claims in the past 12 months
ClaimsAuto: => H_NumUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin12M,C_CAP_992));

//Description: # of UN claims in the past 18 months
ClaimsAuto: => H_NumUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin18M,C_CAP_992));

//Description: Past 2-year number of UN claims
ClaimsAuto: => H_NumUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin24M,C_CAP_992));

//Description: # of UN claims in the past 30 months
ClaimsAuto: => H_NumUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin30M,C_CAP_992));

//Description: Past 3-year number of UN claims
ClaimsAuto: => H_NumUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin36M,C_CAP_992));

//Description: # of UN claims in the past 42 months
ClaimsAuto: => H_NumUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin42M,C_CAP_992));

//Description: Past 4-year number of UN claims
ClaimsAuto: => H_NumUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin48M,C_CAP_992));

//Description: # of UN claims in the past 54 months
ClaimsAuto: => H_NumUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin54M,C_CAP_992));

//Description: Past 5-year number of UN claims
ClaimsAuto: => H_NumUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin60M,C_CAP_992));

//cum6_UN_CNT
//Description: Past 6-year number of UN claims
ClaimsAuto: => H_NumUNWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntUNWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin6Yr,C_CAP_992));

//UN_CNT UN_CNT1 UN_CNT2 UN_CNT3 UN_CNT4 UN_CNT5 UN_CNT6 UN_CNT7
//Description: Past 7-year number of UN claims
ClaimsAuto: => H_NumUNWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntUNWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Underinsured Motorist claims
ClaimsAuto: => H_NumUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumUNIn7thYr,C_CAP_992));



//UN_6mon_NZCNT UN_12mon_NZCNT UN_18mon_NZCNT UN_24mon_NZCNT UN_30mon_NZCNT UN_36mon_NZCNT UN_42mon_NZCNT UN_48mon_NZCNT UN_54mon_NZCNT UN_60mon_NZCNT
//Description: # of above-zero-payment UN claims in the past 6 months
ClaimsAuto: => H_NumNZUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin6M,C_CAP_992));

//Description: # of above-zero-payment UN claims in the past 12 months
ClaimsAuto: => H_NumNZUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin12M,C_CAP_992));

//Description: # of above-zero-payment UN claims in the past 18 months
ClaimsAuto: => H_NumNZUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntNZUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin18M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 2 years
ClaimsAuto: => H_NumNZUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin24M,C_CAP_992));

//Description: # of above-zero-payment UN claims in the past 30 months
ClaimsAuto: => H_NumNZUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntNZUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin30M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 3 years
ClaimsAuto: => H_NumNZUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin36M,C_CAP_992));

//Description: # of above-zero-payment UN claims in the past 42 months
ClaimsAuto: => H_NumNZUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntNZUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin42M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 4 years
ClaimsAuto: => H_NumNZUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin48M,C_CAP_992));

//Description: # of above-zero-payment UN claims in the past 54 months
ClaimsAuto: => H_NumNZUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntNZUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin54M,C_CAP_992));

//Description: Number of above-zero-payment UM claims in the past 5 years
ClaimsAuto: => H_NumNZUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin60M,C_CAP_992));

//cum6_UN_NZCNT
//Description: Number of above-zero-payment UM claims in the past 6 years
ClaimsAuto: => H_NumNZUNWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZUNWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin6Yr,C_CAP_992));

//UN_NZCNT UN_NZCNT1 UN_NZCNT2 UN_NZCNT3 UN_NZCNT4 UN_NZCNT5 UN_NZCNT6 UN_NZCNT7
//Description: Total number of above-zero-payment UN claims for the past 7 years
ClaimsAuto: => H_NumNZUNWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZUNWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNWithin7Yr,C_CAP_992));



//Description: Previous 2nd-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntNZUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntNZUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntNZUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of Underinsured Motorist above-zero-payment claims
ClaimsAuto: => H_NumNZUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClaimNZ AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntNZUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumNZUNIn7thYr,C_CAP_992));



//UN6mon_CL_A UN12mon_CL_A UN18mon_CL_A UN24mon_CL_A UN30mon_CL_A UN36mon_CL_A UN42mon_CL_A UN48mon_CL_A UN54mon_CL_A UN60mon_CL_A
//Description: Closed UN claim amount in the past 6 months
ClaimsAuto: => H_TotalClosedUNAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin6M,C_CAP_9999999992));

//Description: Closed UN claim amount in the past 12 months
ClaimsAuto: => H_TotalClosedUNAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin12M,C_CAP_9999999992));

//Description: Closed UN claim amount in the past 18 months
ClaimsAuto: => H_TotalClosedUNAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin24M,C_CAP_9999999992));

//Description: Closed UN claim amount in the past 30 months
ClaimsAuto: => H_TotalClosedUNAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin36M,C_CAP_9999999992));

//Description: Closed UN claim amount in the past 42 months
ClaimsAuto: => H_TotalClosedUNAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin48M,C_CAP_9999999992));

//Description: Closed UN claim amount in the past 54 months
ClaimsAuto: => H_TotalClosedUNAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin60M,C_CAP_9999999992));

//cum6_UN_CL_AMT
//Description: Past 6-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year closed UN claim amount
ClaimsAuto: => H_TotalClosedUNAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtWithin7Yr,C_CAP_9999999992));



//UN_CL_A1 UN_CL_A2 UN_CL_A3 UN_CL_A4 UN_CL_A5 UN_CL_A6 UN_CL_A7 UN_CL_AMT
//Description: Previous 2nd-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year closed Underinsured Motorist  claim amount
ClaimsAuto: => H_TotalClosedUNAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalClosedUNClaimAmount >=0), G_TotalClosedUNClaimAmount);
ClaimsAuto: => I_TotClosedUNAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalClosedUNAmtIn7thYr,C_CAP_9999999992));



//UN6mon_CL_N UN12mon_CL_N UN18mon_CL_N UN24mon_CL_N UN30mon_CL_N UN36mon_CL_N UN42mon_CL_N UN48mon_CL_N UN54mon_CL_N UN60mon_CL_N
//Description: # of Closed UN claims in the past 6 months
ClaimsAuto: => H_NumClosedUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntClosedUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin6M,C_CAP_992));

//Description: # of Closed UN claims in the past 12 months
ClaimsAuto: => H_NumClosedUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntClosedUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin12M,C_CAP_992));

//Description: # of Closed UN claims in the past 18 months
ClaimsAuto: => H_NumClosedUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntClosedUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin18M,C_CAP_992));

//Description: # of Closed UN claims in the past 24 months
ClaimsAuto: => H_NumClosedUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin24M,C_CAP_992));

//Description: # of Closed UN claims in the past 30 months
ClaimsAuto: => H_NumClosedUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntClosedUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin30M,C_CAP_992));

//Description: # of Closed UN claims in the past 36 months
ClaimsAuto: => H_NumClosedUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin36M,C_CAP_992));

//Description: # of Closed UN claims in the past 42 months
ClaimsAuto: => H_NumClosedUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntClosedUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin42M,C_CAP_992));

//Description: # of Closed UN claims in the past 48 months
ClaimsAuto: => H_NumClosedUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin48M,C_CAP_992));

//Description: # of Closed UN claims in the past 54 months
ClaimsAuto: => H_NumClosedUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntClosedUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin54M,C_CAP_992));

//Description: # of Closed UN claims in the past 60 months
ClaimsAuto: => H_NumClosedUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNWithin60M,C_CAP_992));



//UN_CL_N1 UN_CL_N2 UN_CL_N3 UN_CL_N4 UN_CL_N5 UN_CL_N6 UN_CL_N7
//Description: Previous 2nd-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntClosedUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntClosedUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntClosedUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntClosedUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntClosedUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of closed Underinsured Motorist  claims
ClaimsAuto: => H_NumClosedUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNClosedClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntClosedUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumClosedUNIn7thYr,C_CAP_992));



//UN6mon_OP_A UN12mon_OP_A UN18mon_OP_A UN24mon_OP_A UN30mon_OP_A UN36mon_OP_A UN42mon_OP_A UN48mon_OP_A UN54mon_OP_A UN60mon_OP_A
//Description: Open UN claim amount in the past 6 months
ClaimsAuto: => H_TotalOpenUNAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin6M,C_CAP_9999999992));

//Description: Open UN claim amount in the past 12 months
ClaimsAuto: => H_TotalOpenUNAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin12M,C_CAP_9999999992));

//Description: Open UN claim amount in the past 18 months
ClaimsAuto: => H_TotalOpenUNAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin24M,C_CAP_9999999992));

//Description: Open UN claim amount in the past 30 months
ClaimsAuto: => H_TotalOpenUNAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin36M,C_CAP_9999999992));

//Description: Open UN claim amount in the past 42 months
ClaimsAuto: => H_TotalOpenUNAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin48M,C_CAP_9999999992));

//Description: Open UN claim amount in the past 54 months
ClaimsAuto: => H_TotalOpenUNAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin60M,C_CAP_9999999992));

//cum6_UN_OP_AMT
//Description: Past 6-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin6Yr,C_CAP_9999999992));

//Description: Past 7-year open UN claim amount
ClaimsAuto: => H_TotalOpenUNAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtWithin7Yr,C_CAP_9999999992));



//UN_OP_A1 UN_OP_A2 UN_OP_A3 UN_OP_A4 UN_OP_A5 UN_OP_A6 UN_OP_A7 UN_OP_AMT
//Description: Previous 2nd-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year open Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOpenUNAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOpenUNClaimAmount >=0), G_TotalOpenUNClaimAmount);
ClaimsAuto: => I_TotOpenUNAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOpenUNAmtIn7thYr,C_CAP_9999999992));



//UN6mon_OP_N UN12mon_OP_N UN18mon_OP_N UN24mon_OP_N UN30mon_OP_N UN36mon_OP_N UN36mon_OP_N UN42mon_OP_N UN48mon_OP_N UN54mon_OP_N UN60mon_OP_N
//Description: # of Open UN claims in the past 6 months
ClaimsAuto: => H_NumOpenUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOpenUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin6M,C_CAP_992));

//Description: # of Open UN claims in the past 12 months
ClaimsAuto: => H_NumOpenUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOpenUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin12M,C_CAP_992));

//Description: # of Open UN claims in the past 18 months
ClaimsAuto: => H_NumOpenUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOpenUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin18M,C_CAP_992));

//Description: # of Open UN claims in the past 24 months
ClaimsAuto: => H_NumOpenUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin24M,C_CAP_992));

//Description: # of Open UN claims in the past 30 months
ClaimsAuto: => H_NumOpenUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOpenUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin30M,C_CAP_992));

//Description: # of Open UN claims in the past 36 months
ClaimsAuto: => H_NumOpenUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin36M,C_CAP_992));

//Description: # of Open UN claims in the past 42 months
ClaimsAuto: => H_NumOpenUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOpenUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin42M,C_CAP_992));

//Description: # of Open UN claims in the past 48 months
ClaimsAuto: => H_NumOpenUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin48M,C_CAP_992));

//Description: # of Open UN claims in the past 54 months
ClaimsAuto: => H_NumOpenUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOpenUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin54M,C_CAP_992));

//Description: # of Open UN claims in the past 60 months
ClaimsAuto: => H_NumOpenUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNWithin60M,C_CAP_992));



//UN_OP_N1 UN_OP_N2 UN_OP_N3 UN_OP_N4 UN_OP_N5 UN_OP_N6 UN_OP_N7
//Description: Previous 2nd-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOpenUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOpenUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOpenUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOpenUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOpenUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of open Underinsured Motorist claims
ClaimsAuto: => H_NumOpenUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOpenClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOpenUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOpenUNIn7thYr,C_CAP_992));



//UN6mon_OT_A UN12mon_OT_A UN18mon_OT_A UN24mon_OT_A UN30mon_OT_A UN36mon_OT_A UN42mon_OT_A UN48mon_OT_A UN54mon_OT_A UN60mon_OT_A
//Description: Other UN claim amount in the past 6 months
ClaimsAuto: => H_TotalOtherUNAmtWithin6M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin6M,C_CAP_9999999992));

//Description: Other UN claim amount in the past 12 months
ClaimsAuto: => H_TotalOtherUNAmtWithin12M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin12M,C_CAP_9999999992));

//Description: Other UN claim amount in the past 18 months
ClaimsAuto: => H_TotalOtherUNAmtWithin18M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin18M,C_CAP_9999999992));

//Description: Past 2-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin24M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin24M,C_CAP_9999999992));

//Description: Other UN claim amount in the past 30 months
ClaimsAuto: => H_TotalOtherUNAmtWithin30M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin30M,C_CAP_9999999992));

//Description: Past 3-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin36M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin36M,C_CAP_9999999992));

//Description: Other UN claim amount in the past 42 months
ClaimsAuto: => H_TotalOtherUNAmtWithin42M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin42M,C_CAP_9999999992));

//Description: Past 4-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin48M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin48M,C_CAP_9999999992));

//Description: Other UN claim amount in the past 54 months
ClaimsAuto: => H_TotalOtherUNAmtWithin54M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin54M,C_CAP_9999999992));

//Description: Past 5-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin60M := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin60M,C_CAP_9999999992));

//Description: Past 7-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin7Yr,C_CAP_9999999992));

//cum6_UN_OT_AMT
//Description: Past 6-year other UN claim amount
ClaimsAuto: => H_TotalOtherUNAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtWithin6Yr,C_CAP_9999999992));



//UN_OT_A1 UN_OT_A2 UN_OT_A3 UN_OT_A4 UN_OT_A5 UN_OT_A6 UN_OT_A7 UN_OT_AMT
//Description: Previous 2nd-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn2ndYr,C_CAP_9999999992));

//Description: Previous 3rd-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn3rdYr,C_CAP_9999999992));

//Description: Previous 4th-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn4thYr,C_CAP_9999999992));

//Description: Previous 5th-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn5thYr,C_CAP_9999999992));

//Description: Previous 6th-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn6thYr,C_CAP_9999999992));

//Description: Previous 7th-year other Underinsured Motorist claim amount
ClaimsAuto: => H_TotalOtherUNAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalOtherUNClaimAmount >=0), G_TotalOtherUNClaimAmount);
ClaimsAuto: => I_TotOtherUNAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalOtherUNAmtIn7thYr,C_CAP_9999999992));



//UN6mon_OT_N UN12mon_OT_N UN18mon_OT_N UN24mon_OT_N UN30mon_OT_N UN36mon_OT_N UN42mon_OT_N UN48mon_OT_N UN54mon_OT_N UN60mon_OT_N
//Description: # of Other UN claims in the past 6 months
ClaimsAuto: => H_NumOtherUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntOtherUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin6M,C_CAP_992));

//Description: # of Other UN claims in the past 12 months
ClaimsAuto: => H_NumOtherUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntOtherUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin12M,C_CAP_992));

//Description: # of Other UN claims in the past 18 months
ClaimsAuto: => H_NumOtherUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntOtherUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin18M,C_CAP_992));

//Description: # of Other UN claims in the past 24 months
ClaimsAuto: => H_NumOtherUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin24M,C_CAP_992));

//Description: # of Other UN claims in the past 30 months
ClaimsAuto: => H_NumOtherUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntOtherUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin30M,C_CAP_992));

//Description: # of Other UN claims in the past 36 months
ClaimsAuto: => H_NumOtherUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin36M,C_CAP_992));

//Description: # of Other UN claims in the past 42 months
ClaimsAuto: => H_NumOtherUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntOtherUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin42M,C_CAP_992));

//Description: # of Other UN claims in the past 48 months
ClaimsAuto: => H_NumOtherUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin48M,C_CAP_992));

//Description: # of Other UN claims in the past 54 months
ClaimsAuto: => H_NumOtherUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntOtherUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin54M,C_CAP_992));

//Description: # of Other UN claims in the past 60 months
ClaimsAuto: => H_NumOtherUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNWithin60M,C_CAP_992));



//UN_OT_N1 UN_OT_N2 UN_OT_N3 UN_OT_N4 UN_OT_N5 UN_OT_N6 UN_OT_N7
//Description: Previous 2nd-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntOtherUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntOtherUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntOtherUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntOtherUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntOtherUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of other Underinsured Motorist claims
ClaimsAuto: => H_NumOtherUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNOtherClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntOtherUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumOtherUNIn7thYr,C_CAP_992));



//UN6mon_ZR_N UN12mon_ZR_N UN18mon_ZR_N UN24mon_ZR_N UN30mon_ZR_N UN36mon_ZR_N UN42mon_ZR_N UN48mon_ZR_N UN54mon_ZR_N UN60mon_ZR_N
//Description: # of Zero-payment UN claims in the past 6 months
ClaimsAuto: => H_NumZeroUNWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntZeroUNWithin6M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin6M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 12 months
ClaimsAuto: => H_NumZeroUNWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntZeroUNWithin12M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin12M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 18 months
ClaimsAuto: => H_NumZeroUNWithin18M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 18));
ClaimsAuto: => I_CntZeroUNWithin18M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin18M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 24 months
ClaimsAuto: => H_NumZeroUNWithin24M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroUNWithin24M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin24M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 30 months
ClaimsAuto: => H_NumZeroUNWithin30M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 30));
ClaimsAuto: => I_CntZeroUNWithin30M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin30M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 36 months
ClaimsAuto: => H_NumZeroUNWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroUNWithin36M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin36M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 42 months
ClaimsAuto: => H_NumZeroUNWithin42M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 42));
ClaimsAuto: => I_CntZeroUNWithin42M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin42M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 48 months
ClaimsAuto: => H_NumZeroUNWithin48M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroUNWithin48M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin48M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 54 months
ClaimsAuto: => H_NumZeroUNWithin54M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 54));
ClaimsAuto: => I_CntZeroUNWithin54M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin54M,C_CAP_992));

//Description: # of Zero-payment UN claims in the past 60 months
ClaimsAuto: => H_NumZeroUNWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroUNWithin60M := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNWithin60M,C_CAP_992));



//UN_ZR_N1 UN_ZR_N2 UN_ZR_N3 UN_ZR_N4 UN_ZR_N5 UN_ZR_N6 UN_ZR_N7
//Description: Previous 2nd-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntZeroUNIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn2ndYr,C_CAP_992));

//Description: Previous 3rd-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntZeroUNIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn3rdYr,C_CAP_992));

//Description: Previous 4th-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntZeroUNIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn4thYr,C_CAP_992));

//Description: Previous 5th-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntZeroUNIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn5thYr,C_CAP_992));

//Description: Previous 6th-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntZeroUNIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn6thYr,C_CAP_992));

//Description: Previous 7th-year # of zero-amount Underinsured Motorist claims
ClaimsAuto: => H_NumZeroUNIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUNZeroClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntZeroUNIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumZeroUNIn7thYr,C_CAP_992));



//CUM2_GFAULTAMT CUM3_GFAULTAMT CUM4_GFAULTAMT CUM5_GFAULTAMT CUM6_GFAULTAMT CUM7_GFAULTAMT
//Description: General at-fault claim amount for the past 2 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin2Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin2Yr,C_CAP_9999999992));

//Description: General at-fault claim amount for the past 3 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin3Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin3Yr,C_CAP_9999999992));

//Description: General at-fault claim amount for the past 4 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin4Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin4Yr,C_CAP_9999999992));

//Description: General at-fault claim amount for the past 5 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin5Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin5Yr,C_CAP_9999999992));

//Description: General at-fault claim amount for the past 6 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin6Yr,C_CAP_9999999992));

//Description: General at-fault claim amount for the past 7 years
ClaimsAuto: => H_TotalGeneralAtFaultAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtWithin7Yr,C_CAP_9999999992));



//G_FAULTAMT G_FAULTAMT G3_FAULTAMT G4_FAULTAMT G5_FAULTAMT G6_FAULTAMT G7_FAULTAMT
//Description: The general at-fault claim amount for the past year (12 months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn1stYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn1stYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn2ndYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn3rdYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn4thYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn5thYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn6thYr,C_CAP_9999999992));

//Description: The general at-fault claim amount for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_TotalGeneralAtFaultAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84 AND G_TotalGeneralAtFaultClaimAmount >=0), G_TotalGeneralAtFaultClaimAmount);
ClaimsAuto: => I_TotGeneralAtFaultAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotalGeneralAtFaultAmtIn7thYr,C_CAP_9999999992));



//CUM2_GFAULTCNT CUM3_GFAULTCNT CUM4_GFAULTCNT CUM5_GFAULTCNT CUM6_GFAULTCNT CUM7_GFAULTCNT
//Description: Number of general at-fault claims for the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin2Yr,C_CAP_992));

//Description: Number of general at-fault claims for the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin3Yr,C_CAP_992));

//Description: Number of general at-fault claims for the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin4Yr,C_CAP_992));

//Description: Number of general at-fault claims for the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin5Yr,C_CAP_992));

//Description: Number of general at-fault claims for the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin6Yr,C_CAP_992));

//Description: Number of general at-fault claims for the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultWithin7Yr,C_CAP_992));



//G_FAULTCNT G_FAULTCNT G3_FAULTCNT G4_FAULTCNT G5_FAULTCNT G6_FAULTCNT G7_FAULTCNT
//Description: The number of general at-fault claims for the past year (12 months)
ClaimsAuto: => H_NumGeneralAtFaultIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn1stYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn2ndYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn3rdYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn4thYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn5thYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn6thYr,C_CAP_992));

//Description: The number of general at-fault claims for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultIn7thYr,C_CAP_992));



//CUM2_GFTGE10KCNT CUM3_GFTGE10KCNT CUM4_GFTGE10KCNT CUM5_GFTGE10KCNT CUM6_GFTGE10KCNT CUM7_GFTGE10KCNT
//Description: # of general at-fault claims paid above $10K in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $10K in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $10K in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $10K in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $10K in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $10K in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE10000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE10000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000Within7Yr,C_CAP_992));



//N1_GFTGE10KCNT N2_GFTGE10KCNT N3_GFTGE10KCNT N4_GFTGE10KCNT N5_GFTGE10KCNT N6_GFTGE10KCNT N7_GFTGE10KCNT
//Description: The number of general at-fault claims with payout over $10K for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $10K for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE10000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE10000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE10000In7thYr,C_CAP_992));



//CUM2_GFTGE5KCNT CUM3_GFTGE5KCNT CUM4_GFTGE5KCNT CUM5_GFTGE5KCNT CUM6_GFTGE5KCNT CUM7_GFTGE5KCNT
//Description: # of general at-fault claims paid above $5000 in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $5000 in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $5000 in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $5000 in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $5000 in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $5000 in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE5000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE5000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000Within7Yr,C_CAP_992));



//N1_GFTGE5KCNT N2_GFTGE5KCNT N3_GFTGE5KCNT N4_GFTGE5KCNT N5_GFTGE5KCNT N6_GFTGE5KCNT N7_GFTGE5KCNT
//Description: The number of general at-fault claims with payout over $5000 for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $5000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE5000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE5000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE5000In7thYr,C_CAP_992));



//CUM2_GFTGE2KCNT CUM3_GFTGE2KCNT CUM4_GFTGE2KCNT CUM5_GFTGE2KCNT CUM6_GFTGE2KCNT CUM7_GFTGE2KCNT
//Description: # of general at-fault claims paid above $2000 in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $2000 in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $2000 in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $2000 in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $2000 in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $2000 in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE2000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE2000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000Within7Yr,C_CAP_992));



//N1_GFTGE2KCNT N2_GFTGE2KCNT N3_GFTGE2KCNT N4_GFTGE2KCNT N5_GFTGE2KCNT N6_GFTGE2KCNT N7_GFTGE2KCNT
//Description: The number of general at-fault claims with payout over $2000 for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $2000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE2000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE2000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE2000In7thYr,C_CAP_992));



//CUM2_GFTGE1KCNT CUM3_GFTGE1KCNT CUM4_GFTGE1KCNT CUM5_GFTGE1KCNT CUM6_GFTGE1KCNT CUM7_GFTGE1KCNT
//Description: # of general at-fault claims paid above $1000 in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $1000 in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $1000 in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $1000 in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $1000 in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $1000 in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE1000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE1000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000Within7Yr,C_CAP_992));



//N1_GFTGE1KCNT N2_GFTGE1KCNT N3_GFTGE1KCNT N4_GFTGE1KCNT N5_GFTGE1KCNT N6_GFTGE1KCNT N7_GFTGE1KCNT
//Description: The number of general at-fault claims with payout over $1000 for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $1000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE1000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE1000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE1000In7thYr,C_CAP_992));



//CUM2_GFTGE750CNT CUM3_GFTGE750CNT CUM4_GFTGE750CNT CUM5_GFTGE750CNT CUM6_GFTGE750CNT CUM7_GFTGE750CNT
//Description: # of general at-fault claims paid above $750 in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $750 in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $750 in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $750 in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $750 in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $750 in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE750Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE750Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750Within7Yr,C_CAP_992));



//N1_GFTGE750CNT N2_GFTGE750CNT N3_GFTGE750CNT N4_GFTGE750CNT N5_GFTGE750CNT N6_GFTGE750CNT N7_GFTGE750CNT
//Description: The number of general at-fault claims with payout over $750 for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE750In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $750 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE750In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $750 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE750In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $750 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE750In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $750 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE750In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE750In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $750 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE750In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE750In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE750In7thYr,C_CAP_992));



//CUM2_GFTGE500CNT CUM3_GFTGE500CNT CUM4_GFTGE500CNT CUM5_GFTGE500CNT CUM6_GFTGE500CNT CUM7_GFTGE500CNT
//Description: # of general at-fault claims paid above $500 in the past 2 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within2Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $500 in the past 3 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within3Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $500 in the past 4 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within4Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $500 in the past 5 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within5Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $500 in the past 6 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within6Yr,C_CAP_992));

//Description: # of general at-fault claims paid above $500 in the past 7 years
ClaimsAuto: => H_NumGeneralAtFaultGE500Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE500Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500Within7Yr,C_CAP_992));



//N1_GFTGE500CNT N2_GFTGE500CNT N3_GFTGE500CNT N4_GFTGE500CNT N5_GFTGE500CNT N6_GFTGE500CNT N7_GFTGE500CNT
//Description: The number of general at-fault claims with payout over $500 for the past year (previous 12 months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGeneralAtFaultGE500In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In1stYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntGeneralAtFaultGE500In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In2ndYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGeneralAtFaultGE500In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In3rdYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntGeneralAtFaultGE500In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In4thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGeneralAtFaultGE500In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In5thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntGeneralAtFaultGE500In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In6thYr,C_CAP_992));

//Description: The number of general at-fault claims with payout over $500 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumGeneralAtFaultGE500In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsGeneralAtFaultClaim AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntGeneralAtFaultGE500In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumGeneralAtFaultGE500In7thYr,C_CAP_992));



//AVG_LOSS AVG_LOSS AVG3_LOSS AVG4_LOSS AVG5_LOSS AVG6_LOSS AVG7_LOSS
//Description: Average claim amount per claim for the past year
ClaimsAuto: => I_AvgClaimAmtIn1stYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimWithin12M = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtWithin12M / H_NumClaimWithin12M), C_CAP_9999999992));

//Description: Average claim amount per claim for the previous second year
ClaimsAuto: => I_AvgClaimAmtIn2ndYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn2ndYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn2ndYr / H_NumClaimIn2ndYr), C_CAP_9999999992));

//Description: Average claim amount per claim for for the previous third year
ClaimsAuto: => I_AvgClaimAmtIn3rdYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn3rdYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn3rdYr / H_NumClaimIn3rdYr), C_CAP_9999999992));

//Description: Average claim amount per claim for for the previous fourth year
ClaimsAuto: => I_AvgClaimAmtIn4thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn4thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn4thYr / H_NumClaimIn4thYr), C_CAP_9999999992));

//Description: Average claim amount per claim for the previous second year
ClaimsAuto: => I_AvgClaimAmtIn5thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn5thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn5thYr / H_NumClaimIn5thYr), C_CAP_9999999992));

//Description: Average claim amount per claim for for the previous sixth year
ClaimsAuto: => I_AvgClaimAmtIn6thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn6thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn6thYr / H_NumClaimIn6thYr), C_CAP_9999999992));

//Description: Average claim amount per claim for for the previous seventh year
ClaimsAuto: => I_AvgClaimAmtIn7thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumClaimIn7thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalClaimAmtIn7thYr / H_NumClaimIn7thYr), C_CAP_9999999992));



//AVG_MMP_NOBPLOSS AVG_MMP_NOBPLOSS AVG3_MMP_NOBPLOSS AVG4_MMP_NOBPLOSS AVG5_MMP_NOBPLOSS AVG6_MMP_NOBPLOSS AVG7_MMP_NOBPLOSS
//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for the past year
ClaimsAuto: => H_NumNZMedPIIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_AvgMedPIAmtIn1stYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn1stYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn1stYr / H_NumNZMedPIIn1stYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for the previous second year
ClaimsAuto: => H_NumNZMedPIIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_AvgMedPIAmtIn2ndYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn2ndYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn2ndYr / H_NumNZMedPIIn2ndYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for for the previous third year
ClaimsAuto: => H_NumNZMedPIIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_AvgMedPIAmtIn3rdYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn3rdYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn3rdYr / H_NumNZMedPIIn3rdYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for for the previous fourth year
ClaimsAuto: => H_NumNZMedPIIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_AvgMedPIAmtIn4thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn4thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn4thYr / H_NumNZMedPIIn4thYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for the previous second year
ClaimsAuto: => H_NumNZMedPIIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_AvgMedPIAmtIn5thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn5thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn5thYr / H_NumNZMedPIIn5thYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for for the previous sixth year
ClaimsAuto: => H_NumNZMedPIIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_AvgMedPIAmtIn6thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn6thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn6thYr / H_NumNZMedPIIn6thYr), C_CAP_9999999992));

//Description: Average claim amount  of Medical Expense, Medical Payment, and Personal Injury while no Bodily Injury or Property Damage per claim for for the previous seventh year
ClaimsAuto: => H_NumNZMedPIIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedPIClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_AvgMedPIAmtIn7thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedPIIn7thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedPIAmtIn7thYr / H_NumNZMedPIIn7thYr), C_CAP_9999999992));



//AVG1CPONLYLOSS AVG2CPONLYLOSS AVG3CPONLYLOSS AVG4CPONLYLOSS AVG5CPONLYLOSS AVG6CPONLYLOSS AVG7CPONLYLOSS
//Description: Average claim amount per CP claim for the past year
ClaimsAuto: => I_AvgCPAmtIn1stYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPWithin12M = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtWithin12M / H_NumNZCPWithin12M), C_CAP_9999999992));

//Description: Average claim amount per CP claim for the previous second year
ClaimsAuto: => I_AvgCPAmtIn2ndYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn2ndYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn2ndYr / H_NumNZCPIn2ndYr), C_CAP_9999999992));

//Description: Average claim amount per CP claim for for the previous third year
ClaimsAuto: => I_AvgCPAmtIn3rdYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn3rdYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn3rdYr / H_NumNZCPIn3rdYr), C_CAP_9999999992));

//Description: Average claim amount per CP claim for for the previous fourth year
ClaimsAuto: => I_AvgCPAmtIn4thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn4thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn4thYr / H_NumNZCPIn4thYr), C_CAP_9999999992));

//Description: Average claim amount per CP claim for the previous second year
ClaimsAuto: => I_AvgCPAmtIn5thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn5thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn5thYr / H_NumNZCPIn5thYr), C_CAP_9999999992));

//Description: Average claim amount per CP claim for for the previous sixth year
ClaimsAuto: => I_AvgCPAmtIn6thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn6thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn6thYr / H_NumNZCPIn6thYr), C_CAP_9999999992));

//Description: Average claim amount per CP claim for for the previous seventh year
ClaimsAuto: => I_AvgCPAmtIn7thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZCPIn7thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalCPAmtIn7thYr / H_NumNZCPIn7thYr), C_CAP_9999999992));




//AVG_MMPLOSS AVG_MMPLOSS AVG3_MMPLOSS AVG4_MMPLOSS AVG5_MMPLOSS AVG6_MMPLOSS AVG7_MMPLOSS
//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury for the past year
ClaimsAuto: => H_NumNZMedInjuryIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_AvgMedInjuryAmtIn1stYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn1stYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn1stYr / H_NumNZMedInjuryIn1stYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury the previous second year
ClaimsAuto: => H_NumNZMedInjuryIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_AvgMedInjuryAmtIn2ndYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn2ndYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn2ndYr / H_NumNZMedInjuryIn2ndYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury for the previous third year
ClaimsAuto: => H_NumNZMedInjuryIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_AvgMedInjuryAmtIn3rdYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn3rdYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn3rdYr / H_NumNZMedInjuryIn3rdYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury for the previous fourth year
ClaimsAuto: => H_NumNZMedInjuryIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_AvgMedInjuryAmtIn4thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn4thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn4thYr / H_NumNZMedInjuryIn4thYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury the previous second year
ClaimsAuto: => H_NumNZMedInjuryIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_AvgMedInjuryAmtIn5thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn5thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn5thYr / H_NumNZMedInjuryIn5thYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury for the previous sixth year
ClaimsAuto: => H_NumNZMedInjuryIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_AvgMedInjuryAmtIn6thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn6thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn6thYr / H_NumNZMedInjuryIn6thYr), C_CAP_9999999992));

//Description: Average claim amount per claim of the claim types of Medical Expense, Medical Payment, Bodily Injury and Personal Injury for the previous seventh year
ClaimsAuto: => H_NumNZMedInjuryIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalMedInjuryClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_AvgMedInjuryAmtIn7thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZMedInjuryIn7thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalMedInjuryAmtIn7thYr / H_NumNZMedInjuryIn7thYr), C_CAP_9999999992));



//AVG1BPRLOSS AVG2BPRLOSS AVG3BPRLOSS AVG4BPRLOSS AVG5BPRLOSS AVG6BPRLOSS AVG7BPRLOSS
//Description: Average claim amount per BI PD or RR claim for the past year
ClaimsAuto: => H_NumNZBPRIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_AvgBPRAmtIn1stYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn1stYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn1stYr / H_NumNZBPRIn1stYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for the previous second year
ClaimsAuto: => H_NumNZBPRIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_AvgBPRAmtIn2ndYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn2ndYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn2ndYr / H_NumNZBPRIn2ndYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for for the previous third year
ClaimsAuto: => H_NumNZBPRIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_AvgBPRAmtIn3rdYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn3rdYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn3rdYr / H_NumNZBPRIn3rdYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for for the previous fourth year
ClaimsAuto: => H_NumNZBPRIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_AvgBPRAmtIn4thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn4thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn4thYr / H_NumNZBPRIn4thYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for the previous second year
ClaimsAuto: => H_NumNZBPRIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_AvgBPRAmtIn5thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn5thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn5thYr / H_NumNZBPRIn5thYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for for the previous sixth year
ClaimsAuto: => H_NumNZBPRIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_AvgBPRAmtIn6thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn6thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn6thYr / H_NumNZBPRIn6thYr), C_CAP_9999999992));

//Description: Average claim amount per BI PD or RR claim for for the previous seventh year
ClaimsAuto: => H_NumNZBPRIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_TotalBPRClaimAmount > 0 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_AvgBPRAmtIn7thYr := MAP(G_ControlLevel1 => C_DEFAULT_L1, H_NumNZBPRIn7thYr = 0 => C_DEFAULT_L4, MIN(ROUND(H_TotalBPRAmtIn7thYr / H_NumNZBPRIn7thYr), C_CAP_9999999992));




//DAMAGE1_FLG DAMAGE2_FLG DAMAGE3_FLG DAMAGE4_FLG DAMAGE5_FLG DAMAGE6_FLG DAMAGE7_FLG
//Description: Indicator of claim with damage for the past year (previous 12 months)
ClaimsAuto: => I_IndVehDispDmgClmIn1stYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
//Description: Indicator of claim with damage for the previous second year (prior 13th-24th months)
ClaimsAuto: => I_IndVehDispDmgClmIn2ndYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
//Description: Indicator of claim with damage for the previous thid year (prior 25th-36th months)
ClaimsAuto: => I_IndVehDispDmgClmIn3rdYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
//Description: Indicator of claim with damage for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => I_IndVehDispDmgClmIn4thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48)), 1, 0);
//Description: Indicator of claim with damage for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => I_IndVehDispDmgClmIn5thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60)), 1, 0);
//Description: Indicator of claim with damage for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => I_IndVehDispDmgClmIn6thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72)), 1, 0);
//Description: Indicator of claim with damage for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => I_IndVehDispDmgClmIn7thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84)), 1, 0);



//TOTALED1_FLG TOTALED2_FLG TOTALED3_FLG TOTALED4_FLG TOTALED5_FLG TOTALED6_FLG TOTALED7_FLG
//Description: Totaled claim Indicator for the past year (previous 12 months)
ClaimsAuto: => I_IndVehDispTotdClmIn1stYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
//Description: Totaled claim Indicator for the previous second year (prior 13th-24th months)
ClaimsAuto: => I_IndVehDispTotdClmIn2ndYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
//Description: Totaled claim Indicator for the previous thid year (prior 25th-36th months)
ClaimsAuto: => I_IndVehDispTotdClmIn3rdYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
//Description: Totaled claim Indicator for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => I_IndVehDispTotdClmIn4thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48)), 1, 0);
//Description: Totaled claim Indicator for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => I_IndVehDispTotdClmIn5thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60)), 1, 0);
//Description: Totaled claim Indicator for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => I_IndVehDispTotdClmIn6thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72)), 1, 0);
//Description: Totaled claim Indicator for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => I_IndVehDispTotdClmIn7thYr := IF(EXISTS(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84)), 1, 0);


//CLU3Y_IND CLU5Y_IND CLU7Y_IND
//Description: Indicator of ever any claim(s) in the past 1 years
ClaimsAuto: => I_IndClmWithin1Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 2 years
ClaimsAuto: => I_IndClmWithin2Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 3 years
ClaimsAuto: => I_IndClmWithin3Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 4 years
ClaimsAuto: => I_IndClmWithin4Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 5 years
ClaimsAuto: => I_IndClmWithin5Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 6 years
ClaimsAuto: => I_IndClmWithin6Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72)), 1, 0);
//Description: Indicator of ever any claim(s) in the past 7 years
ClaimsAuto: => I_IndClmWithin7Yr := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84)), 1, 0);


//DAMAGE1_CNT DAMAGE2_CNT DAMAGE3_CNT DAMAGE4_CNT DAMAGE5_CNT DAMAGE6_CNT DAMAGE7_CNT
//Description: Number of claims with damages in the past year (previous 12 months)
ClaimsAuto: => H_NumVehDispDmgClmIn1stYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntVehDispDmgClmIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn1stYr,C_CAP_992));
//Description: Number of claims with damages in the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumVehDispDmgClmIn2ndYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntVehDispDmgClmIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn2ndYr,C_CAP_992));
//Description: Number of claims with damages in the previous thid year (prior 25th-36th months)
ClaimsAuto: => H_NumVehDispDmgClmIn3rdYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntVehDispDmgClmIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn3rdYr,C_CAP_992));
//Description: Number of claims with damages in the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumVehDispDmgClmIn4thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntVehDispDmgClmIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn4thYr,C_CAP_992));
//Description: Number of claims with damages in the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumVehDispDmgClmIn5thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntVehDispDmgClmIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn5thYr,C_CAP_992));
//Description: Number of claims with damages in the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumVehDispDmgClmIn6thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntVehDispDmgClmIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn6thYr,C_CAP_992));
//Description: Number of claims with damages in the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumVehDispDmgClmIn7thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntVehDispDmgClmIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmIn7thYr,C_CAP_992));



//CUM2_DAMAGE_CNT CUM3_DAMAGE_CNT CUM4_DAMAGE_CNT CUM5_DAMAGE_CNT CUM6_DAMAGE_CNT CUM7_DAMAGE_CNT
//DAMAGE1_CNT DAMAGE2_CNT DAMAGE3_CNT DAMAGE4_CNT DAMAGE5_CNT DAMAGE6_CNT DAMAGE7_CNT
//Description: Number of claims with damages in the past 2 years
ClaimsAuto: => H_NumVehDispDmgClmWithin2Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntVehDispDmgClmWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin2Yr,C_CAP_992));
//Description: Number of claims with damages in the past 3 years
ClaimsAuto: => H_NumVehDispDmgClmWithin3Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntVehDispDmgClmWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin3Yr,C_CAP_992));
//Description: Number of claims with damages in the past 4 years
ClaimsAuto: => H_NumVehDispDmgClmWithin4Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntVehDispDmgClmWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin4Yr,C_CAP_992));
//Description: Number of claims with damages in the past 5 years
ClaimsAuto: => H_NumVehDispDmgClmWithin5Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntVehDispDmgClmWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin5Yr,C_CAP_992));
//Description: Number of claims with damages in the past 6 years
ClaimsAuto: => H_NumVehDispDmgClmWithin6Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntVehDispDmgClmWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin6Yr,C_CAP_992));
//Description: Number of claims with damages in the past 7 years
ClaimsAuto: => H_NumVehDispDmgClmWithin7Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_DAMAGED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntVehDispDmgClmWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispDmgClmWithin7Yr,C_CAP_992));



//TOTALED1_CNT TOTALED2_CNT TOTALED3_CNT TOTALED4_CNT TOTALED5_CNT TOTALED6_CNT TOTALED7_CNT
//Description: Number of totaled claims in the past year (previous 12 months)
ClaimsAuto: => H_NumVehDispTotdClmIn1stYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntVehDispTotdClmIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn1stYr,C_CAP_992));
//Description: Number of totaled claims in the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumVehDispTotdClmIn2ndYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntVehDispTotdClmIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn2ndYr,C_CAP_992));
//Description: Number of totaled claims in the previous thid year (prior 25th-36th months)
ClaimsAuto: => H_NumVehDispTotdClmIn3rdYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntVehDispTotdClmIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn3rdYr,C_CAP_992));
//Description: Number of totaled claims in the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumVehDispTotdClmIn4thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntVehDispTotdClmIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn4thYr,C_CAP_992));
//Description: Number of totaled claims in the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumVehDispTotdClmIn5thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntVehDispTotdClmIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn5thYr,C_CAP_992));
//Description: Number of totaled claims in the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumVehDispTotdClmIn6thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntVehDispTotdClmIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn6thYr,C_CAP_992));
//Description: Number of totaled claims in the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumVehDispTotdClmIn7thYr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntVehDispTotdClmIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmIn7thYr,C_CAP_992));



//CUM2_TOTALED_CNT CUM3_TOTALED_CNT CUM4_TOTALED_CNT CUM5_TOTALED_CNT CUM6_TOTALED_CNT CUM7_TOTALED_CNT
//Description: Number of totaled claims in the past 2 years
ClaimsAuto: => H_NumVehDispTotdClmWithin2Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntVehDispTotdClmWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin2Yr,C_CAP_992));
//Description: Number of totaled claims in the past 3 years
ClaimsAuto: => H_NumVehDispTotdClmWithin3Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntVehDispTotdClmWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin3Yr,C_CAP_992));
//Description: Number of totaled claims in the past 4 years
ClaimsAuto: => H_NumVehDispTotdClmWithin4Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntVehDispTotdClmWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin4Yr,C_CAP_992));
//Description: Number of totaled claims in the past 5 years
ClaimsAuto: => H_NumVehDispTotdClmWithin5Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntVehDispTotdClmWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin5Yr,C_CAP_992));
//Description: Number of totaled claims in the past 6 years
ClaimsAuto: => H_NumVehDispTotdClmWithin6Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntVehDispTotdClmWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin6Yr,C_CAP_992));
//Description: Number of totaled claims in the past 7 years
ClaimsAuto: => H_NumVehDispTotdClmWithin7Yr := COUNT(ClaimsAutoClaim(VehicleDisposition = C_VEH_DISP_TOTALED AND G_IsValidClaimV3 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntVehDispTotdClmWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumVehDispTotdClmWithin7Yr,C_CAP_992));



//N1_RFTGE10KCNT N2_RFTGE10KCNT N3_RFTGE10KCNT N4_RFTGE10KCNT N5_RFTGE10KCNT N6_RFTGE10KCNT N7_RFTGE10KCNT
//Description: The number of restrictive at-fault claims with payout over $10K for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE10000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE10000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In1stYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $10000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE10000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In2ndYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE10000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In3rdYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE10000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In4thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE10000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In5thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE10000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In6thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE10000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE10000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000In7thYr,C_CAP_992));


//CUM2_RFTGE10KCNT CUM3_RFTGE10KCNT CUM4_RFTGE10KCNT CUM5_RFTGE10KCNT CUM6_RFTGE10KCNT CUM7_RFTGE10KCNT
//Description: # of restrictive at-fault claims paid above $10K in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE10000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $10K in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE10000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $10K in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE10000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $10K in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE10000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $10K in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE10000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $10K in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE10000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 10000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE10000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE10000Within7Yr,C_CAP_992));


//N1_RFTGE1KCNT N2_RFTGE1KCNT N3_RFTGE1KCNT N4_RFTGE1KCNT N5_RFTGE1KCNT N6_RFTGE1KCNT N7_RFTGE1KCNT
//Description: The number of restrictive at-fault claims with payout over $1000 for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE1000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE1000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In1stYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE1000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In2ndYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $750 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE1000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In3rdYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $750 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE1000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In4thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $750 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE1000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In5thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $750 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE1000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In6thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $750 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE1000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE1000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000In7thYr,C_CAP_992));



//CUM2_RFTGE1KCNT CUM3_RFTGE1KCNT CUM4_RFTGE1KCNT CUM5_RFTGE1KCNT CUM6_RFTGE1KCNT CUM7_RFTGE1KCNT
//Description: # of restrictive at-fault claims paid above $1000 in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE1000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $1000 in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE1000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $1000 in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE1000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $1000 in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE1000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $1000 in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE1000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $1000 in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE1000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 1000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE1000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE1000Within7Yr,C_CAP_992));



//N1_RFTGE2KCNT N2_RFTGE2KCNT N3_RFTGE2KCNT N4_RFTGE2KCNT N5_RFTGE2KCNT N6_RFTGE2KCNT N7_RFTGE2KCNT
//Description: The number of restrictive at-fault claims with payout over $2000 for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE2000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE2000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In1stYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE2000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In2ndYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE2000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In3rdYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE2000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In4thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE2000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In5thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE2000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In6thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $1000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE2000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE2000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000In7thYr,C_CAP_992));



//CUM2_RFTGE2KCNT CUM3_RFTGE2KCNT CUM4_RFTGE2KCNT CUM5_RFTGE2KCNT CUM6_RFTGE2KCNT CUM7_RFTGE2KCNT
//Description: # of restrictive at-fault claims paid above $2000 in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE2000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $2000 in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE2000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $2000 in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE2000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $2000 in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE2000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $2000 in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE2000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $2000 in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE2000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 2000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE2000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE2000Within7Yr,C_CAP_992));


//N1_RFTGE5KCNT N2_RFTGE5KCNT N3_RFTGE5KCNT N4_RFTGE5KCNT N5_RFTGE5KCNT N6_RFTGE5KCNT N7_RFTGE5KCNT
//Description: The number of restrictive at-fault claims with payout over $5000 for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE5000In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE5000In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In1stYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $5000 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE5000In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In2ndYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE5000In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In3rdYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE5000In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In4thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE5000In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In5thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE5000In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In6thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $2000 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE5000In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE5000In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000In7thYr,C_CAP_992));



//CUM2_RFTGE5KCNT CUM3_RFTGE5KCNT CUM4_RFTGE5KCNT CUM5_RFTGE5KCNT CUM6_RFTGE5KCNT CUM7_RFTGE5KCNT
//Description: # of restrictive at-fault claims paid above $5000 in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE5000Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $5000 in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE5000Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $5000 in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE5000Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $5000 in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE5000Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $5000 in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE5000Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $5000 in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE5000Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 5000 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE5000Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE5000Within7Yr,C_CAP_992));



//N1_RFTGE500CNT N2_RFTGE500CNT N3_RFTGE500CNT N4_RFTGE500CNT N5_RFTGE500CNT N6_RFTGE500CNT N7_RFTGE500CNT
//Description: The number of restrictive at-fault claims with payout over $500 for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE500In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE500In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In1stYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE500In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE500In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In2ndYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE500In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE500In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In3rdYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE500In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE500In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In4thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE500In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE500In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In5thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE500In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE500In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In6thYr,C_CAP_992));
//Description: The number of restrictive at-fault claims with payout over $500 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE500In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE500In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500In7thYr,C_CAP_992));



//CUM2_RFTGE500CNT CUM3_RFTGE500CNT CUM4_RFTGE500CNT CUM5_RFTGE500CNT CUM6_RFTGE500CNT CUM7_RFTGE500CNT
//Description: # of restrictive at-fault claims paid above $500 in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE500Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE500Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $500 in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE500Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE500Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $500 in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE500Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE500Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $500 in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE500Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE500Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $500 in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE500Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE500Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $500 in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE500Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 500 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE500Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE500Within7Yr,C_CAP_992));



//N1_RFTGE750CNT N2_RFTGE750CNT N3_RFTGE750CNT N4_RFTGE750CNT N5_RFTGE750CNT N6_RFTGE750CNT N7_RFTGE750CNT
//Description: The number of restrictive at-fault claims with payout over $750 for the past year (previous 12 months)
ClaimsAuto: => H_NumRstAtFaultGE750In1stYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultGE750In1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In1stYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultGE750In2ndYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE750In2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In2ndYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultGE750In3rdYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE750In3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In3rdYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultGE750In4thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE750In4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In4thYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultGE750In5thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE750In5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In5thYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultGE750In6thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE750In6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In6thYr,C_CAP_992));
//Description: The number of general at-fault claims with payout over $750 for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultGE750In7thYr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE750In7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750In7thYr,C_CAP_992));



//CUM2_RFTGE750CNT CUM3_RFTGE750CNT CUM4_RFTGE750CNT CUM5_RFTGE750CNT CUM6_RFTGE750CNT CUM7_RFTGE750CNT
//Description: # of restrictive at-fault claims paid above $750 in the past 2 years
ClaimsAuto: => H_NumRstAtFaultGE750Within2Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultGE750Within2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within2Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $750 in the past 3 years
ClaimsAuto: => H_NumRstAtFaultGE750Within3Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultGE750Within3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within3Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $750 in the past 4 years
ClaimsAuto: => H_NumRstAtFaultGE750Within4Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultGE750Within4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within4Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $750 in the past 5 years
ClaimsAuto: => H_NumRstAtFaultGE750Within5Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultGE750Within5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within5Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $750 in the past 6 years
ClaimsAuto: => H_NumRstAtFaultGE750Within6Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultGE750Within6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within6Yr,C_CAP_992));
//Description: # of restrictive at-fault claims paid above $750 in the past 7 years
ClaimsAuto: => H_NumRstAtFaultGE750Within7Yr := COUNT(ClaimsAutoClaim(G_TotalClaimAmount >= 750 AND G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultGE750Within7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultGE750Within7Yr,C_CAP_992));



//R1_FAULTCNT R2_FAULTCNT R3_FAULTCNT R4_FAULTCNT R5_FAULTCNT R6_FAULTCNT R7_FAULTCNT
//Description: The claim amount for the past year (12 months)
ClaimsAuto: => H_NumRstAtFaultIn1stYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntRstAtFaultIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn1stYr,C_CAP_992));
//Description: The claim amount for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_NumRstAtFaultIn2ndYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn2ndYr,C_CAP_992));
//Description: The claim amount for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_NumRstAtFaultIn3rdYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn3rdYr,C_CAP_992));
//Description: The claim amount for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_NumRstAtFaultIn4thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn4thYr,C_CAP_992));
//Description: The claim amount for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_NumRstAtFaultIn5thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn5thYr,C_CAP_992));
//Description: The claim amount for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_NumRstAtFaultIn6thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn6thYr,C_CAP_992));
//Description: The claim amount for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_NumRstAtFaultIn7thYr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultIn7thYr,C_CAP_992));



//CUM2_RFAULTCNT CUM3_RFAULTCNT CUM4_RFAULTCNT CUM5_RFAULTCNT CUM6_RFAULTCNT CUM7_RFAULTCNT
//Description: Number of restrictive at-fault claims for the past 2 years
ClaimsAuto: => H_NumRstAtFaultWithin2Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24));
ClaimsAuto: => I_CntRstAtFaultWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin2Yr,C_CAP_992));
//Description: Number of restrictive at-fault claims for the past 3 years
ClaimsAuto: => H_NumRstAtFaultWithin3Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntRstAtFaultWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin3Yr,C_CAP_992));
//Description: Number of restrictive at-fault claims for the past 4 years
ClaimsAuto: => H_NumRstAtFaultWithin4Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48));
ClaimsAuto: => I_CntRstAtFaultWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin4Yr,C_CAP_992));
//Description: Number of restrictive at-fault claims for the past 5 years
ClaimsAuto: => H_NumRstAtFaultWithin5Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntRstAtFaultWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin5Yr,C_CAP_992));
//Description: Number of restrictive at-fault claims for the past 6 years
ClaimsAuto: => H_NumRstAtFaultWithin6Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72));
ClaimsAuto: => I_CntRstAtFaultWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin6Yr,C_CAP_992));
//Description: Number of restrictive at-fault claims for the past 7 years
ClaimsAuto: => H_NumRstAtFaultWithin7Yr := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84));
ClaimsAuto: => I_CntRstAtFaultWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_NumRstAtFaultWithin7Yr,C_CAP_992));



//R1_FAULTAMT R2_FAULTAMT R3_FAULTAMT R4_FAULTAMT R5_FAULTAMT R6_FAULTAMT R7_FAULTAMT
//Description: The restrictive at-fault claim amount for the past year (12 months)
ClaimsAuto: => H_TotRstAtFaultAmtIn1stYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 12), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn1stYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn1stYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous second year (prior 13th-24th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn2ndYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 12 AND G_MonthBtwClmDtAndRcptDt < 24), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn2ndYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn2ndYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous third year (prior 25th-36th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn3rdYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 24 AND G_MonthBtwClmDtAndRcptDt < 36), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn3rdYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn3rdYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous fourth year (prior 37th-48th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn4thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 36 AND G_MonthBtwClmDtAndRcptDt < 48), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn4thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn4thYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous fifth year (prior 49th-60th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn5thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 48 AND G_MonthBtwClmDtAndRcptDt < 60), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn5thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn5thYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous sixth year (prior 61th-72th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn6thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 60 AND G_MonthBtwClmDtAndRcptDt < 72), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn6thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn6thYr, C_CAP_9999999992));

//Description: The restrictive at-fault claim amount for the previous seventh year (prior 73th-84th months)
ClaimsAuto: => H_TotRstAtFaultAmtIn7thYr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt >= 72 AND G_MonthBtwClmDtAndRcptDt < 84), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtIn7thYr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtIn7thYr, C_CAP_9999999992));



//CUM2_RFAULTCNT CUM3_RFAULTCNT CUM4_RFAULTCNT CUM5_RFAULTCNT CUM6_RFAULTCNT CUM7_RFAULTCNT
//Description: Number of restrictive at-fault claims for the past 2 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin2Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 24), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin2Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin2Yr,C_CAP_9999999992));

//Description: Number of restrictive at-fault claims for the past 3 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin3Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 36), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin3Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin3Yr,C_CAP_9999999992));

//Description: Number of restrictive at-fault claims for the past 4 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin4Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 48), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin4Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin4Yr,C_CAP_9999999992));

//Description: Number of restrictive at-fault claims for the past 5 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin5Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 60), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin5Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin5Yr,C_CAP_9999999992));

//Description: Number of restrictive at-fault claims for the past 6 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin6Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 72), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin6Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin6Yr,C_CAP_9999999992));

//Description: Number of restrictive at-fault claims for the past 7 years
ClaimsAuto: => H_TotRstAtFaultAmtWithin7Yr := SUM(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_MonthBtwClmDtAndRcptDt < 84), G_TotalClaimAmount);
ClaimsAuto: => I_TotRstAtFaultAmtWithin7Yr := IF(G_ControlLevel1, C_DEFAULT_L1, MIN(H_TotRstAtFaultAmtWithin7Yr,C_CAP_9999999992));



// Exception handling for CO Subrogation claim for At Fault attributes
ClaimsAutoClaim.Payments: => G_IsExcludedClaimPayment := ((cClaimCatType IN C_CO_CODE_LIST) AND (cClaimCatDisp IN C_DISP_SUB_LIST));
ClaimsAutoClaim: => G_IsNotAtFaultIndicator := AtFaultIndicator IN C_FAULT_INDICATORS_N_C;
ClaimsAutoClaim: => G_IsUnkAtFaultIndicator := AtFaultIndicator:Null OR (AtFaultIndicator IN C_FAULT_INDICATORS_U);
ClaimsAutoClaim: => G_IsCaAtFaultIndicator := AtFaultIndicator IN C_FAULT_INDICATORS_B_D;
ClaimsAutoClaim: => G_IsCaUnkAtFaultIndicator := AtFaultIndicator:Null OR (AtFaultIndicator IN C_FAULT_INDICATORS_U_A_P);


ClaimsAutoClaim: => G_Has0CoverageLiaCol := EXISTS(Payments(cClaimCatType IN C_COVERAGE_LIA_COL)) AND  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)=0;
ClaimsAutoClaim: => G_Has0CoverageNoCPTLGL := EXISTS(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL)) AND SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)=0;
ClaimsAutoClaim: => G_Has0CoverageMedUmUn := EXISTS(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN)) AND SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)=0;

ClaimsAutoClaim: => G_Has0 :=  SUM(Payments, cClaimCatAmount)=0;

ClaimsAutoClaim: => G_HasNZCoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZCoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZCoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZWithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZCoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZCoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZ :=  SUM(Payments, cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasGE100CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE100CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE100CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE100WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE100CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE100CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=100;

ClaimsAutoClaim: => G_HasGE100 :=  SUM(Payments, cClaimCatAmount)>=100;

ClaimsAutoClaim: => G_HasGE500CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE500 :=  SUM(Payments, cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE750CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE750 :=  SUM(Payments, cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE1000CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1000 :=  SUM(Payments, cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1500CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE1500 :=  SUM(Payments, cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE2000CoverageLiaColWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000CoverageNoCPTLGLWithEx :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000CoverageMedUmUn :=  SUM(Payments(cClaimCatType IN C_COVERAGE_MEDUMUN), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000WithEx :=  SUM(Payments((NOT G_IsExcludedClaimPayment)), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000CoverageLiaCol :=  SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000CoverageNoCPTLGL :=  SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasGE2000 :=  SUM(Payments, cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasNZCoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasGE100CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=100;
ClaimsAutoClaim: => G_HasGE500CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=500;
ClaimsAutoClaim: => G_HasGE750CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=750;
ClaimsAutoClaim: => G_HasGE1000CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=1000;
ClaimsAutoClaim: => G_HasGE1500CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=1500;
ClaimsAutoClaim: => G_HasGE2000CoverageCP :=  SUM(Payments(cClaimCatType IN C_CP_CODE_LIST), cClaimCatAmount)>=2000;
ClaimsAutoClaim: => G_HasNZCoverageGL :=  SUM(Payments(cClaimCatType IN C_GL_CODE_LIST), cClaimCatAmount)>=1;
ClaimsAutoClaim: => G_HasNZCoverageTL :=  SUM(Payments(cClaimCatType IN C_TL_CODE_LIST), cClaimCatAmount)>=1;

ClaimsAutoClaim: => G_Has0CoverageLiaColWithEx := EXISTS(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment))) AND SUM(Payments(cClaimCatType IN C_COVERAGE_LIA_COL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)=0;
ClaimsAutoClaim: => G_Has0CoverageNoCPTLGLWithEx := EXISTS(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment))) AND SUM(Payments(cClaimCatType IN C_COVERAGE_NOCPTLGL AND (NOT G_IsExcludedClaimPayment)), cClaimCatAmount)=0;

ClaimsAutoClaim: => G_Has0WithEx := EXISTS(Payments(NOT G_IsExcludedClaimPayment)) AND SUM(Payments(NOT G_IsExcludedClaimPayment), cClaimCatAmount)=0;


ClaimsAuto: => H_CntAtFaultLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFault0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFault0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFault0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFault0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFault0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFault0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFault0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFault0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFault0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFault0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFault0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFault0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFault0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFault0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFault0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFault0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFault0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFault0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGL0ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUn0ClmWithin60M,C_CAP_992));


ClaimsAuto: => H_CntAtFault0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFault0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFault0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGL0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUn0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFault0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFault0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFault0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGL0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUn0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFault0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFault0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFault0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGL0ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUn0ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntAtFault0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFault0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFault0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGL0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUn0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFault0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFault0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFault0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGL0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUn0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFault0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFault0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFault0ClmWithin6M,C_CAP_992));




ClaimsAuto: => H_CntAtFaultLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNZClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNZClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNZClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasNZWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNZClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE100ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE100ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE100ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE100WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE100ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE500ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE500ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE500ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE500WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE500ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE750ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE750ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE750ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE750WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE750ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1000ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1000ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1000ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1000WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1000ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1500ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1500ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1500ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE1500WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE1500ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntAtFaultLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000WithEx AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntAtFaultGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNotAtFaultGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntUnkAtFaultGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE2000ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000WithEx AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntAtFaultGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNotAtFaultGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntUnkAtFaultGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE2000ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000WithEx AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntAtFaultGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNotAtFaultGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntUnkAtFaultGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE2000ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntAtFaultLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageLiaColWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGLWithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntAtFaultGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsAtFaultIndicator AND G_HasGE2000WithEx AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntAtFaultGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntAtFaultGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNotAtFaultGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsNotAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNotAtFaultGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNotAtFaultGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntUnkAtFaultGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntUnkAtFaultGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntUnkAtFaultGE2000ClmWithin6M,C_CAP_992));




ClaimsAuto: => H_CntCPNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCPGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCPGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCPGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCPGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCPGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCPGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCPGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageCP AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCPGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCPGE2000ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGLNZClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntTLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageTL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntTLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntTLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntTLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageTL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntTLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntTLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntTLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageTL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntTLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntTLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntTLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageTL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntTLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntTLNZClmWithin6M,C_CAP_992));




ClaimsAuto: => H_CntCaAtFaultLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFault0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFault0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFault0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFault0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFault0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFault0ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFault0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFault0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFault0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFault0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFault0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFault0ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGL0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUn0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFault0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFault0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFault0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGL0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUn0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFault0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFault0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFault0ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGL0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUn0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFault0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFault0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFault0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGL0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUn0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFault0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFault0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFault0ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNZClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNZClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNZClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNZClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE100ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE100ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE100ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE100ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntCaUnkAtFaultGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE100ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE500ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE500ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE500ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE500ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE750ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE750ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE750ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE750ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1000ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1000ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1000ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1000ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1500ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1500ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1500ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE1500ClmWithin6M,C_CAP_992));


ClaimsAuto: => H_CntCaAtFaultLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaAtFaultGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntCaUnkAtFaultGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE2000ClmWithin12M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaAtFaultGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntCaUnkAtFaultGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE2000ClmWithin36M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaAtFaultGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntCaUnkAtFaultGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE2000ClmWithin60M,C_CAP_992));

ClaimsAuto: => H_CntCaAtFaultLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaAtFaultGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaAtFaultGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaAtFaultGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntCaUnkAtFaultGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3 AND G_IsCaUnkAtFaultIndicator AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntCaUnkAtFaultGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntCaUnkAtFaultGE2000ClmWithin6M,C_CAP_992));




ClaimsAuto: => H_CntLiaCol0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaCol0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaCol0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGL0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGL0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGL0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUn0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUn0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUn0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_Cnt0ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_Cnt0ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_Cnt0ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaCol0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaCol0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaCol0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGL0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGL0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGL0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUn0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUn0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUn0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_Cnt0ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_Cnt0ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_Cnt0ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaCol0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaCol0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaCol0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGL0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGL0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGL0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUn0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUn0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUn0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_Cnt0ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_Cnt0ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_Cnt0ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaCol0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaCol0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaCol0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGL0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGL0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGL0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUn0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUn0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUn0ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_Cnt0ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_Has0 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_Cnt0ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_Cnt0ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNZClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNZClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNZClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNZClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNZClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNZClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNZClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNZClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNZClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnNZClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNZClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNZClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNZClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE100ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE100ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE100ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE100ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE100ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE100ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE100ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE100ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE100ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE100ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE100ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE100ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE100ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE500ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE750ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE750ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE750ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE750ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE750ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE750ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE750ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE750ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE750ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE750ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE750ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE750ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE750ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE1000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE1000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE1000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE1000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE1000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE1000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE1000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE1000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1000ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE1500ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE1500ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1500ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE1500ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE1500ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1500ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE1500ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE1500ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1500ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE1500ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE1500ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE1500ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE1500ClmWithin6M,C_CAP_992));

ClaimsAuto: => H_CntLiaColGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntLiaColGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntNoCPTLGLGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntMedUmUnGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntGE2000ClmWithin12M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 12));
ClaimsAuto: => I_CntGE2000ClmWithin12M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE2000ClmWithin12M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntLiaColGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntNoCPTLGLGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntMedUmUnGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntGE2000ClmWithin36M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 36));
ClaimsAuto: => I_CntGE2000ClmWithin36M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE2000ClmWithin36M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntLiaColGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntNoCPTLGLGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntMedUmUnGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntGE2000ClmWithin60M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 60));
ClaimsAuto: => I_CntGE2000ClmWithin60M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE2000ClmWithin60M,C_CAP_992));
ClaimsAuto: => H_CntLiaColGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntLiaColGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntLiaColGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntNoCPTLGLGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntNoCPTLGLGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntNoCPTLGLGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntMedUmUnGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntMedUmUnGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntMedUmUnGE2000ClmWithin6M,C_CAP_992));
ClaimsAuto: => H_CntGE2000ClmWithin6M := COUNT(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6));
ClaimsAuto: => I_CntGE2000ClmWithin6M := IF(G_ControlLevel1,C_DEFAULT_L1,MIN(H_CntGE2000ClmWithin6M,C_CAP_992));


ClaimsAuto: => I_IndLiaColNZClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNZClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColNZClm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNZClm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColNZClm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNZClm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColNZClm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNZClm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColNZClm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNZClm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColNZClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLNZClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnNZClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZCoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNZClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasNZ AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE100ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE100Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE100Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE100Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE100Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE100ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE100ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE100ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE100ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE100 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE500 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE750ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE750Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE750Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE750Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE750Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE750ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE750ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE750ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE750ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE750 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE1000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE1000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE1000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE1000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE1000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE1000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1000 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE1500ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE1500Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE1500Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE1500Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE1500Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE1500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE1500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE1500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE1500ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE1500 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndGE2000ClmIn6M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt < 6)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndGE2000Clm7to12M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt >= 7 AND G_MonthBtwClmDtAndRcptDt < 12)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndGE2000Clm13to18M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt >= 13 AND G_MonthBtwClmDtAndRcptDt < 18)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndGE2000Clm19to24M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt >= 19 AND G_MonthBtwClmDtAndRcptDt < 24)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndGE2000Clm25to36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt >= 25 AND G_MonthBtwClmDtAndRcptDt < 36)), 1, 0);
ClaimsAuto: => I_IndLiaColGE2000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageLiaCol AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndNoCPTLGLGE2000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageNoCPTLGL AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndMedUmUnGE2000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000CoverageMedUmUn AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);
ClaimsAuto: => I_IndGE2000ClmGT36M := IF(EXISTS(ClaimsAutoClaim(G_IsValidClaimV3  AND G_HasGE2000 AND G_MonthBtwClmDtAndRcptDt >= 36)), 1, 0);