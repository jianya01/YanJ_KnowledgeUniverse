//KEL:  KELGlobal;
// KEL Compiler Options and Configurations
#OPTION(persist, 2) 
#OPTION(persistexpire, 30)
#OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins
 

Claim := ENTITY(FLAT(UID(Generatedkey, Insurerirdacode), 
			INTEGER SequenceId=NULL(0),
			INTEGER BatchId=NULL(0),
			INTEGER RecordNumber=NULL(0),
			INTEGER ClaimGroupNumber=NULL(0),
			INTEGER ContributorId=NULL(0),
			INTEGER GeneratedKey=NULL(0),
			INTEGER InsurerIrdAcode=NULL(0),
			INTEGER ClaimNumber=NULL(0),
			STRING  ClaimSettlementType=NULL(''),
			DATE		ClaimIntimationDate=NULL(''),
			INTEGER ClaimIntimationDay=NULL(0),
			INTEGER ClaimIntimationMon=NULL(0),
			INTEGER ClaimIntimationYear=NULL(0),
			STRING 	RelationshipWithInsured=NULL(''),
			STRING 	PolicyNumber=NULL(''),
			DATE 		AccidentDateTime=NULL(''),
			DATE	  AccidentDate=NULL(''),
			INTEGER AccidentDay=NULL(0),
			INTEGER AccidentMon=NULL(0),
			INTEGER AccidentYear=NULL(0),
			STRING 	City=NULL(''),
			STRING 	State=NULL(''),
			STRING 	LossImpactDesc=NULL(''),
			STRING 	LossCategory=NULL(''),
			STRING 	LossDescription=NULL(''),
			STRING 	BranchName=NULL(''),
			STRING 	GarageId=NULL(''),
			REAL 		TotalClaimedAmount=NULL(R'0.0'),
			INTEGER FinalReserveAmount=NULL(0),
			INTEGER TotalSettlementAmount=NULL(0),
			STRING 	ClaimantState=NULL(''),
			INTEGER LossDescriptionBinValue=NULL(0),
			STRING	SellerCategory=NULL('')),    //This comes from seller file but there is no UID for a seller so making an attribute of a claim.
MODEL(UID, GeneratedKey, SequenceId, BatchId, RecordNumber, ClaimGroupNumber, ContributorId, InsurerIrdAcode, ClaimNumber, ClaimSettlementType,
					 ClaimIntimationDate, ClaimIntimationDay, ClaimIntimationMon, ClaimIntimationYear, RelationshipWithInsured, PolicyNumber, AccidentDateTime, 
					 AccidentDate, AccidentDay, AccidentMon, AccidentYear, City, State, LossImpactDesc, LossCategory, LossDescription, BranchName, GarageId, TotalClaimedAmount, 
					 FinalReserveAmount, TotalSettlementAmount, ClaimantState, LossDescriptionBinValue, SellerCategory));


Policy := ENTITY(FLAT(UID(PolicyNumber, InsurerIrdAcode),
			INTEGER SequenceId=NULL(0),
			INTEGER BatchId=NULL(0),
			INTEGER RecordNumber=NULL(0),
			INTEGER ClaimGroupNumber=NULL(0),
			INTEGER ContributorId=NULL(0),
			INTEGER GeneratedKey=NULL(0),
			INTEGER InsurerIrdAcode=NULL(0),
			INTEGER ClaimNumber=NULL(0),
			STRING 	PolicyNumber=NULL(''),
			DATE 		PolicyStartDate=NULL(''),
			INTEGER PolicyStartDay=NULL(0),
			INTEGER PolicyStartMonth=NULL(0),
			INTEGER PolicyStartYear=NULL(0),
			STRING 	PolicyStartDateTime=NULL(''),
			DATE 		BreakinInspectionDate=NULL(''),
			INTEGER BreakinInspectionDay=NULL(0),
			INTEGER BreakinInspectionMonth=NULL(0),
			INTEGER BreakinInspectionYear=NULL(0),
			INTEGER	PrevCountOfClaims=NULL(0)),
MODEL(UID, GeneratedKey, SequenceId, BatchId, RecordNumber, ClaimGroupNumber, ContributorId, InsurerIrdAcode, ClaimNumber,
					 PolicyNumber, PolicyStartDate, PolicyStartDay, PolicyStartMonth, PolicyStartYear, PolicyStartDateTime, 
					 BreakinInspectionDate, BreakinInspectionDay, BreakinInspectionMonth, BreakinInspectionYear, PrevCountOfClaims));


Vehicle := ENTITY(FLAT(UID(VinNumber),
			INTEGER SequenceId=NULL(0),
			INTEGER BatchId=NULL(0),
			INTEGER RecordNumber=NULL(0),
			INTEGER ClaimGroupNumber=NULL(0),
			INTEGER ContributorId=NULL(0),
			INTEGER GeneratedKey=NULL(0),
			INTEGER InsurerIrdAcode=NULL(0),
			INTEGER ClaimNumber=NULL(0),
			STRING 	VehicleRegistrationNumber=NULL(''),
			STRING 	VinNumber=NULL(''),
			STRING 	TypeOfBody=NULL('')),
MODEL(UID, GeneratedKey, SequenceId, BatchId, RecordNumber, ClaimGroupNumber, ContributorId, InsurerIrdAcode, ClaimNumber,
					 VehicleRegistrationNumber, VinNumber, TypeOfBody));
					 
					 
ClaimPolicy 	:= ASSOCIATION(FLAT(Claim AutoClaim=UID(GeneratedKey, InsurerIrdAcode), Policy AutoPolicy=UID(PolicyNumber, InsurerIrdAcode), 
											STRING PolicyNumber, STRING ClaimNumber)); 
ClaimVehicle 	:= ASSOCIATION(FLAT(Claim AutoClaim=UID(GeneratedKey, InsurerIrdAcode), Vehicle Auto=UID(VinNumber), 
											STRING GeneratedKey, STRING ClaimNumber, STRING VehicleRegistrationNumber, STRING VinNumber,  STRING TypeOfBody)); 

USE IndiaCholaMotorFraud.CleanedClaimsFile(FLAT,
		Claim(
					SequenceId = sequenceid,
					BatchId = batch_id,
					RecordNumber = recordnumber,
					ClaimGroupNumber = claimgroupnumber,
					ContributorId = contributor_id,
					GeneratedKey = generatedkey,
					InsurerIrdAcode = insurerirdacode,
					ClaimNumber = claimnumber,
					ClaimSettlementType = claimsettlementtype,
					ClaimIntimationDate = claimintimationdate,
					ClaimIntimationDay = claimintimation_day,
					ClaimIntimationMon = claimintimation_mon,
					ClaimIntimationYear = claimintimation_year,
					PolicyNumber = policynumber,
					AccidentDateTime = accidentdatetime,
					AccidentDate = AccidentDate,
					AccidentDay = accident_day,
					AccidentMon = accident_mon, 
					AccidentYear = accident_year,
					City = city,
					State = state,
					LossCategory = losscategory,
					LossDescription = lossdescription,
					BranchName = branchname,
					GarageId = garageid,
					TotalClaimedAmount = totalclaimedamount,
					FinalReserveAmount = finalreserveamount,
					TotalSettlementAmount = totalsettlementamount,
					RelationshipWithInsured = relationshipwithinsured,
					ClaimantState = claimantstate,
					LossImpactDesc = lossimpactdesc,
					LossDescriptionBinValue = LossDescriptionBinValue),
		ClaimPolicy(
					GeneratedKey = Generatedkey,
					InsurerIrdAcode = Insurerirdacode,
					PolicyNumber = Policynumber
		));

USE IndiaCholaMotorFraud.CleanedPolicyFile(FLAT,
		Policy(
					SequenceId = sequenceid,
					BatchId = batch_id,
					RecordNumber = recordnumber,
					ClaimGroupNumber = claimgroupnumber,
					ContributorId = contributor_id,
					GeneratedKey = generatedkey,
					InsurerIrdAcode = insurerirdacode,
					ClaimNumber = claimnumber,
					PolicyNumber = policynumber,
					PolicyStartDate = policystartdate,
					PolicyStartDay = policystartday,
					PolicyStartMonth = policystartmonth,
					PolicyStartYear = policystartyear,
					PolicyStartDateTime = policystartdate_time,
					BreakinInspectionDate = breakininspectiondate,
					BreakinInspectionDay = breakininspectionday,
					BreakinInspectionMonth = breakininspectionmonth,
					BreakinInspectionYear = breakininspectionyear));

USE IndiaCholaMotorFraud.PolicyHistoryFile(FLAT,
		Policy(
					InsurerIrdAcode = insurerirdacode,
					PolicyNumber = policynumber,
					PrevCountOfClaims = countofclaims));
  
USE IndiaCholaMotorFraud.SellerFile(FLAT,
		Claim(
					GeneratedKey = Generatedkey,
					InsurerIrdAcode = Insurerirdacode,
					SellerCategory = sellercategory));

   
USE IndiaCholaMotorFraud.VehicleFile(FLAT,  
		Vehicle( 
					SequenceId = sequenceid,
					BatchId = batch_id,
					RecordNumber = recordnumber,
					ClaimGroupNumber = claimgroupnumber,
					ContributorId = contributor_id,
					GeneratedKey = generatedkey,
					InsurerIrdAcode = insurerirdacode,
					ClaimNumber = claimnumber, 
					VehicleRegistrationNumber = vehicleregistrationnumber,
					VinNumber = vinnumber,
					TypeOfBody = typeofbody),
		ClaimVehicle(
					GeneratedKey = Generatedkey,
					InsurerIrdAcode = Insurerirdacode
		));


QUERY: DumpClaims <= Claim;
QUERY: DumpPolicies <= Policy;
QUERY: DumpVehicles <= Vehicle;
QUERY: DumpClaimVehicle <= ClaimVehicle;
QUERY: DumpClaimPolicy <= ClaimPolicy;