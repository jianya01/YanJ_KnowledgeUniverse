IMPORT _Control;
AmericanStudentNonFCRAlayout := RECORD
  unsigned6 l_did;
  integer8 key;
  string9 ssn;
  unsigned6 did;
  string8 process_date;
  string8 date_first_seen;
  string8 date_last_seen;
  string8 date_vendor_first_reported;
  string8 date_vendor_last_reported;
  string1 historical_flag;
  string60 full_name;
  string25 first_name;
  string25 last_name;
  string64 address_1;
  string64 address_2;
  string26 city;
  string2 state;
  string5 zip;
  string4 zip_4;
  string4 crrt_code;
  string2 delivery_point_barcode;
  string1 zip4_check_digit;
  string1 address_type_code;
  string30 address_type;
  string3 county_number;
  string26 county_name;
  string1 gender_code;
  string10 gender;
  string2 age;
  string6 birth_date;
  string8 dob_formatted;
  string10 telephone;
  string2 class;
  string2 college_class;
  string50 college_name;
  string50 ln_college_name;
  string1 college_major;
  string4 new_college_major;
  string1 college_code;
  string20 college_code_exploded;
  string1 college_type;
  string25 college_type_exploded;
  string40 head_of_household_first_name;
  string1 head_of_household_gender_code;
  string10 head_of_household_gender;
  string1 income_level_code;
  string20 income_level;
  string1 new_income_level_code;
  string20 new_income_level;
  string1 file_type;
  string1 tier;
  string1 school_size_code;
  string1 competitive_code;
  string1 tuition_code;
  string5 title;
  string20 fname;
  string20 mname;
  string20 lname;
  string5 name_suffix;
  string3 name_score;
  unsigned8 rawaid;
  string10 prim_range;
  string2 predir;
  string28 prim_name;
  string4 addr_suffix;
  string2 postdir;
  string10 unit_desig;
  string8 sec_range;
  string25 p_city_name;
  string25 v_city_name;
  string2 st;
  string5 z5;
  string4 zip4;
  string4 cart;
  string1 cr_sort_sz;
  string4 lot;
  string1 lot_order;
  string2 dpbc;
  string1 chk_digit;
  string2 rec_type;
  string5 county;
  string2 ace_fips_st;
  string3 fips_county;
  string10 geo_lat;
  string11 geo_long;
  string4 msa;
  string7 geo_blk;
  string1 geo_match;
  string4 err_stat;
  string5 tier2;
  string5 collegeid;
  string4 collegeupdate;
  string2 source;
  unsigned8 __internal_fpos__;
 END;

blankDataset := dataset([], AmericanStudentNonFCRAlayout);

fileName := '~thor_data400::key::american_student::qa::did2';

EXPORT AmericanStudentNonFCRAImport := IF(COUNT(_Control.LexIDFilterSet) <= 0, 
	   INDEX(blankDataset, {l_did}, {blankDataset}, fileName),
	   JOIN(DISTRIBUTE(INDEX(blankDataset, {l_did}, {blankDataset}, fileName), HASH64((UNSIGNED8)DID)), DISTRIBUTE(_Control.LexIDFilterSet(LexID > 0), HASH64(LexID)), (UNSIGNED8)LEFT.DID = RIGHT.LexID, TRANSFORM(LEFT), LOCAL));
