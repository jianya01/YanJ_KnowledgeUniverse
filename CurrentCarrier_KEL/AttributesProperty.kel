IMPORT KnowledgeUniverse.CurrentCarrier_KEL.Entities;
//IMPORT CurrentCarrierProperty_KEL.Uses;

//Constant
Policy: POLICY_TYPE_LIST := ['HO'];
Policy: DEFAULT_99999 := -99999;
Policy: DEFAULT_99998 := -99998;
Report: DEFAULT_1 := -1;
Report: DEFAULT_2 := -2;
Report: DEFAULT_3 := -3;
Report: DEFAULT_4 := -4;
Report: CAP_999 := 999;
Report: CAP_9999 := 9999;
Report: CAP_99999999 := 99999999;

// Policy: =>Calculated_End_Date_tmp:= MIN(PolicyEndDate, PolicyCancelDate);
// Policy: =>Calculated_End_Date:= MIN(Calculated_End_Date_tmp, CURRENTDATE());


//Globals
// Policy: => Subject := PolicyHolder(NOT EndDate:Null AND SubjectNumber = 1).Holder; // Grab the primary policy holder for this policy (Relation = 'B1' would be additional policy holders)
Policy: => Subject := PolicyHolder(NOT EndDate:Null AND SubjectNumber = 1){SubjectNumber}; // Grab the primary policy holder for this policy (Relation = 'B1' would be additional policy holders)
//Policy: => ExistValidTerms := EXISTS(Subject);
//Audit
Policy: => ExistValidTerms := EXISTS(Subject) AND InsuranceType = 'PP';
Policy: => DateOfReport := rReport.DateOfReport;
Report: => SetDefault1 := COUNT(Policy(ExistValidTerms));//Do not have valid policy terms at all
Report: => SetDefault2 := COUNT(Policy(ExistValidTerms AND (PolicyType IN POLICY_TYPE_LIST)));//have policy terms but not in type HO

Policy: => SubjectEndDatePolicy := MAX(PolicyHolder(NOT EndDate:Null AND SubjectNumber = 1), EndDate);// null, if not valid records
Policy: => Calculated_End_Date := IF(NOT SubjectEndDatePolicy:Null, MIN(SubjectEndDatePolicy, DateOfReport));//null, if no subject end date at all. of course, not valid policy

Policy: => SubjectBeginDatePolicy := MIN(PolicyHolder(NOT EndDate:Null AND SubjectNumber = 1 AND EndDate = Policy.SubjectEndDatePolicy), StartDate);

Policy: => Calculated_Start_Date:= IF(NOT SubjectBeginDatePolicy:Null, MIN(InceptionDate,SubjectBeginDatePolicy),InceptionDate);//added inceptiondate if no subjectbegindate
//set the age to -99999, if (inceptiondate) start date > end date (future terms), or no terms to calcualte (should not happen since I need set this to -1)
Policy: => Policy_Tenure := IF(Calculated_End_Date:Null OR Calculated_Start_Date:Null OR Calculated_Start_Date > Calculated_End_Date, DEFAULT_99999, MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date));

//select the most recent policy term after scoring  date, CURRENTDATE, including future policy terms
// Policy: => Current_Term_SubjectOne := TOPN(Subject((CURRENTDATE() <= Calculated_End_Date) AND (SubjectNumber = 1)){UID, SubjectBeginDate, Policy_Tenure}, 1, -SubjectBeginDate, -Policy_Tenure);
// Policy: => SubjectBeginDate_CurrentTerm_SubjectOne := Current_Term_SubjectOne.SubjectBeginDate;
// Policy: => Policy_Tenure_CurrentTerm_SubjectOne := Current_Term_SubjectOne.Policy_Tenure;

// Report: => Current_Policy_SubjectOne := TOPN(Policy((PolicyType IN POLICY_TYPE_LIST)){UID, SubjectBeginDate_CurrentTerm_SubjectOne, Policy_Tenure_CurrentTerm_SubjectOne}, 1, -SubjectBeginDate_CurrentTerm_SubjectOne, -Policy_Tenure_CurrentTerm_SubjectOne);

// Report: => Policy_Tenure_tmp_SubjectOne := ONLY(Current_Policy_SubjectOne, Policy_Tenure_CurrentTerm_SubjectOne);

//Note: Logic issue. Calculate end date is processed date if it is future end date, this logic will not be able to grab all current cases.
Policy: => Policy_Tenure_CP := IF(Calculated_Start_Date > DateOfReport, DEFAULT_99999, // all future cases
																	MONTHSBETWEEN(Calculated_Start_Date, DateOfReport));
Report: => OnlyFuturePolicy_CP := NOT EXISTS(Policy(Policy_Tenure_CP >= 0 AND (PolicyType IN POLICY_TYPE_LIST)));
Report: => OnlyFuturePolicy := NOT EXISTS(Policy(Policy_Tenure >= 0 AND (PolicyType IN POLICY_TYPE_LIST)));

Policy: => CheckCP1 := ExistValidTerms AND (DateOfReport <= SubjectEndDatePolicy) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0;
Policy: => CheckCP2 := ExistValidTerms AND (DAYSBETWEEN(SubjectEndDatePolicy,DateOfReport) <= 30) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0;
 
//Take the oldest policy, by inception
// Report: => Current_Policy := TOPN(Policy(ExistValidTerms AND (FirstLoadDate <= SubjectEndDatePolicy OR DAYSBETWEEN(SubjectEndDatePolicy,FirstLoadDate) <= 30) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0){UID, InceptionDate, Policy_Tenure_CP}, 1, -InceptionDate, -Policy_Tenure_CP);
// Report: => Policy_Tenure_CP := ONLY(Current_Policy,Policy_Tenure_CP);
Report: => Policy_Tenure_CP := MAX(Policy(ExistValidTerms AND (CheckCP1 OR CheckCP2) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0), Policy_Tenure_CP);


//Attributes 
Report: => Plcy_CNT_All_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																					 SetDefault2 = 0 => 0, // no HO
																					 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 COUNT(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0))); //true 0, with valid policy but not in HO
Report: => Plcy_CNT_All := MIN(Plcy_CNT_All_tmp,CAP_999);																			 
																			 
Report: => Plcy_Tenure_CP_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			   SetDefault2 = 0 => DEFAULT_2, // no HO
																				 OnlyFuturePolicy_CP OR Policy_Tenure_CP :Null => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS, OR HO, but not current
																				 Policy_Tenure_CP);
Report: => Plcy_Tenure_CP := MIN(Plcy_Tenure_CP_tmp,CAP_9999);		
																				 
Report: => Plcy_MIN_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 MIN(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0),Policy_Tenure));//true 0, age is in 1 month, Inception date to end date is in 1 month
Report: => Plcy_MIN_Tenure := MIN(Plcy_MIN_Tenure_tmp,CAP_9999);	

Report: => Plcy_MAX_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 MAX(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0), Policy_Tenure));
Report: => Plcy_MAX_Tenure := MIN(Plcy_MAX_Tenure_tmp,CAP_9999);	
																			 
Report: => Plcy_TOT_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 SUM(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0), Policy_Tenure));
Report: => Plcy_TOT_Tenure := MIN(Plcy_TOT_Tenure_tmp,CAP_9999);	
																			 
Report: => Plcy_CNT_All_TMP2 :=COUNT(Policy(PolicyType IN POLICY_TYPE_LIST AND ExistValidTerms AND Policy_Tenure >= 0));
Report: => Plcy_AVG_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			    SetDefault2 = 0 => DEFAULT_2,
																					OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																				  ROUND((Plcy_TOT_Tenure / Plcy_CNT_All_TMP2) * 10000)/10000); //only count the  AND Policy_Tenure >= 0
Report: => Plcy_AVG_Tenure := MIN(Plcy_AVG_Tenure_tmp,CAP_9999);																						




//20200603 attribute developement with Kelly, Ben, Mark//
//Constant
Policy: C_RISKTYPE_S := ['S'];
Policy: C_RISKTYPE_P := ['P'];
Policy: C_RISKTYPE_M := ['M'];
Policy: C_RISKTYPE_N := ['N'];
Policy: C_RISKTYPE_F := ['F'];
Policy: C_RISKTYPE_A := ['A'];
Policy: C_RISKTYPE_OTHER := ['A','F','N'];


Policy: C_PROPERTY_P := ['P'];
Policy: C_PROPERTY_S := ['S'];
PolicyProperty: C_PROPERTY_P := ['P'];
PolicyProperty: C_PROPERTY_S := ['S'];
PolicyProperty: C_PROPERTY_OTHERS := ['B','R','U'];
PolicyProperty: C_FIN_FM := ['FM'];
PolicyProperty: C_FIN_SM := ['SM'];
PolicyProperty: C_FIN_OT := ['OT'];
PolicyProperty: C_FIN_AD := ['AD'];
PolicyProperty: C_FIN_HE := ['HE'];
PolicyProperty: C_FIN_FL := ['FL'];
PolicyProperty: C_FIN_OTHERS := ['OT','AD','HE','FL'];

Policy: C_POLICYTYPE_BO := ['BO'];
Policy: C_POLICYTYPE_CO := ['CO'];
Policy: C_POLICYTYPE_FL := ['FL'];
Policy: C_POLICYTYPE_FR := ['FR'];
Policy: C_POLICYTYPE_HL := ['HL'];
Policy: C_POLICYTYPE_HO := ['HO'];
Policy: C_POLICYTYPE_IM := ['IM'];
Policy: C_POLICYTYPE_MH := ['MH'];
Policy: C_POLICYTYPE_QK := ['QK'];
Policy: C_POLICYTYPE_RF := ['RF'];
Policy: C_POLICYTYPE_TN := ['TN'];
Policy: C_POLICYTYPE_UM := ['UM'];
Policy: C_POLICYTYPE_WC := ['WC'];
Policy: C_POLICYTYPE_XO := ['XO'];
Policy: C_POLICYTYPE_PP := ['BO', 'CO', 'FL', 'FR', 'HL', 'HO', 'IM', 'MH', 'QK', 'RF', 'TN', 'UM', 'WC', 'XO'];

Policy: C_CANCELLATIONREASON_COMP := ['COMP'];
Policy: C_CANCELLATIONREASON_CPLC := ['CPLC'];
Policy: C_CANCELLATIONREASON_CUST := ['CUST'];
Policy: C_CANCELLATIONREASON_LAPS := ['LAPS'];
Policy: C_CANCELLATIONREASON_MISR := ['MISR'];
Policy: C_CANCELLATIONREASON_NONP := ['NONP'];
Policy: C_CANCELLATIONREASON_NYDI := ['NYDI'];
Policy: C_CANCELLATIONREASON_NYSI := ['NYSI'];
Policy: C_CANCELLATIONREASON_OTHR := ['OTHR'];
Policy: C_CANCELLATIONREASON_PROP := ['PROP'];
Policy: C_CANCELLATIONREASON_REWR := ['REWR'];
Policy: C_CANCELLATIONREASON_RTCK := ['RTCK'];
Policy: C_CANCELLATIONREASON_SOLD := ['SOLD'];
Policy: C_CANCELLATIONREASON_TRAN := ['TRAN'];

PolicyProperty: C_COVERAGE_COVC :=['COVC'];
PolicyProperty: C_COVERAGE_COVE :=['COVE'];
PolicyProperty: C_COVERAGE_COVD :=['COVD'];
PolicyProperty: C_COVERAGE_COVF :=['COVF'];
PolicyProperty: C_COVERAGE_COVA :=['COVA'];
PolicyProperty: C_COVERAGE_COVB :=['COVB'];
PolicyProperty: C_COVERAGE_PPRC :=['PPRC'];
PolicyProperty: C_COVERAGE_OTHR :=['OTHR'];
PolicyProperty: C_COVERAGE_GRPL :=['GRPL'];
PolicyProperty: C_COVERAGE_MOLD :=['MOLD'];
PolicyProperty: C_COVERAGE_SCPP :=['SCPP'];
PolicyProperty: C_COVERAGE_ERQK :=['ERQK'];
PolicyProperty: C_COVERAGE_UMBR :=['UMBR'];
PolicyProperty: C_COVERAGE_WDHL :=['WDHL'];
PolicyProperty: C_COVERAGE_FIRA :=['FIRA'];
PolicyProperty: C_COVERAGE_HURR :=['HURR'];
PolicyProperty: C_COVERAGE_WTCR :=['WTCR'];
PolicyProperty: C_COVERAGE_BUSP :=['BUSP'];
PolicyProperty: C_COVERAGE_FLOD :=['FLOD'];
PolicyProperty: C_COVERAGE_HULL :=['HULL'];
PolicyProperty: C_COVERAGE_EQKI :=['EQKI'];
PolicyProperty: C_COVERAGE_OVRD :=['OVRD'];
PolicyProperty: C_COVERAGE_SINK :=['SINK'];
PolicyProperty: C_COVERAGE_FARM :=['FARM'];
PolicyProperty: C_COVERAGE_HAIL :=['HAIL'];
PolicyProperty: C_COVERAGE_HDCR :=['HDCR'];
PolicyProperty: C_COVERAGE_THTD :=['THTD'];
PolicyProperty: C_COVERAGE_WIND :=['WIND'];
PolicyProperty: C_COVERAGE_WINX :=['WINX'];

Policy: C_DEROG := ['NONP','LAPS','RTCK'];
Policy: C_REPORTSTATUS_C := ['C'];
Policy: C_REPORTSTATUS_I := ['I'];
Policy: C_REPORTSTATUS_E := ['E'];
Policy: C_REPORTSTATUS_D := ['D'];


Policy: C_GRACETIME := 10;//lapse
PolicyProperty: C_GRACETIME := 10;//lapse


//Global
// Grab the Policy linked to this Report with the most recent PeriodEndDate, using the most recent PeriodStartDate as a tie-breaker
// Report: => FirstPolicyPeriodEndDate := ONLY(TOPN(Policy, 1, -SubjectEndDatePolicy, -SubjectBeginDatePolicy)); 

Policy: => ValidPolicy := EXISTS(Subject) AND InsuranceType = 'PP' AND (SubjectEndDatePolicy > InceptionDate);

Policy: => G_Current := CheckCP1 OR CheckCP2;

Policy: => PolicyAge := MONTHSBETWEEN(Calculated_Start_Date, DateOfReport);
PolicyProperty: => PrimaryProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_P));
PolicyProperty: => SecondaryProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_S));
PolicyProperty: => OthersProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_OTHERS));
Policy: => G_SecondaryProperty := EXISTS(PolicyProperty(SecondaryProperty));
Policy: => OthersProperty := EXISTS(PolicyProperty(OthersProperty));
Policy: => DerogPolicy := (CancelReason IN C_DEROG) AND (NOT CancellationDate:Null);
Policy: => ExpiredPolicy := StatusReport IN C_REPORTSTATUS_E;



//Groups
Policy: => G_HOPolicy := PolicyType IN C_POLICYTYPE_HO;
Policy: => G_FLPolicy := PolicyType IN C_POLICYTYPE_FL;
Policy: => G_PrimaryProperty := EXISTS(PolicyProperty(PrimaryProperty));
// Policy: => G_SecondaryProperty := EXISTS(PolicyProperty(SecondaryProperty));
Policy: => RiskTypePreferred := RiskType IN C_RISKTYPE_P;
Policy: => RiskTypeStandard := RiskType IN C_RISKTYPE_S;
Policy: => RiskTypeOthers := RiskType IN C_RISKTYPE_OTHER;


//Month since 
Policy: => G_MOSSubjectEndDate := MONTHSBETWEEN(SubjectEndDatePolicy, DateOfReport);
Policy: => G_MOSPolicyCancelled := IF(CancellationDate > DateOfReport, 0, MONTHSBETWEEN(CancellationDate, DateOfReport)); // this also include the future policies, in attribute aggreation, if all policies are future then they should be filtered by set default -3. htis deal with current policy, but future cancellation
PolicyProperty: => PropertyCancellationDate := MIN(Coverages, PropertyCancellationDate);
Policy: => PropertyCancellationDate := MIN(PolicyProperty, PropertyCancellationDate);
Policy: => G_MOSPropertyCancellation := IF(PropertyCancellationDate > DateOfReport, 0, MONTHSBETWEEN(PropertyCancellationDate, DateOfReport));

//Defaults
Report: => G_SetDefault1 := COUNT(Policy(ValidPolicy)) = 0;//Do not have valid policy terms at all
Report: => G_SetDefault2HO := COUNT(Policy(ValidPolicy AND G_HOPolicy)) = 0;//have policy terms but not in type HO
Report: => G_SetDefault2RiskP := COUNT(Policy(ValidPolicy AND RiskTypePreferred)) = 0;//have policy terms but not in risk type P
Report: => G_SetDefault2RiskS := COUNT(Policy(ValidPolicy AND RiskTypeStandard)) = 0;//have policy terms but not in risk type S
Report: => G_SetDefault2ProptyP := COUNT(Policy(ValidPolicy AND G_PrimaryProperty)) = 0;//have policy and primary property


// PolicyProperty: => ExistPrimaryPropty := EXISTS(Coverages(PropertyType IN PROPERTY_P));
// Policy: => ExistPrimaryPropty := EXISTS(PolicyProperty(ExistPrimaryPropty))
// Report: => SetDefault2ProptyP := COUNT(Policy(ValidPolicy AND ExistPrimaryPropty));//have policy terms but not in type HO
Policy: => G_PolicyTenure := IF(Calculated_End_Date:Null OR Calculated_Start_Date:Null OR Calculated_Start_Date > Calculated_End_Date, DEFAULT_99999, MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date));

Report: => G_SetDefault3 := NOT EXISTS(Policy(ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
// Report: => G_SetDefault3HO := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_HOPolicy)); //all are future policies
// Report: => G_SetDefault3RiskP := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND RiskTypePreferred)); //all are future policies
// Report: => G_SetDefault3RiskS := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND RiskTypeStandard)); //all are future policies
// Report: => G_SetDefault3ProptyP := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_PrimaryProperty)); //all are future policies

Report: => G_SetDefault3HO := NOT EXISTS(Policy(ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3RiskP := NOT EXISTS(Policy(ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3RiskS := NOT EXISTS(Policy(ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3ProptyP := NOT EXISTS(Policy(ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies

//drop all future policy when counting
Policy: => G_CountablePolicy := ValidPolicy AND (G_PolicyTenure >= 0);


//****************************Attribute Pack 2****************************/
Report: => H_CntDistAmbestNumber := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault3 => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy){Ambest}));
Report: => I_CntDistAmbestNumber := MIN(H_CntDistAmbestNumber, CAP_999);		

Report: => H_CntDistAmbestNumberHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3 => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_HOPolicy){Ambest}));
Report: => I_CntDistAmbestNumberHO := MIN(H_CntDistAmbestNumberHO,CAP_999);


Report: => H_CntDistAmbestNumberProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3 => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){Ambest}));
Report: => I_CntDistAmbestNumberProptyP := MIN(H_CntDistAmbestNumberProptyP,CAP_999);


Report: => H_CntDistAmbestNumberRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskP => DEFAULT_2,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND RiskTypePreferred){Ambest}));
Report: => I_CntDistAmbestNumberRiskP := MIN(H_CntDistAmbestNumberRiskP,CAP_999);

Report: => H_CntDistAmbestNumberRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskS => DEFAULT_2,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND RiskTypeStandard){Ambest}));
Report: => I_CntDistAmbestNumberRiskS := MIN(H_CntDistAmbestNumberRiskS,CAP_999);



//Current
Report: => H_CntDistAmbestNumberCurr := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault3 => DEFAULT_3, // ONLY CONTAINS FUTURE TERMS
																					COUNT(Policy(G_CountablePolicy AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurr := MIN(H_CntDistAmbestNumberCurr,CAP_999);

Report: => H_CntDistAmbestNumberCurrHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3HO => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrHO := MIN(H_CntDistAmbestNumberCurrHO,CAP_999);

Report: => H_CntDistAmbestNumberCurrRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskP => DEFAULT_2,
																						G_SetDefault3RiskP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND RiskTypePreferred AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrRiskP := MIN(H_CntDistAmbestNumberCurrRiskP,CAP_999);

Report: => H_CntDistAmbestNumberCurrRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskS => DEFAULT_2,
																						G_SetDefault3RiskS => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND RiskTypeStandard AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrRiskS := MIN(H_CntDistAmbestNumberCurrRiskS,CAP_999);

//Carrier Name
Report: => CARRIER_NAME_CP := COUNT(Policy(G_Current){CarrierName});


//Cancellation, all history
Report: => H_CntCancelledPol := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null)));
Report: => I_CntCancelledPol := MIN(H_CntCancelledPol,CAP_999);		

Report: => H_CntCancelledPolHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy)));
Report: => I_CntCancelledPolHO := MIN(H_CntCancelledPolHO,CAP_999);		

Report: => H_CntCancelledPolRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypePreferred)));
Report: => I_CntCancelledPolRiskP := MIN(H_CntCancelledPolRiskP,CAP_999);		

Report: => H_CntCancelledPolRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypeStandard)));
Report: => I_CntCancelledPolRiskS := MIN(H_CntCancelledPolRiskS,CAP_999);

//CURRENT
Report: => H_CntCancelledPolCurr := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_Current)));
Report: => I_CntCancelledPolCurr := MIN(H_CntCancelledPolCurr,CAP_999);		

Report: => H_CntCancelledPolCurrHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_Current)));
Report: => I_CntCancelledPolCurrHO := MIN(H_CntCancelledPolCurrHO,CAP_999);		

Report: => H_CntCancelledPolProptyP := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2ProptyP => DEFAULT_2,
										G_SetDefault3ProptyP => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty)));
Report: => I_CntCancelledPolProptyP := MIN(H_CntCancelledPolProptyP,CAP_999);		

Report: => H_CntCancelledPolCurrRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypePreferred AND G_Current)));
Report: => I_CntCancelledPolCurrRiskP := MIN(H_CntCancelledPolCurrRiskP,CAP_999);		

Report: => H_CntCancelledPolCurrRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypeStandard AND G_Current)));
Report: => I_CntCancelledPolCurrRiskS := MIN(H_CntCancelledPolCurrRiskS,CAP_999);


//1 YEAR
Report: => H_CntCancelledPol1Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1Y := MIN(H_CntCancelledPol1Y,CAP_999);		

Report: => H_CntCancelledPol1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YHO := MIN(H_CntCancelledPol1YHO,CAP_999);		


Report: => H_CntCancelledPol1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2ProptyP => DEFAULT_2,
										G_SetDefault3ProptyP => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YProptyP := MIN(H_CntCancelledPol1YProptyP,CAP_999);		

Report: => H_CntCancelledPol1YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypePreferred AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YRiskP := MIN(H_CntCancelledPol1YRiskP,CAP_999);		

Report: => H_CntCancelledPol1YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypeStandard AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YRiskS := MIN(H_CntCancelledPol1YRiskS,CAP_999);

//3 YEAR
Report: => H_CntCancelledPol3Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3Y := MIN(H_CntCancelledPol3Y,CAP_999);		

Report: => H_CntCancelledPol3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YHO := MIN(H_CntCancelledPol3YHO,CAP_999);		

Report: => H_CntCancelledPol3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2ProptyP => DEFAULT_2,
										G_SetDefault3ProptyP => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YProptyP := MIN(H_CntCancelledPol3YProptyP,CAP_999);		

Report: => H_CntCancelledPol3YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypePreferred AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YRiskP := MIN(H_CntCancelledPol3YRiskP,CAP_999);		

Report: => H_CntCancelledPol3YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND RiskTypeStandard AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YRiskS := MIN(H_CntCancelledPol3YRiskS,CAP_999);


//cancelled age
// I_MonthsSinceLatestPolCancellation
// I_MonthsSinceLatestPolCancellationHO
// I_MonthsSinceLatestPolCancellationProptyP
// I_MonthsSinceOldestPolCancellation
// I_MonthsSinceOldestPolCancellationHO
// I_MonthsSinceOldestPolCancellationProptyP
//default -4, there is not cancellation at all, G_MOSPolicyCancelled is null
Report: => G_SetDefault4_CancelAge := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null));
Report: => G_SetDefault4_CancelAgeHO := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy));
Report: => G_SetDefault4_CancelAgeProptyP := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty));

Report: => H_MonthsSinceLatestPolCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_CancelAge = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND NOT CancellationDate:Null), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellation := MIN(H_MonthsSinceLatestPolCancellation,CAP_9999);

Report: => H_MonthsSinceLatestPolCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3, 
																												G_SetDefault4_CancelAgeHO = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_HOPolicy), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellationHO := MIN(H_MonthsSinceLatestPolCancellationHO,CAP_9999);

Report: => H_MonthsSinceLatestPolCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_CancelAgeProptyP = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_PrimaryProperty), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellationProptyP := MIN(H_MonthsSinceLatestPolCancellationProptyP,CAP_9999);


Report: => H_MonthsSinceOldestPolCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_CancelAge = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND NOT CancellationDate:Null), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellation := MIN(H_MonthsSinceOldestPolCancellation,CAP_9999);

Report: => H_MonthsSinceOldestPolCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3,
																												G_SetDefault4_CancelAgeHO = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_HOPolicy), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellationHO := MIN(H_MonthsSinceOldestPolCancellationHO,CAP_9999);

Report: => H_MonthsSinceOldestPolCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_CancelAgeProptyP = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_PrimaryProperty), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellationProptyP := MIN(H_MonthsSinceOldestPolCancellationProptyP,CAP_9999);

//derog, ['NONP','LAPS','RTCK'] or expired policy, when policy status is EXPIRED, C_REPORTSTATUS_E
// I_CntDerogCancellation
// I_CntDerogCancellationHO
// I_CntDerogCancellationProptyP
// I_CntDerogCancellation1Y
// I_CntDerogCancellation1YHO
// I_CntDerogCancellation1YProptyP
// I_CntDerogCancellation3Y
// I_CntDerogCancellation3YHO
// I_CntDerogCancellation3YProptyP

//with cancellation date, but no cancellation reason or expired policy
// Report: => G_SetDefault4_Derog := EXISTS(Policy(G_CountablePolicy AND CancelReason:Null AND NOT CancellationDate:Null AND G_PolicyTenure >= 0);
Report: => G_SetDefault4_Derog := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND ExpiredPolicy AND G_PolicyTenure >= 0)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);
																	
Report: => G_SetDefault4_DerogHO := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0 AND G_HOPolicy)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND ExpiredPolicy AND G_PolicyTenure >= 0 AND G_HOPolicy)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0 AND G_HOPolicy)) > 0);
																	
Report: => G_SetDefault4_DerogProptyP := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND ExpiredPolicy AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) > 0);																	
																	
																	
Report: => H_CntDerogCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault3 => DEFAULT_3, 
																					G_SetDefault4_Derog => DEFAULT_4,
																					COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy))));
Report: => I_CntDerogCancellation := MIN(H_CntDerogCancellation, CAP_999);

Report: => H_CntDerogCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3HO => DEFAULT_3, 
																					G_SetDefault4_DerogHO => DEFAULT_4,
																					COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy) AND G_HOPolicy)));
Report: => I_CntDerogCancellationHO := MIN(H_CntDerogCancellationHO,CAP_9999);

Report: => H_CntDerogCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																								G_SetDefault2ProptyP => DEFAULT_2,
																								G_SetDefault3ProptyP => DEFAULT_3, 
																								G_SetDefault4_DerogProptyP => DEFAULT_4,
																								COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellationProptyP := MIN(H_CntDerogCancellationProptyP,CAP_9999);

                                                                              
Report: => H_CntDerogCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation1Y := MIN(H_CntDerogCancellation1Y, CAP_999);

Report: => H_CntDerogCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation1YHO := MIN(H_CntDerogCancellation1YHO,CAP_9999);

Report: => H_CntDerogCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation1YProptyP := MIN(H_CntDerogCancellation1YProptyP,CAP_9999);


                                                                              
Report: => H_CntDerogCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation3Y := MIN(H_CntDerogCancellation3Y, CAP_999);

Report: => H_CntDerogCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation3YHO := MIN(H_CntDerogCancellation3YHO,CAP_9999);

Report: => H_CntDerogCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (DerogPolicy OR ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation3YProptyP := MIN(H_CntDerogCancellation3YProptyP,CAP_9999);



//Each Cancellation reason code
//COMP
Policy: => COMPPolicy := CancelReason IN C_CANCELLATIONREASON_COMP;
Policy: => CPLCPolicy := CancelReason IN C_CANCELLATIONREASON_CPLC;
Policy: => CUSTPolicy := CancelReason IN C_CANCELLATIONREASON_CUST;
Policy: => LAPSPolicy := CancelReason IN C_CANCELLATIONREASON_LAPS;
Policy: => MISRPolicy := CancelReason IN C_CANCELLATIONREASON_MISR;
Policy: => NONPPolicy := CancelReason IN C_CANCELLATIONREASON_NONP;
Policy: => NYDIPolicy := CancelReason IN C_CANCELLATIONREASON_NYDI;
Policy: => NYSIPolicy := CancelReason IN C_CANCELLATIONREASON_NYSI;
Policy: => OTHRPolicy := CancelReason IN C_CANCELLATIONREASON_OTHR;
Policy: => PROPPolicy := CancelReason IN C_CANCELLATIONREASON_PROP;
Policy: => REWRPolicy := CancelReason IN C_CANCELLATIONREASON_REWR;
Policy: => RTCKPolicy := CancelReason IN C_CANCELLATIONREASON_RTCK;
Policy: => SOLDPolicy := CancelReason IN C_CANCELLATIONREASON_SOLD;
Policy: => TRANPolicy := CancelReason IN C_CANCELLATIONREASON_TRAN;

Report: => G_SetDefault4_CancelReason := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date
Report: => G_SetDefault4_CancelReasonHO := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date
Report: => G_SetDefault4_CancelReasonProptyP := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date



Report: => H_CntCOMPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy)));
Report: => I_CntCOMPCancellation := MIN(H_CntCOMPCancellation, CAP_999);

Report: => H_CntCOMPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_HOPolicy)));
Report: => I_CntCOMPCancellationHO := MIN(H_CntCOMPCancellationHO,CAP_9999);

Report: => H_CntCOMPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_PrimaryProperty)));
Report: => I_CntCOMPCancellationProptyP := MIN(H_CntCOMPCancellationProptyP,CAP_9999);


																
Report: => H_CntCOMPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1Y := MIN(H_CntCOMPCancellation1Y, CAP_999);

Report: => H_CntCOMPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1YHO := MIN(H_CntCOMPCancellation1YHO,CAP_9999);

Report: => H_CntCOMPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1YProptyP := MIN(H_CntCOMPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCOMPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3Y := MIN(H_CntCOMPCancellation3Y, CAP_999);

Report: => H_CntCOMPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3YHO := MIN(H_CntCOMPCancellation3YHO,CAP_9999);

Report: => H_CntCOMPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3YProptyP := MIN(H_CntCOMPCancellation3YProptyP,CAP_9999);



Report: => H_CntCPLCCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy)));
Report: => I_CntCPLCCancellation := MIN(H_CntCPLCCancellation, CAP_999);

Report: => H_CntCPLCCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_HOPolicy)));
Report: => I_CntCPLCCancellationHO := MIN(H_CntCPLCCancellationHO,CAP_9999);

Report: => H_CntCPLCCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_PrimaryProperty)));
Report: => I_CntCPLCCancellationProptyP := MIN(H_CntCPLCCancellationProptyP,CAP_9999);


																
Report: => H_CntCPLCCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1Y := MIN(H_CntCPLCCancellation1Y, CAP_999);

Report: => H_CntCPLCCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1YHO := MIN(H_CntCPLCCancellation1YHO,CAP_9999);

Report: => H_CntCPLCCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1YProptyP := MIN(H_CntCPLCCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCPLCCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3Y := MIN(H_CntCPLCCancellation3Y, CAP_999);

Report: => H_CntCPLCCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3YHO := MIN(H_CntCPLCCancellation3YHO,CAP_9999);

Report: => H_CntCPLCCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3YProptyP := MIN(H_CntCPLCCancellation3YProptyP,CAP_9999);



Report: => H_CntCUSTCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy)));
Report: => I_CntCUSTCancellation := MIN(H_CntCUSTCancellation, CAP_999);

Report: => H_CntCUSTCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_HOPolicy)));
Report: => I_CntCUSTCancellationHO := MIN(H_CntCUSTCancellationHO,CAP_9999);

Report: => H_CntCUSTCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_PrimaryProperty)));
Report: => I_CntCUSTCancellationProptyP := MIN(H_CntCUSTCancellationProptyP,CAP_9999);


																
Report: => H_CntCUSTCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1Y := MIN(H_CntCUSTCancellation1Y, CAP_999);

Report: => H_CntCUSTCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1YHO := MIN(H_CntCUSTCancellation1YHO,CAP_9999);

Report: => H_CntCUSTCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1YProptyP := MIN(H_CntCUSTCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCUSTCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3Y := MIN(H_CntCUSTCancellation3Y, CAP_999);

Report: => H_CntCUSTCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3YHO := MIN(H_CntCUSTCancellation3YHO,CAP_9999);

Report: => H_CntCUSTCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3YProptyP := MIN(H_CntCUSTCancellation3YProptyP,CAP_9999);



Report: => H_CntLAPSCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy)));
Report: => I_CntLAPSCancellation := MIN(H_CntLAPSCancellation, CAP_999);

Report: => H_CntLAPSCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_HOPolicy)));
Report: => I_CntLAPSCancellationHO := MIN(H_CntLAPSCancellationHO,CAP_9999);

Report: => H_CntLAPSCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_PrimaryProperty)));
Report: => I_CntLAPSCancellationProptyP := MIN(H_CntLAPSCancellationProptyP,CAP_9999);


																
Report: => H_CntLAPSCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1Y := MIN(H_CntLAPSCancellation1Y, CAP_999);

Report: => H_CntLAPSCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1YHO := MIN(H_CntLAPSCancellation1YHO,CAP_9999);

Report: => H_CntLAPSCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1YProptyP := MIN(H_CntLAPSCancellation1YProptyP,CAP_9999);

																
Report: => H_CntLAPSCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3Y := MIN(H_CntLAPSCancellation3Y, CAP_999);

Report: => H_CntLAPSCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3YHO := MIN(H_CntLAPSCancellation3YHO,CAP_9999);

Report: => H_CntLAPSCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3YProptyP := MIN(H_CntLAPSCancellation3YProptyP,CAP_9999);



Report: => H_CntMISRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy)));
Report: => I_CntMISRCancellation := MIN(H_CntMISRCancellation, CAP_999);

Report: => H_CntMISRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_HOPolicy)));
Report: => I_CntMISRCancellationHO := MIN(H_CntMISRCancellationHO,CAP_9999);

Report: => H_CntMISRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_PrimaryProperty)));
Report: => I_CntMISRCancellationProptyP := MIN(H_CntMISRCancellationProptyP,CAP_9999);


																
Report: => H_CntMISRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1Y := MIN(H_CntMISRCancellation1Y, CAP_999);

Report: => H_CntMISRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1YHO := MIN(H_CntMISRCancellation1YHO,CAP_9999);

Report: => H_CntMISRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1YProptyP := MIN(H_CntMISRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntMISRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3Y := MIN(H_CntMISRCancellation3Y, CAP_999);

Report: => H_CntMISRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3YHO := MIN(H_CntMISRCancellation3YHO,CAP_9999);

Report: => H_CntMISRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3YProptyP := MIN(H_CntMISRCancellation3YProptyP,CAP_9999);



Report: => H_CntNONPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy)));
Report: => I_CntNONPCancellation := MIN(H_CntNONPCancellation, CAP_999);

Report: => H_CntNONPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_HOPolicy)));
Report: => I_CntNONPCancellationHO := MIN(H_CntNONPCancellationHO,CAP_9999);

Report: => H_CntNONPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_PrimaryProperty)));
Report: => I_CntNONPCancellationProptyP := MIN(H_CntNONPCancellationProptyP,CAP_9999);


																
Report: => H_CntNONPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1Y := MIN(H_CntNONPCancellation1Y, CAP_999);

Report: => H_CntNONPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1YHO := MIN(H_CntNONPCancellation1YHO,CAP_9999);

Report: => H_CntNONPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1YProptyP := MIN(H_CntNONPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntNONPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3Y := MIN(H_CntNONPCancellation3Y, CAP_999);

Report: => H_CntNONPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3YHO := MIN(H_CntNONPCancellation3YHO,CAP_9999);

Report: => H_CntNONPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3YProptyP := MIN(H_CntNONPCancellation3YProptyP,CAP_9999);



Report: => H_CntNYDICancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy)));
Report: => I_CntNYDICancellation := MIN(H_CntNYDICancellation, CAP_999);

Report: => H_CntNYDICancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_HOPolicy)));
Report: => I_CntNYDICancellationHO := MIN(H_CntNYDICancellationHO,CAP_9999);

Report: => H_CntNYDICancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_PrimaryProperty)));
Report: => I_CntNYDICancellationProptyP := MIN(H_CntNYDICancellationProptyP,CAP_9999);


																
Report: => H_CntNYDICancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1Y := MIN(H_CntNYDICancellation1Y, CAP_999);

Report: => H_CntNYDICancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1YHO := MIN(H_CntNYDICancellation1YHO,CAP_9999);

Report: => H_CntNYDICancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1YProptyP := MIN(H_CntNYDICancellation1YProptyP,CAP_9999);

																
Report: => H_CntNYDICancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3Y := MIN(H_CntNYDICancellation3Y, CAP_999);

Report: => H_CntNYDICancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3YHO := MIN(H_CntNYDICancellation3YHO,CAP_9999);

Report: => H_CntNYDICancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3YProptyP := MIN(H_CntNYDICancellation3YProptyP,CAP_9999);



Report: => H_CntNYSICancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy)));
Report: => I_CntNYSICancellation := MIN(H_CntNYSICancellation, CAP_999);

Report: => H_CntNYSICancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_HOPolicy)));
Report: => I_CntNYSICancellationHO := MIN(H_CntNYSICancellationHO,CAP_9999);

Report: => H_CntNYSICancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_PrimaryProperty)));
Report: => I_CntNYSICancellationProptyP := MIN(H_CntNYSICancellationProptyP,CAP_9999);


																
Report: => H_CntNYSICancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1Y := MIN(H_CntNYSICancellation1Y, CAP_999);

Report: => H_CntNYSICancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1YHO := MIN(H_CntNYSICancellation1YHO,CAP_9999);

Report: => H_CntNYSICancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1YProptyP := MIN(H_CntNYSICancellation1YProptyP,CAP_9999);

																
Report: => H_CntNYSICancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3Y := MIN(H_CntNYSICancellation3Y, CAP_999);

Report: => H_CntNYSICancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3YHO := MIN(H_CntNYSICancellation3YHO,CAP_9999);

Report: => H_CntNYSICancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3YProptyP := MIN(H_CntNYSICancellation3YProptyP,CAP_9999);



Report: => H_CntOTHRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy)));
Report: => I_CntOTHRCancellation := MIN(H_CntOTHRCancellation, CAP_999);

Report: => H_CntOTHRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_HOPolicy)));
Report: => I_CntOTHRCancellationHO := MIN(H_CntOTHRCancellationHO,CAP_9999);

Report: => H_CntOTHRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_PrimaryProperty)));
Report: => I_CntOTHRCancellationProptyP := MIN(H_CntOTHRCancellationProptyP,CAP_9999);


																
Report: => H_CntOTHRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1Y := MIN(H_CntOTHRCancellation1Y, CAP_999);

Report: => H_CntOTHRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1YHO := MIN(H_CntOTHRCancellation1YHO,CAP_9999);

Report: => H_CntOTHRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1YProptyP := MIN(H_CntOTHRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntOTHRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3Y := MIN(H_CntOTHRCancellation3Y, CAP_999);

Report: => H_CntOTHRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3YHO := MIN(H_CntOTHRCancellation3YHO,CAP_9999);

Report: => H_CntOTHRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3YProptyP := MIN(H_CntOTHRCancellation3YProptyP,CAP_9999);



Report: => H_CntPROPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy)));
Report: => I_CntPROPCancellation := MIN(H_CntPROPCancellation, CAP_999);

Report: => H_CntPROPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_HOPolicy)));
Report: => I_CntPROPCancellationHO := MIN(H_CntPROPCancellationHO,CAP_9999);

Report: => H_CntPROPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_PrimaryProperty)));
Report: => I_CntPROPCancellationProptyP := MIN(H_CntPROPCancellationProptyP,CAP_9999);


																
Report: => H_CntPROPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1Y := MIN(H_CntPROPCancellation1Y, CAP_999);

Report: => H_CntPROPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1YHO := MIN(H_CntPROPCancellation1YHO,CAP_9999);

Report: => H_CntPROPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1YProptyP := MIN(H_CntPROPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntPROPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3Y := MIN(H_CntPROPCancellation3Y, CAP_999);

Report: => H_CntPROPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3YHO := MIN(H_CntPROPCancellation3YHO,CAP_9999);

Report: => H_CntPROPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3YProptyP := MIN(H_CntPROPCancellation3YProptyP,CAP_9999);


Report: => H_CntREWRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy)));
Report: => I_CntREWRCancellation := MIN(H_CntREWRCancellation, CAP_999);

Report: => H_CntREWRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_HOPolicy)));
Report: => I_CntREWRCancellationHO := MIN(H_CntREWRCancellationHO,CAP_9999);

Report: => H_CntREWRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_PrimaryProperty)));
Report: => I_CntREWRCancellationREWRProptyP := MIN(H_CntREWRCancellationProptyP,CAP_9999);


																
Report: => H_CntREWRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1Y := MIN(H_CntREWRCancellation1Y, CAP_999);

Report: => H_CntREWRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1YHO := MIN(H_CntREWRCancellation1YHO,CAP_9999);

Report: => H_CntREWRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1YREWRProptyP := MIN(H_CntREWRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntREWRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3Y := MIN(H_CntREWRCancellation3Y, CAP_999);

Report: => H_CntREWRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3YHO := MIN(H_CntREWRCancellation3YHO,CAP_9999);

Report: => H_CntREWRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3YProptyP := MIN(H_CntREWRCancellation3YProptyP,CAP_9999);



Report: => H_CntRTCKCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy)));
Report: => I_CntRTCKCancellation := MIN(H_CntRTCKCancellation, CAP_999);

Report: => H_CntRTCKCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_HOPolicy)));
Report: => I_CntRTCKCancellationHO := MIN(H_CntRTCKCancellationHO,CAP_9999);

Report: => H_CntRTCKCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_PrimaryProperty)));
Report: => I_CntRTCKCancellationProptyP := MIN(H_CntRTCKCancellationProptyP,CAP_9999);


																
Report: => H_CntRTCKCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1Y := MIN(H_CntRTCKCancellation1Y, CAP_999);

Report: => H_CntRTCKCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1YHO := MIN(H_CntRTCKCancellation1YHO,CAP_9999);

Report: => H_CntRTCKCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1YProptyP := MIN(H_CntRTCKCancellation1YProptyP,CAP_9999);

																
Report: => H_CntRTCKCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3Y := MIN(H_CntRTCKCancellation3Y, CAP_999);

Report: => H_CntRTCKCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3YHO := MIN(H_CntRTCKCancellation3YHO,CAP_9999);

Report: => H_CntRTCKCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3YProptyP := MIN(H_CntRTCKCancellation3YProptyP,CAP_9999);



Report: => H_CntSOLDCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy)));
Report: => I_CntSOLDCancellation := MIN(H_CntSOLDCancellation, CAP_999);

Report: => H_CntSOLDCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_HOPolicy)));
Report: => I_CntSOLDCancellationHO := MIN(H_CntSOLDCancellationHO,CAP_9999);

Report: => H_CntSOLDCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_PrimaryProperty)));
Report: => I_CntSOLDCancellationProptyP := MIN(H_CntSOLDCancellationProptyP,CAP_9999);


																
Report: => H_CntSOLDCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1Y := MIN(H_CntSOLDCancellation1Y, CAP_999);

Report: => H_CntSOLDCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1YHO := MIN(H_CntSOLDCancellation1YHO,CAP_9999);

Report: => H_CntSOLDCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1YProptyP := MIN(H_CntSOLDCancellation1YProptyP,CAP_9999);

																
Report: => H_CntSOLDCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3Y := MIN(H_CntSOLDCancellation3Y, CAP_999);

Report: => H_CntSOLDCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3YHO := MIN(H_CntSOLDCancellation3YHO,CAP_9999);

Report: => H_CntSOLDCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3YProptyP := MIN(H_CntSOLDCancellation3YProptyP,CAP_9999);


Report: => H_CntTRANCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy)));
Report: => I_CntTRANCancellation := MIN(H_CntTRANCancellation, CAP_999);

Report: => H_CntTRANCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_HOPolicy)));
Report: => I_CntTRANCancellationHO := MIN(H_CntTRANCancellationHO,CAP_9999);

Report: => H_CntTRANCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_PrimaryProperty)));
Report: => I_CntTRANCancellationProptyP := MIN(H_CntTRANCancellationProptyP,CAP_9999);


																
Report: => H_CntTRANCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1Y := MIN(H_CntTRANCancellation1Y, CAP_999);

Report: => H_CntTRANCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1YHO := MIN(H_CntTRANCancellation1YHO,CAP_9999);

Report: => H_CntTRANCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1YProptyP := MIN(H_CntTRANCancellation1YProptyP,CAP_9999);

																
Report: => H_CntTRANCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3Y := MIN(H_CntTRANCancellation3Y, CAP_999);

Report: => H_CntTRANCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3YHO := MIN(H_CntTRANCancellation3YHO,CAP_9999);

Report: => H_CntTRANCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3YProptyP := MIN(H_CntTRANCancellation3YProptyP,CAP_9999);



//Property cancellation, 
// I_CntProptyCancellation
// I_CntProptyCancellationHO
// I_CntProptyCancellationProptyP
// I_CntProptyCancellation1Y
// I_CntProptyCancellation1YHO
// I_CntProptyCancellation1YProptyP
// I_CntProptyCancellation3Y
// I_CntProptyCancellation3YHO
// I_CntProptyCancellation3YProptyP
PolicyProperty: => PropertyCanlletion := EXISTS(Coverages(NOT PropertyCancellationDate:Null));
Policy: => PropertyCanlletion := EXISTS(PolicyProperty(PropertyCanlletion));

Report: => H_CntProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion)));
Report: => I_CntProptyCancellation := MIN(H_CntProptyCancellation,CAP_999);

Report: => H_CntProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy)));
Report: => I_CntProptyCancellationHO := MIN(H_CntProptyCancellationHO,CAP_999);

Report: => H_CntProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty)));
Report: => I_CntProptyCancellationProptyP := MIN(H_CntProptyCancellationProptyP,CAP_999);

Report: => H_CntProptyCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1Y := MIN(H_CntProptyCancellation1Y,CAP_999);

Report: => H_CntProptyCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1YHO := MIN(H_CntProptyCancellation1YHO,CAP_999);

Report: => H_CntProptyCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1YProptyP := MIN(H_CntProptyCancellation1YProptyP,CAP_999);

Report: => H_CntProptyCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3Y := MIN(H_CntProptyCancellation3Y,CAP_999);

Report: => H_CntProptyCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3YHO := MIN(H_CntProptyCancellation3YHO,CAP_999);

Report: => H_CntProptyCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3YProptyP := MIN(H_CntProptyCancellation3YProptyP,CAP_999);

// I_MonthsSinceLatestProptyCancellation
// I_MonthsSinceLatestProptyCancellationHO
// I_MonthsSinceLatestProptyCancellationProptyP
// I_MonthsSinceOldestProptyCancellation
// I_MonthsSinceOldestProptyCancellationHO
// I_MonthsSinceOldestProptyCancellationProptyP
Report: => G_SetDefault4_ProptyCancelAge := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion)) = 0;
Report: => G_SetDefault4_ProptyCancelAgeHO := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy)) = 0;
Report: => G_SetDefault4_ProptyCancelAgeProptyP := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty)) = 0;


Report: => H_MonthsSinceLatestProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3,
																												G_SetDefault4_ProptyCancelAge => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellation := MIN(H_MonthsSinceLatestProptyCancellation,CAP_9999);

Report: => H_MonthsSinceLatestProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3,
																												G_SetDefault4_ProptyCancelAgeHO => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellationHO := MIN(H_MonthsSinceLatestProptyCancellationHO,CAP_9999);

Report: => H_MonthsSinceLatestProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																													G_SetDefault4_ProptyCancelAgeProptyP => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellationProptyP := MIN(H_MonthsSinceLatestProptyCancellationProptyP,CAP_9999);


Report: => H_MonthsSinceOldestProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAge => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellation := MIN(H_MonthsSinceOldestProptyCancellation,CAP_9999);

Report: => H_MonthsSinceOldestProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAgeHO => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellationHO := MIN(H_MonthsSinceOldestProptyCancellationHO,CAP_9999);

Report: => H_MonthsSinceOldestProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAgeProptyP => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellationProptyP := MIN(H_MonthsSinceOldestProptyCancellationProptyP,CAP_9999);


//Finance type, and property
//count property, concat HouseNumber, StreetName, SecondaryRange, State, Zip5
// I_CntProptyWithFinTypeFM
// I_CntProptyWithFinTypeFMHO
// I_CntProptyWithFinTypeFMProptyP
//count the properties with finance type FM
PolicyProperty: => H_FirstMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_FM));
PolicyProperty: => H_SecondaryMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_SM));
PolicyProperty: => H_OtherMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_OTHERS));

Policy: => PropertyID_FM := PolicyProperty(H_FirstMortgage).Location;
// Property: => PropertyID := HouseNumber + ',' + StreetName + ',' + STRING(SecondaryRange) + ',' + State + ',' + STRING(Zip5); //generate property id without transaction id
// PolicyProperty: => PropertyID := Location.PropertyID; 
// Policy: => PropertyID_FM := PolicyProperty(FirstMortgage){PropertyID}; // pull propert in this policy


Report: => H_CntProptyWithFinTypeFM := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM := MIN(H_CntProptyWithFinTypeFM, CAP_999);

Report: => H_CntProptyWithFinTypeFMHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFMHO := MIN(H_CntProptyWithFinTypeFMHO, CAP_999);

Report: => H_CntProptyWithFinTypeFMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																							G_SetDefault2ProptyP => DEFAULT_2,
																							G_SetDefault3ProptyP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFMProptyP := MIN(H_CntProptyWithFinTypeFMProptyP, CAP_999);

// I_CntProptyWithFinTypeFM1Y
// I_CntProptyWithFinTypeFM1YHO
// I_CntProptyWithFinTypeFM1YProptyP
Report: => H_CntProptyWithFinTypeFM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1Y := MIN(H_CntProptyWithFinTypeFM1Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1YHO := MIN(H_CntProptyWithFinTypeFM1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1YProptyP := MIN(H_CntProptyWithFinTypeFM1YProptyP, CAP_999);

// I_CntProptyWithFinTypeFM3Y
// I_CntProptyWithFinTypeFM3YHO
// I_CntProptyWithFinTypeFM3YProptyP
Report: => H_CntProptyWithFinTypeFM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3Y := MIN(H_CntProptyWithFinTypeFM3Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3YHO := MIN(H_CntProptyWithFinTypeFM3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3YProptyP := MIN(H_CntProptyWithFinTypeFM3YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM
// I_CntProptyWithFinTypeSMHO
// I_CntProptyWithFinTypeSMProptyP
// I_CntProptyWithFinTypeSM1Y
// I_CntProptyWithFinTypeSM1YHO
// I_CntProptyWithFinTypeSM1YProptyP
// I_CntProptyWithFinTypeSM3Y
// I_CntProptyWithFinTypeSM3YHO
// I_CntProptyWithFinTypeSM3YProptyP
Policy: => PropertyID_SM := PolicyProperty(H_SecondaryMortgage).Location;
Report: => H_CntProptyWithFinTypeSM := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM := MIN(H_CntProptyWithFinTypeSM, CAP_999);

Report: => H_CntProptyWithFinTypeSMHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSMHO := MIN(H_CntProptyWithFinTypeSMHO, CAP_999);

Report: => H_CntProptyWithFinTypeSMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSMProptyP := MIN(H_CntProptyWithFinTypeSMProptyP, CAP_999);


Report: => H_CntProptyWithFinTypeSM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1Y := MIN(H_CntProptyWithFinTypeSM1Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1YHO := MIN(H_CntProptyWithFinTypeSM1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1YProptyP := MIN(H_CntProptyWithFinTypeSM1YProptyP, CAP_999);


Report: => H_CntProptyWithFinTypeSM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3Y := MIN(H_CntProptyWithFinTypeSM3Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3YHO := MIN(H_CntProptyWithFinTypeSM3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3YProptyP := MIN(H_CntProptyWithFinTypeSM3YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers
// I_CntProptyWithFinTypeOthersHO
// I_CntProptyWithFinTypeOthersProptyP
// I_CntProptyWithFinTypeOthers1Y
// I_CntProptyWithFinTypeOthers1YHO
// I_CntProptyWithFinTypeOthers1YProptyP
// I_CntProptyWithFinTypeOthers3Y
// I_CntProptyWithFinTypeOthers3YHO
// I_CntProptyWithFinTypeOthers3YProptyP
Policy: => PropertyID_Others := PolicyProperty(H_OtherMortgage).Location;
Report: => H_CntProptyWithFinTypeOthers := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers := MIN(H_CntProptyWithFinTypeOthers, CAP_999);

Report: => H_CntProptyWithFinTypeOthersHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthersHO := MIN(H_CntProptyWithFinTypeOthersHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthersProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthersProptyP := MIN(H_CntProptyWithFinTypeOthersProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers1Y
// I_CntProptyWithFinTypeOthers1YHO
// I_CntProptyWithFinTypeOthers1YProptyP
Report: => H_CntProptyWithFinTypeOthers1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1Y := MIN(H_CntProptyWithFinTypeOthers1Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1YHO := MIN(H_CntProptyWithFinTypeOthers1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1YProptyP := MIN(H_CntProptyWithFinTypeOthers1YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers3Y
// I_CntProptyWithFinTypeOthers3YHO
// I_CntProptyWithFinTypeOthers3YProptyP
Report: => H_CntProptyWithFinTypeOthers3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3Y := MIN(H_CntProptyWithFinTypeOthers3Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3YHO := MIN(H_CntProptyWithFinTypeOthers3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3YProptyP := MIN(H_CntProptyWithFinTypeOthers3YProptyP, CAP_999);


// I_CntDistFinType
// I_CntDistFinTypeHO
// I_CntDistFinTypeProptyP
// I_CntDistFinType1Y
// I_CntDistFinType1YHO
// I_CntDistFinType1YProptyP
// I_CntDistFinType3Y
// I_CntDistFinType3YHO
// I_CntDistFinType3YProptyP


//count distinct Finance types
PolicyProperty: => FinanceType := FinanceInfo{FinanceType};
// Policy: => H_FinanceTypes := PolicyProperty.FinanceType{FinanceType};
Report: => H_FinanceTypes := Policy(G_CountablePolicy).H_FinanceTypes{FinanceType};
Report: => H_CntDistFinType := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType := MIN(H_CntDistFinType, CAP_999);		

Report: => H_CntDistFinTypeHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_HOPolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinTypeHO := MIN(H_CntDistFinTypeHO, CAP_999);	

Report: => H_CntDistFinTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinTypeProptyP := MIN(H_CntDistFinTypeProptyP, CAP_999);


Report: => H_CntDistFinType1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1Y := MIN(H_CntDistFinType1Y, CAP_999);    

Report: => H_CntDistFinType1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1YHO := MIN(H_CntDistFinType1YHO, CAP_999);  

Report: => H_CntDistFinType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1YProptyP := MIN(H_CntDistFinType1YProptyP, CAP_999);

Report: => H_CntDistFinType3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3Y := MIN(H_CntDistFinType3Y, CAP_999);    

Report: => H_CntDistFinType3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3YHO := MIN(H_CntDistFinType3YHO, CAP_999);  

Report: => H_CntDistFinType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3YProptyP := MIN(H_CntDistFinType3YProptyP, CAP_999);


// I_CntFinCompany
// I_CntFinCompanyHO
// I_CntFinCompanyProptyP
// I_CntFinCompany1Y
// I_CntFinCompany1YHO
// I_CntFinCompany1YProptyP
// I_CntFinCompany3Y
// I_CntFinCompany3YHO
// I_CntFinCompany3YProptyP
//Dedupe the finance company by the finance type of each property id

Policy: => FinCompany := PolicyProperty{Location,FinanceInfo{FinanceType}};
Report: => FinCompany := Policy(G_CountablePolicy).FinCompany{Location,FinanceInfo{FinanceType}};
Report.FinCompany: => CntFinCPerProperty := COUNT(FinanceInfo);
Report: => CntFinCPerReport := SUM(FinCompany,CntFinCPerProperty);


PolicyProperty: => CountDistinctFin := COUNT(FinanceInfo{FinanceType});
Policy: => H_FinanceTypes := PolicyProperty.FinanceType{FinanceType};
// Report: => H_FinanceTypes := Policy(G_CountablePolicy).H_FinanceTypes{FinanceType};
Report: => H_CntFinCompany := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany := MIN(H_CntFinCompany, CAP_999);		

Report: => H_CntFinCompanyHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompanyHO := MIN(H_CntFinCompanyHO, CAP_999);      

Report: => H_CntFinCompanyProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompanyProptyP := MIN(H_CntFinCompanyProptyP, CAP_999);     



Report: => H_CntFinCompany1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany1Y := MIN(H_CntFinCompany1Y, CAP_999);            

Report: => H_CntFinCompany1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany1YHO := MIN(H_CntFinCompany1YHO, CAP_999);      

Report: => H_CntFinCompany1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany1YProptyP := MIN(H_CntFinCompany1YProptyP, CAP_999);     



Report: => H_CntFinCompany3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany3Y := MIN(H_CntFinCompany3Y, CAP_999);            

Report: => H_CntFinCompany3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany3YHO := MIN(H_CntFinCompany3YHO, CAP_999);      

Report: => H_CntFinCompany3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
Report: => I_CntFinCompany3YProptyP := MIN(H_CntFinCompany3YProptyP, CAP_999);     



//count property
// Policy: => PropertyID := PolicyProperty.Location;
// Report: => H_CntPropty := MAP(G_SetDefault1  => DEFAULT_1,
															// G_SetDefault3 => DEFAULT_3, 
															// COUNT(Policy(G_CountablePolicy){PropertyID}));

//Count for property
// I_CntPropty
// I_CntProptyHO
// I_CntPropty1Y
// I_CntPropty1YHO
// I_CntPropty3Y
// I_CntPropty3YHO
Policy: => PropertyID := PolicyProperty.Location;
Report: => H_CntPropty := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy).PropertyID{UID}));
Report: => I_CntPropty := MIN(H_CntPropty, CAP_999);

Report: => H_CntProptyHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID{UID}));
Report: => I_CntProptyHO := MIN(H_CntProptyHO, CAP_999);


Report: => H_CntPropty1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID{UID}));
Report: => I_CntPropty1Y := MIN(H_CntPropty1Y, CAP_999);

Report: => H_CntPropty1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID{UID}));
Report: => I_CntPropty1YHO := MIN(H_CntPropty1YHO, CAP_999);


Report: => H_CntPropty3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID{UID}));
Report: => I_CntPropty3Y := MIN(H_CntPropty3Y, CAP_999);

Report: => H_CntPropty3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID{UID}));
Report: => I_CntPropty3YHO := MIN(H_CntPropty3YHO, CAP_999);


// I_CntDistProptyType
// I_CntDistProptyType1Y
// I_CntDistProptyType3Y

PolicyProperty: => PropertyType := Coverages{PropertyType};
Policy: => H_PropertyType := PolicyProperty.PropertyType{PropertyType};
Report: => H_PropertyType := Policy(G_CountablePolicy).H_PropertyType{PropertyType};

Report: => H_CntDistProptyType := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType := MIN(H_CntDistProptyType, CAP_999);


Report: => H_CntDistProptyType1Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType1Y := MIN(H_CntDistProptyType1Y, CAP_999);


Report: => H_CntDistProptyType3Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType3Y := MIN(H_CntDistProptyType3Y, CAP_999);
							

//Count policy per property type
// I_CntPolProptyTypeOther
// I_CntPolProptyTypeOther1Y
// I_CntPolProptyTypeOther3Y
// I_CntPolProptyTypeOtherHO
// I_CntPolProptyTypeOther1YHO
// I_CntPolProptyTypeOther3YHO
Report: => H_CntPolProptyTypeOther := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypeOther := MIN(H_CntPolProptyTypeOther, CAP_999);

Report: => H_CntPolProptyTypeOtherHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND OthersProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypeOtherHO := MIN(H_CntPolProptyTypeOtherHO, CAP_999);


Report: => H_CntPolProptyTypeOther1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeOther1Y := MIN(H_CntPolProptyTypeOther1Y, CAP_999);

Report: => H_CntPolProptyTypeOther1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeOther1YHO := MIN(H_CntPolProptyTypeOther1YHO, CAP_999);


Report: => H_CntPolProptyTypeOther3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeOther3Y := MIN(H_CntPolProptyTypeOther3Y, CAP_999);

Report: => H_CntPolProptyTypeOther3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeOther3YHO := MIN(H_CntPolProptyTypeOther3YHO, CAP_999);


// I_CntPolProptyTypePrim
// I_CntPolProptyTypePrim1Y
// I_CntPolProptyTypePrim3Y
// I_CntPolProptyTypePrimHO
// I_CntPolProptyTypePrim1YHO
// I_CntPolProptyTypePrim3YHO
Report: => H_CntPolProptyTypePrim := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypePrim := MIN(H_CntPolProptyTypePrim, CAP_999);

Report: => H_CntPolProptyTypePrimHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypePrimHO := MIN(H_CntPolProptyTypePrimHO, CAP_999);


Report: => H_CntPolProptyTypePrim1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypePrim1Y := MIN(H_CntPolProptyTypePrim1Y, CAP_999);

Report: => H_CntPolProptyTypePrim1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypePrim1YHO := MIN(H_CntPolProptyTypePrim1YHO, CAP_999);


Report: => H_CntPolProptyTypePrim3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypePrim3Y := MIN(H_CntPolProptyTypePrim3Y, CAP_999);

Report: => H_CntPolProptyTypePrim3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypePrim3YHO := MIN(H_CntPolProptyTypePrim3YHO, CAP_999);

// I_CntPolProptyTypeSecond
// I_CntPolProptyTypeSecond1Y
// I_CntPolProptyTypeSecond3Y
// I_CntPolProptyTypeSecondHO
// I_CntPolProptyTypeSecond1YHO
// I_CntPolProptyTypeSecond3YHO
Report: => H_CntPolProptyTypeSecond := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypeSecond := MIN(H_CntPolProptyTypeSecond, CAP_999);

Report: => H_CntPolProptyTypeSecondHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypeSecondHO := MIN(H_CntPolProptyTypeSecondHO, CAP_999);


Report: => H_CntPolProptyTypeSecond1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeSecond1Y := MIN(H_CntPolProptyTypeSecond1Y, CAP_999);

Report: => H_CntPolProptyTypeSecond1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeSecond1YHO := MIN(H_CntPolProptyTypeSecond1YHO, CAP_999);


Report: => H_CntPolProptyTypeSecond3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeSecond3Y := MIN(H_CntPolProptyTypeSecond3Y, CAP_999);

Report: => H_CntPolProptyTypeSecond3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeSecond3YHO := MIN(H_CntPolProptyTypeSecond3YHO, CAP_999);

//Count policy type
Report: => H_CntDistPoltype := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy){PolicyType}));
Report: => I_CntDistPoltype := MIN(H_CntDistPoltype,CAP_999);																

Report: => H_CntDistPoltypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){PolicyType}));
Report: => I_CntDistPoltypeProptyP := MIN(H_CntDistPoltypeProptyP,CAP_999);

Report: => H_CntDistPoltype1Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype1Y := MIN(H_CntDistPoltype1Y,CAP_999);

Report: => H_CntDistPoltype1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype1YProptyP := MIN(H_CntDistPoltype1YProptyP,CAP_999);

Report: => H_CntDistPoltype3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype3Y := MIN(H_CntDistPoltype3Y,CAP_999);

Report: => H_CntDistPoltype3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype3YProptyP := MIN(H_CntDistPoltype3YProptyP,CAP_999);

//Count policy per Policy type
// I_CntPolOfHO
// I_CntPolOfHOProptyP
// I_CntPolOfHO1Y
// I_CntPolOfHO1YProptyP
// I_CntPolOfHO3Y
// I_CntPolOfHO3YProptyP
Report: => H_CntPolOfHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO := MIN(H_CntPolOfHO,CAP_999);                               

Report: => H_CntPolOfHOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHOProptyP := MIN(H_CntPolOfHOProptyP,CAP_999);

Report: => H_CntPolOfHO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO1Y := MIN(H_CntPolOfHO1Y,CAP_999);

Report: => H_CntPolOfHO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO1YProptyP := MIN(H_CntPolOfHO1YProptyP,CAP_999);

Report: => H_CntPolOfHO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO3Y := MIN(H_CntPolOfHO3Y,CAP_999);

Report: => H_CntPolOfHO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO3YProptyP := MIN(H_CntPolOfHO3YProptyP,CAP_999);
// I_CntPolOfCO
// I_CntPolOfCO1Y
// I_CntPolOfCO1YProptyP
// I_CntPolOfCO3Y
// I_CntPolOfCO3YProptyP
// I_CntPolOfCOProptyP
Report: => H_CntPolOfCO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO := MIN(H_CntPolOfCO,CAP_999);                               

Report: => H_CntPolOfCOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCOProptyP := MIN(H_CntPolOfCOProptyP,CAP_999);

Report: => H_CntPolOfCO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO1Y := MIN(H_CntPolOfCO1Y,CAP_999);

Report: => H_CntPolOfCO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO1YProptyP := MIN(H_CntPolOfCO1YProptyP,CAP_999);

Report: => H_CntPolOfCO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO3Y := MIN(H_CntPolOfCO3Y,CAP_999);

Report: => H_CntPolOfCO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO3YProptyP := MIN(H_CntPolOfCO3YProptyP,CAP_999);

// I_CntPolOfFL
// I_CntPolOfFL1Y
// I_CntPolOfFL1YProptyP
// I_CntPolOfFL3Y
// I_CntPolOfFL3YProptyP
// I_CntPolOfFLProptyP
Report: => H_CntPolOfFL := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL := MIN(H_CntPolOfFL,CAP_999);                               

Report: => H_CntPolOfFLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFLProptyP := MIN(H_CntPolOfFLProptyP,CAP_999);

Report: => H_CntPolOfFL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL1Y := MIN(H_CntPolOfFL1Y,CAP_999);

Report: => H_CntPolOfFL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL1YProptyP := MIN(H_CntPolOfFL1YProptyP,CAP_999);

Report: => H_CntPolOfFL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL3Y := MIN(H_CntPolOfFL3Y,CAP_999);

Report: => H_CntPolOfFL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL3YProptyP := MIN(H_CntPolOfFL3YProptyP,CAP_999);




// I_CntPolOfFR
// I_CntPolOfFR1Y
// I_CntPolOfFR1YProptyP
// I_CntPolOfFR3Y
// I_CntPolOfFR3YProptyP
// I_CntPolOfFRProptyP
Report: => H_CntPolOfFR := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR := MIN(H_CntPolOfFR,CAP_999);                               

Report: => H_CntPolOfFRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFRProptyP := MIN(H_CntPolOfFRProptyP,CAP_999);

Report: => H_CntPolOfFR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR1Y := MIN(H_CntPolOfFR1Y,CAP_999);

Report: => H_CntPolOfFR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR1YProptyP := MIN(H_CntPolOfFR1YProptyP,CAP_999);

Report: => H_CntPolOfFR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR3Y := MIN(H_CntPolOfFR3Y,CAP_999);

Report: => H_CntPolOfFR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR3YProptyP := MIN(H_CntPolOfFR3YProptyP,CAP_999);



// I_CntPolOfHL
// I_CntPolOfHL1Y
// I_CntPolOfHL1YProptyP
// I_CntPolOfHL3Y
// I_CntPolOfHL3YProptyP
// I_CntPolOfHLProptyP
Report: => H_CntPolOfHL := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL := MIN(H_CntPolOfHL,CAP_999);                               

Report: => H_CntPolOfHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHLProptyP := MIN(H_CntPolOfHLProptyP,CAP_999);

Report: => H_CntPolOfHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL1Y := MIN(H_CntPolOfHL1Y,CAP_999);

Report: => H_CntPolOfHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL1YProptyP := MIN(H_CntPolOfHL1YProptyP,CAP_999);

Report: => H_CntPolOfHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL3Y := MIN(H_CntPolOfHL3Y,CAP_999);

Report: => H_CntPolOfHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL3YProptyP := MIN(H_CntPolOfHL3YProptyP,CAP_999);


// I_CntPolOfIM
// I_CntPolOfIM1Y
// I_CntPolOfIM1YProptyP
// I_CntPolOfIM3Y
// I_CntPolOfIM3YProptyP
// I_CntPolOfIMProptyP
Report: => H_CntPolOfIM := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM := MIN(H_CntPolOfIM,CAP_999);                               

Report: => H_CntPolOfIMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIMProptyP := MIN(H_CntPolOfIMProptyP,CAP_999);

Report: => H_CntPolOfIM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM1Y := MIN(H_CntPolOfIM1Y,CAP_999);

Report: => H_CntPolOfIM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM1YProptyP := MIN(H_CntPolOfIM1YProptyP,CAP_999);

Report: => H_CntPolOfIM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM3Y := MIN(H_CntPolOfIM3Y,CAP_999);

Report: => H_CntPolOfIM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM3YProptyP := MIN(H_CntPolOfIM3YProptyP,CAP_999);




// I_CntPolOfMH
// I_CntPolOfMH1Y
// I_CntPolOfMH1YProptyP
// I_CntPolOfMH3Y
// I_CntPolOfMH3YProptyP
// I_CntPolOfMHProptyP
Report: => H_CntPolOfMH := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH := MIN(H_CntPolOfMH,CAP_999);                               

Report: => H_CntPolOfMHProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMHProptyP := MIN(H_CntPolOfMHProptyP,CAP_999);

Report: => H_CntPolOfMH1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH1Y := MIN(H_CntPolOfMH1Y,CAP_999);

Report: => H_CntPolOfMH1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH1YProptyP := MIN(H_CntPolOfMH1YProptyP,CAP_999);

Report: => H_CntPolOfMH3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH3Y := MIN(H_CntPolOfMH3Y,CAP_999);

Report: => H_CntPolOfMH3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH3YProptyP := MIN(H_CntPolOfMH3YProptyP,CAP_999);

// I_CntPolOfQK
// I_CntPolOfQK1Y
// I_CntPolOfQK1YProptyP
// I_CntPolOfQK3Y
// I_CntPolOfQK3YProptyP
// I_CntPolOfQKProptyP
Report: => H_CntPolOfQK := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK := MIN(H_CntPolOfQK,CAP_999);                               

Report: => H_CntPolOfQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQKProptyP := MIN(H_CntPolOfQKProptyP,CAP_999);

Report: => H_CntPolOfQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK1Y := MIN(H_CntPolOfQK1Y,CAP_999);

Report: => H_CntPolOfQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK1YProptyP := MIN(H_CntPolOfQK1YProptyP,CAP_999);

Report: => H_CntPolOfQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK3Y := MIN(H_CntPolOfQK3Y,CAP_999);

Report: => H_CntPolOfQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK3YProptyP := MIN(H_CntPolOfQK3YProptyP,CAP_999);



// I_CntPolOfRF
// I_CntPolOfRF1Y
// I_CntPolOfRF1YProptyP
// I_CntPolOfRF3Y
// I_CntPolOfRF3YProptyP
// I_CntPolOfRFProptyP
Report: => H_CntPolOfRF := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF := MIN(H_CntPolOfRF,CAP_999);                               

Report: => H_CntPolOfRFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRFProptyP := MIN(H_CntPolOfRFProptyP,CAP_999);

Report: => H_CntPolOfRF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF1Y := MIN(H_CntPolOfRF1Y,CAP_999);

Report: => H_CntPolOfRF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF1YProptyP := MIN(H_CntPolOfRF1YProptyP,CAP_999);

Report: => H_CntPolOfRF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF3Y := MIN(H_CntPolOfRF3Y,CAP_999);

Report: => H_CntPolOfRF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF3YProptyP := MIN(H_CntPolOfRF3YProptyP,CAP_999);




// I_CntPolOfTN
// I_CntPolOfTN1Y
// I_CntPolOfTN1YProptyP
// I_CntPolOfTN3Y
// I_CntPolOfTN3YProptyP
// I_CntPolOfTNProptyP
Report: => H_CntPolOfTN := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN := MIN(H_CntPolOfTN,CAP_999);                               

Report: => H_CntPolOfTNProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTNProptyP := MIN(H_CntPolOfTNProptyP,CAP_999);

Report: => H_CntPolOfTN1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN1Y := MIN(H_CntPolOfTN1Y,CAP_999);

Report: => H_CntPolOfTN1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN1YProptyP := MIN(H_CntPolOfTN1YProptyP,CAP_999);

Report: => H_CntPolOfTN3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN3Y := MIN(H_CntPolOfTN3Y,CAP_999);

Report: => H_CntPolOfTN3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN3YProptyP := MIN(H_CntPolOfTN3YProptyP,CAP_999);



// I_CntPolOfUM
// I_CntPolOfUM1Y
// I_CntPolOfUM1YProptyP
// I_CntPolOfUM3Y
// I_CntPolOfUM3YProptyP
// I_CntPolOfUMProptyP
Report: => H_CntPolOfUM := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM := MIN(H_CntPolOfUM,CAP_999);                               

Report: => H_CntPolOfUMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUMProptyP := MIN(H_CntPolOfUMProptyP,CAP_999);

Report: => H_CntPolOfUM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM1Y := MIN(H_CntPolOfUM1Y,CAP_999);

Report: => H_CntPolOfUM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM1YProptyP := MIN(H_CntPolOfUM1YProptyP,CAP_999);

Report: => H_CntPolOfUM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM3Y := MIN(H_CntPolOfUM3Y,CAP_999);

Report: => H_CntPolOfUM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM3YProptyP := MIN(H_CntPolOfUM3YProptyP,CAP_999);

// I_CntPolOfWC, WATERCRAFT AND BOAT
// I_CntPolOfWC1Y
// I_CntPolOfWC1YProptyP
// I_CntPolOfWC3Y
// I_CntPolOfWC3YProptyP
// I_CntPolOfWCProptyP
Report: => H_CntPolOfWC := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC := MIN(H_CntPolOfWC,CAP_999);                               

Report: => H_CntPolOfWCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWCProptyP := MIN(H_CntPolOfWCProptyP,CAP_999);

Report: => H_CntPolOfWC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC1Y := MIN(H_CntPolOfWC1Y,CAP_999);

Report: => H_CntPolOfWC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC1YProptyP := MIN(H_CntPolOfWC1YProptyP,CAP_999);

Report: => H_CntPolOfWC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC3Y := MIN(H_CntPolOfWC3Y,CAP_999);

Report: => H_CntPolOfWC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC3YProptyP := MIN(H_CntPolOfWC3YProptyP,CAP_999);

// I_CntPolOfXO
// I_CntPolOfXO1Y
// I_CntPolOfXO1YProptyP
// I_CntPolOfXO3Y
// I_CntPolOfXO3YProptyP
// I_CntPolOfXOProptyP
Report: => H_CntPolOfXO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO := MIN(H_CntPolOfXO,CAP_999);                               

Report: => H_CntPolOfXOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXOProptyP := MIN(H_CntPolOfXOProptyP,CAP_999);

Report: => H_CntPolOfXO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO1Y := MIN(H_CntPolOfXO1Y,CAP_999);

Report: => H_CntPolOfXO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO1YProptyP := MIN(H_CntPolOfXO1YProptyP,CAP_999);

Report: => H_CntPolOfXO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO3Y := MIN(H_CntPolOfXO3Y,CAP_999);

Report: => H_CntPolOfXO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO3YProptyP := MIN(H_CntPolOfXO3YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV1Y
// I_CntDistCOV1YHO
// I_CntDistCOV1YProptyP
// I_CntDistCOV3Y
// I_CntDistCOV3YHO
// I_CntDistCOV3YProptyP
// I_CntDistCOVHO
// I_CntDistCOVProptyP

// PolicyProperty: => CoverageTypes := Coverages{CoverageType};
PolicyProperty.Coverages: => MostRecentTerm := TOPN(Coverages{CoverageEndDate,CoverageStartDate},1,-CoverageEndDate, -CoverageStartDate);//keep the most recent term
PolicyProperty: => CoverageTypes := Coverages(CoverageEndDate = MostRecentTerm.CoverageEndDate AND CoverageStartDate = MostRecentTerm.CoverageStartDate){CoverageType};
Policy: => H_CovrageTypes := TOPN(PolicyProperty.CoverageTypes{CoverageType},100,CoverageType);
// Report: => H_CovrageTypes := Policy(G_CountablePolicy).H_CovrageTypes{CoverageType};

Report: => H_CntDistCOV := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV := MIN(H_CntDistCOV, CAP_999);		


Report: => H_CntDistCOVHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOVHO := MIN(H_CntDistCOVHO, CAP_999);   
 
Report: => H_CntDistCOVProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOVProptyP := MIN(H_CntDistCOVProptyP, CAP_999);    



Report: => H_CntDistCOV1Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1Y := MIN(H_CntDistCOV1Y, CAP_999);    


Report: => H_CntDistCOV1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1YHO := MIN(H_CntDistCOV1YHO, CAP_999);   
 
Report: => H_CntDistCOV1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1YProptyP := MIN(H_CntDistCOV1YProptyP, CAP_999);    


Report: => H_CntDistCOV3Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3Y := MIN(H_CntDistCOV3Y, CAP_999);    


Report: => H_CntDistCOV3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3YHO := MIN(H_CntDistCOV3YHO, CAP_999);   
 
Report: => H_CntDistCOV3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3YProptyP := MIN(H_CntDistCOV3YProptyP, CAP_999);    




//Coverage package:
// I_CntDistPackageType
// I_CntDistPackageTypeHO
// I_CntDistPackageTypeProptyP
// I_CntDistPackageType1Y
// I_CntDistPackageType1YHO
// I_CntDistPackageType1YProptyP
// I_CntDistPackageType3Y
// I_CntDistPackageType3YHO
// I_CntDistPackageType3YProptyP

// Step 1.) Pull out the unique coverage types on this PolicyProperty record
// PolicyProperty: => CoverageTypes := Coverages{CoverageType};

PolicyProperty: => CoverageTypesDelimited := CONCAT(TOPN(CoverageTypes{CoverageType}, 100, CoverageType), ','); // Convert the CoverageTypes set into a single string
Policy: => H_CoverageTypesDelimited := PolicyProperty{CoverageTypesDelimited};


// Step 2.) Pull out the unique coverage types across all linked PolicyProperty records
// Policy: => CoverageTypes := PolicyProperty.CoverageTypes{CoverageType};
//Policy: => CoveragePackage := CONCAT(H_CovrageTypes, ',');
// Policy: => CoveragePackageDelimited := CONCAT(H_CoverageTypesDelimited, ',');

// Step 3.) Pull out the unique coverage types across all linked Policies for this Report
// Report: => CoverageTypes := Policy.CoverageTypes{CoverageType};
//Report: => CoveragePackages := Policy(G_CountablePolicy){CoveragePackage};
//Report: => CoveragePackagesHO := Policy(G_CountablePolicy AND G_HOPolicy){CoveragePackage};
//Report: => CoveragePackagesProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty){CoveragePackage};

// := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages := TOPN(Policy(G_CountablePolicy).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackagesHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackagesProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages1Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages1YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages1YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages3Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages3YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages3YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);


// Report: => HCntDistCov := COUNT(CoverageTypes);
Report: => H_CntDistPackageType := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault3 => DEFAULT_3, 
																				// COUNT(Policy(G_CountablePolicy){H_CoverageTypesDelimited}));
																				COUNT(G_CoveragePackages));
Report: => I_CntDistPackageType := MIN(H_CntDistPackageType, CAP_999);

Report: => H_CntDistPackageTypeHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																				// COUNT(Policy(G_CountablePolicy AND G_HOPolicy){H_CoverageTypesDelimited}));
																				COUNT(G_CoveragePackagesHO));
Report: => I_CntDistPackageTypeHO := MIN(H_CntDistPackageTypeHO, CAP_999);

Report: => H_CntDistPackageTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){H_CoverageTypesDelimited}));
Report: => I_CntDistPackageTypeProptyP := MIN(H_CntDistPackageTypeProptyP, CAP_999);

Report: => H_CntDistPackageType1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages1Y));
Report: => I_CntDistPackageType1Y := MIN(H_CntDistPackageType1Y, CAP_999);

Report: => H_CntDistPackageType1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages1YHO));
Report: => I_CntDistPackageType1YHO := MIN(H_CntDistPackageType1YHO, CAP_999);

Report: => H_CntDistPackageType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages1YProptyP));
Report: => I_CntDistPackageType1YProptyP := MIN(H_CntDistPackageType1YProptyP, CAP_999);

Report: => H_CntDistPackageType3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages3Y));
Report: => I_CntDistPackageType3Y := MIN(H_CntDistPackageType3Y, CAP_999);

Report: => H_CntDistPackageType3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages3YHO));
Report: => I_CntDistPackageType3YHO := MIN(H_CntDistPackageType3YHO, CAP_999);

Report: => H_CntDistPackageType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages3YProptyP));
Report: => I_CntDistPackageType3YProptyP := MIN(H_CntDistPackageType3YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy){RiskType}));
Report: => I_CntDistRisk := MIN(H_CntDistRisk, CAP_999);

Report: => H_CntDistRiskHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy){RiskType}));
Report: => I_CntDistRiskHO := MIN(H_CntDistRiskHO, CAP_999);

Report: => H_CntDistRiskProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){RiskType}));
Report: => I_CntDistRiskProptyP := MIN(H_CntDistRiskProptyP, CAP_999);

Report: => H_CntDistRisk1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1Y := MIN(H_CntDistRisk1Y, CAP_999);

Report: => H_CntDistRisk1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1YHO := MIN(H_CntDistRisk1YHO, CAP_999);

Report: => H_CntDistRisk1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1YProptyP := MIN(H_CntDistRisk1YProptyP, CAP_999);

Report: => H_CntDistRisk3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3Y := MIN(H_CntDistRisk3Y, CAP_999);

Report: => H_CntDistRisk3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3YHO := MIN(H_CntDistRisk3YHO, CAP_999);

Report: => H_CntDistRisk3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3YProptyP := MIN(H_CntDistRisk3YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard := MIN(H_CntPolRiskStandard, CAP_999);

Report: => H_CntPolRiskStandardHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND RiskTypeStandard)));
Report: => I_CntPolRiskStandardHO := MIN(H_CntPolRiskStandardHO, CAP_999);

Report: => H_CntPolRiskStandardProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND RiskTypeStandard)));
Report: => I_CntPolRiskStandardProptyP := MIN(H_CntPolRiskStandardProptyP, CAP_999);

Report: => H_CntPolRiskStandard1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard1Y := MIN(H_CntPolRiskStandard1Y, CAP_999);

Report: => H_CntPolRiskStandard1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard1YHO := MIN(H_CntPolRiskStandard1YHO, CAP_999);

Report: => H_CntPolRiskStandard1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard1YProptyP := MIN(H_CntPolRiskStandard1YProptyP, CAP_999);

Report: => H_CntPolRiskStandard3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard3Y := MIN(H_CntPolRiskStandard3Y, CAP_999);

Report: => H_CntPolRiskStandard3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard3YHO := MIN(H_CntPolRiskStandard3YHO, CAP_999);

Report: => H_CntPolRiskStandard3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeStandard)));
Report: => I_CntPolRiskStandard3YProptyP := MIN(H_CntPolRiskStandard3YProptyP, CAP_999);


//RiskTypePreferred
Report: => H_CntPolRiskPreferred := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred := MIN(H_CntPolRiskPreferred, CAP_999);

Report: => H_CntPolRiskPreferredHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferredHO := MIN(H_CntPolRiskPreferredHO, CAP_999);

Report: => H_CntPolRiskPreferredProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferredProptyP := MIN(H_CntPolRiskPreferredProptyP, CAP_999);

Report: => H_CntPolRiskPreferred1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1Y := MIN(H_CntPolRiskPreferred1Y, CAP_999);

Report: => H_CntPolRiskPreferred1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1YHO := MIN(H_CntPolRiskPreferred1YHO, CAP_999);

Report: => H_CntPolRiskPreferred1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1YProptyP := MIN(H_CntPolRiskPreferred1YProptyP, CAP_999);

Report: => H_CntPolRiskPreferred3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3Y := MIN(H_CntPolRiskPreferred3Y, CAP_999);

Report: => H_CntPolRiskPreferred3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3YHO := MIN(H_CntPolRiskPreferred3YHO, CAP_999);

Report: => H_CntPolRiskPreferred3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3YProptyP := MIN(H_CntPolRiskPreferred3YProptyP, CAP_999);

//RiskTypeOthers
Report: => H_CntPolRiskOthers := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers := MIN(H_CntPolRiskOthers, CAP_999);

Report: => H_CntPolRiskOthersHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND RiskTypeOthers)));
Report: => I_CntPolRiskOthersHO := MIN(H_CntPolRiskOthersHO, CAP_999);

Report: => H_CntPolRiskOthersProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND RiskTypeOthers)));
Report: => I_CntPolRiskOthersProptyP := MIN(H_CntPolRiskOthersProptyP, CAP_999);

Report: => H_CntPolRiskOthers1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers1Y := MIN(H_CntPolRiskOthers1Y, CAP_999);

Report: => H_CntPolRiskOthers1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers1YHO := MIN(H_CntPolRiskOthers1YHO, CAP_999);

Report: => H_CntPolRiskOthers1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers1YProptyP := MIN(H_CntPolRiskOthers1YProptyP, CAP_999);

Report: => H_CntPolRiskOthers3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers3Y := MIN(H_CntPolRiskOthers3Y, CAP_999);

Report: => H_CntPolRiskOthers3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers3YHO := MIN(H_CntPolRiskOthers3YHO, CAP_999);

Report: => H_CntPolRiskOthers3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND RiskTypeOthers)));
Report: => I_CntPolRiskOthers3YProptyP := MIN(H_CntPolRiskOthers3YProptyP, CAP_999);


//Flood Zone. true 0, there is no flood zone indicator
Policy: => ExistFLZone := EXISTS(PolicyProperty.Coverages(NOT FloodZone:Null));
Report: => H_CntFloodZonePol := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND ExistFLZone)));
Report: => I_CntFloodZonePol := MIN(H_CntFloodZonePol, CAP_999);

Report: => H_CntFloodZonePolProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND ExistFLZone AND G_PrimaryProperty)));
Report: => I_CntFloodZonePolProptyP := MIN(H_CntFloodZonePolProptyP, CAP_999);


Report: => H_CntFloodZonePol1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND ExistFLZone AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol1Y := MIN(H_CntFloodZonePol1Y, CAP_999);

Report: => H_CntFloodZonePol1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol1YProptyP := MIN(H_CntFloodZonePol1YProptyP, CAP_999);

Report: => H_CntFloodZonePol3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND ExistFLZone AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol3Y := MIN(H_CntFloodZonePol3Y, CAP_999);

Report: => H_CntFloodZonePol3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol3YProptyP := MIN(H_CntFloodZonePol3YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType1Y
// I_CntFloodZoneType1YProptyP
// I_CntFloodZoneType3Y
// I_CntFloodZoneType3YProptyP
// I_CntFloodZoneTypeProptyP

PolicyProperty: => FloodZone := Coverages{FloodZone};
Policy: => H_FloodZone := PolicyProperty.FloodZone{FloodZone};
Report: => H_FloodZone := Policy(G_CountablePolicy).H_FloodZone{FloodZone};

Report: => H_CntFloodZoneType := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType := MIN(H_CntFloodZoneType, CAP_999);


Report: => H_CntFloodZoneTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneTypeProptyP := MIN(H_CntFloodZoneTypeProptyP, CAP_999);


Report: => H_CntFloodZoneType1Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType1Y := MIN(H_CntFloodZoneType1Y, CAP_999);


Report: => H_CntFloodZoneType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType1YProptyP := MIN(H_CntFloodZoneType1YProptyP, CAP_999);


Report: => H_CntFloodZoneType3Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType3Y := MIN(H_CntFloodZoneType3Y, CAP_999);


Report: => H_CntFloodZoneType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType3YProptyP := MIN(H_CntFloodZoneType3YProptyP, CAP_999);


//Deduct
// R_AvgOverallDeduct
// R_AvgOverallDeduct1Y
// R_AvgOverallDeduct1YHO
// R_AvgOverallDeduct1YProptyP
// R_AvgOverallDeduct3Y
// R_AvgOverallDeduct3YHO
// R_AvgOverallDeduct3YProptyP
// R_AvgOverallDeductHO
// R_AvgOverallDeductProptyP

// R_AvgTheftDeduct
// R_AvgTheftDeductHO
// R_AvgTheftDeductProptyP
// R_AvgTheftDeduct1Y
// R_AvgTheftDeduct1YHO
// R_AvgTheftDeduct1YProptyP
// R_AvgTheftDeduct3Y
// R_AvgTheftDeduct3YHO
// R_AvgTheftDeduct3YProptyP


//pull the theft ductible / overall deductible of most recent coverage for one property
// PolicyProperty: => TheftDeductible := ONLY(TOPN(Coverages{TheftDeductible,CoverageEndDate,CoverageStartDate},1,-CoverageEndDate,-CoverageStartDate)).TheftDeductible;
PolicyProperty: => TheftDeductible := ONLY(TOPN(Coverages{TheftDeductible,CoverageEndDate,CoverageStartDate},1,-CoverageEndDate,-CoverageStartDate),TheftDeductible);
PolicyProperty: => OverallDeductible := ONLY(TOPN(Coverages,1,-CoverageEndDate,-CoverageStartDate),OverallDeductible);

// PolicyProperty: => IndividualLimit := TOPN(Coverages,1,-CoverageEndDate,-CoverageStartDate);

//average value to policy level, if multiple properties in a single policy
Policy: => TheftDeductible := AVE(PolicyProperty, TheftDeductible);
Policy: => OverallDeductible := AVE(PolicyProperty, OverallDeductible);

Report: => G_SetDefault4TheftDeduct := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null));
Report: => G_SetDefault4OverallDeduct := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null));

Report: => G_SetDefault4TheftDeduct1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4TheftDeductHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy));
Report: => G_SetDefault4OverallDeductHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy));

Report: => G_SetDefault4TheftDeduct1YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4TheftDeductProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty));
Report: => G_SetDefault4OverallDeductProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty));

Report: => G_SetDefault4TheftDeduct1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));


Report: => H_AvgTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy),TheftDeductible));
Report: => R_AvgTheftDeduct := MIN(H_AvgTheftDeduct, CAP_99999999);

Report: => H_AvgTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																	G_SetDefault4TheftDeductHO => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy AND G_HOPolicy),TheftDeductible));
Report: => R_AvgTheftDeductHO := MIN(H_AvgTheftDeductHO, CAP_99999999);

Report: => H_AvgTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																	G_SetDefault4TheftDeductProptyP => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy AND G_PrimaryProperty),TheftDeductible));
Report: => R_AvgTheftDeductProptyP := MIN(H_AvgTheftDeductProptyP, CAP_99999999);

Report: => H_AvgTheftDeduct1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct1Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1Y := MIN(H_AvgTheftDeduct1Y, CAP_99999999);

Report: => H_AvgTheftDeduct1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																	G_SetDefault4TheftDeduct1YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1YHO := MIN(H_AvgTheftDeduct1YHO, CAP_99999999);

Report: => H_AvgTheftDeduct1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeduct1YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1YProptyP := MIN(H_AvgTheftDeduct1YProptyP, CAP_99999999);


Report: => H_AvgTheftDeduct3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3Y := MIN(H_AvgTheftDeduct3Y, CAP_99999999);

Report: => H_AvgTheftDeduct3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3YHO := MIN(H_AvgTheftDeduct3YHO, CAP_99999999);

Report: => H_AvgTheftDeduct3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3YProptyP := MIN(H_AvgTheftDeduct3YProptyP, CAP_99999999);



Report: => H_AvgOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),OverallDeductible));
Report: => R_AvgOverallDeduct := MIN(H_AvgOverallDeduct, CAP_99999999);

Report: => H_AvgOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy),OverallDeductible));
Report: => R_AvgOverallDeductHO := MIN(H_AvgOverallDeductHO, CAP_99999999);

Report: => H_AvgOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty),OverallDeductible));
Report: => R_AvgOverallDeductProptyP := MIN(H_AvgOverallDeductProptyP, CAP_99999999);

Report: => H_AvgOverallDeduct1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1Y := MIN(H_AvgOverallDeduct1Y, CAP_99999999);

Report: => H_AvgOverallDeduct1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1YHO := MIN(H_AvgOverallDeduct1YHO, CAP_99999999);

Report: => H_AvgOverallDeduct1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1YProptyP := MIN(H_AvgOverallDeduct1YProptyP, CAP_99999999);


Report: => H_AvgOverallDeduct3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3Y := MIN(H_AvgOverallDeduct3Y, CAP_99999999);

Report: => H_AvgOverallDeduct3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4OverallDeduct3YHO => DEFAULT_4,  
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3YHO := MIN(H_AvgOverallDeduct3YHO, CAP_99999999);

Report: => H_AvgOverallDeduct3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeduct3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3YProptyP := MIN(H_AvgOverallDeduct3YProptyP, CAP_99999999);



// R_MaxOverallDeduct
// R_MaxOverallDeductHO
// R_MaxOverallDeductProptyP
// R_MaxTheftDeduct
// R_MaxTheftDeductHO
// R_MaxTheftDeductProptyP
// R_MinOverallDeduct
// R_MinOverallDeductHO
// R_MinOverallDeductProptyP
// R_MinTheftDeduct
// R_MinTheftDeductHO
// R_MinTheftDeductProptyP

Report: => H_MinOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),OverallDeductible));
Report: => R_MinOverallDeduct := MIN(H_MinOverallDeduct, CAP_99999999);

Report: => H_MinOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_HOPolicy),OverallDeductible));
Report: => R_MinOverallDeductHO := MIN(H_MinOverallDeductHO, CAP_99999999);

Report: => H_MinOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_PrimaryProperty),OverallDeductible));
Report: => R_MinOverallDeductProptyP := MIN(H_MinOverallDeductProptyP, CAP_99999999);

Report: => H_MinTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),TheftDeductible));
Report: => R_MinTheftDeduct := MIN(H_MinTheftDeduct, CAP_99999999);

Report: => H_MinTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeductHO => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_HOPolicy),TheftDeductible));
Report: => R_MinTheftDeductHO := MIN(H_MinTheftDeductHO, CAP_99999999);

Report: => H_MinTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeductProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_PrimaryProperty),TheftDeductible));
Report: => R_MinTheftDeductProptyP := MIN(H_MinTheftDeductProptyP, CAP_99999999);


Report: => H_MaxOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),OverallDeductible));
Report: => R_MaxOverallDeduct := MIN(H_MaxOverallDeduct, CAP_99999999);

Report: => H_MaxOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_HOPolicy),OverallDeductible));
Report: => R_MaxOverallDeductHO := MIN(H_MaxOverallDeductHO, CAP_99999999);

Report: => H_MaxOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_PrimaryProperty),OverallDeductible));
Report: => R_MaxOverallDeductProptyP := MIN(H_MaxOverallDeductProptyP, CAP_99999999);

Report: => H_MaxTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),TheftDeductible));
Report: => R_MaxTheftDeduct := MIN(H_MaxTheftDeduct, CAP_99999999);

Report: => H_MaxTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeductHO => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_HOPolicy),TheftDeductible));
Report: => R_MaxTheftDeductHO := MIN(H_MaxTheftDeductHO, CAP_99999999);

Report: => H_MaxTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeductProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_PrimaryProperty),TheftDeductible));
Report: => R_MaxTheftDeductProptyP := MIN(H_MaxTheftDeductProptyP, CAP_99999999);



//Limit attributes assume that Scoring team will drop the property that was removed before policy ends and also keep the most recent policy term/coverage for each property
// PolicyProperty.Coverages: => MostRecentTerm := TOPN(Coverages,1,-CoverageEndDate, -CoverageStartDate);//keep the most recent term
PolicyProperty: => MostRecentTermPerProperty := Coverages(CoverageEndDate = MostRecentTerm.CoverageEndDate AND CoverageStartDate = MostRecentTerm.CoverageStartDate);//keep the most recent term
//step 2, average the IndividualLimit of all coverage types
PolicyProperty: => AvgIndividualLimit := AVE(MostRecentTermPerProperty,IndividualLimit);
//step3, average the AvgIndividualLimit to policy level, if multiple properties exist, then take average
Policy: => AvgIndividualLimit := AVE(PolicyProperty,AvgIndividualLimit);
// Policy: => H_AvgIndividualLimit := PolicyProperty.IndividualLimit{CoverageType,AvgIndividualLimit};


// Report: => G_SetDefault4IndLimit := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimit:Null));
Report: => G_SetDefault4IndLimit := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null));

Report: => G_SetDefault4IndLimit1Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy));

Report: => G_SetDefault4IndLimit1YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimit1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

//Coverage limit for policy type is flood
// R_AvgFLIndivLimit
// R_AvgFLIndivLimitProptyP
// R_AvgFLIndivLimit1Y
// R_AvgFLIndivLimit1YProptyP
// R_AvgFLIndivLimit3Y
// R_AvgFLIndivLimit3YProptyP
Report: => H_AvgFLIndivLimit := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit := MIN(H_AvgFLIndivLimit, CAP_99999999);

Report: => H_AvgFLIndivLimitProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4IndLimitProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty),AvgIndividualLimit));
Report: => R_AvgFLIndivLimitProptyP := MIN(H_AvgFLIndivLimitProptyP, CAP_99999999);


//Coverage limit for each coverage type
// R_AvgIndivLimitBUSP
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP1Y
// R_AvgIndivLimitBUSP1YProptyP
// R_AvgIndivLimitBUSP3Y
// R_AvgIndivLimitBUSP3YProptyP

// R_MaxIndivLimitBUSP
// R_MaxIndivLimitBUSPProptyP
// R_MinIndivLimitBUSP
// R_MinIndivLimitBUSPProptyP
PolicyProperty: => AvgIndividualLimitBUSP := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_BUSP),IndividualLimit);
Policy: => AvgIndividualLimitBUSP := AVE(PolicyProperty,AvgIndividualLimitBUSP);

// Report: => G_SetDefault4IndLimitBUSP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null));
Report: => G_SetDefault4IndLimitBUSP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null));

Report: => G_SetDefault4IndLimitBUSP1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitBUSP3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitBUSPProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitBUSP1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitBUSP3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MaxIndivLimitBUSP := MIN(H_MaxIndivLimitBUSP, CAP_99999999);

Report: => H_MaxIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSPProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MaxIndivLimitBUSPProptyP := MIN(H_MaxIndivLimitBUSPProptyP, CAP_99999999);

Report: => H_MinIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MinIndivLimitBUSP := MIN(H_MinIndivLimitBUSP, CAP_99999999);

Report: => H_MinIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MinIndivLimitBUSPProptyP := MIN(H_MinIndivLimitBUSPProptyP, CAP_99999999);


Report: => H_AvgIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP := MIN(H_AvgIndivLimitBUSP, CAP_99999999);

Report: => H_AvgIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSPProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSPProptyP := MIN(H_AvgIndivLimitBUSPProptyP, CAP_99999999);


Report: => H_AvgIndivLimitBUSP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP1Y := MIN(H_AvgIndivLimitBUSP1Y, CAP_99999999);

Report: => H_AvgIndivLimitBUSP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4IndLimitBUSP1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP1YProptyP := MIN(H_AvgIndivLimitBUSP1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitBUSP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP3Y := MIN(H_AvgIndivLimitBUSP3Y, CAP_99999999);

Report: => H_AvgIndivLimitBUSP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP3YProptyP := MIN(H_AvgIndivLimitBUSP3YProptyP, CAP_99999999);

// R_AvgIndivLimitCovA
// R_AvgIndivLimitCovA1Y
// R_AvgIndivLimitCovA1YHO
// R_AvgIndivLimitCovA1YProptyP
// R_AvgIndivLimitCovA3Y
// R_AvgIndivLimitCovA3YHO
// R_AvgIndivLimitCovA3YProptyP
// R_AvgIndivLimitCovAHO
// R_AvgIndivLimitCovAProptyP


PolicyProperty: => AvgIndividualLimitCOVA := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVA),IndividualLimit);
Policy: => AvgIndividualLimitCOVA := AVE(PolicyProperty,AvgIndividualLimitCOVA);

Report: => G_SetDefault4IndLimitCOVA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null));

// Report: => G_SetDefault4IndLimitCOVA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null));

Report: => G_SetDefault4IndLimitCOVA1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVA3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVAProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVA1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVA3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MaxIndivLimitCOVA := MIN(H_MaxIndivLimitCOVA, CAP_99999999);

Report: => H_MaxIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVAProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MaxIndivLimitCOVAProptyP := MIN(H_MaxIndivLimitCOVAProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MinIndivLimitCOVA := MIN(H_MinIndivLimitCOVA, CAP_99999999);

Report: => H_MinIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MinIndivLimitCOVAProptyP := MIN(H_MinIndivLimitCOVAProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA := MIN(H_AvgIndivLimitCOVA, CAP_99999999);

Report: => H_AvgIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVAProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVAProptyP := MIN(H_AvgIndivLimitCOVAProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVA1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA1Y := MIN(H_AvgIndivLimitCOVA1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA1YProptyP := MIN(H_AvgIndivLimitCOVA1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVA3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA3Y := MIN(H_AvgIndivLimitCOVA3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                          G_SetDefault4IndLimitCOVA3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA3YProptyP := MIN(H_AvgIndivLimitCOVA3YProptyP, CAP_99999999);

// R_AvgIndivLimitCovB
// R_AvgIndivLimitCovB1Y
// R_AvgIndivLimitCovB1YHO
// R_AvgIndivLimitCovB1YProptyP
// R_AvgIndivLimitCovB3Y
// R_AvgIndivLimitCovB3YHO
// R_AvgIndivLimitCovB3YProptyP
// R_AvgIndivLimitCovBHO
// R_AvgIndivLimitCovBProptyP

PolicyProperty: => AvgIndividualLimitCOVB := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVB),IndividualLimit);
Policy: => AvgIndividualLimitCOVB := AVE(PolicyProperty,AvgIndividualLimitCOVB);

Report: => G_SetDefault4IndLimitCOVB := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null));
// Report: => G_SetDefault4IndLimitCOVB := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null));

Report: => G_SetDefault4IndLimitCOVB1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVB3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVBProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVB1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVB3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MaxIndivLimitCOVB := MIN(H_MaxIndivLimitCOVB, CAP_99999999);

Report: => H_MaxIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVBProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MaxIndivLimitCOVBProptyP := MIN(H_MaxIndivLimitCOVBProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MinIndivLimitCOVB := MIN(H_MinIndivLimitCOVB, CAP_99999999);

Report: => H_MinIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MinIndivLimitCOVBProptyP := MIN(H_MinIndivLimitCOVBProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB := MIN(H_AvgIndivLimitCOVB, CAP_99999999);

Report: => H_AvgIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVBProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVBProptyP := MIN(H_AvgIndivLimitCOVBProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVB1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB1Y := MIN(H_AvgIndivLimitCOVB1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVB1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB1YProptyP := MIN(H_AvgIndivLimitCOVB1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVB3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB3Y := MIN(H_AvgIndivLimitCOVB3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVB3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                          G_SetDefault4IndLimitCOVB3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB3YProptyP := MIN(H_AvgIndivLimitCOVB3YProptyP, CAP_99999999);


// Report: => H_MaxIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MaxIndivLimitCOVB := MIN(H_MaxIndivLimitCOVB, CAP_99999999);

// Report: => H_MaxIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MaxIndivLimitCOVBProptyP := MIN(H_MaxIndivLimitCOVBProptyP, CAP_99999999);

// Report: => H_MinIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MinIndivLimitCOVB := MIN(H_MinIndivLimitCOVB, CAP_99999999);

// Report: => H_MinIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MinIndivLimitCOVBProptyP := MIN(H_MinIndivLimitCOVBProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB := MIN(H_AvgIndivLimitCOVB, CAP_99999999);

// Report: => H_AvgIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVBProptyP := MIN(H_AvgIndivLimitCOVBProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVB1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB1Y := MIN(H_AvgIndivLimitCOVB1Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVB1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB1YProptyP := MIN(H_AvgIndivLimitCOVB1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitCOVB3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB3Y := MIN(H_AvgIndivLimitCOVB3Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVB3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB3YProptyP := MIN(H_AvgIndivLimitCOVB3YProptyP, CAP_99999999);


// R_AvgIndivLimitCovC
// R_AvgIndivLimitCovC1Y
// R_AvgIndivLimitCovC1YHO
// R_AvgIndivLimitCovC1YProptyP
// R_AvgIndivLimitCovC3Y
// R_AvgIndivLimitCovC3YHO
// R_AvgIndivLimitCovC3YProptyP
// R_AvgIndivLimitCovCHO
// R_AvgIndivLimitCovCProptyP
PolicyProperty: => AvgIndividualLimitCOVC := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVC),IndividualLimit);
Policy: => AvgIndividualLimitCOVC := AVE(PolicyProperty,AvgIndividualLimitCOVC);

Report: => G_SetDefault4IndLimitCOVC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null));
// Report: => G_SetDefault4IndLimitCOVC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null));

Report: => G_SetDefault4IndLimitCOVC1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVC3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVCProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVC1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVC3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MaxIndivLimitCOVC := MIN(H_MaxIndivLimitCOVC, CAP_99999999);

Report: => H_MaxIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVCProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MaxIndivLimitCOVCProptyP := MIN(H_MaxIndivLimitCOVCProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MinIndivLimitCOVC := MIN(H_MinIndivLimitCOVC, CAP_99999999);

Report: => H_MinIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MinIndivLimitCOVCProptyP := MIN(H_MinIndivLimitCOVCProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC := MIN(H_AvgIndivLimitCOVC, CAP_99999999);

Report: => H_AvgIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVCProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVCProptyP := MIN(H_AvgIndivLimitCOVCProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC1Y := MIN(H_AvgIndivLimitCOVC1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC1YProptyP := MIN(H_AvgIndivLimitCOVC1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC3Y := MIN(H_AvgIndivLimitCOVC3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVC3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC3YProptyP := MIN(H_AvgIndivLimitCOVC3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MaxIndivLimitCOVC := MIN(H_MaxIndivLimitCOVC, CAP_99999999);

// Report: => H_MaxIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MaxIndivLimitCOVCProptyP := MIN(H_MaxIndivLimitCOVCProptyP, CAP_99999999);

// Report: => H_MinIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MinIndivLimitCOVC := MIN(H_MinIndivLimitCOVC, CAP_99999999);

// Report: => H_MinIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MinIndivLimitCOVCProptyP := MIN(H_MinIndivLimitCOVCProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC := MIN(H_AvgIndivLimitCOVC, CAP_99999999);

// Report: => H_AvgIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVCProptyP := MIN(H_AvgIndivLimitCOVCProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC1Y := MIN(H_AvgIndivLimitCOVC1Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC1YProptyP := MIN(H_AvgIndivLimitCOVC1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitCOVC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC3Y := MIN(H_AvgIndivLimitCOVC3Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC3YProptyP := MIN(H_AvgIndivLimitCOVC3YProptyP, CAP_99999999);

// R_AvgIndivLimitCovD
// R_AvgIndivLimitCovD1Y
// R_AvgIndivLimitCovD1YHO
// R_AvgIndivLimitCovD1YProptyP
// R_AvgIndivLimitCovD3Y
// R_AvgIndivLimitCovD3YHO
// R_AvgIndivLimitCovD3YProptyP
// R_AvgIndivLimitCovDHO
// R_AvgIndivLimitCovDProptyP
PolicyProperty: => AvgIndividualLimitCOVD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVD),IndividualLimit);
Policy: => AvgIndividualLimitCOVD := AVE(PolicyProperty,AvgIndividualLimitCOVD);

Report: => G_SetDefault4IndLimitCOVD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null));

Report: => G_SetDefault4IndLimitCOVD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MaxIndivLimitCOVD := MIN(H_MaxIndivLimitCOVD, CAP_99999999);

Report: => H_MaxIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MaxIndivLimitCOVDProptyP := MIN(H_MaxIndivLimitCOVDProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MinIndivLimitCOVD := MIN(H_MinIndivLimitCOVD, CAP_99999999);

Report: => H_MinIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MinIndivLimitCOVDProptyP := MIN(H_MinIndivLimitCOVDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD := MIN(H_AvgIndivLimitCOVD, CAP_99999999);

Report: => H_AvgIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVDProptyP := MIN(H_AvgIndivLimitCOVDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD1Y := MIN(H_AvgIndivLimitCOVD1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD1YProptyP := MIN(H_AvgIndivLimitCOVD1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD3Y := MIN(H_AvgIndivLimitCOVD3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD3YProptyP := MIN(H_AvgIndivLimitCOVD3YProptyP, CAP_99999999);

// Report: => G_SetDefault4IndLimitCOVD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null));

// Report: => H_MaxIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MaxIndivLimitCOVD := MIN(H_MaxIndivLimitCOVD, CAP_99999999);

// Report: => H_MaxIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MaxIndivLimitCOVDProptyP := MIN(H_MaxIndivLimitCOVDProptyP, CAP_99999999);

// Report: => H_MinIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MinIndivLimitCOVD := MIN(H_MinIndivLimitCOVD, CAP_99999999);

// Report: => H_MinIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MinIndivLimitCOVDProptyP := MIN(H_MinIndivLimitCOVDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD := MIN(H_AvgIndivLimitCOVD, CAP_99999999);

// Report: => H_AvgIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVDProptyP := MIN(H_AvgIndivLimitCOVDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD1Y := MIN(H_AvgIndivLimitCOVD1Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD1YProptyP := MIN(H_AvgIndivLimitCOVD1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitCOVD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD3Y := MIN(H_AvgIndivLimitCOVD3Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD3YProptyP := MIN(H_AvgIndivLimitCOVD3YProptyP, CAP_99999999);

// R_AvgIndivLimitCovE
// R_AvgIndivLimitCovE1Y
// R_AvgIndivLimitCovE1YHO
// R_AvgIndivLimitCovE1YProptyP
// R_AvgIndivLimitCovE3Y
// R_AvgIndivLimitCovE3YHO
// R_AvgIndivLimitCovE3YProptyP
// R_AvgIndivLimitCovEHO
// R_AvgIndivLimitCovEProptyP
PolicyProperty: => AvgIndividualLimitCOVE := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVE),IndividualLimit);
Policy: => AvgIndividualLimitCOVE := AVE(PolicyProperty,AvgIndividualLimitCOVE);

Report: => G_SetDefault4IndLimitCOVE := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null));
// Report: => G_SetDefault4IndLimitCOVE := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null));

Report: => G_SetDefault4IndLimitCOVE1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVE3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVEProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVE1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVE3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MaxIndivLimitCOVE := MIN(H_MaxIndivLimitCOVE, CAP_99999999);

Report: => H_MaxIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVEProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MaxIndivLimitCOVEProptyP := MIN(H_MaxIndivLimitCOVEProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MinIndivLimitCOVE := MIN(H_MinIndivLimitCOVE, CAP_99999999);

Report: => H_MinIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MinIndivLimitCOVEProptyP := MIN(H_MinIndivLimitCOVEProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE := MIN(H_AvgIndivLimitCOVE, CAP_99999999);

Report: => H_AvgIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVEProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVEProptyP := MIN(H_AvgIndivLimitCOVEProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVE1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE1Y := MIN(H_AvgIndivLimitCOVE1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVE1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE1YProptyP := MIN(H_AvgIndivLimitCOVE1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVE3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE3Y := MIN(H_AvgIndivLimitCOVE3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVE3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVE3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE3YProptyP := MIN(H_AvgIndivLimitCOVE3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MaxIndivLimitCOVE := MIN(H_MaxIndivLimitCOVE, CAP_99999999);

// Report: => H_MaxIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MaxIndivLimitCOVEProptyP := MIN(H_MaxIndivLimitCOVEProptyP, CAP_99999999);

// Report: => H_MinIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MinIndivLimitCOVE := MIN(H_MinIndivLimitCOVE, CAP_99999999);

// Report: => H_MinIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MinIndivLimitCOVEProptyP := MIN(H_MinIndivLimitCOVEProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE := MIN(H_AvgIndivLimitCOVE, CAP_99999999);

// Report: => H_AvgIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVEProptyP := MIN(H_AvgIndivLimitCOVEProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVE1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE1Y := MIN(H_AvgIndivLimitCOVE1Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVE1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE1YProptyP := MIN(H_AvgIndivLimitCOVE1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitCOVE3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE3Y := MIN(H_AvgIndivLimitCOVE3Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVE3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE3YProptyP := MIN(H_AvgIndivLimitCOVE3YProptyP, CAP_99999999);

// R_AvgIndivLimitCovF
// R_AvgIndivLimitCovF1Y
// R_AvgIndivLimitCovF1YHO
// R_AvgIndivLimitCovF1YProptyP
// R_AvgIndivLimitCovF3Y
// R_AvgIndivLimitCovF3YHO
// R_AvgIndivLimitCovF3YProptyP
// R_AvgIndivLimitCovFHO
// R_AvgIndivLimitCovFProptyP

PolicyProperty: => AvgIndividualLimitCOVF := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVF),IndividualLimit);
Policy: => AvgIndividualLimitCOVF := AVE(PolicyProperty,AvgIndividualLimitCOVF);

Report: => G_SetDefault4IndLimitCOVF := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null));
// Report: => G_SetDefault4IndLimitCOVF := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null));

Report: => G_SetDefault4IndLimitCOVF1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVF3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVFProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVF1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVF3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MaxIndivLimitCOVF := MIN(H_MaxIndivLimitCOVF, CAP_99999999);

Report: => H_MaxIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVFProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MaxIndivLimitCOVFProptyP := MIN(H_MaxIndivLimitCOVFProptyP, CAP_99999999);

Report: => H_MinIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MinIndivLimitCOVF := MIN(H_MinIndivLimitCOVF, CAP_99999999);

Report: => H_MinIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MinIndivLimitCOVFProptyP := MIN(H_MinIndivLimitCOVFProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF := MIN(H_AvgIndivLimitCOVF, CAP_99999999);

Report: => H_AvgIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVFProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVFProptyP := MIN(H_AvgIndivLimitCOVFProptyP, CAP_99999999);


Report: => H_AvgIndivLimitCOVF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF1Y := MIN(H_AvgIndivLimitCOVF1Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF1YProptyP := MIN(H_AvgIndivLimitCOVF1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitCOVF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF3Y := MIN(H_AvgIndivLimitCOVF3Y, CAP_99999999);

Report: => H_AvgIndivLimitCOVF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVF3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF3YProptyP := MIN(H_AvgIndivLimitCOVF3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MaxIndivLimitCOVF := MIN(H_MaxIndivLimitCOVF, CAP_99999999);

// Report: => H_MaxIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MaxIndivLimitCOVFProptyP := MIN(H_MaxIndivLimitCOVFProptyP, CAP_99999999);

// Report: => H_MinIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MinIndivLimitCOVF := MIN(H_MinIndivLimitCOVF, CAP_99999999);

// Report: => H_MinIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MinIndivLimitCOVFProptyP := MIN(H_MinIndivLimitCOVFProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF := MIN(H_AvgIndivLimitCOVF, CAP_99999999);

// Report: => H_AvgIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVFProptyP := MIN(H_AvgIndivLimitCOVFProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitCOVF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF1Y := MIN(H_AvgIndivLimitCOVF1Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF1YProptyP := MIN(H_AvgIndivLimitCOVF1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitCOVF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF3Y := MIN(H_AvgIndivLimitCOVF3Y, CAP_99999999);

// Report: => H_AvgIndivLimitCOVF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF3YProptyP := MIN(H_AvgIndivLimitCOVF3YProptyP, CAP_99999999);

// R_AvgIndivLimitEQKI
// R_AvgIndivLimitEQKI1Y
// R_AvgIndivLimitEQKI1YProptyP
// R_AvgIndivLimitEQKI3Y
// R_AvgIndivLimitEQKI3YProptyP
// R_AvgIndivLimitEQKIProptyP
PolicyProperty: => AvgIndividualLimitEQKI := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_EQKI),IndividualLimit);
Policy: => AvgIndividualLimitEQKI := AVE(PolicyProperty,AvgIndividualLimitEQKI);

Report: => G_SetDefault4IndLimitEQKI := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null));
// Report: => G_SetDefault4IndLimitEQKT := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKT:Null));

Report: => G_SetDefault4IndLimitEQKI1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitEQKI3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitEQKIProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitEQKI1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitEQKI3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MaxIndivLimitEQKI := MIN(H_MaxIndivLimitEQKI, CAP_99999999);

Report: => H_MaxIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKIProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MaxIndivLimitEQKIProptyP := MIN(H_MaxIndivLimitEQKIProptyP, CAP_99999999);

Report: => H_MinIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MinIndivLimitEQKI := MIN(H_MinIndivLimitEQKI, CAP_99999999);

Report: => H_MinIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MinIndivLimitEQKIProptyP := MIN(H_MinIndivLimitEQKIProptyP, CAP_99999999);


Report: => H_AvgIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI := MIN(H_AvgIndivLimitEQKI, CAP_99999999);

Report: => H_AvgIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKIProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKIProptyP := MIN(H_AvgIndivLimitEQKIProptyP, CAP_99999999);


Report: => H_AvgIndivLimitEQKI1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI1Y := MIN(H_AvgIndivLimitEQKI1Y, CAP_99999999);

Report: => H_AvgIndivLimitEQKI1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI1YProptyP := MIN(H_AvgIndivLimitEQKI1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitEQKI3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI3Y := MIN(H_AvgIndivLimitEQKI3Y, CAP_99999999);

Report: => H_AvgIndivLimitEQKI3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitEQKI3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI3YProptyP := MIN(H_AvgIndivLimitEQKI3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MaxIndivLimitEQKI := MIN(H_MaxIndivLimitEQKI, CAP_99999999);

// Report: => H_MaxIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MaxIndivLimitEQKIProptyP := MIN(H_MaxIndivLimitEQKIProptyP, CAP_99999999);

// Report: => H_MinIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MinIndivLimitEQKI := MIN(H_MinIndivLimitEQKI, CAP_99999999);

// Report: => H_MinIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MinIndivLimitEQKIProptyP := MIN(H_MinIndivLimitEQKIProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI := MIN(H_AvgIndivLimitEQKI, CAP_99999999);

// Report: => H_AvgIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKIProptyP := MIN(H_AvgIndivLimitEQKIProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitEQKI1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI1Y := MIN(H_AvgIndivLimitEQKI1Y, CAP_99999999);

// Report: => H_AvgIndivLimitEQKI1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI1YProptyP := MIN(H_AvgIndivLimitEQKI1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitEQKI3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI3Y := MIN(H_AvgIndivLimitEQKI3Y, CAP_99999999);

// Report: => H_AvgIndivLimitEQKI3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI3YProptyP := MIN(H_AvgIndivLimitEQKI3YProptyP, CAP_99999999);


// R_AvgIndivLimitERQK
// R_AvgIndivLimitERQK1Y
// R_AvgIndivLimitERQK1YProptyP
// R_AvgIndivLimitERQK3Y
// R_AvgIndivLimitERQK3YProptyP
// R_AvgIndivLimitERQKProptyP
PolicyProperty: => AvgIndividualLimitERQK := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_ERQK),IndividualLimit);
Policy: => AvgIndividualLimitERQK := AVE(PolicyProperty,AvgIndividualLimitERQK);

Report: => G_SetDefault4IndLimitERQK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null));
// Report: => G_SetDefault4IndLimitERQK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null));

Report: => G_SetDefault4IndLimitERQK1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitERQK3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitERQKProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitERQK1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitERQK3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MaxIndivLimitERQK := MIN(H_MaxIndivLimitERQK, CAP_99999999);

Report: => H_MaxIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQKProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MaxIndivLimitERQKProptyP := MIN(H_MaxIndivLimitERQKProptyP, CAP_99999999);

Report: => H_MinIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MinIndivLimitERQK := MIN(H_MinIndivLimitERQK, CAP_99999999);

Report: => H_MinIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MinIndivLimitERQKProptyP := MIN(H_MinIndivLimitERQKProptyP, CAP_99999999);


Report: => H_AvgIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK := MIN(H_AvgIndivLimitERQK, CAP_99999999);

Report: => H_AvgIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQKProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQKProptyP := MIN(H_AvgIndivLimitERQKProptyP, CAP_99999999);


Report: => H_AvgIndivLimitERQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK1Y := MIN(H_AvgIndivLimitERQK1Y, CAP_99999999);

Report: => H_AvgIndivLimitERQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK1YProptyP := MIN(H_AvgIndivLimitERQK1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitERQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK3Y := MIN(H_AvgIndivLimitERQK3Y, CAP_99999999);

Report: => H_AvgIndivLimitERQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitERQK3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK3YProptyP := MIN(H_AvgIndivLimitERQK3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MaxIndivLimitERQK := MIN(H_MaxIndivLimitERQK, CAP_99999999);

// Report: => H_MaxIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MaxIndivLimitERQKProptyP := MIN(H_MaxIndivLimitERQKProptyP, CAP_99999999);

// Report: => H_MinIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MinIndivLimitERQK := MIN(H_MinIndivLimitERQK, CAP_99999999);

// Report: => H_MinIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MinIndivLimitERQKProptyP := MIN(H_MinIndivLimitERQKProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK := MIN(H_AvgIndivLimitERQK, CAP_99999999);

// Report: => H_AvgIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQKProptyP := MIN(H_AvgIndivLimitERQKProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitERQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK1Y := MIN(H_AvgIndivLimitERQK1Y, CAP_99999999);

// Report: => H_AvgIndivLimitERQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK1YProptyP := MIN(H_AvgIndivLimitERQK1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitERQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3,
																		// G_SetDefault4IndLimitERQK => DEFAULT_4, 
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK3Y := MIN(H_AvgIndivLimitERQK3Y, CAP_99999999);

// Report: => H_AvgIndivLimitERQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK3YProptyP := MIN(H_AvgIndivLimitERQK3YProptyP, CAP_99999999);



// R_AvgIndivLimitFARM
// R_AvgIndivLimitFARM1Y
// R_AvgIndivLimitFARM3Y
PolicyProperty: => AvgIndividualLimitFARM := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FARM),IndividualLimit);
Policy: => AvgIndividualLimitFARM := AVE(PolicyProperty,AvgIndividualLimitFARM);

// Report: => G_SetDefault4IndLimitFARM := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null));
Report: => G_SetDefault4IndLimitFARM := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null));

Report: => G_SetDefault4IndLimitFARM1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFARM3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFARMProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFARM1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFARM3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MaxIndivLimitFARM := MIN(H_MaxIndivLimitFARM, CAP_99999999);

Report: => H_MaxIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARMProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MaxIndivLimitFARMProptyP := MIN(H_MaxIndivLimitFARMProptyP, CAP_99999999);

Report: => H_MinIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MinIndivLimitFARM := MIN(H_MinIndivLimitFARM, CAP_99999999);

Report: => H_MinIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MinIndivLimitFARMProptyP := MIN(H_MinIndivLimitFARMProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM := MIN(H_AvgIndivLimitFARM, CAP_99999999);

Report: => H_AvgIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARMProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARMProptyP := MIN(H_AvgIndivLimitFARMProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFARM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM1Y := MIN(H_AvgIndivLimitFARM1Y, CAP_99999999);

Report: => H_AvgIndivLimitFARM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM1YProptyP := MIN(H_AvgIndivLimitFARM1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitFARM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM3Y := MIN(H_AvgIndivLimitFARM3Y, CAP_99999999);

Report: => H_AvgIndivLimitFARM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFARM3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM3YProptyP := MIN(H_AvgIndivLimitFARM3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MaxIndivLimitFARM := MIN(H_MaxIndivLimitFARM, CAP_99999999);

// Report: => H_MaxIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MaxIndivLimitFARMProptyP := MIN(H_MaxIndivLimitFARMProptyP, CAP_99999999);

// Report: => H_MinIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MinIndivLimitFARM := MIN(H_MinIndivLimitFARM, CAP_99999999);

// Report: => H_MinIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MinIndivLimitFARMProptyP := MIN(H_MinIndivLimitFARMProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM := MIN(H_AvgIndivLimitFARM, CAP_99999999);

// Report: => H_AvgIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARMProptyP := MIN(H_AvgIndivLimitFARMProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFARM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM1Y := MIN(H_AvgIndivLimitFARM1Y, CAP_99999999);

// Report: => H_AvgIndivLimitFARM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM1YProptyP := MIN(H_AvgIndivLimitFARM1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitFARM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM3Y := MIN(H_AvgIndivLimitFARM3Y, CAP_99999999);

// Report: => H_AvgIndivLimitFARM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM3YProptyP := MIN(H_AvgIndivLimitFARM3YProptyP, CAP_99999999);



// R_AvgIndivLimitFIRA
// R_AvgIndivLimitFIRA1Y
// R_AvgIndivLimitFIRA1YProptyP
// R_AvgIndivLimitFIRA3Y
// R_AvgIndivLimitFIRA3YProptyP
// R_AvgIndivLimitFIRAProptyP
PolicyProperty: => AvgIndividualLimitFIRA := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FIRA),IndividualLimit);
Policy: => AvgIndividualLimitFIRA := AVE(PolicyProperty,AvgIndividualLimitFIRA);

// Report: => G_SetDefault4IndLimitFIRA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null));
Report: => G_SetDefault4IndLimitFIRA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null));

Report: => G_SetDefault4IndLimitFIRA1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFIRA3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFIRAProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFIRA1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFIRA3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MaxIndivLimitFIRA := MIN(H_MaxIndivLimitFIRA, CAP_99999999);

Report: => H_MaxIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRAProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MaxIndivLimitFIRAProptyP := MIN(H_MaxIndivLimitFIRAProptyP, CAP_99999999);

Report: => H_MinIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MinIndivLimitFIRA := MIN(H_MinIndivLimitFIRA, CAP_99999999);

Report: => H_MinIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MinIndivLimitFIRAProptyP := MIN(H_MinIndivLimitFIRAProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA := MIN(H_AvgIndivLimitFIRA, CAP_99999999);

Report: => H_AvgIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRAProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRAProptyP := MIN(H_AvgIndivLimitFIRAProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFIRA1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA1Y := MIN(H_AvgIndivLimitFIRA1Y, CAP_99999999);

Report: => H_AvgIndivLimitFIRA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA1YProptyP := MIN(H_AvgIndivLimitFIRA1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitFIRA3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA3Y := MIN(H_AvgIndivLimitFIRA3Y, CAP_99999999);

Report: => H_AvgIndivLimitFIRA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFIRA3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA3YProptyP := MIN(H_AvgIndivLimitFIRA3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MaxIndivLimitFIRA := MIN(H_MaxIndivLimitFIRA, CAP_99999999);

// Report: => H_MaxIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MaxIndivLimitFIRAProptyP := MIN(H_MaxIndivLimitFIRAProptyP, CAP_99999999);

// Report: => H_MinIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MinIndivLimitFIRA := MIN(H_MinIndivLimitFIRA, CAP_99999999);

// Report: => H_MinIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3,
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4, 
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MinIndivLimitFIRAProptyP := MIN(H_MinIndivLimitFIRAProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA := MIN(H_AvgIndivLimitFIRA, CAP_99999999);

// Report: => H_AvgIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRAProptyP := MIN(H_AvgIndivLimitFIRAProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFIRA1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA1Y := MIN(H_AvgIndivLimitFIRA1Y, CAP_99999999);

// Report: => H_AvgIndivLimitFIRA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA1YProptyP := MIN(H_AvgIndivLimitFIRA1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitFIRA3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA3Y := MIN(H_AvgIndivLimitFIRA3Y, CAP_99999999);

// Report: => H_AvgIndivLimitFIRA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA3YProptyP := MIN(H_AvgIndivLimitFIRA3YProptyP, CAP_99999999);



// R_AvgIndivLimitFLOD
// R_AvgIndivLimitFLOD1Y
// R_AvgIndivLimitFLOD1YProptyP
// R_AvgIndivLimitFLOD3Y
// R_AvgIndivLimitFLOD3YProptyP
// R_AvgIndivLimitFLODProptyP
PolicyProperty: => AvgIndividualLimitFLOD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FLOD),IndividualLimit);
Policy: => AvgIndividualLimitFLOD := AVE(PolicyProperty,AvgIndividualLimitFLOD);

// Report: => G_SetDefault4IndLimitFLOD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null));
Report: => G_SetDefault4IndLimitFLOD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null));

Report: => G_SetDefault4IndLimitFLOD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFLOD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFLODProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFLOD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFLOD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MaxIndivLimitFLOD := MIN(H_MaxIndivLimitFLOD, CAP_99999999);

Report: => H_MaxIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLODProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MaxIndivLimitFLODProptyP := MIN(H_MaxIndivLimitFLODProptyP, CAP_99999999);

Report: => H_MinIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MinIndivLimitFLOD := MIN(H_MinIndivLimitFLOD, CAP_99999999);

Report: => H_MinIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MinIndivLimitFLODProptyP := MIN(H_MinIndivLimitFLODProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD := MIN(H_AvgIndivLimitFLOD, CAP_99999999);

Report: => H_AvgIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLODProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLODProptyP := MIN(H_AvgIndivLimitFLODProptyP, CAP_99999999);


Report: => H_AvgIndivLimitFLOD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD1Y := MIN(H_AvgIndivLimitFLOD1Y, CAP_99999999);

Report: => H_AvgIndivLimitFLOD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD1YProptyP := MIN(H_AvgIndivLimitFLOD1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitFLOD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD3Y := MIN(H_AvgIndivLimitFLOD3Y, CAP_99999999);

Report: => H_AvgIndivLimitFLOD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFLOD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD3YProptyP := MIN(H_AvgIndivLimitFLOD3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MaxIndivLimitFLOD := MIN(H_MaxIndivLimitFLOD, CAP_99999999);

// Report: => H_MaxIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MaxIndivLimitFLODProptyP := MIN(H_MaxIndivLimitFLODProptyP, CAP_99999999);

// Report: => H_MinIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MinIndivLimitFLOD := MIN(H_MinIndivLimitFLOD, CAP_99999999);

// Report: => H_MinIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MinIndivLimitFLODProptyP := MIN(H_MinIndivLimitFLODProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD := MIN(H_AvgIndivLimitFLOD, CAP_99999999);

// Report: => H_AvgIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLODProptyP := MIN(H_AvgIndivLimitFLODProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitFLOD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD1Y := MIN(H_AvgIndivLimitFLOD1Y, CAP_99999999);

// Report: => H_AvgIndivLimitFLOD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD1YProptyP := MIN(H_AvgIndivLimitFLOD1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitFLOD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD3Y := MIN(H_AvgIndivLimitFLOD3Y, CAP_99999999);

// Report: => H_AvgIndivLimitFLOD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD3YProptyP := MIN(H_AvgIndivLimitFLOD3YProptyP, CAP_99999999);



// R_AvgIndivLimitGRPL
// R_AvgIndivLimitGRPL1Y
// R_AvgIndivLimitGRPL1YProptyP
// R_AvgIndivLimitGRPL3Y
// R_AvgIndivLimitGRPL3YProptyP
// R_AvgIndivLimitGRPLProptyP
PolicyProperty: => AvgIndividualLimitGRPL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_GRPL),IndividualLimit);
Policy: => AvgIndividualLimitGRPL := AVE(PolicyProperty,AvgIndividualLimitGRPL);


// Report: => G_SetDefault4IndLimitGRPL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null));
Report: => G_SetDefault4IndLimitGRPL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null));

Report: => G_SetDefault4IndLimitGRPL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitGRPL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitGRPLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitGRPL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitGRPL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MaxIndivLimitGRPL := MIN(H_MaxIndivLimitGRPL, CAP_99999999);

Report: => H_MaxIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MaxIndivLimitGRPLProptyP := MIN(H_MaxIndivLimitGRPLProptyP, CAP_99999999);

Report: => H_MinIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MinIndivLimitGRPL := MIN(H_MinIndivLimitGRPL, CAP_99999999);

Report: => H_MinIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MinIndivLimitGRPLProptyP := MIN(H_MinIndivLimitGRPLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL := MIN(H_AvgIndivLimitGRPL, CAP_99999999);

Report: => H_AvgIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPLProptyP := MIN(H_AvgIndivLimitGRPLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitGRPL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL1Y := MIN(H_AvgIndivLimitGRPL1Y, CAP_99999999);

Report: => H_AvgIndivLimitGRPL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL1YProptyP := MIN(H_AvgIndivLimitGRPL1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitGRPL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL3Y := MIN(H_AvgIndivLimitGRPL3Y, CAP_99999999);

Report: => H_AvgIndivLimitGRPL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitGRPL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL3YProptyP := MIN(H_AvgIndivLimitGRPL3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MaxIndivLimitGRPL := MIN(H_MaxIndivLimitGRPL, CAP_99999999);

// Report: => H_MaxIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MaxIndivLimitGRPLProptyP := MIN(H_MaxIndivLimitGRPLProptyP, CAP_99999999);

// Report: => H_MinIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MinIndivLimitGRPL := MIN(H_MinIndivLimitGRPL, CAP_99999999);

// Report: => H_MinIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MinIndivLimitGRPLProptyP := MIN(H_MinIndivLimitGRPLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL := MIN(H_AvgIndivLimitGRPL, CAP_99999999);

// Report: => H_AvgIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPLProptyP := MIN(H_AvgIndivLimitGRPLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitGRPL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL1Y := MIN(H_AvgIndivLimitGRPL1Y, CAP_99999999);

// Report: => H_AvgIndivLimitGRPL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL1YProptyP := MIN(H_AvgIndivLimitGRPL1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitGRPL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL3Y := MIN(H_AvgIndivLimitGRPL3Y, CAP_99999999);

// Report: => H_AvgIndivLimitGRPL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL3YProptyP := MIN(H_AvgIndivLimitGRPL3YProptyP, CAP_99999999);


// R_AvgIndivLimitHAIL
// R_AvgIndivLimitHAIL1Y
// R_AvgIndivLimitHAIL1YProptyP
// R_AvgIndivLimitHAIL3Y
// R_AvgIndivLimitHAIL3YProptyP
// R_AvgIndivLimitHAILProptyP

PolicyProperty: => AvgIndividualLimitHAIL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HAIL),IndividualLimit);
Policy: => AvgIndividualLimitHAIL := AVE(PolicyProperty,AvgIndividualLimitHAIL);

// Report: => G_SetDefault4IndLimitHAIL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null));
Report: => G_SetDefault4IndLimitHAIL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null));

Report: => G_SetDefault4IndLimitHAIL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHAIL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHAILProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHAIL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHAIL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MaxIndivLimitHAIL := MIN(H_MaxIndivLimitHAIL, CAP_99999999);

Report: => H_MaxIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAILProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MaxIndivLimitHAILProptyP := MIN(H_MaxIndivLimitHAILProptyP, CAP_99999999);

Report: => H_MinIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MinIndivLimitHAIL := MIN(H_MinIndivLimitHAIL, CAP_99999999);

Report: => H_MinIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MinIndivLimitHAILProptyP := MIN(H_MinIndivLimitHAILProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL := MIN(H_AvgIndivLimitHAIL, CAP_99999999);

Report: => H_AvgIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAILProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAILProptyP := MIN(H_AvgIndivLimitHAILProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHAIL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL1Y := MIN(H_AvgIndivLimitHAIL1Y, CAP_99999999);

Report: => H_AvgIndivLimitHAIL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL1YProptyP := MIN(H_AvgIndivLimitHAIL1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitHAIL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL3Y := MIN(H_AvgIndivLimitHAIL3Y, CAP_99999999);

Report: => H_AvgIndivLimitHAIL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHAIL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL3YProptyP := MIN(H_AvgIndivLimitHAIL3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,																		
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MaxIndivLimitHAIL := MIN(H_MaxIndivLimitHAIL, CAP_99999999);

// Report: => H_MaxIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MaxIndivLimitHAILProptyP := MIN(H_MaxIndivLimitHAILProptyP, CAP_99999999);

// Report: => H_MinIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MinIndivLimitHAIL := MIN(H_MinIndivLimitHAIL, CAP_99999999);

// Report: => H_MinIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MinIndivLimitHAILProptyP := MIN(H_MinIndivLimitHAILProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL := MIN(H_AvgIndivLimitHAIL, CAP_99999999);

// Report: => H_AvgIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAILProptyP := MIN(H_AvgIndivLimitHAILProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHAIL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL1Y := MIN(H_AvgIndivLimitHAIL1Y, CAP_99999999);

// Report: => H_AvgIndivLimitHAIL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL1YProptyP := MIN(H_AvgIndivLimitHAIL1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitHAIL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL3Y := MIN(H_AvgIndivLimitHAIL3Y, CAP_99999999);

// Report: => H_AvgIndivLimitHAIL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL3YProptyP := MIN(H_AvgIndivLimitHAIL3YProptyP, CAP_99999999);



// R_AvgIndivLimitHDCR
// R_AvgIndivLimitHDCR1Y
// R_AvgIndivLimitHDCR1YProptyP
// R_AvgIndivLimitHDCR3Y
// R_AvgIndivLimitHDCR3YProptyP
// R_AvgIndivLimitHDCRProptyP

PolicyProperty: => AvgIndividualLimitHDCR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HDCR),IndividualLimit);
Policy: => AvgIndividualLimitHDCR := AVE(PolicyProperty,AvgIndividualLimitHDCR);

// Report: => G_SetDefault4IndLimitHDCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null));
Report: => G_SetDefault4IndLimitHDCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null));

Report: => G_SetDefault4IndLimitHDCR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHDCR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHDCRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHDCR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHDCR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MaxIndivLimitHDCR := MIN(H_MaxIndivLimitHDCR, CAP_99999999);

Report: => H_MaxIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MaxIndivLimitHDCRProptyP := MIN(H_MaxIndivLimitHDCRProptyP, CAP_99999999);

Report: => H_MinIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MinIndivLimitHDCR := MIN(H_MinIndivLimitHDCR, CAP_99999999);

Report: => H_MinIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MinIndivLimitHDCRProptyP := MIN(H_MinIndivLimitHDCRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR := MIN(H_AvgIndivLimitHDCR, CAP_99999999);

Report: => H_AvgIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCRProptyP := MIN(H_AvgIndivLimitHDCRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHDCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR1Y := MIN(H_AvgIndivLimitHDCR1Y, CAP_99999999);

Report: => H_AvgIndivLimitHDCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR1YProptyP := MIN(H_AvgIndivLimitHDCR1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitHDCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR3Y := MIN(H_AvgIndivLimitHDCR3Y, CAP_99999999);

Report: => H_AvgIndivLimitHDCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHDCR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR3YProptyP := MIN(H_AvgIndivLimitHDCR3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MaxIndivLimitHDCR := MIN(H_MaxIndivLimitHDCR, CAP_99999999);

// Report: => H_MaxIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MaxIndivLimitHDCRProptyP := MIN(H_MaxIndivLimitHDCRProptyP, CAP_99999999);

// Report: => H_MinIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MinIndivLimitHDCR := MIN(H_MinIndivLimitHDCR, CAP_99999999);

// Report: => H_MinIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MinIndivLimitHDCRProptyP := MIN(H_MinIndivLimitHDCRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR := MIN(H_AvgIndivLimitHDCR, CAP_99999999);

// Report: => H_AvgIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCRProptyP := MIN(H_AvgIndivLimitHDCRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHDCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR1Y := MIN(H_AvgIndivLimitHDCR1Y, CAP_99999999);

// Report: => H_AvgIndivLimitHDCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR1YProptyP := MIN(H_AvgIndivLimitHDCR1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitHDCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR3Y := MIN(H_AvgIndivLimitHDCR3Y, CAP_99999999);

// Report: => H_AvgIndivLimitHDCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR3YProptyP := MIN(H_AvgIndivLimitHDCR3YProptyP, CAP_99999999);


// R_AvgIndivLimitHULL
// R_AvgIndivLimitHULL1Y
// R_AvgIndivLimitHULL1YProptyP
// R_AvgIndivLimitHULL3Y
// R_AvgIndivLimitHULL3YProptyP
// R_AvgIndivLimitHULLProptyP

PolicyProperty: => AvgIndividualLimitHULL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HULL),IndividualLimit);
Policy: => AvgIndividualLimitHULL := AVE(PolicyProperty,AvgIndividualLimitHULL);

// Report: => G_SetDefault4IndLimitHULL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null));
Report: => G_SetDefault4IndLimitHULL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null));

Report: => G_SetDefault4IndLimitHULL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHULL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHULLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHULL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHULL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MaxIndivLimitHULL := MIN(H_MaxIndivLimitHULL, CAP_99999999);

Report: => H_MaxIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MaxIndivLimitHULLProptyP := MIN(H_MaxIndivLimitHULLProptyP, CAP_99999999);

Report: => H_MinIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MinIndivLimitHULL := MIN(H_MinIndivLimitHULL, CAP_99999999);

Report: => H_MinIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MinIndivLimitHULLProptyP := MIN(H_MinIndivLimitHULLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL := MIN(H_AvgIndivLimitHULL, CAP_99999999);

Report: => H_AvgIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULLProptyP := MIN(H_AvgIndivLimitHULLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHULL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL1Y := MIN(H_AvgIndivLimitHULL1Y, CAP_99999999);

Report: => H_AvgIndivLimitHULL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL1YProptyP := MIN(H_AvgIndivLimitHULL1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitHULL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL3Y := MIN(H_AvgIndivLimitHULL3Y, CAP_99999999);

Report: => H_AvgIndivLimitHULL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHULL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL3YProptyP := MIN(H_AvgIndivLimitHULL3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MaxIndivLimitHULL := MIN(H_MaxIndivLimitHULL, CAP_99999999);

// Report: => H_MaxIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MaxIndivLimitHULLProptyP := MIN(H_MaxIndivLimitHULLProptyP, CAP_99999999);

// Report: => H_MinIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MinIndivLimitHULL := MIN(H_MinIndivLimitHULL, CAP_99999999);

// Report: => H_MinIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MinIndivLimitHULLProptyP := MIN(H_MinIndivLimitHULLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL := MIN(H_AvgIndivLimitHULL, CAP_99999999);

// Report: => H_AvgIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULLProptyP := MIN(H_AvgIndivLimitHULLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHULL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL1Y := MIN(H_AvgIndivLimitHULL1Y, CAP_99999999);

// Report: => H_AvgIndivLimitHULL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL1YProptyP := MIN(H_AvgIndivLimitHULL1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitHULL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL3Y := MIN(H_AvgIndivLimitHULL3Y, CAP_99999999);

// Report: => H_AvgIndivLimitHULL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL3YProptyP := MIN(H_AvgIndivLimitHULL3YProptyP, CAP_99999999);



// R_AvgIndivLimitHURR
// R_AvgIndivLimitHURR1Y
// R_AvgIndivLimitHURR1YProptyP
// R_AvgIndivLimitHURR3Y
// R_AvgIndivLimitHURR3YProptyP
// R_AvgIndivLimitHURRProptyP

PolicyProperty: => AvgIndividualLimitHURR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HURR),IndividualLimit);
Policy: => AvgIndividualLimitHURR := AVE(PolicyProperty,AvgIndividualLimitHURR);

// Report: => G_SetDefault4IndLimitHURR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null));
Report: => G_SetDefault4IndLimitHURR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null));

Report: => G_SetDefault4IndLimitHURR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHURR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHURRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHURR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHURR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MaxIndivLimitHURR := MIN(H_MaxIndivLimitHURR, CAP_99999999);

Report: => H_MaxIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MaxIndivLimitHURRProptyP := MIN(H_MaxIndivLimitHURRProptyP, CAP_99999999);

Report: => H_MinIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MinIndivLimitHURR := MIN(H_MinIndivLimitHURR, CAP_99999999);

Report: => H_MinIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MinIndivLimitHURRProptyP := MIN(H_MinIndivLimitHURRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR := MIN(H_AvgIndivLimitHURR, CAP_99999999);

Report: => H_AvgIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURRProptyP := MIN(H_AvgIndivLimitHURRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitHURR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR1Y := MIN(H_AvgIndivLimitHURR1Y, CAP_99999999);

Report: => H_AvgIndivLimitHURR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR1YProptyP := MIN(H_AvgIndivLimitHURR1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitHURR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR3Y := MIN(H_AvgIndivLimitHURR3Y, CAP_99999999);

Report: => H_AvgIndivLimitHURR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHURR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR3YProptyP := MIN(H_AvgIndivLimitHURR3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MaxIndivLimitHURR := MIN(H_MaxIndivLimitHURR, CAP_99999999);

// Report: => H_MaxIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MaxIndivLimitHURRProptyP := MIN(H_MaxIndivLimitHURRProptyP, CAP_99999999);

// Report: => H_MinIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MinIndivLimitHURR := MIN(H_MinIndivLimitHURR, CAP_99999999);

// Report: => H_MinIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MinIndivLimitHURRProptyP := MIN(H_MinIndivLimitHURRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR := MIN(H_AvgIndivLimitHURR, CAP_99999999);

// Report: => H_AvgIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURRProptyP := MIN(H_AvgIndivLimitHURRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitHURR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR1Y := MIN(H_AvgIndivLimitHURR1Y, CAP_99999999);

// Report: => H_AvgIndivLimitHURR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR1YProptyP := MIN(H_AvgIndivLimitHURR1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitHURR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR3Y := MIN(H_AvgIndivLimitHURR3Y, CAP_99999999);

// Report: => H_AvgIndivLimitHURR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR3YProptyP := MIN(H_AvgIndivLimitHURR3YProptyP, CAP_99999999);


// R_AvgIndivLimitMOLD
// R_AvgIndivLimitMOLD1Y
// R_AvgIndivLimitMOLD1YProptyP
// R_AvgIndivLimitMOLD3Y
// R_AvgIndivLimitMOLD3YProptyP
// R_AvgIndivLimitMOLDProptyP

PolicyProperty: => AvgIndividualLimitMOLD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_MOLD),IndividualLimit);
Policy: => AvgIndividualLimitMOLD := AVE(PolicyProperty,AvgIndividualLimitMOLD);

// Report: => G_SetDefault4IndLimitMOLD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null));
Report: => G_SetDefault4IndLimitMOLD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null));

Report: => G_SetDefault4IndLimitMOLD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitMOLD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitMOLDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitMOLD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitMOLD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MaxIndivLimitMOLD := MIN(H_MaxIndivLimitMOLD, CAP_99999999);

Report: => H_MaxIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MaxIndivLimitMOLDProptyP := MIN(H_MaxIndivLimitMOLDProptyP, CAP_99999999);

Report: => H_MinIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MinIndivLimitMOLD := MIN(H_MinIndivLimitMOLD, CAP_99999999);

Report: => H_MinIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MinIndivLimitMOLDProptyP := MIN(H_MinIndivLimitMOLDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD := MIN(H_AvgIndivLimitMOLD, CAP_99999999);

Report: => H_AvgIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLDProptyP := MIN(H_AvgIndivLimitMOLDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitMOLD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD1Y := MIN(H_AvgIndivLimitMOLD1Y, CAP_99999999);

Report: => H_AvgIndivLimitMOLD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD1YProptyP := MIN(H_AvgIndivLimitMOLD1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitMOLD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD3Y := MIN(H_AvgIndivLimitMOLD3Y, CAP_99999999);

Report: => H_AvgIndivLimitMOLD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitMOLD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD3YProptyP := MIN(H_AvgIndivLimitMOLD3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MaxIndivLimitMOLD := MIN(H_MaxIndivLimitMOLD, CAP_99999999);

// Report: => H_MaxIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MaxIndivLimitMOLDProptyP := MIN(H_MaxIndivLimitMOLDProptyP, CAP_99999999);

// Report: => H_MinIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MinIndivLimitMOLD := MIN(H_MinIndivLimitMOLD, CAP_99999999);

// Report: => H_MinIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MinIndivLimitMOLDProptyP := MIN(H_MinIndivLimitMOLDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD := MIN(H_AvgIndivLimitMOLD, CAP_99999999);

// Report: => H_AvgIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLDProptyP := MIN(H_AvgIndivLimitMOLDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitMOLD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD1Y := MIN(H_AvgIndivLimitMOLD1Y, CAP_99999999);

// Report: => H_AvgIndivLimitMOLD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD1YProptyP := MIN(H_AvgIndivLimitMOLD1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitMOLD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD3Y := MIN(H_AvgIndivLimitMOLD3Y, CAP_99999999);

// Report: => H_AvgIndivLimitMOLD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD3YProptyP := MIN(H_AvgIndivLimitMOLD3YProptyP, CAP_99999999);


// R_AvgIndivLimitOTHR
// R_AvgIndivLimitOTHR1Y
// R_AvgIndivLimitOTHR1YProptyP
// R_AvgIndivLimitOTHR3Y
// R_AvgIndivLimitOTHR3YProptyP
// R_AvgIndivLimitOTHRProptyP

PolicyProperty: => AvgIndividualLimitOTHR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_OTHR),IndividualLimit);
Policy: => AvgIndividualLimitOTHR := AVE(PolicyProperty,AvgIndividualLimitOTHR);


// Report: => G_SetDefault4IndLimitOTHR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null));
Report: => G_SetDefault4IndLimitOTHR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null));

Report: => G_SetDefault4IndLimitOTHR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOTHR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitOTHRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitOTHR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOTHR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MaxIndivLimitOTHR := MIN(H_MaxIndivLimitOTHR, CAP_99999999);

Report: => H_MaxIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MaxIndivLimitOTHRProptyP := MIN(H_MaxIndivLimitOTHRProptyP, CAP_99999999);

Report: => H_MinIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MinIndivLimitOTHR := MIN(H_MinIndivLimitOTHR, CAP_99999999);

Report: => H_MinIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MinIndivLimitOTHRProptyP := MIN(H_MinIndivLimitOTHRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR := MIN(H_AvgIndivLimitOTHR, CAP_99999999);

Report: => H_AvgIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHRProptyP := MIN(H_AvgIndivLimitOTHRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitOTHR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR1Y := MIN(H_AvgIndivLimitOTHR1Y, CAP_99999999);

Report: => H_AvgIndivLimitOTHR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR1YProptyP := MIN(H_AvgIndivLimitOTHR1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitOTHR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR3Y := MIN(H_AvgIndivLimitOTHR3Y, CAP_99999999);

Report: => H_AvgIndivLimitOTHR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitOTHR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR3YProptyP := MIN(H_AvgIndivLimitOTHR3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MaxIndivLimitOTHR := MIN(H_MaxIndivLimitOTHR, CAP_99999999);

// Report: => H_MaxIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MaxIndivLimitOTHRProptyP := MIN(H_MaxIndivLimitOTHRProptyP, CAP_99999999);

// Report: => H_MinIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MinIndivLimitOTHR := MIN(H_MinIndivLimitOTHR, CAP_99999999);

// Report: => H_MinIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MinIndivLimitOTHRProptyP := MIN(H_MinIndivLimitOTHRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR := MIN(H_AvgIndivLimitOTHR, CAP_99999999);

// Report: => H_AvgIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHRProptyP := MIN(H_AvgIndivLimitOTHRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitOTHR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR1Y := MIN(H_AvgIndivLimitOTHR1Y, CAP_99999999);

// Report: => H_AvgIndivLimitOTHR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR1YProptyP := MIN(H_AvgIndivLimitOTHR1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitOTHR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR3Y := MIN(H_AvgIndivLimitOTHR3Y, CAP_99999999);

// Report: => H_AvgIndivLimitOTHR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR3YProptyP := MIN(H_AvgIndivLimitOTHR3YProptyP, CAP_99999999);


// R_AvgIndivLimitOVRD
// R_AvgIndivLimitOVRD1Y
// R_AvgIndivLimitOVRD1YProptyP
// R_AvgIndivLimitOVRD3Y
// R_AvgIndivLimitOVRD3YProptyP
// R_AvgIndivLimitOVRDProptyP

PolicyProperty: => AvgIndividualLimitOVRD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_OVRD),IndividualLimit);
Policy: => AvgIndividualLimitOVRD := AVE(PolicyProperty,AvgIndividualLimitOVRD);


// Report: => G_SetDefault4IndLimitOVRD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null));
Report: => G_SetDefault4IndLimitOVRD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null));

Report: => G_SetDefault4IndLimitOVRD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOVRD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitOVRDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitOVRD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOVRD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MaxIndivLimitOVRD := MIN(H_MaxIndivLimitOVRD, CAP_99999999);

Report: => H_MaxIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MaxIndivLimitOVRDProptyP := MIN(H_MaxIndivLimitOVRDProptyP, CAP_99999999);

Report: => H_MinIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MinIndivLimitOVRD := MIN(H_MinIndivLimitOVRD, CAP_99999999);

Report: => H_MinIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MinIndivLimitOVRDProptyP := MIN(H_MinIndivLimitOVRDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD := MIN(H_AvgIndivLimitOVRD, CAP_99999999);

Report: => H_AvgIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRDProptyP := MIN(H_AvgIndivLimitOVRDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitOVRD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD1Y := MIN(H_AvgIndivLimitOVRD1Y, CAP_99999999);

Report: => H_AvgIndivLimitOVRD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD1YProptyP := MIN(H_AvgIndivLimitOVRD1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitOVRD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD3Y := MIN(H_AvgIndivLimitOVRD3Y, CAP_99999999);

Report: => H_AvgIndivLimitOVRD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitOVRD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD3YProptyP := MIN(H_AvgIndivLimitOVRD3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MaxIndivLimitOVRD := MIN(H_MaxIndivLimitOVRD, CAP_99999999);

// Report: => H_MaxIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MaxIndivLimitOVRDProptyP := MIN(H_MaxIndivLimitOVRDProptyP, CAP_99999999);

// Report: => H_MinIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MinIndivLimitOVRD := MIN(H_MinIndivLimitOVRD, CAP_99999999);

// Report: => H_MinIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MinIndivLimitOVRDProptyP := MIN(H_MinIndivLimitOVRDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD := MIN(H_AvgIndivLimitOVRD, CAP_99999999);

// Report: => H_AvgIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRDProptyP := MIN(H_AvgIndivLimitOVRDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitOVRD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD1Y := MIN(H_AvgIndivLimitOVRD1Y, CAP_99999999);

// Report: => H_AvgIndivLimitOVRD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD1YProptyP := MIN(H_AvgIndivLimitOVRD1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitOVRD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD3Y := MIN(H_AvgIndivLimitOVRD3Y, CAP_99999999);

// Report: => H_AvgIndivLimitOVRD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD3YProptyP := MIN(H_AvgIndivLimitOVRD3YProptyP, CAP_99999999);



// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC1Y
// R_AvgIndivLimitPPRC1YProptyP
// R_AvgIndivLimitPPRC3Y
// R_AvgIndivLimitPPRC3YProptyP
// R_AvgIndivLimitPPRCProptyP

PolicyProperty: => AvgIndividualLimitPPRC := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_PPRC),IndividualLimit);
Policy: => AvgIndividualLimitPPRC := AVE(PolicyProperty,AvgIndividualLimitPPRC);

// Report: => G_SetDefault4IndLimitPPRC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null));
Report: => G_SetDefault4IndLimitPPRC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null));

Report: => G_SetDefault4IndLimitPPRC1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitPPRC3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitPPRCProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitPPRC1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitPPRC3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MaxIndivLimitPPRC := MIN(H_MaxIndivLimitPPRC, CAP_99999999);

Report: => H_MaxIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRCProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MaxIndivLimitPPRCProptyP := MIN(H_MaxIndivLimitPPRCProptyP, CAP_99999999);

Report: => H_MinIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MinIndivLimitPPRC := MIN(H_MinIndivLimitPPRC, CAP_99999999);

Report: => H_MinIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MinIndivLimitPPRCProptyP := MIN(H_MinIndivLimitPPRCProptyP, CAP_99999999);


Report: => H_AvgIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC := MIN(H_AvgIndivLimitPPRC, CAP_99999999);

Report: => H_AvgIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRCProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRCProptyP := MIN(H_AvgIndivLimitPPRCProptyP, CAP_99999999);


Report: => H_AvgIndivLimitPPRC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC1Y := MIN(H_AvgIndivLimitPPRC1Y, CAP_99999999);

Report: => H_AvgIndivLimitPPRC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC1YProptyP := MIN(H_AvgIndivLimitPPRC1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitPPRC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC3Y := MIN(H_AvgIndivLimitPPRC3Y, CAP_99999999);

Report: => H_AvgIndivLimitPPRC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitPPRC3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC3YProptyP := MIN(H_AvgIndivLimitPPRC3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MaxIndivLimitPPRC := MIN(H_MaxIndivLimitPPRC, CAP_99999999);

// Report: => H_MaxIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MaxIndivLimitPPRCProptyP := MIN(H_MaxIndivLimitPPRCProptyP, CAP_99999999);

// Report: => H_MinIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MinIndivLimitPPRC := MIN(H_MinIndivLimitPPRC, CAP_99999999);

// Report: => H_MinIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MinIndivLimitPPRCProptyP := MIN(H_MinIndivLimitPPRCProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC := MIN(H_AvgIndivLimitPPRC, CAP_99999999);

// Report: => H_AvgIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRCProptyP := MIN(H_AvgIndivLimitPPRCProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitPPRC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC1Y := MIN(H_AvgIndivLimitPPRC1Y, CAP_99999999);

// Report: => H_AvgIndivLimitPPRC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC1YProptyP := MIN(H_AvgIndivLimitPPRC1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitPPRC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC3Y := MIN(H_AvgIndivLimitPPRC3Y, CAP_99999999);

// Report: => H_AvgIndivLimitPPRC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC3YProptyP := MIN(H_AvgIndivLimitPPRC3YProptyP, CAP_99999999);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP1Y
// R_AvgIndivLimitSCPP1YProptyP
// R_AvgIndivLimitSCPP3Y
// R_AvgIndivLimitSCPP3YProptyP
// R_AvgIndivLimitSCPPProptyP

PolicyProperty: => AvgIndividualLimitSCPP := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_SCPP),IndividualLimit);
Policy: => AvgIndividualLimitSCPP := AVE(PolicyProperty,AvgIndividualLimitSCPP);

// Report: => G_SetDefault4IndLimitSCPP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null));
Report: => G_SetDefault4IndLimitSCPP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null));

Report: => G_SetDefault4IndLimitSCPP1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSCPP3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitSCPPProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitSCPP1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSCPP3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MaxIndivLimitSCPP := MIN(H_MaxIndivLimitSCPP, CAP_99999999);

Report: => H_MaxIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPPProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MaxIndivLimitSCPPProptyP := MIN(H_MaxIndivLimitSCPPProptyP, CAP_99999999);

Report: => H_MinIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MinIndivLimitSCPP := MIN(H_MinIndivLimitSCPP, CAP_99999999);

Report: => H_MinIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MinIndivLimitSCPPProptyP := MIN(H_MinIndivLimitSCPPProptyP, CAP_99999999);


Report: => H_AvgIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP := MIN(H_AvgIndivLimitSCPP, CAP_99999999);

Report: => H_AvgIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPPProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPPProptyP := MIN(H_AvgIndivLimitSCPPProptyP, CAP_99999999);


Report: => H_AvgIndivLimitSCPP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP1Y := MIN(H_AvgIndivLimitSCPP1Y, CAP_99999999);

Report: => H_AvgIndivLimitSCPP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP1YProptyP := MIN(H_AvgIndivLimitSCPP1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitSCPP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP3Y := MIN(H_AvgIndivLimitSCPP3Y, CAP_99999999);

Report: => H_AvgIndivLimitSCPP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitSCPP3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP3YProptyP := MIN(H_AvgIndivLimitSCPP3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MaxIndivLimitSCPP := MIN(H_MaxIndivLimitSCPP, CAP_99999999);

// Report: => H_MaxIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MaxIndivLimitSCPPProptyP := MIN(H_MaxIndivLimitSCPPProptyP, CAP_99999999);

// Report: => H_MinIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MinIndivLimitSCPP := MIN(H_MinIndivLimitSCPP, CAP_99999999);

// Report: => H_MinIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MinIndivLimitSCPPProptyP := MIN(H_MinIndivLimitSCPPProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP := MIN(H_AvgIndivLimitSCPP, CAP_99999999);

// Report: => H_AvgIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPPProptyP := MIN(H_AvgIndivLimitSCPPProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitSCPP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP1Y := MIN(H_AvgIndivLimitSCPP1Y, CAP_99999999);

// Report: => H_AvgIndivLimitSCPP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP1YProptyP := MIN(H_AvgIndivLimitSCPP1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitSCPP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP3Y := MIN(H_AvgIndivLimitSCPP3Y, CAP_99999999);

// Report: => H_AvgIndivLimitSCPP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP3YProptyP := MIN(H_AvgIndivLimitSCPP3YProptyP, CAP_99999999);


// R_AvgIndivLimitSINK
// R_AvgIndivLimitSINK1Y
// R_AvgIndivLimitSINK1YProptyP
// R_AvgIndivLimitSINK3Y
// R_AvgIndivLimitSINK3YProptyP
// R_AvgIndivLimitSINKProptyP

PolicyProperty: => AvgIndividualLimitSINK := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_SINK),IndividualLimit);
Policy: => AvgIndividualLimitSINK := AVE(PolicyProperty,AvgIndividualLimitSINK);

// Report: => G_SetDefault4IndLimitSINK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null));
Report: => G_SetDefault4IndLimitSINK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null));

Report: => G_SetDefault4IndLimitSINK1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSINK3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitSINKProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitSINK1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSINK3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MaxIndivLimitSINK := MIN(H_MaxIndivLimitSINK, CAP_99999999);

Report: => H_MaxIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINKProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MaxIndivLimitSINKProptyP := MIN(H_MaxIndivLimitSINKProptyP, CAP_99999999);

Report: => H_MinIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MinIndivLimitSINK := MIN(H_MinIndivLimitSINK, CAP_99999999);

Report: => H_MinIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MinIndivLimitSINKProptyP := MIN(H_MinIndivLimitSINKProptyP, CAP_99999999);


Report: => H_AvgIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK := MIN(H_AvgIndivLimitSINK, CAP_99999999);

Report: => H_AvgIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINKProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINKProptyP := MIN(H_AvgIndivLimitSINKProptyP, CAP_99999999);


Report: => H_AvgIndivLimitSINK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK1Y := MIN(H_AvgIndivLimitSINK1Y, CAP_99999999);

Report: => H_AvgIndivLimitSINK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK1YProptyP := MIN(H_AvgIndivLimitSINK1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitSINK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK3Y := MIN(H_AvgIndivLimitSINK3Y, CAP_99999999);

Report: => H_AvgIndivLimitSINK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitSINK3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK3YProptyP := MIN(H_AvgIndivLimitSINK3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MaxIndivLimitSINK := MIN(H_MaxIndivLimitSINK, CAP_99999999);

// Report: => H_MaxIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MaxIndivLimitSINKProptyP := MIN(H_MaxIndivLimitSINKProptyP, CAP_99999999);

// Report: => H_MinIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MinIndivLimitSINK := MIN(H_MinIndivLimitSINK, CAP_99999999);

// Report: => H_MinIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MinIndivLimitSINKProptyP := MIN(H_MinIndivLimitSINKProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK := MIN(H_AvgIndivLimitSINK, CAP_99999999);

// Report: => H_AvgIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINKProptyP := MIN(H_AvgIndivLimitSINKProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitSINK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK1Y := MIN(H_AvgIndivLimitSINK1Y, CAP_99999999);

// Report: => H_AvgIndivLimitSINK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK1YProptyP := MIN(H_AvgIndivLimitSINK1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitSINK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK3Y := MIN(H_AvgIndivLimitSINK3Y, CAP_99999999);

// Report: => H_AvgIndivLimitSINK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK3YProptyP := MIN(H_AvgIndivLimitSINK3YProptyP, CAP_99999999);

// R_AvgIndivLimitTHTD
// R_AvgIndivLimitTHTD1Y
// R_AvgIndivLimitTHTD1YProptyP
// R_AvgIndivLimitTHTD3Y
// R_AvgIndivLimitTHTD3YProptyP
// R_AvgIndivLimitTHTDProptyP

PolicyProperty: => AvgIndividualLimitTHTD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_THTD),IndividualLimit);
Policy: => AvgIndividualLimitTHTD := AVE(PolicyProperty,AvgIndividualLimitTHTD);

// Report: => G_SetDefault4IndLimitTHTD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null));
Report: => G_SetDefault4IndLimitTHTD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null));

Report: => G_SetDefault4IndLimitTHTD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitTHTD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitTHTDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitTHTD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitTHTD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MaxIndivLimitTHTD := MIN(H_MaxIndivLimitTHTD, CAP_99999999);

Report: => H_MaxIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MaxIndivLimitTHTDProptyP := MIN(H_MaxIndivLimitTHTDProptyP, CAP_99999999);

Report: => H_MinIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MinIndivLimitTHTD := MIN(H_MinIndivLimitTHTD, CAP_99999999);

Report: => H_MinIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MinIndivLimitTHTDProptyP := MIN(H_MinIndivLimitTHTDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD := MIN(H_AvgIndivLimitTHTD, CAP_99999999);

Report: => H_AvgIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTDProptyP := MIN(H_AvgIndivLimitTHTDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitTHTD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD1Y := MIN(H_AvgIndivLimitTHTD1Y, CAP_99999999);

Report: => H_AvgIndivLimitTHTD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD1YProptyP := MIN(H_AvgIndivLimitTHTD1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitTHTD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD3Y := MIN(H_AvgIndivLimitTHTD3Y, CAP_99999999);

Report: => H_AvgIndivLimitTHTD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitTHTD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD3YProptyP := MIN(H_AvgIndivLimitTHTD3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MaxIndivLimitTHTD := MIN(H_MaxIndivLimitTHTD, CAP_99999999);

// Report: => H_MaxIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MaxIndivLimitTHTDProptyP := MIN(H_MaxIndivLimitTHTDProptyP, CAP_99999999);

// Report: => H_MinIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MinIndivLimitTHTD := MIN(H_MinIndivLimitTHTD, CAP_99999999);

// Report: => H_MinIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MinIndivLimitTHTDProptyP := MIN(H_MinIndivLimitTHTDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD := MIN(H_AvgIndivLimitTHTD, CAP_99999999);

// Report: => H_AvgIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTDProptyP := MIN(H_AvgIndivLimitTHTDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitTHTD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD1Y := MIN(H_AvgIndivLimitTHTD1Y, CAP_99999999);

// Report: => H_AvgIndivLimitTHTD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD1YProptyP := MIN(H_AvgIndivLimitTHTD1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitTHTD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD3Y := MIN(H_AvgIndivLimitTHTD3Y, CAP_99999999);

// Report: => H_AvgIndivLimitTHTD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD3YProptyP := MIN(H_AvgIndivLimitTHTD3YProptyP, CAP_99999999);


// R_AvgIndivLimitUMBR
// R_AvgIndivLimitUMBR1Y
// R_AvgIndivLimitUMBR1YProptyP
// R_AvgIndivLimitUMBR3Y
// R_AvgIndivLimitUMBR3YProptyP
// R_AvgIndivLimitUMBRProptyP

PolicyProperty: => AvgIndividualLimitUMBR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_UMBR),IndividualLimit);
Policy: => AvgIndividualLimitUMBR := AVE(PolicyProperty,AvgIndividualLimitUMBR);

// Report: => G_SetDefault4IndLimitUMBR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null));
Report: => G_SetDefault4IndLimitUMBR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null));

Report: => G_SetDefault4IndLimitUMBR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitUMBR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitUMBRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitUMBR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitUMBR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MaxIndivLimitUMBR := MIN(H_MaxIndivLimitUMBR, CAP_99999999);

Report: => H_MaxIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MaxIndivLimitUMBRProptyP := MIN(H_MaxIndivLimitUMBRProptyP, CAP_99999999);

Report: => H_MinIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MinIndivLimitUMBR := MIN(H_MinIndivLimitUMBR, CAP_99999999);

Report: => H_MinIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MinIndivLimitUMBRProptyP := MIN(H_MinIndivLimitUMBRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR := MIN(H_AvgIndivLimitUMBR, CAP_99999999);

Report: => H_AvgIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBRProptyP := MIN(H_AvgIndivLimitUMBRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitUMBR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR1Y := MIN(H_AvgIndivLimitUMBR1Y, CAP_99999999);

Report: => H_AvgIndivLimitUMBR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR1YProptyP := MIN(H_AvgIndivLimitUMBR1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitUMBR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR3Y := MIN(H_AvgIndivLimitUMBR3Y, CAP_99999999);

Report: => H_AvgIndivLimitUMBR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitUMBR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR3YProptyP := MIN(H_AvgIndivLimitUMBR3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MaxIndivLimitUMBR := MIN(H_MaxIndivLimitUMBR, CAP_99999999);

// Report: => H_MaxIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MaxIndivLimitUMBRProptyP := MIN(H_MaxIndivLimitUMBRProptyP, CAP_99999999);

// Report: => H_MinIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MinIndivLimitUMBR := MIN(H_MinIndivLimitUMBR, CAP_99999999);

// Report: => H_MinIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MinIndivLimitUMBRProptyP := MIN(H_MinIndivLimitUMBRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR := MIN(H_AvgIndivLimitUMBR, CAP_99999999);

// Report: => H_AvgIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBRProptyP := MIN(H_AvgIndivLimitUMBRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitUMBR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR1Y := MIN(H_AvgIndivLimitUMBR1Y, CAP_99999999);

// Report: => H_AvgIndivLimitUMBR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR1YProptyP := MIN(H_AvgIndivLimitUMBR1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitUMBR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR3Y := MIN(H_AvgIndivLimitUMBR3Y, CAP_99999999);

// Report: => H_AvgIndivLimitUMBR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR3YProptyP := MIN(H_AvgIndivLimitUMBR3YProptyP, CAP_99999999);


// R_AvgIndivLimitWDHL
// R_AvgIndivLimitWDHL1Y
// R_AvgIndivLimitWDHL1YProptyP
// R_AvgIndivLimitWDHL3Y
// R_AvgIndivLimitWDHL3YProptyP
// R_AvgIndivLimitWDHLProptyP

PolicyProperty: => AvgIndividualLimitWDHL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WDHL),IndividualLimit);
Policy: => AvgIndividualLimitWDHL := AVE(PolicyProperty,AvgIndividualLimitWDHL);

// Report: => G_SetDefault4IndLimitWDHL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null));
Report: => G_SetDefault4IndLimitWDHL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null));

Report: => G_SetDefault4IndLimitWDHL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWDHL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWDHLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWDHL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWDHL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MaxIndivLimitWDHL := MIN(H_MaxIndivLimitWDHL, CAP_99999999);

Report: => H_MaxIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MaxIndivLimitWDHLProptyP := MIN(H_MaxIndivLimitWDHLProptyP, CAP_99999999);

Report: => H_MinIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MinIndivLimitWDHL := MIN(H_MinIndivLimitWDHL, CAP_99999999);

Report: => H_MinIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MinIndivLimitWDHLProptyP := MIN(H_MinIndivLimitWDHLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL := MIN(H_AvgIndivLimitWDHL, CAP_99999999);

Report: => H_AvgIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHLProptyP := MIN(H_AvgIndivLimitWDHLProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWDHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL1Y := MIN(H_AvgIndivLimitWDHL1Y, CAP_99999999);

Report: => H_AvgIndivLimitWDHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL1YProptyP := MIN(H_AvgIndivLimitWDHL1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitWDHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL3Y := MIN(H_AvgIndivLimitWDHL3Y, CAP_99999999);

Report: => H_AvgIndivLimitWDHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWDHL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL3YProptyP := MIN(H_AvgIndivLimitWDHL3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MaxIndivLimitWDHL := MIN(H_MaxIndivLimitWDHL, CAP_99999999);

// Report: => H_MaxIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MaxIndivLimitWDHLProptyP := MIN(H_MaxIndivLimitWDHLProptyP, CAP_99999999);

// Report: => H_MinIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MinIndivLimitWDHL := MIN(H_MinIndivLimitWDHL, CAP_99999999);

// Report: => H_MinIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MinIndivLimitWDHLProptyP := MIN(H_MinIndivLimitWDHLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL := MIN(H_AvgIndivLimitWDHL, CAP_99999999);

// Report: => H_AvgIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHLProptyP := MIN(H_AvgIndivLimitWDHLProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWDHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL1Y := MIN(H_AvgIndivLimitWDHL1Y, CAP_99999999);

// Report: => H_AvgIndivLimitWDHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL1YProptyP := MIN(H_AvgIndivLimitWDHL1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitWDHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL3Y := MIN(H_AvgIndivLimitWDHL3Y, CAP_99999999);

// Report: => H_AvgIndivLimitWDHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL3YProptyP := MIN(H_AvgIndivLimitWDHL3YProptyP, CAP_99999999);


// R_AvgIndivLimitWIND
// R_AvgIndivLimitWIND1Y
// R_AvgIndivLimitWIND1YProptyP
// R_AvgIndivLimitWIND3Y
// R_AvgIndivLimitWIND3YProptyP
// R_AvgIndivLimitWINDProptyP

PolicyProperty: => AvgIndividualLimitWIND := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WIND),IndividualLimit);
Policy: => AvgIndividualLimitWIND := AVE(PolicyProperty,AvgIndividualLimitWIND);

// Report: => G_SetDefault4IndLimitWIND := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null));
Report: => G_SetDefault4IndLimitWIND := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null));

Report: => G_SetDefault4IndLimitWIND1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWIND3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWINDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWIND1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWIND3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MaxIndivLimitWIND := MIN(H_MaxIndivLimitWIND, CAP_99999999);

Report: => H_MaxIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MaxIndivLimitWINDProptyP := MIN(H_MaxIndivLimitWINDProptyP, CAP_99999999);

Report: => H_MinIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MinIndivLimitWIND := MIN(H_MinIndivLimitWIND, CAP_99999999);

Report: => H_MinIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MinIndivLimitWINDProptyP := MIN(H_MinIndivLimitWINDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND := MIN(H_AvgIndivLimitWIND, CAP_99999999);

Report: => H_AvgIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWINDProptyP := MIN(H_AvgIndivLimitWINDProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWIND1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND1Y := MIN(H_AvgIndivLimitWIND1Y, CAP_99999999);

Report: => H_AvgIndivLimitWIND1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND1YProptyP := MIN(H_AvgIndivLimitWIND1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitWIND3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND3Y := MIN(H_AvgIndivLimitWIND3Y, CAP_99999999);

Report: => H_AvgIndivLimitWIND3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWIND3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND3YProptyP := MIN(H_AvgIndivLimitWIND3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MaxIndivLimitWIND := MIN(H_MaxIndivLimitWIND, CAP_99999999);

// Report: => H_MaxIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MaxIndivLimitWINDProptyP := MIN(H_MaxIndivLimitWINDProptyP, CAP_99999999);

// Report: => H_MinIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MinIndivLimitWIND := MIN(H_MinIndivLimitWIND, CAP_99999999);

// Report: => H_MinIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MinIndivLimitWINDProptyP := MIN(H_MinIndivLimitWINDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND := MIN(H_AvgIndivLimitWIND, CAP_99999999);

// Report: => H_AvgIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWINDProptyP := MIN(H_AvgIndivLimitWINDProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWIND1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND1Y := MIN(H_AvgIndivLimitWIND1Y, CAP_99999999);

// Report: => H_AvgIndivLimitWIND1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND1YProptyP := MIN(H_AvgIndivLimitWIND1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitWIND3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND3Y := MIN(H_AvgIndivLimitWIND3Y, CAP_99999999);

// Report: => H_AvgIndivLimitWIND3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND3YProptyP := MIN(H_AvgIndivLimitWIND3YProptyP, CAP_99999999);

// R_AvgIndivLimitWINX
// R_AvgIndivLimitWINX1Y
// R_AvgIndivLimitWINX1YProptyP
// R_AvgIndivLimitWINX3Y
// R_AvgIndivLimitWINX3YProptyP
// R_AvgIndivLimitWINXProptyP

PolicyProperty: => AvgIndividualLimitWINX := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WINX),IndividualLimit);
Policy: => AvgIndividualLimitWINX := AVE(PolicyProperty,AvgIndividualLimitWINX);

// Report: => G_SetDefault4IndLimitWINX := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null));
Report: => G_SetDefault4IndLimitWINX := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null));

Report: => G_SetDefault4IndLimitWINX1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWINX3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWINXProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWINX1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWINX3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MaxIndivLimitWINX := MIN(H_MaxIndivLimitWINX, CAP_99999999);

Report: => H_MaxIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINXProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MaxIndivLimitWINXProptyP := MIN(H_MaxIndivLimitWINXProptyP, CAP_99999999);

Report: => H_MinIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MinIndivLimitWINX := MIN(H_MinIndivLimitWINX, CAP_99999999);

Report: => H_MinIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MinIndivLimitWINXProptyP := MIN(H_MinIndivLimitWINXProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX := MIN(H_AvgIndivLimitWINX, CAP_99999999);

Report: => H_AvgIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINXProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINXProptyP := MIN(H_AvgIndivLimitWINXProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWINX1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX1Y := MIN(H_AvgIndivLimitWINX1Y, CAP_99999999);

Report: => H_AvgIndivLimitWINX1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX1YProptyP := MIN(H_AvgIndivLimitWINX1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitWINX3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX3Y := MIN(H_AvgIndivLimitWINX3Y, CAP_99999999);

Report: => H_AvgIndivLimitWINX3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWINX3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX3YProptyP := MIN(H_AvgIndivLimitWINX3YProptyP, CAP_99999999);

 // Report: => H_MaxIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MaxIndivLimitWINX := MIN(H_MaxIndivLimitWINX, CAP_99999999);

// Report: => H_MaxIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MaxIndivLimitWINXProptyP := MIN(H_MaxIndivLimitWINXProptyP, CAP_99999999);

// Report: => H_MinIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MinIndivLimitWINX := MIN(H_MinIndivLimitWINX, CAP_99999999);

// Report: => H_MinIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MinIndivLimitWINXProptyP := MIN(H_MinIndivLimitWINXProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX := MIN(H_AvgIndivLimitWINX, CAP_99999999);

// Report: => H_AvgIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINXProptyP := MIN(H_AvgIndivLimitWINXProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWINX1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX1Y := MIN(H_AvgIndivLimitWINX1Y, CAP_99999999);

// Report: => H_AvgIndivLimitWINX1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX1YProptyP := MIN(H_AvgIndivLimitWINX1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitWINX3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX3Y := MIN(H_AvgIndivLimitWINX3Y, CAP_99999999);

// Report: => H_AvgIndivLimitWINX3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3,
																		// G_SetDefault4IndLimitWINX => DEFAULT_4, 
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX3YProptyP := MIN(H_AvgIndivLimitWINX3YProptyP, CAP_99999999);


// R_AvgIndivLimitWTCR
// R_AvgIndivLimitWTCR1Y
// R_AvgIndivLimitWTCR1YProptyP
// R_AvgIndivLimitWTCR3Y
// R_AvgIndivLimitWTCR3YProptyP
// R_AvgIndivLimitWTCRProptyP

PolicyProperty: => AvgIndividualLimitWTCR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WTCR),IndividualLimit);
Policy: => AvgIndividualLimitWTCR := AVE(PolicyProperty,AvgIndividualLimitWTCR);

// Report: => G_SetDefault4IndLimitWTCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null));
Report: => G_SetDefault4IndLimitWTCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null));

Report: => G_SetDefault4IndLimitWTCR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWTCR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWTCRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWTCR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWTCR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MaxIndivLimitWTCR := MIN(H_MaxIndivLimitWTCR, CAP_99999999);

Report: => H_MaxIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MaxIndivLimitWTCRProptyP := MIN(H_MaxIndivLimitWTCRProptyP, CAP_99999999);

Report: => H_MinIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MinIndivLimitWTCR := MIN(H_MinIndivLimitWTCR, CAP_99999999);

Report: => H_MinIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MinIndivLimitWTCRProptyP := MIN(H_MinIndivLimitWTCRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR := MIN(H_AvgIndivLimitWTCR, CAP_99999999);

Report: => H_AvgIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCRProptyP := MIN(H_AvgIndivLimitWTCRProptyP, CAP_99999999);


Report: => H_AvgIndivLimitWTCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR1Y := MIN(H_AvgIndivLimitWTCR1Y, CAP_99999999);

Report: => H_AvgIndivLimitWTCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR1YProptyP := MIN(H_AvgIndivLimitWTCR1YProptyP, CAP_99999999);

Report: => H_AvgIndivLimitWTCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR3Y := MIN(H_AvgIndivLimitWTCR3Y, CAP_99999999);

Report: => H_AvgIndivLimitWTCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWTCR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR3YProptyP := MIN(H_AvgIndivLimitWTCR3YProptyP, CAP_99999999);

// Report: => H_MaxIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3,
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MaxIndivLimitWTCR := MIN(H_MaxIndivLimitWTCR, CAP_99999999);

// Report: => H_MaxIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MaxIndivLimitWTCRProptyP := MIN(H_MaxIndivLimitWTCRProptyP, CAP_99999999);

// Report: => H_MinIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MinIndivLimitWTCR := MIN(H_MinIndivLimitWTCR, CAP_99999999);

// Report: => H_MinIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MinIndivLimitWTCRProptyP := MIN(H_MinIndivLimitWTCRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR := MIN(H_AvgIndivLimitWTCR, CAP_99999999);

// Report: => H_AvgIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCRProptyP := MIN(H_AvgIndivLimitWTCRProptyP, CAP_99999999);


// Report: => H_AvgIndivLimitWTCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR1Y := MIN(H_AvgIndivLimitWTCR1Y, CAP_99999999);

// Report: => H_AvgIndivLimitWTCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR1YProptyP := MIN(H_AvgIndivLimitWTCR1YProptyP, CAP_99999999);

// Report: => H_AvgIndivLimitWTCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR3Y := MIN(H_AvgIndivLimitWTCR3Y, CAP_99999999);

// Report: => H_AvgIndivLimitWTCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR3YProptyP := MIN(H_AvgIndivLimitWTCR3YProptyP, CAP_99999999);


//Returning customer
//Note, this attribute does not check the most recent
Policy: => NextPolicy := Sequence.NextWhere(rReport = Policy.rReport AND ValidPolicy,Calculated_End_Date,Calculated_Start_Date);// same with product logic
Policy: => NextPolicySameAmbest := Sequence.NextWhere((rReport = Policy.rReport) AND (Ambest = Policy.Ambest) AND ValidPolicy,Calculated_Start_Date, Calculated_End_Date);
Policy: => PreviousAmbestSub := Sequence.NextWhere((rReport = Policy.rReport) AND ValidPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbest := PreviousAmbestSub.Ambest;

//Audit
// Policy: => NextPolicySameAmbest := Sequence.NextWhere(rReport = Policy.rReport AND Ambest = Policy.Ambest AND ValidPolicy,Calculated_Start_Date, Calculated_End_Date);
// Policy: => PreviousAmbestSub := Sequence.NextWhere(rReport = Policy.rReport AND ValidPolicy,Calculated_Start_Date,Calculated_End_Date);
// Policy: => PreviousAmbest := PreviousAmbestSub.Ambest;

Policy: => AuditNextPolicyStartDate := NextPolicy.Calculated_Start_Date;
Policy: => AuditPreviousPolicySameAmbest := NextPolicySameAmbest.Calculated_End_Date;
Policy: => AuditPreviousPolicySameAStartDate := NextPolicySameAmbest.Calculated_Start_Date;
//

Policy: => LapseSameAmbest := MAP((DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date) < 0)  AND ValidPolicy => TRUE,
                              FALSE);
Policy: => LapseSameAmbestAge := DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date);
														
Policy: => ReturningInd := MAP((PreviousAmbest != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date) < 0) AND (NOT NextPolicySameAmbest.Calculated_Start_Date:Null) AND ValidPolicy => TRUE,
                              FALSE);

														
Report: => H_CntReturningTimes := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(ValidPolicy AND ReturningInd)));			
Report: => I_CntReturningTimes := MIN(H_CntReturningTimes, CAP_999);		

Report: => H_MaxReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes = 0 => DEFAULT_4,
																		MAX(Policy(ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge)));	
Report: => I_MaxReturningAge := MIN(H_MaxReturningAge, CAP_9999);																						


Report: => H_MinReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes = 0 => DEFAULT_4,
																		MIN(Policy(ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge)));	
Report: => I_MinReturningAge := MIN(H_MinReturningAge, CAP_9999);

Report: => H_SumReturningAge := SUM(Policy(ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge));	
Report: => H_AvgReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes < 1 => DEFAULT_4, //no value to calculat, 
																		H_SumReturningAge/H_CntReturningTimes);	
Report: => R_AvgReturningAge := MIN(H_AvgReturningAge, CAP_9999);

//homeowner policy returning customer
Policy: => NextPolicyHO := Sequence.NextWhere((rReport = Policy.rReport) AND ValidPolicy AND G_HOPolicy,Calculated_End_Date, Calculated_Start_Date);// same with product logic
Policy: => NextPolicySameAmbestHO := Sequence.NextWhere((rReport = Policy.rReport) AND (Ambest = Policy.Ambest) AND ValidPolicy AND G_HOPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbestSubHO := Sequence.NextWhere((rReport = Policy.rReport) AND ValidPolicy AND G_HOPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbestHO := PreviousAmbestSubHO.Ambest;

Policy: => LapseSameAmbestHO := MAP((DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND ValidPolicy => TRUE,
                              FALSE);
Policy: => LapseSameAmbestAgeHO := DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date);
//as long as this customer left the carrier,PreviousAmbest != Ambest, no limitation on the policy type, then count it										
// Policy: => ReturningIndHO := MAP((PreviousAmbest != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND ValidPolicy AND G_HOPolicy => TRUE,

Policy: => ReturningIndHO := MAP((PreviousAmbestHO != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND ValidPolicy AND G_HOPolicy => TRUE,
                              FALSE);
															
Report: => H_CntReturningTimesHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(ValidPolicy AND G_HOPolicy AND ReturningIndHO)));			
Report: => I_CntReturningTimesHO := MIN(H_CntReturningTimesHO, CAP_9999);		

Report: => H_MaxReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimesHO = 0 => DEFAULT_4,
																		MAX(Policy(ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO)));	
Report: => I_MaxReturningAgeHO := MIN(H_MaxReturningAgeHO, CAP_9999);																						


Report: => H_MinReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3,  
																		H_CntReturningTimesHO = 0 => DEFAULT_4,
																		MIN(Policy(ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO)));	
Report: => I_MinReturningAgeHO := MIN(H_MinReturningAgeHO, CAP_9999);

Report: => H_SumReturningAgeHO := SUM(Policy(ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO));	
Report: => H_AvgReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimesHO < 1 => DEFAULT_4,// if no returning customer, then no value to calculate
																		H_SumReturningAgeHO/H_CntReturningTimesHO);	
Report: => R_AvgReturningAgeHO := MIN(H_AvgReturningAgeHO, CAP_9999);
	

// Policy: => LapseAmbest := MAP(FirstAmbest AND Calculated_End_Date < rReport.DateOfReport => TRUE,
                              // MONTHSBETWEEN(PreviousPolicyAmbest.Calculated_End_Date, Calculated_Start_Date) > 0 => TRUE,
                              // FALSE);



//Lapse, same with the product lapse
// Policy: => PreviousPolicy := Sequence.PreviousWhere(rReport = Policy.rReport AND ValidPolicy,Calculated_End_Date,Calculated_Start_Date);
// Policy: => PreviousPolicySameAmbest := Sequence.PreviousWhere(rReport = Policy.rReport AND Ambest = Policy.Ambest AND ValidPolicy,Calculated_End_Date,Calculated_Start_Date);
Policy: => MostRecentPolicy := NextPolicy:Null;
// Policy: => FirstAmbest := PreviousPolicySameAmbest:Null;
Policy: => Lapse := MAP(ValidPolicy AND MostRecentPolicy AND (SubjectEndDatePolicy < rReport.DateOfReport) => TRUE,
                        ValidPolicy AND (DAYSBETWEEN(SubjectEndDatePolicy, NextPolicy.Calculated_Start_Date) > 0) => TRUE, //in order to caluclate the future policy, or current
                        FALSE);	
Policy: => LapseAge := 	IF(Lapse,DAYSBETWEEN(Calculated_End_Date, NextPolicy.Calculated_Start_Date), 0);	
Report: => H_CntLapse := MAP(G_SetDefault1  => DEFAULT_1,
														 G_SetDefault3 => DEFAULT_3, 
														 COUNT(Policy(ValidPolicy AND Lapse)));
Report: => I_CntLapse := MIN(H_CntLapse,CAP_999);



// Report: => LapseAmbestCount := COUNT(Policy(LapseAmbest));

//Advanced quoting
PolicyProperty: => PropertyUID := Location.UID; // pull property UID to make sure the lapse will be caluclated for each UID
PolicyProperty: => PolicyUID := Transaction.UID;
PolicyProperty: => PolicyTransactionID := Transaction.TransactionID;
PolicyProperty: => PolicyCalculated_Start_Date := Transaction.Calculated_Start_Date;
PolicyProperty: => PolicyCalculated_End_Date := Transaction.Calculated_End_Date;
PolicyProperty: => PolicyValidPolicy := Transaction.ValidPolicy;
PolicyProperty: => PolicyCancellationDate := Transaction.CancellationDate;

PolicyProperty: => FuturePolicy := PolicyCalculated_End_Date > PolicyCalculated_Start_Date; // incepation date is earlier than then retro date
PolicyProperty: => NextCalculateStartDateNoCancel := Sequence.NextWhere(PolicyValidPolicy AND PolicyTransactionID = PolicyProperty.PolicyTransactionID AND PropertyUID = PolicyProperty.PropertyUID AND PolicyCancellationDate:Null, PolicyCalculated_End_Date, PolicyCalculated_Start_Date).PolicyCalculated_Start_Date;
PolicyProperty: => LapseSameProptyNoCancel := DAYSBETWEEN(PolicyCalculated_End_Date, NextCalculateStartDateNoCancel);
PolicyProperty: => DaysAdvancedQuote := IF((PolicyCalculated_End_Date > NextCalculateStartDateNoCancel) AND (NextCalculateStartDateNoCancel > PolicyCalculated_Start_Date)  AND PolicyCancellationDate:Null, -LapseSameProptyNoCancel, 0);

// PolicyProperty: => LapseBetweenPolicy := IF((DAYSBETWEEN(PreviousCalculatedEndDate, PolicyCalculated_Start_Date) - C_GRACETIME) > 0, 1, 0); // the earliest policy should has 0 (check null case)
// Policy: => LapseBetweenPolicy := EXISTS(PolicyProperty(NOT FuturePolicy AND PolicyValidPolicy AND LapseBetweenPolicy = 1));


//lapse
// PolicyProperty: => PropertyUID := Location.UID; // pull property UID to make sure the lapse will be caluclated for each UID
// PolicyProperty: => PolicyUID := Transaction.UID;
// PolicyProperty: => PolicyTransactionID := Transaction.TransactionID;
// PolicyProperty: => PolicyCalculated_Start_Date := Transaction.Calculated_Start_Date;
// PolicyProperty: => PolicyCalculated_End_Date := Transaction.Calculated_End_Date;
// PolicyProperty: => PolicyValidPolicy := Transaction.ValidPolicy;

//lapse for the very first policy, calculated end date compre with date of order 
// Report: MostRecentPolicyEndDate := TOPN(Policy,Calculated_End_Date);
// Report: => MostRecentPolicyEndDate := TOPN(Policy(PolicyType IN POLICYTYPE_PP){UID, Calculated_End_Date, Calculated_Start_Date}, 1,  -Calculated_End_Date, -Calculated_Start_Date);
// Report: => EarliestPolicyEndDate := TOPN(Policy(PolicyType IN POLICYTYPE_PP){UID, Calculated_End_Date, Calculated_Start_Date}, 1,  Calculated_End_Date, Calculated_Start_Date);

// Report: => LapseForMostRecentPolicy := IF(MostRecentPolicyEndDate.Calculated_End_Date < DateOfReport, 1, 0);

// Policy: => LapseForMostRecentPolicy := rReport.LapseForMostRecentPolicy;


//lapse for the rest policies

// PolicyProperty: => FuturePolicy := PreviousCalculatedEndDate > PolicyCalculated_Start_Date;
// PolicyProperty: => PreviousCalculatedEndDate := Sequence.PreviousWhere(PolicyValidPolicy AND PolicyTransactionID = PolicyProperty.PolicyTransactionID AND PropertyUID = PolicyProperty.PropertyUID, -PolicyCalculated_End_Date, -PolicyCalculated_Start_Date).PolicyCalculated_End_Date;
// PolicyProperty: => LapseBetweenPolicy := IF((DAYSBETWEEN(PreviousCalculatedEndDate, PolicyCalculated_Start_Date) - C_GRACETIME) > 0, 1, 0); // the earliest policy should has 0 (check null case)
// Policy: => LapseBetweenPolicy := EXISTS(PolicyProperty(NOT FuturePolicy AND PolicyValidPolicy AND LapseBetweenPolicy = 1));


// PolicyProperty: => PreviousPolicy := Sequence.PreviousWhere(Transaction.rReport = PolicyProperty.Transaction.rReport,propty_coverage_end_date,propty_coverage_start_date);
// PolicyProperty: => Returning := EXISTS(PreviousPolicy) AND MONTHSBETWEEN(PreviousPolicy.propty_coverage_end_date, propty_coverage_start_date) > 0;
// Policy: => ReturningCount :- COUNT(PolicyProperty.Returning);
// Report: => ReturningCount := SUM(Policy,ReturningCount);


// Report: => CntAmbestWithLapsePolicy := 





///////////////////////2019 attributes///////////////////////
// Helper attributes and Constants
// Policy: POLICY_TYPE_LIST := ['HO'];

// Policy: =>Calculated_Start_Date:= MIN(InceptionDate, PolicyBeginDate);
// Policy: =>Calculated_End_Date_tmp:= MIN(PolicyEndDate, PolicyCancelDate);
// Policy: =>Calculated_End_Date:= MIN(Calculated_End_Date_tmp, CURRENTDATE());
// Policy: =>G_PolicyTenure := MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date);

// 
// Report: => G_PolicyTenure_tmp := ONLY(Current_Policy, G_PolicyTenure);


//Attributes 
// Report: => Plcy_Tenure_CP := IF(G_PolicyTenure_tmp:Null, -1,G_PolicyTenure_tmp);
// Report: => Plcy_MIN_Tenure := MIN(Policy(PolicyType IN POLICY_TYPE_LIST),G_PolicyTenure);
// Report: => Plcy_MAX_Tenure := MAX(Policy(PolicyType IN POLICY_TYPE_LIST), G_PolicyTenure);
// Report: => Plcy_TOT_Tenure := SUM(Policy(PolicyType IN POLICY_TYPE_LIST), G_PolicyTenure);
// Report: => Plcy_AVG_Tenure := IF(Plcy_CNT_All = 0, -1,ROUND((Plcy_TOT_Tenure / Plcy_CNT_All) * 10000)/10000);
// Report: => Plcy_CNT_All    := COUNT(Policy(PolicyType IN POLICY_TYPE_LIST));

//Audit
// Report: => Policy := 

//PolicyReport := ASSOCIATION(FLAT(Report Report = UID(TransactionID),Policy PolicyInformation = UID(TransactionID, Ambest, PolicyNumber)));