// IMPORT Entities;
IMPORT KnowledgeUniverse.CurrentCarrier_KEL.Entities;
// IMPORT CurrentCarrierProperty_KEL.Uses; // With the addition of CurrentCarrierProperty_Batch_KEL in Vault we can't keep this here, it will need to be added to the top level Compile.kel

//Constant
Policy: POLICY_TYPE_LIST := ['HO'];
Policy: DEFAULT_99999 := -99999;
Policy: DEFAULT_99998 := -99998;
Report: DEFAULT_1 := -1;
Report: DEFAULT_2 := -2;
Report: DEFAULT_3 := -3;
Report: DEFAULT_4 := -4;
Report: CAP_999 := 999;
Report: CAP_9999 := 9999;
Report: CAP_99999999 := 99999999;
Report: CAP_99999999_99 := 99999999.99;

// Policy: =>Calculated_End_Date_tmp:= MIN(PolicyEndDate, PolicyCancelDate);
// Policy: =>Calculated_End_Date:= MIN(Calculated_End_Date_tmp, CURRENTDATE());

//Function
// round to 2 decimals
FUNCTION: ROUND2(REAL inreal) <= ECL(ROUND(inreal + 0.00000000001, 2)) RETURNS REAL;


//Globals
// Policy: => Subject := PolicyHolder(NOT EndDate:Null AND SubjectNumber = 1).Holder; // Grab the primary policy holder for this policy (Relation = 'B1' would be additional policy holders)
Policy: => Subject := PolicyHolder(NOT EndDate:Null AND SubjectNumber > 0){SubjectNumber}; // Grab the primary policy holder for this policy (Relation = 'B1' would be additional policy holders)
//Policy: => ExistValidTerms := EXISTS(Subject);
//Audit
Policy: => ExistValidTerms := EXISTS(Subject) AND InsuranceType = 'PP';
Policy: => DateOfReport := rReport.DateOfReport;
Report: => SetDefault1 := COUNT(Policy(ExistValidTerms));//Do not have valid policy terms at all
Report: => SetDefault2 := COUNT(Policy(ExistValidTerms AND (PolicyType IN POLICY_TYPE_LIST)));//have policy terms but not in type HO

Policy: => SubjectEndDatePolicy := MAX(PolicyHolder(NOT EndDate:Null AND SubjectNumber > 0), EndDate);// null, if not valid records
Policy: => Calculated_End_Date := IF(NOT SubjectEndDatePolicy:Null, MIN(SubjectEndDatePolicy, DateOfReport));//null, if no subject end date at all. of course, not valid policy

Policy: => SubjectBeginDatePolicy := MIN(PolicyHolder(NOT EndDate:Null AND SubjectNumber > 0 AND EndDate = Policy.SubjectEndDatePolicy), StartDate);

Policy: => Calculated_Start_Date:= IF(NOT SubjectBeginDatePolicy:Null, MIN(InceptionDate,SubjectBeginDatePolicy),InceptionDate);//added inceptiondate if no subjectbegindate
//set the age to -99999, if (inceptiondate) start date > end date (future terms), or no terms to calcualte (should not happen since I need set this to -1)
Policy: => Policy_Tenure := IF(Calculated_End_Date:Null OR Calculated_Start_Date:Null OR Calculated_Start_Date > Calculated_End_Date, DEFAULT_99999, MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date));

//select the most recent policy term after scoring  date, CURRENTDATE, including future policy terms
// Policy: => Current_Term_SubjectOne := TOPN(Subject((CURRENTDATE() <= Calculated_End_Date) AND (SubjectNumber = 1)){UID, SubjectBeginDate, Policy_Tenure}, 1, -SubjectBeginDate, -Policy_Tenure);
// Policy: => SubjectBeginDate_CurrentTerm_SubjectOne := Current_Term_SubjectOne.SubjectBeginDate;
// Policy: => Policy_Tenure_CurrentTerm_SubjectOne := Current_Term_SubjectOne.Policy_Tenure;

// Report: => Current_Policy_SubjectOne := TOPN(Policy((PolicyType IN POLICY_TYPE_LIST)){UID, SubjectBeginDate_CurrentTerm_SubjectOne, Policy_Tenure_CurrentTerm_SubjectOne}, 1, -SubjectBeginDate_CurrentTerm_SubjectOne, -Policy_Tenure_CurrentTerm_SubjectOne);

// Report: => Policy_Tenure_tmp_SubjectOne := ONLY(Current_Policy_SubjectOne, Policy_Tenure_CurrentTerm_SubjectOne);

//Note: Logic issue. Calculate end date is processed date if it is future end date, this logic will not be able to grab all current cases.
Policy: => Policy_Tenure_CP := IF(Calculated_Start_Date > DateOfReport, DEFAULT_99999, // all future cases
																	MONTHSBETWEEN(Calculated_Start_Date, DateOfReport));
Report: => OnlyFuturePolicy_CP := NOT EXISTS(Policy(Policy_Tenure_CP >= 0 AND (PolicyType IN POLICY_TYPE_LIST)));
Report: => OnlyFuturePolicy := NOT EXISTS(Policy(Policy_Tenure >= 0 AND (PolicyType IN POLICY_TYPE_LIST)));

Policy: => CheckCP1 := ExistValidTerms AND (DateOfReport <= SubjectEndDatePolicy) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0;
Policy: => CheckCP2 := ExistValidTerms AND (DAYSBETWEEN(SubjectEndDatePolicy,DateOfReport) <= 30) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0;
 
//Take the oldest policy, by inception
// Report: => Current_Policy := TOPN(Policy(ExistValidTerms AND (FirstLoadDate <= SubjectEndDatePolicy OR DAYSBETWEEN(SubjectEndDatePolicy,FirstLoadDate) <= 30) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0){UID, InceptionDate, Policy_Tenure_CP}, 1, -InceptionDate, -Policy_Tenure_CP);
// Report: => Policy_Tenure_CP := ONLY(Current_Policy,Policy_Tenure_CP);
Report: => Policy_Tenure_CP := MAX(Policy(ExistValidTerms AND (CheckCP1 OR CheckCP2) AND (PolicyType IN POLICY_TYPE_LIST) AND Policy_Tenure_CP >= 0), Policy_Tenure_CP);


//Attributes 
Report: => Plcy_CNT_All_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																					 SetDefault2 = 0 => 0, // no HO
																					 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 COUNT(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0))); //true 0, with valid policy but not in HO
Report: => Plcy_CNT_All := MIN(Plcy_CNT_All_tmp,CAP_999);																			 
																			 
Report: => Plcy_Tenure_CP_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			   SetDefault2 = 0 => DEFAULT_2, // no HO
																				 OnlyFuturePolicy_CP OR Policy_Tenure_CP :Null => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS, OR HO, but not current
																				 Policy_Tenure_CP);
Report: => Plcy_Tenure_CP := MIN(Plcy_Tenure_CP_tmp,CAP_9999);		
																				 
Report: => Plcy_MIN_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 MIN(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0),Policy_Tenure));//true 0, age is in 1 month, Inception date to end date is in 1 month
Report: => Plcy_MIN_Tenure := MIN(Plcy_MIN_Tenure_tmp,CAP_9999);	

Report: => Plcy_MAX_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 MAX(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0), Policy_Tenure));
Report: => Plcy_MAX_Tenure := MIN(Plcy_MAX_Tenure_tmp,CAP_9999);	
																			 
Report: => Plcy_TOT_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			 SetDefault2 = 0 => DEFAULT_2,
																			 OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																			 SUM(Policy((PolicyType IN POLICY_TYPE_LIST) AND ExistValidTerms AND Policy_Tenure >= 0), Policy_Tenure));
Report: => Plcy_TOT_Tenure := MIN(Plcy_TOT_Tenure_tmp,CAP_9999);	
																			 
Report: => Plcy_CNT_All_TMP2 :=COUNT(Policy(PolicyType IN POLICY_TYPE_LIST AND ExistValidTerms AND Policy_Tenure >= 0));
Report: => Plcy_AVG_Tenure_tmp := MAP(SetDefault1 = 0  => DEFAULT_1,
																			    SetDefault2 = 0 => DEFAULT_2,
																					OnlyFuturePolicy => DEFAULT_3, // HO ONLY CONTAINS FUTURE TERMS
																				  ROUND((Plcy_TOT_Tenure / Plcy_CNT_All_TMP2) * 10000)/10000); //only count the  AND Policy_Tenure >= 0
Report: => Plcy_AVG_Tenure := MIN(Plcy_AVG_Tenure_tmp,CAP_9999);																						




//20200603 attribute developement with Kelly, Ben, Mark//
//Constant
Policy: C_RISKTYPE_S := ['S'];
Policy: C_RISKTYPE_P := ['P'];
Policy: C_RISKTYPE_M := ['M'];
Policy: C_RISKTYPE_N := ['N'];
Policy: C_RISKTYPE_F := ['F'];
Policy: C_RISKTYPE_A := ['A'];
Policy: C_RISKTYPE_OTHER := ['A','F','N'];


Policy: C_PROPERTY_P := ['P'];
Policy: C_PROPERTY_S := ['S'];
PolicyProperty: C_PROPERTY_P := ['P'];
PolicyProperty: C_PROPERTY_S := ['S'];
PolicyProperty: C_PROPERTY_OTHERS := ['B','R','U'];
PolicyProperty: C_FIN_FM := ['FM'];
PolicyProperty: C_FIN_SM := ['SM'];
PolicyProperty: C_FIN_OT := ['OT'];
PolicyProperty: C_FIN_AD := ['AD'];
PolicyProperty: C_FIN_HE := ['HE'];
PolicyProperty: C_FIN_FL := ['FL'];
PolicyProperty: C_FIN_OTHERS := ['OT','AD','HE','FL'];

Policy: C_POLICYTYPE_BO := ['BO'];
Policy: C_POLICYTYPE_CO := ['CO'];
Policy: C_POLICYTYPE_FL := ['FL'];
Policy: C_POLICYTYPE_FR := ['FR'];
Policy: C_POLICYTYPE_HL := ['HL'];
Policy: C_POLICYTYPE_HO := ['HO'];
Policy: C_POLICYTYPE_IM := ['IM'];
Policy: C_POLICYTYPE_MH := ['MH'];
Policy: C_POLICYTYPE_QK := ['QK'];
Policy: C_POLICYTYPE_RF := ['RF'];
Policy: C_POLICYTYPE_TN := ['TN'];
Policy: C_POLICYTYPE_UM := ['UM'];
Policy: C_POLICYTYPE_WC := ['WC'];
Policy: C_POLICYTYPE_XO := ['XO'];
Policy: C_POLICYTYPE_PP := ['BO', 'CO', 'FL', 'FR', 'HL', 'HO', 'IM', 'MH', 'QK', 'RF', 'TN', 'UM', 'WC', 'XO'];

Policy: C_CANCELLATIONREASON_COMP := ['COMP'];
Policy: C_CANCELLATIONREASON_CPLC := ['CPLC'];
Policy: C_CANCELLATIONREASON_CUST := ['CUST'];
Policy: C_CANCELLATIONREASON_LAPS := ['LAPS'];
Policy: C_CANCELLATIONREASON_MISR := ['MISR'];
Policy: C_CANCELLATIONREASON_NONP := ['NONP'];
Policy: C_CANCELLATIONREASON_NYDI := ['NYDI'];
Policy: C_CANCELLATIONREASON_NYSI := ['NYSI'];
Policy: C_CANCELLATIONREASON_OTHR := ['OTHR'];
Policy: C_CANCELLATIONREASON_PROP := ['PROP'];
Policy: C_CANCELLATIONREASON_REWR := ['REWR'];
Policy: C_CANCELLATIONREASON_RTCK := ['RTCK'];
Policy: C_CANCELLATIONREASON_SOLD := ['SOLD'];
Policy: C_CANCELLATIONREASON_TRAN := ['TRAN'];

PolicyProperty: C_COVERAGE_COVC :=['COVC'];
PolicyProperty: C_COVERAGE_COVE :=['COVE'];
PolicyProperty: C_COVERAGE_COVD :=['COVD'];
PolicyProperty: C_COVERAGE_COVF :=['COVF'];
PolicyProperty: C_COVERAGE_COVA :=['COVA'];
PolicyProperty: C_COVERAGE_COVB :=['COVB'];
PolicyProperty: C_COVERAGE_PPRC :=['PPRC'];
PolicyProperty: C_COVERAGE_OTHR :=['OTHR'];
PolicyProperty: C_COVERAGE_GRPL :=['GRPL'];
PolicyProperty: C_COVERAGE_MOLD :=['MOLD'];
PolicyProperty: C_COVERAGE_SCPP :=['SCPP'];
PolicyProperty: C_COVERAGE_ERQK :=['ERQK'];
PolicyProperty: C_COVERAGE_UMBR :=['UMBR'];
PolicyProperty: C_COVERAGE_WDHL :=['WDHL'];
PolicyProperty: C_COVERAGE_FIRA :=['FIRA'];
PolicyProperty: C_COVERAGE_HURR :=['HURR'];
PolicyProperty: C_COVERAGE_WTCR :=['WTCR'];
PolicyProperty: C_COVERAGE_BUSP :=['BUSP'];
PolicyProperty: C_COVERAGE_FLOD :=['FLOD'];
PolicyProperty: C_COVERAGE_HULL :=['HULL'];
PolicyProperty: C_COVERAGE_EQKI :=['EQKI'];
PolicyProperty: C_COVERAGE_OVRD :=['OVRD'];
PolicyProperty: C_COVERAGE_SINK :=['SINK'];
PolicyProperty: C_COVERAGE_FARM :=['FARM'];
PolicyProperty: C_COVERAGE_HAIL :=['HAIL'];
PolicyProperty: C_COVERAGE_HDCR :=['HDCR'];
PolicyProperty: C_COVERAGE_THTD :=['THTD'];
PolicyProperty: C_COVERAGE_WIND :=['WIND'];
PolicyProperty: C_COVERAGE_WINX :=['WINX'];

Policy: C_DEROG := ['NONP','LAPS','RTCK'];
Policy: C_REPORTSTATUS_C := ['C'];
Policy: C_REPORTSTATUS_I := ['I'];
Policy: C_REPORTSTATUS_E := ['E'];
Policy: C_REPORTSTATUS_D := ['D'];


Policy: C_GRACETIME := 10;//lapse
PolicyProperty: C_GRACETIME := 10;//lapse


//Global
// Grab the Policy linked to this Report with the most recent PeriodEndDate, using the most recent PeriodStartDate as a tie-breaker
// Report: => FirstPolicyPeriodEndDate := ONLY(TOPN(Policy, 1, -SubjectEndDatePolicy, -SubjectBeginDatePolicy)); 

// Policy: => G_ValidPolicy := EXISTS(Subject) AND InsuranceType = 'PP' AND (SubjectEndDatePolicy > InceptionDate);//Intermediate
// Policy: => G_ValidPolicy := EXISTS(Subject) AND (SubjectEndDatePolicy > InceptionDate) AND DataSource = 'SubjectSearchBatch';//Batch

Policy: => G_ValidPolicy := EXISTS(Subject) AND 
													(InsuranceType = 'PP' OR (InsuranceType:Null AND NOT DataSource:Null)) AND // For Intermediate the InsuranceType == ‘PP, but for Batch InsuranceType isn’t populated, but DataSource is
													(SubjectEndDatePolicy > InceptionDate) AND 
													DataSource != 'RiskAddressSearchBatch';


Policy: => G_Current := CheckCP1 OR CheckCP2;

Policy: => PolicyAge := MONTHSBETWEEN(Calculated_Start_Date, DateOfReport);
PolicyProperty: => PrimaryProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_P));
PolicyProperty: => SecondaryProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_S));
PolicyProperty: => OthersProperty := EXISTS(Coverages(PropertyType IN C_PROPERTY_OTHERS));
Policy: => G_SecondaryProperty := EXISTS(PolicyProperty(SecondaryProperty));
Policy: => G_OthersProperty := EXISTS(PolicyProperty(OthersProperty));
Policy: => G_DerogPolicy := (CancelReason IN C_DEROG) AND (NOT CancellationDate:Null);
Policy: => G_ExpiredPolicy := StatusReport IN C_REPORTSTATUS_E;

//audit
PolicyProperty: => NZCOVALimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVA)AND (IndividualLimit > 0)));
PolicyProperty: => NZCOVBLimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVB)AND (IndividualLimit > 0)));
PolicyProperty: => NZCOVCLimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVC)AND (IndividualLimit > 0)));
PolicyProperty: => NZCOVDLimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVD)AND (IndividualLimit > 0)));
PolicyProperty: => NZCOVELimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVE)AND (IndividualLimit > 0)));
PolicyProperty: => NZCOVFLimit := EXISTS(Coverages((CoverageType IN C_COVERAGE_COVF)AND (IndividualLimit > 0)));

PolicyProperty: => NZIndividualLimit := EXISTS(Coverages(IndividualLimit > 0 ));
PolicyProperty: => NZOccurrenceLimit := EXISTS(Coverages(OccurrenceLimit > 0));
PolicyProperty: => NZCombinedSingleLimit := EXISTS(Coverages(CombinedSingleLimit > 0));

//exist coverage
PolicyProperty: => COVA := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVA));
PolicyProperty: => COVB := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVB));
PolicyProperty: => COVC := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVC));
PolicyProperty: => COVD := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVD));
PolicyProperty: => COVE := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVE));
PolicyProperty: => COVF := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVF));

Policy: => COVA := IF(EXISTS(PolicyProperty(COVA)), 1, 0);
Policy: => COVB := IF(EXISTS(PolicyProperty(COVB)), 1, 0);
Policy: => COVC := IF(EXISTS(PolicyProperty(COVC)), 1, 0);
Policy: => COVD := IF(EXISTS(PolicyProperty(COVD)), 1, 0);
Policy: => COVE := IF(EXISTS(PolicyProperty(COVE)), 1, 0);
Policy: => COVF := IF(EXISTS(PolicyProperty(COVF)), 1, 0);

//Groups
Policy: => G_HOPolicy := PolicyType IN C_POLICYTYPE_HO;
Policy: => G_FLPolicy := PolicyType IN C_POLICYTYPE_FL;
Policy: => G_PrimaryProperty := EXISTS(PolicyProperty(PrimaryProperty));
Policy: => G_RiskTypePreferred := RiskType IN C_RISKTYPE_P;
Policy: => G_RiskTypeStandard := RiskType IN C_RISKTYPE_S;
Policy: => G_RiskTypeOthers := RiskType IN C_RISKTYPE_OTHER;


//Month since 
Policy: => G_MOSSubjectEndDate := IF(SubjectEndDatePolicy > DateOfReport,0, MONTHSBETWEEN(SubjectEndDatePolicy, DateOfReport));//Include the current policy, which ends after the date of report
Policy: => G_MOSPolicyCancelled := IF(CancellationDate > DateOfReport, 0, MONTHSBETWEEN(CancellationDate, DateOfReport)); // this also include the future cancelled policies, in attribute aggreation, if all policies are future then they should be filtered by set default -3. htis deal with current policy, but future cancellation
PolicyProperty: => PropertyCancellationDate := MIN(Coverages, PropertyCancellationDate);
Policy: => PropertyCancellationDate := MIN(PolicyProperty, PropertyCancellationDate);
Policy: => G_MOSPropertyCancellation := IF(PropertyCancellationDate > DateOfReport, 0, MONTHSBETWEEN(PropertyCancellationDate, DateOfReport));

//Defaults
Report: => G_SetDefault1 := COUNT(Policy(G_ValidPolicy)) = 0;//Do not have valid policy terms at all
Report: => G_SetDefault2HO := COUNT(Policy(G_ValidPolicy AND G_HOPolicy)) = 0;//have policy terms but not in type HO
Report: => G_SetDefault2RiskP := COUNT(Policy(G_ValidPolicy AND G_RiskTypePreferred)) = 0;//have policy terms but not in risk type P
Report: => G_SetDefault2RiskS := COUNT(Policy(G_ValidPolicy AND G_RiskTypeStandard)) = 0;//have policy terms but not in risk type S
Report: => G_SetDefault2ProptyP := COUNT(Policy(G_ValidPolicy AND G_PrimaryProperty)) = 0;//have policy and primary property


// Report: => SetDefault2ProptyP := COUNT(Policy(G_ValidPolicy AND ExistPrimaryPropty));//have policy terms but not in type HO
Policy: => G_PolicyTenure := IF(Calculated_End_Date:Null OR Calculated_Start_Date:Null OR Calculated_Start_Date > Calculated_End_Date, DEFAULT_99999, MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date));

Report: => G_SetDefault3 := NOT EXISTS(Policy(G_ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
// Report: => G_SetDefault3HO := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_HOPolicy)); //all are future policies
// Report: => G_SetDefault3RiskP := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_RiskTypePreferred)); //all are future policies
// Report: => G_SetDefault3RiskS := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_RiskTypeStandard)); //all are future policies
// Report: => G_SetDefault3ProptyP := NOT EXISTS(Policy(G_PolicyTenure >= 0 AND G_PrimaryProperty)); //all are future policies

Report: => G_SetDefault3HO := NOT EXISTS(Policy(G_ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3RiskP := NOT EXISTS(Policy(G_ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3RiskS := NOT EXISTS(Policy(G_ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies
Report: => G_SetDefault3ProptyP := NOT EXISTS(Policy(G_ValidPolicy AND G_PolicyTenure >= 0)); //all are future policies

//drop all future policy when counting
Policy: => G_CountablePolicy := G_ValidPolicy AND (G_PolicyTenure >= 0);//intermediate
// Policy: => G_CountablePolicy := EXISTS(Subject) AND (SubjectEndDatePolicy > InceptionDate) AND (G_PolicyTenure >= 0) AND DataSource = 'SubjectSearchBatch';//batch data

//****************************Attribute Pack 2****************************/
Report: => H_CntDistAmbestNumber := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault3 => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy){Ambest}));
Report: => I_CntDistAmbestNumber := MIN(H_CntDistAmbestNumber, CAP_999);		

Report: => H_CntDistAmbestNumberHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3 => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_HOPolicy){Ambest}));
Report: => I_CntDistAmbestNumberHO := MIN(H_CntDistAmbestNumberHO,CAP_999);


Report: => H_CntDistAmbestNumberProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3 => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){Ambest}));
Report: => I_CntDistAmbestNumberProptyP := MIN(H_CntDistAmbestNumberProptyP,CAP_999);


Report: => H_CntDistAmbestNumberRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskP => DEFAULT_2,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred){Ambest}));
Report: => I_CntDistAmbestNumberRiskP := MIN(H_CntDistAmbestNumberRiskP,CAP_999);

Report: => H_CntDistAmbestNumberRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskS => DEFAULT_2,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard){Ambest}));
Report: => I_CntDistAmbestNumberRiskS := MIN(H_CntDistAmbestNumberRiskS,CAP_999);

Report: => H_CntDistAmbestNumber1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){Ambest}));
Report: => I_CntDistAmbestNumber1Y := MIN(H_CntDistAmbestNumber1Y, CAP_999);		

Report: => H_CntDistAmbestNumber1YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){Ambest}));
Report: => I_CntDistAmbestNumber1YHO := MIN(H_CntDistAmbestNumber1YHO,CAP_999);


Report: => H_CntDistAmbestNumber1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){Ambest}));
Report: => I_CntDistAmbestNumber1YProptyP := MIN(H_CntDistAmbestNumber1YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber1YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){Ambest}));
Report: => I_CntDistAmbestNumber1YRiskP := MIN(H_CntDistAmbestNumber1YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber1YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12){Ambest}));
Report: => I_CntDistAmbestNumber1YRiskS := MIN(H_CntDistAmbestNumber1YRiskS,CAP_999);

Report: => H_CntDistAmbestNumber2Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){Ambest}));
Report: => I_CntDistAmbestNumber2Y := MIN(H_CntDistAmbestNumber2Y, CAP_999);		

Report: => H_CntDistAmbestNumber2YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){Ambest}));
Report: => I_CntDistAmbestNumber2YHO := MIN(H_CntDistAmbestNumber2YHO,CAP_999);


Report: => H_CntDistAmbestNumber2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){Ambest}));
Report: => I_CntDistAmbestNumber2YProptyP := MIN(H_CntDistAmbestNumber2YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber2YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){Ambest}));
Report: => I_CntDistAmbestNumber2YRiskP := MIN(H_CntDistAmbestNumber2YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber2YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){Ambest}));
Report: => I_CntDistAmbestNumber2YRiskS := MIN(H_CntDistAmbestNumber2YRiskS,CAP_999);

Report: => H_CntDistAmbestNumber3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){Ambest}));
Report: => I_CntDistAmbestNumber3Y := MIN(H_CntDistAmbestNumber3Y, CAP_999);		

Report: => H_CntDistAmbestNumber3YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){Ambest}));
Report: => I_CntDistAmbestNumber3YHO := MIN(H_CntDistAmbestNumber3YHO,CAP_999);


Report: => H_CntDistAmbestNumber3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){Ambest}));
Report: => I_CntDistAmbestNumber3YProptyP := MIN(H_CntDistAmbestNumber3YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber3YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){Ambest}));
Report: => I_CntDistAmbestNumber3YRiskP := MIN(H_CntDistAmbestNumber3YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber3YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36){Ambest}));
Report: => I_CntDistAmbestNumber3YRiskS := MIN(H_CntDistAmbestNumber3YRiskS,CAP_999);



Report: => H_CntDistAmbestNumber4Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){Ambest}));
Report: => I_CntDistAmbestNumber4Y := MIN(H_CntDistAmbestNumber4Y, CAP_999);		

Report: => H_CntDistAmbestNumber4YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){Ambest}));
Report: => I_CntDistAmbestNumber4YHO := MIN(H_CntDistAmbestNumber4YHO,CAP_999);


Report: => H_CntDistAmbestNumber4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){Ambest}));
Report: => I_CntDistAmbestNumber4YProptyP := MIN(H_CntDistAmbestNumber4YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber4YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){Ambest}));
Report: => I_CntDistAmbestNumber4YRiskP := MIN(H_CntDistAmbestNumber4YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber4YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){Ambest}));
Report: => I_CntDistAmbestNumber4YRiskS := MIN(H_CntDistAmbestNumber4YRiskS,CAP_999);

Report: => H_CntDistAmbestNumber5Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){Ambest}));
Report: => I_CntDistAmbestNumber5Y := MIN(H_CntDistAmbestNumber5Y, CAP_999);		

Report: => H_CntDistAmbestNumber5YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){Ambest}));
Report: => I_CntDistAmbestNumber5YHO := MIN(H_CntDistAmbestNumber5YHO,CAP_999);


Report: => H_CntDistAmbestNumber5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){Ambest}));
Report: => I_CntDistAmbestNumber5YProptyP := MIN(H_CntDistAmbestNumber5YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber5YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){Ambest}));
Report: => I_CntDistAmbestNumber5YRiskP := MIN(H_CntDistAmbestNumber5YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber5YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){Ambest}));
Report: => I_CntDistAmbestNumber5YRiskS := MIN(H_CntDistAmbestNumber5YRiskS,CAP_999);


Report: => H_CntDistAmbestNumber6Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){Ambest}));
Report: => I_CntDistAmbestNumber6Y := MIN(H_CntDistAmbestNumber6Y, CAP_999);		

Report: => H_CntDistAmbestNumber6YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){Ambest}));
Report: => I_CntDistAmbestNumber6YHO := MIN(H_CntDistAmbestNumber6YHO,CAP_999);


Report: => H_CntDistAmbestNumber6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){Ambest}));
Report: => I_CntDistAmbestNumber6YProptyP := MIN(H_CntDistAmbestNumber6YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber6YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){Ambest}));
Report: => I_CntDistAmbestNumber6YRiskP := MIN(H_CntDistAmbestNumber6YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber6YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){Ambest}));
Report: => I_CntDistAmbestNumber6YRiskS := MIN(H_CntDistAmbestNumber6YRiskS,CAP_999);

Report: => H_CntDistAmbestNumber7Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){Ambest}));
Report: => I_CntDistAmbestNumber7Y := MIN(H_CntDistAmbestNumber7Y, CAP_999);		

Report: => H_CntDistAmbestNumber7YHO := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2HO => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){Ambest}));
Report: => I_CntDistAmbestNumber7YHO := MIN(H_CntDistAmbestNumber7YHO,CAP_999);


Report: => H_CntDistAmbestNumber7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
											G_SetDefault2ProptyP => DEFAULT_2,
											G_SetDefault3 => DEFAULT_3, 
											COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){Ambest}));
Report: => I_CntDistAmbestNumber7YProptyP := MIN(H_CntDistAmbestNumber7YProptyP,CAP_999);


Report: => H_CntDistAmbestNumber7YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskP => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){Ambest}));
Report: => I_CntDistAmbestNumber7YRiskP := MIN(H_CntDistAmbestNumber7YRiskP,CAP_999);

Report: => H_CntDistAmbestNumber7YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2RiskS => DEFAULT_2,
												G_SetDefault3 => DEFAULT_3, 
												COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){Ambest}));
Report: => I_CntDistAmbestNumber7YRiskS := MIN(H_CntDistAmbestNumber7YRiskS,CAP_999);



//Current
Report: => H_CntDistAmbestNumberCurr := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault3 => DEFAULT_3,
																					COUNT(Policy(G_CountablePolicy AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurr := MIN(H_CntDistAmbestNumberCurr,CAP_999);

Report: => H_CntDistAmbestNumberCurrHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3HO => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrHO := MIN(H_CntDistAmbestNumberCurrHO,CAP_999);

Report: => H_CntDistAmbestNumberCurrRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskP => DEFAULT_2,
																						G_SetDefault3RiskP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrRiskP := MIN(H_CntDistAmbestNumberCurrRiskP,CAP_999);

Report: => H_CntDistAmbestNumberCurrRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskS => DEFAULT_2,
																						G_SetDefault3RiskS => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard AND G_Current){Ambest}));
Report: => I_CntDistAmbestNumberCurrRiskS := MIN(H_CntDistAmbestNumberCurrRiskS,CAP_999);

//Carrier Name
Report: => CARRIER_NAME_CP := COUNT(Policy(G_Current){CarrierName});


//Cancellation, all history
Report: => H_CntCancelledPol := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null)));
Report: => I_CntCancelledPol := MIN(H_CntCancelledPol,CAP_999);		

Report: => H_CntCancelledPolHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy)));
Report: => I_CntCancelledPolHO := MIN(H_CntCancelledPolHO,CAP_999);		

Report: => H_CntCancelledPolRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred)));
Report: => I_CntCancelledPolRiskP := MIN(H_CntCancelledPolRiskP,CAP_999);		

Report: => H_CntCancelledPolRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard)));
Report: => I_CntCancelledPolRiskS := MIN(H_CntCancelledPolRiskS,CAP_999);

//CURRENT
Report: => H_CntCancelledPolCurr := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_Current)));
Report: => I_CntCancelledPolCurr := MIN(H_CntCancelledPolCurr,CAP_999);		

Report: => H_CntCancelledPolCurrHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_Current)));
Report: => I_CntCancelledPolCurrHO := MIN(H_CntCancelledPolCurrHO,CAP_999);		

Report: => H_CntCancelledPolProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty)));
Report: => I_CntCancelledPolProptyP := MIN(H_CntCancelledPolProptyP,CAP_999);		

Report: => H_CntCancelledPolCurrRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskP => DEFAULT_2,
																				G_SetDefault3RiskP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_Current)));
Report: => I_CntCancelledPolCurrRiskP := MIN(H_CntCancelledPolCurrRiskP,CAP_999);		

Report: => H_CntCancelledPolCurrRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2RiskS => DEFAULT_2,
																				G_SetDefault3RiskS => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_Current)));
Report: => I_CntCancelledPolCurrRiskS := MIN(H_CntCancelledPolCurrRiskS,CAP_999);


//1 YEAR
Report: => H_CntCancelledPol1Y := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1Y := MIN(H_CntCancelledPol1Y,CAP_999);		

Report: => H_CntCancelledPol1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YHO := MIN(H_CntCancelledPol1YHO,CAP_999);		


Report: => H_CntCancelledPol1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																							G_SetDefault2ProptyP => DEFAULT_2,
																							G_SetDefault3ProptyP => DEFAULT_3, 
																							COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YProptyP := MIN(H_CntCancelledPol1YProptyP,CAP_999);		

Report: => H_CntCancelledPol1YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskP => DEFAULT_2,
																						G_SetDefault3RiskP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YRiskP := MIN(H_CntCancelledPol1YRiskP,CAP_999);		

Report: => H_CntCancelledPol1YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2RiskS => DEFAULT_2,
																						G_SetDefault3RiskS => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol1YRiskS := MIN(H_CntCancelledPol1YRiskS,CAP_999);

//3 YEAR
Report: => H_CntCancelledPol3Y := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3Y := MIN(H_CntCancelledPol3Y,CAP_999);		

Report: => H_CntCancelledPol3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3HO => DEFAULT_3, 
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YHO := MIN(H_CntCancelledPol3YHO,CAP_999);		

Report: => H_CntCancelledPol3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																							G_SetDefault2ProptyP => DEFAULT_2,
																							G_SetDefault3ProptyP => DEFAULT_3, 
																							COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YProptyP := MIN(H_CntCancelledPol3YProptyP,CAP_999);		

Report: => H_CntCancelledPol3YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2RiskP => DEFAULT_2,
																					G_SetDefault3RiskP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YRiskP := MIN(H_CntCancelledPol3YRiskP,CAP_999);		

Report: => H_CntCancelledPol3YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2RiskS => DEFAULT_2,
																					G_SetDefault3RiskS => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol3YRiskS := MIN(H_CntCancelledPol3YRiskS,CAP_999);


//cancelled age
// I_MonthsSinceLatestPolCancellation
// I_MonthsSinceLatestPolCancellationHO
// I_MonthsSinceLatestPolCancellationProptyP
// I_MonthsSinceOldestPolCancellation
// I_MonthsSinceOldestPolCancellationHO
// I_MonthsSinceOldestPolCancellationProptyP
//default -4, there is no cancellation at all, G_MOSPolicyCancelled is null
Report: => G_SetDefault4_CancelAge := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null));
Report: => G_SetDefault4_CancelAgeHO := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy));
Report: => G_SetDefault4_CancelAgeProptyP := COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty));

Report: => H_MonthsSinceLatestPolCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_CancelAge = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND NOT CancellationDate:Null), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellation := MIN(H_MonthsSinceLatestPolCancellation,CAP_9999);

Report: => H_MonthsSinceLatestPolCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3, 
																												G_SetDefault4_CancelAgeHO = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_HOPolicy), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellationHO := MIN(H_MonthsSinceLatestPolCancellationHO,CAP_9999);

Report: => H_MonthsSinceLatestPolCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_CancelAgeProptyP = 0 => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_PrimaryProperty), G_MOSPolicyCancelled));
Report: => I_MonthsSinceLatestPolCancellationProptyP := MIN(H_MonthsSinceLatestPolCancellationProptyP,CAP_9999);


Report: => H_MonthsSinceOldestPolCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_CancelAge = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND NOT CancellationDate:Null), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellation := MIN(H_MonthsSinceOldestPolCancellation,CAP_9999);

Report: => H_MonthsSinceOldestPolCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3,
																												G_SetDefault4_CancelAgeHO = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_HOPolicy), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellationHO := MIN(H_MonthsSinceOldestPolCancellationHO,CAP_9999);

Report: => H_MonthsSinceOldestPolCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_CancelAgeProptyP = 0 => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy  AND NOT CancellationDate:Null AND G_PrimaryProperty), G_MOSPolicyCancelled));
Report: => I_MonthsSinceOldestPolCancellationProptyP := MIN(H_MonthsSinceOldestPolCancellationProptyP,CAP_9999);

//derog, ['NONP','LAPS','RTCK'] or expired policy, when policy status is EXPIRED, C_REPORTSTATUS_E
// I_CntDerogCancellation
// I_CntDerogCancellationHO
// I_CntDerogCancellationProptyP
// I_CntDerogCancellation1Y
// I_CntDerogCancellation1YHO
// I_CntDerogCancellation1YProptyP
// I_CntDerogCancellation3Y
// I_CntDerogCancellation3YHO
// I_CntDerogCancellation3YProptyP

//with cancellation date, but no cancellation reason or expired policy
Report: => G_SetDefault4_Derog := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND G_ExpiredPolicy AND G_PolicyTenure >= 0)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);
																	
Report: => G_SetDefault4_DerogHO := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0 AND G_HOPolicy)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND G_ExpiredPolicy AND G_PolicyTenure >= 0 AND G_HOPolicy)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0 AND G_HOPolicy)) > 0);
																	
Report: => G_SetDefault4_DerogProptyP := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) = 0) AND //no cancellation reason code
																	(COUNT(Policy(G_CountablePolicy AND G_ExpiredPolicy AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) = 0) AND         //no expired policy
																	(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0 AND G_PrimaryProperty)) > 0);																	
																	
																	
Report: => H_CntDerogCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault3 => DEFAULT_3, 
																					G_SetDefault4_Derog => DEFAULT_4,
																					COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy))));
Report: => I_CntDerogCancellation := MIN(H_CntDerogCancellation, CAP_999);

Report: => H_CntDerogCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3HO => DEFAULT_3, 
																					G_SetDefault4_DerogHO => DEFAULT_4,
																					COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy) AND G_HOPolicy)));
Report: => I_CntDerogCancellationHO := MIN(H_CntDerogCancellationHO,CAP_9999);

Report: => H_CntDerogCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																								G_SetDefault2ProptyP => DEFAULT_2,
																								G_SetDefault3ProptyP => DEFAULT_3, 
																								G_SetDefault4_DerogProptyP => DEFAULT_4,
																								COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellationProptyP := MIN(H_CntDerogCancellationProptyP,CAP_9999);

                                                                              
Report: => H_CntDerogCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation1Y := MIN(H_CntDerogCancellation1Y, CAP_999);

Report: => H_CntDerogCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation1YHO := MIN(H_CntDerogCancellation1YHO,CAP_9999);

Report: => H_CntDerogCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation1YProptyP := MIN(H_CntDerogCancellation1YProptyP,CAP_9999);


                                                                              
Report: => H_CntDerogCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation3Y := MIN(H_CntDerogCancellation3Y, CAP_999);

Report: => H_CntDerogCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation3YHO := MIN(H_CntDerogCancellation3YHO,CAP_9999);

Report: => H_CntDerogCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation3YProptyP := MIN(H_CntDerogCancellation3YProptyP,CAP_9999);



//Each Cancellation reason code
//COMP
Policy: => G_COMPPolicy := CancelReason IN C_CANCELLATIONREASON_COMP;
Policy: => G_CPLCPolicy := CancelReason IN C_CANCELLATIONREASON_CPLC;
Policy: => G_CUSTPolicy := CancelReason IN C_CANCELLATIONREASON_CUST;
Policy: => G_LAPSPolicy := CancelReason IN C_CANCELLATIONREASON_LAPS;
Policy: => G_MISRPolicy := CancelReason IN C_CANCELLATIONREASON_MISR;
Policy: => G_NONPPolicy := CancelReason IN C_CANCELLATIONREASON_NONP;
Policy: => G_NYDIPolicy := CancelReason IN C_CANCELLATIONREASON_NYDI;
Policy: => G_NYSIPolicy := CancelReason IN C_CANCELLATIONREASON_NYSI;
Policy: => G_OTHRPolicy := CancelReason IN C_CANCELLATIONREASON_OTHR;
Policy: => G_PROPPolicy := CancelReason IN C_CANCELLATIONREASON_PROP;
Policy: => G_REWRPolicy := CancelReason IN C_CANCELLATIONREASON_REWR;
Policy: => G_RTCKPolicy := CancelReason IN C_CANCELLATIONREASON_RTCK;
Policy: => G_SOLDPolicy := CancelReason IN C_CANCELLATIONREASON_SOLD;
Policy: => G_TRANPolicy := CancelReason IN C_CANCELLATIONREASON_TRAN;

Report: => G_SetDefault4_CancelReason := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date
Report: => G_SetDefault4_CancelReasonHO := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date
Report: => G_SetDefault4_CancelReasonProptyP := (COUNT(Policy(G_CountablePolicy AND NOT CancelReason:Null AND G_PolicyTenure >= 0)) = 0) AND //no cancellation reason code
																					(COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PolicyTenure >= 0)) > 0);//but with cancellation date



Report: => H_CntCOMPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy)));
Report: => I_CntCOMPCancellation := MIN(H_CntCOMPCancellation, CAP_999);

Report: => H_CntCOMPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy)));
Report: => I_CntCOMPCancellationHO := MIN(H_CntCOMPCancellationHO,CAP_9999);

Report: => H_CntCOMPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty)));
Report: => I_CntCOMPCancellationProptyP := MIN(H_CntCOMPCancellationProptyP,CAP_9999);


																
Report: => H_CntCOMPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1Y := MIN(H_CntCOMPCancellation1Y, CAP_999);

Report: => H_CntCOMPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1YHO := MIN(H_CntCOMPCancellation1YHO,CAP_9999);

Report: => H_CntCOMPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation1YProptyP := MIN(H_CntCOMPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCOMPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3Y := MIN(H_CntCOMPCancellation3Y, CAP_999);

Report: => H_CntCOMPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3YHO := MIN(H_CntCOMPCancellation3YHO,CAP_9999);

Report: => H_CntCOMPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation3YProptyP := MIN(H_CntCOMPCancellation3YProptyP,CAP_9999);



Report: => H_CntCPLCCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy)));
Report: => I_CntCPLCCancellation := MIN(H_CntCPLCCancellation, CAP_999);

Report: => H_CntCPLCCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy)));
Report: => I_CntCPLCCancellationHO := MIN(H_CntCPLCCancellationHO,CAP_9999);

Report: => H_CntCPLCCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty)));
Report: => I_CntCPLCCancellationProptyP := MIN(H_CntCPLCCancellationProptyP,CAP_9999);


																
Report: => H_CntCPLCCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1Y := MIN(H_CntCPLCCancellation1Y, CAP_999);

Report: => H_CntCPLCCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1YHO := MIN(H_CntCPLCCancellation1YHO,CAP_9999);

Report: => H_CntCPLCCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation1YProptyP := MIN(H_CntCPLCCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCPLCCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3Y := MIN(H_CntCPLCCancellation3Y, CAP_999);

Report: => H_CntCPLCCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3YHO := MIN(H_CntCPLCCancellation3YHO,CAP_9999);

Report: => H_CntCPLCCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation3YProptyP := MIN(H_CntCPLCCancellation3YProptyP,CAP_9999);



Report: => H_CntCUSTCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy)));
Report: => I_CntCUSTCancellation := MIN(H_CntCUSTCancellation, CAP_999);

Report: => H_CntCUSTCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy)));
Report: => I_CntCUSTCancellationHO := MIN(H_CntCUSTCancellationHO,CAP_9999);

Report: => H_CntCUSTCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty)));
Report: => I_CntCUSTCancellationProptyP := MIN(H_CntCUSTCancellationProptyP,CAP_9999);


																
Report: => H_CntCUSTCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1Y := MIN(H_CntCUSTCancellation1Y, CAP_999);

Report: => H_CntCUSTCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1YHO := MIN(H_CntCUSTCancellation1YHO,CAP_9999);

Report: => H_CntCUSTCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation1YProptyP := MIN(H_CntCUSTCancellation1YProptyP,CAP_9999);

																
Report: => H_CntCUSTCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3Y := MIN(H_CntCUSTCancellation3Y, CAP_999);

Report: => H_CntCUSTCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3YHO := MIN(H_CntCUSTCancellation3YHO,CAP_9999);

Report: => H_CntCUSTCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation3YProptyP := MIN(H_CntCUSTCancellation3YProptyP,CAP_9999);



Report: => H_CntLAPSCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy)));
Report: => I_CntLAPSCancellation := MIN(H_CntLAPSCancellation, CAP_999);

Report: => H_CntLAPSCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy)));
Report: => I_CntLAPSCancellationHO := MIN(H_CntLAPSCancellationHO,CAP_9999);

Report: => H_CntLAPSCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty)));
Report: => I_CntLAPSCancellationProptyP := MIN(H_CntLAPSCancellationProptyP,CAP_9999);


																
Report: => H_CntLAPSCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1Y := MIN(H_CntLAPSCancellation1Y, CAP_999);

Report: => H_CntLAPSCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1YHO := MIN(H_CntLAPSCancellation1YHO,CAP_9999);

Report: => H_CntLAPSCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation1YProptyP := MIN(H_CntLAPSCancellation1YProptyP,CAP_9999);

																
Report: => H_CntLAPSCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3Y := MIN(H_CntLAPSCancellation3Y, CAP_999);

Report: => H_CntLAPSCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3YHO := MIN(H_CntLAPSCancellation3YHO,CAP_9999);

Report: => H_CntLAPSCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation3YProptyP := MIN(H_CntLAPSCancellation3YProptyP,CAP_9999);



Report: => H_CntMISRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy)));
Report: => I_CntMISRCancellation := MIN(H_CntMISRCancellation, CAP_999);

Report: => H_CntMISRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy)));
Report: => I_CntMISRCancellationHO := MIN(H_CntMISRCancellationHO,CAP_9999);

Report: => H_CntMISRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty)));
Report: => I_CntMISRCancellationProptyP := MIN(H_CntMISRCancellationProptyP,CAP_9999);


																
Report: => H_CntMISRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1Y := MIN(H_CntMISRCancellation1Y, CAP_999);

Report: => H_CntMISRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1YHO := MIN(H_CntMISRCancellation1YHO,CAP_9999);

Report: => H_CntMISRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation1YProptyP := MIN(H_CntMISRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntMISRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3Y := MIN(H_CntMISRCancellation3Y, CAP_999);

Report: => H_CntMISRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3YHO := MIN(H_CntMISRCancellation3YHO,CAP_9999);

Report: => H_CntMISRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation3YProptyP := MIN(H_CntMISRCancellation3YProptyP,CAP_9999);



Report: => H_CntNONPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy)));
Report: => I_CntNONPCancellation := MIN(H_CntNONPCancellation, CAP_999);

Report: => H_CntNONPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy)));
Report: => I_CntNONPCancellationHO := MIN(H_CntNONPCancellationHO,CAP_9999);

Report: => H_CntNONPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty)));
Report: => I_CntNONPCancellationProptyP := MIN(H_CntNONPCancellationProptyP,CAP_9999);


																
Report: => H_CntNONPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1Y := MIN(H_CntNONPCancellation1Y, CAP_999);

Report: => H_CntNONPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1YHO := MIN(H_CntNONPCancellation1YHO,CAP_9999);

Report: => H_CntNONPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation1YProptyP := MIN(H_CntNONPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntNONPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3Y := MIN(H_CntNONPCancellation3Y, CAP_999);

Report: => H_CntNONPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3YHO := MIN(H_CntNONPCancellation3YHO,CAP_9999);

Report: => H_CntNONPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation3YProptyP := MIN(H_CntNONPCancellation3YProptyP,CAP_9999);



Report: => H_CntNYDICancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy)));
Report: => I_CntNYDICancellation := MIN(H_CntNYDICancellation, CAP_999);

Report: => H_CntNYDICancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy)));
Report: => I_CntNYDICancellationHO := MIN(H_CntNYDICancellationHO,CAP_9999);

Report: => H_CntNYDICancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty)));
Report: => I_CntNYDICancellationProptyP := MIN(H_CntNYDICancellationProptyP,CAP_9999);


																
Report: => H_CntNYDICancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1Y := MIN(H_CntNYDICancellation1Y, CAP_999);

Report: => H_CntNYDICancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1YHO := MIN(H_CntNYDICancellation1YHO,CAP_9999);

Report: => H_CntNYDICancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation1YProptyP := MIN(H_CntNYDICancellation1YProptyP,CAP_9999);

																
Report: => H_CntNYDICancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3Y := MIN(H_CntNYDICancellation3Y, CAP_999);

Report: => H_CntNYDICancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3YHO := MIN(H_CntNYDICancellation3YHO,CAP_9999);

Report: => H_CntNYDICancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation3YProptyP := MIN(H_CntNYDICancellation3YProptyP,CAP_9999);



Report: => H_CntNYSICancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy)));
Report: => I_CntNYSICancellation := MIN(H_CntNYSICancellation, CAP_999);

Report: => H_CntNYSICancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy)));
Report: => I_CntNYSICancellationHO := MIN(H_CntNYSICancellationHO,CAP_9999);

Report: => H_CntNYSICancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty)));
Report: => I_CntNYSICancellationProptyP := MIN(H_CntNYSICancellationProptyP,CAP_9999);


																
Report: => H_CntNYSICancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1Y := MIN(H_CntNYSICancellation1Y, CAP_999);

Report: => H_CntNYSICancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1YHO := MIN(H_CntNYSICancellation1YHO,CAP_9999);

Report: => H_CntNYSICancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation1YProptyP := MIN(H_CntNYSICancellation1YProptyP,CAP_9999);

																
Report: => H_CntNYSICancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3Y := MIN(H_CntNYSICancellation3Y, CAP_999);

Report: => H_CntNYSICancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3YHO := MIN(H_CntNYSICancellation3YHO,CAP_9999);

Report: => H_CntNYSICancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation3YProptyP := MIN(H_CntNYSICancellation3YProptyP,CAP_9999);



Report: => H_CntOTHRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy)));
Report: => I_CntOTHRCancellation := MIN(H_CntOTHRCancellation, CAP_999);

Report: => H_CntOTHRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy)));
Report: => I_CntOTHRCancellationHO := MIN(H_CntOTHRCancellationHO,CAP_9999);

Report: => H_CntOTHRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty)));
Report: => I_CntOTHRCancellationProptyP := MIN(H_CntOTHRCancellationProptyP,CAP_9999);


																
Report: => H_CntOTHRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1Y := MIN(H_CntOTHRCancellation1Y, CAP_999);

Report: => H_CntOTHRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1YHO := MIN(H_CntOTHRCancellation1YHO,CAP_9999);

Report: => H_CntOTHRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation1YProptyP := MIN(H_CntOTHRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntOTHRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3Y := MIN(H_CntOTHRCancellation3Y, CAP_999);

Report: => H_CntOTHRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3YHO := MIN(H_CntOTHRCancellation3YHO,CAP_9999);

Report: => H_CntOTHRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation3YProptyP := MIN(H_CntOTHRCancellation3YProptyP,CAP_9999);



Report: => H_CntPROPCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy)));
Report: => I_CntPROPCancellation := MIN(H_CntPROPCancellation, CAP_999);

Report: => H_CntPROPCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy)));
Report: => I_CntPROPCancellationHO := MIN(H_CntPROPCancellationHO,CAP_9999);

Report: => H_CntPROPCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty)));
Report: => I_CntPROPCancellationProptyP := MIN(H_CntPROPCancellationProptyP,CAP_9999);


																
Report: => H_CntPROPCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1Y := MIN(H_CntPROPCancellation1Y, CAP_999);

Report: => H_CntPROPCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1YHO := MIN(H_CntPROPCancellation1YHO,CAP_9999);

Report: => H_CntPROPCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation1YProptyP := MIN(H_CntPROPCancellation1YProptyP,CAP_9999);

																
Report: => H_CntPROPCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3Y := MIN(H_CntPROPCancellation3Y, CAP_999);

Report: => H_CntPROPCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3YHO := MIN(H_CntPROPCancellation3YHO,CAP_9999);

Report: => H_CntPROPCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation3YProptyP := MIN(H_CntPROPCancellation3YProptyP,CAP_9999);


Report: => H_CntREWRCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy)));
Report: => I_CntREWRCancellation := MIN(H_CntREWRCancellation, CAP_999);

Report: => H_CntREWRCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy)));
Report: => I_CntREWRCancellationHO := MIN(H_CntREWRCancellationHO,CAP_9999);

Report: => H_CntREWRCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty)));
Report: => I_CntREWRCancellationProptyP := MIN(H_CntREWRCancellationProptyP,CAP_9999);


																
Report: => H_CntREWRCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1Y := MIN(H_CntREWRCancellation1Y, CAP_999);

Report: => H_CntREWRCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1YHO := MIN(H_CntREWRCancellation1YHO,CAP_9999);

Report: => H_CntREWRCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation1YProptyP := MIN(H_CntREWRCancellation1YProptyP,CAP_9999);

																
Report: => H_CntREWRCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3Y := MIN(H_CntREWRCancellation3Y, CAP_999);

Report: => H_CntREWRCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3YHO := MIN(H_CntREWRCancellation3YHO,CAP_9999);

Report: => H_CntREWRCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation3YProptyP := MIN(H_CntREWRCancellation3YProptyP,CAP_9999);



Report: => H_CntRTCKCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy)));
Report: => I_CntRTCKCancellation := MIN(H_CntRTCKCancellation, CAP_999);

Report: => H_CntRTCKCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy)));
Report: => I_CntRTCKCancellationHO := MIN(H_CntRTCKCancellationHO,CAP_9999);

Report: => H_CntRTCKCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty)));
Report: => I_CntRTCKCancellationProptyP := MIN(H_CntRTCKCancellationProptyP,CAP_9999);


																
Report: => H_CntRTCKCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1Y := MIN(H_CntRTCKCancellation1Y, CAP_999);

Report: => H_CntRTCKCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1YHO := MIN(H_CntRTCKCancellation1YHO,CAP_9999);

Report: => H_CntRTCKCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation1YProptyP := MIN(H_CntRTCKCancellation1YProptyP,CAP_9999);

																
Report: => H_CntRTCKCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3Y := MIN(H_CntRTCKCancellation3Y, CAP_999);

Report: => H_CntRTCKCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3YHO := MIN(H_CntRTCKCancellation3YHO,CAP_9999);

Report: => H_CntRTCKCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation3YProptyP := MIN(H_CntRTCKCancellation3YProptyP,CAP_9999);



Report: => H_CntSOLDCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy)));
Report: => I_CntSOLDCancellation := MIN(H_CntSOLDCancellation, CAP_999);

Report: => H_CntSOLDCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy)));
Report: => I_CntSOLDCancellationHO := MIN(H_CntSOLDCancellationHO,CAP_9999);

Report: => H_CntSOLDCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty)));
Report: => I_CntSOLDCancellationProptyP := MIN(H_CntSOLDCancellationProptyP,CAP_9999);


																
Report: => H_CntSOLDCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1Y := MIN(H_CntSOLDCancellation1Y, CAP_999);

Report: => H_CntSOLDCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1YHO := MIN(H_CntSOLDCancellation1YHO,CAP_9999);

Report: => H_CntSOLDCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation1YProptyP := MIN(H_CntSOLDCancellation1YProptyP,CAP_9999);

																
Report: => H_CntSOLDCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3Y := MIN(H_CntSOLDCancellation3Y, CAP_999);

Report: => H_CntSOLDCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3YHO := MIN(H_CntSOLDCancellation3YHO,CAP_9999);

Report: => H_CntSOLDCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation3YProptyP := MIN(H_CntSOLDCancellation3YProptyP,CAP_9999);


Report: => H_CntTRANCancellation := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy)));
Report: => I_CntTRANCancellation := MIN(H_CntTRANCancellation, CAP_999);

Report: => H_CntTRANCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy)));
Report: => I_CntTRANCancellationHO := MIN(H_CntTRANCancellationHO,CAP_9999);

Report: => H_CntTRANCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty)));
Report: => I_CntTRANCancellationProptyP := MIN(H_CntTRANCancellationProptyP,CAP_9999);


																
Report: => H_CntTRANCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1Y := MIN(H_CntTRANCancellation1Y, CAP_999);

Report: => H_CntTRANCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1YHO := MIN(H_CntTRANCancellation1YHO,CAP_9999);

Report: => H_CntTRANCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 12 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation1YProptyP := MIN(H_CntTRANCancellation1YProptyP,CAP_9999);

																
Report: => H_CntTRANCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault3 => DEFAULT_3, 
										G_SetDefault4_CancelReason  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3Y := MIN(H_CntTRANCancellation3Y, CAP_999);

Report: => H_CntTRANCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2HO => DEFAULT_2,
										G_SetDefault3HO => DEFAULT_3, 
										G_SetDefault4_CancelReasonHO  => DEFAULT_4,
										COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3YHO := MIN(H_CntTRANCancellation3YHO,CAP_9999);

Report: => H_CntTRANCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
												G_SetDefault2ProptyP => DEFAULT_2,
												G_SetDefault3ProptyP => DEFAULT_3, 
												G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
												COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 36 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation3YProptyP := MIN(H_CntTRANCancellation3YProptyP,CAP_9999);



//Property cancellation, 
// I_CntProptyCancellation
// I_CntProptyCancellationHO
// I_CntProptyCancellationProptyP
// I_CntProptyCancellation1Y
// I_CntProptyCancellation1YHO
// I_CntProptyCancellation1YProptyP
// I_CntProptyCancellation3Y
// I_CntProptyCancellation3YHO
// I_CntProptyCancellation3YProptyP
PolicyProperty: => PropertyCanlletion := EXISTS(Coverages(NOT PropertyCancellationDate:Null));
Policy: => PropertyCanlletion := EXISTS(PolicyProperty(PropertyCanlletion));

Report: => H_CntProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion)));
Report: => I_CntProptyCancellation := MIN(H_CntProptyCancellation,CAP_999);

Report: => H_CntProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy)));
Report: => I_CntProptyCancellationHO := MIN(H_CntProptyCancellationHO,CAP_999);

Report: => H_CntProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty)));
Report: => I_CntProptyCancellationProptyP := MIN(H_CntProptyCancellationProptyP,CAP_999);

Report: => H_CntProptyCancellation1Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1Y := MIN(H_CntProptyCancellation1Y,CAP_999);

Report: => H_CntProptyCancellation1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1YHO := MIN(H_CntProptyCancellation1YHO,CAP_999);

Report: => H_CntProptyCancellation1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 12)));
Report: => I_CntProptyCancellation1YProptyP := MIN(H_CntProptyCancellation1YProptyP,CAP_999);

Report: => H_CntProptyCancellation3Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3Y := MIN(H_CntProptyCancellation3Y,CAP_999);

Report: => H_CntProptyCancellation3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3YHO := MIN(H_CntProptyCancellation3YHO,CAP_999);

Report: => H_CntProptyCancellation3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault2ProptyP => DEFAULT_2,
																				G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 36)));
Report: => I_CntProptyCancellation3YProptyP := MIN(H_CntProptyCancellation3YProptyP,CAP_999);

// I_MonthsSinceLatestProptyCancellation
// I_MonthsSinceLatestProptyCancellationHO
// I_MonthsSinceLatestProptyCancellationProptyP
// I_MonthsSinceOldestProptyCancellation
// I_MonthsSinceOldestProptyCancellationHO
// I_MonthsSinceOldestProptyCancellationProptyP
Report: => G_SetDefault4_ProptyCancelAge := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion)) = 0;
Report: => G_SetDefault4_ProptyCancelAgeHO := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy)) = 0;
Report: => G_SetDefault4_ProptyCancelAgeProptyP := COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty)) = 0;


Report: => H_MonthsSinceLatestProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3,
																												G_SetDefault4_ProptyCancelAge => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellation := MIN(H_MonthsSinceLatestProptyCancellation,CAP_9999);

Report: => H_MonthsSinceLatestProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3,
																												G_SetDefault4_ProptyCancelAgeHO => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellationHO := MIN(H_MonthsSinceLatestProptyCancellationHO,CAP_9999);

Report: => H_MonthsSinceLatestProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																													G_SetDefault4_ProptyCancelAgeProptyP => DEFAULT_4,
																												MIN(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty), G_MOSPropertyCancellation));
Report: => I_MonthsSinceLatestProptyCancellationProptyP := MIN(H_MonthsSinceLatestProptyCancellationProptyP,CAP_9999);


Report: => H_MonthsSinceOldestProptyCancellation := MAP(G_SetDefault1  => DEFAULT_1,
																												G_SetDefault3 => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAge => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellation := MIN(H_MonthsSinceOldestProptyCancellation,CAP_9999);

Report: => H_MonthsSinceOldestProptyCancellationHO := MAP(G_SetDefault1  => DEFAULT_1,
																													G_SetDefault2HO => DEFAULT_2,
																												G_SetDefault3HO => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAgeHO => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellationHO := MIN(H_MonthsSinceOldestProptyCancellationHO,CAP_9999);

Report: => H_MonthsSinceOldestProptyCancellationProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																															G_SetDefault2ProptyP => DEFAULT_2,
																															G_SetDefault3ProptyP => DEFAULT_3, 
																												G_SetDefault4_ProptyCancelAgeProptyP => DEFAULT_4,
																												MAX(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty), G_MOSPropertyCancellation));
Report: => I_MonthsSinceOldestProptyCancellationProptyP := MIN(H_MonthsSinceOldestProptyCancellationProptyP,CAP_9999);


//Finance type, and property
//count property, concat HouseNumber, StreetName, SecondaryRange, State, Zip5
// I_CntProptyWithFinTypeFM
// I_CntProptyWithFinTypeFMHO
// I_CntProptyWithFinTypeFMProptyP
//count the properties with finance type FM
PolicyProperty: => H_FirstMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_FM));
PolicyProperty: => H_SecondaryMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_SM));
PolicyProperty: => H_OtherMortgage := EXISTS(FinanceInfo(FinanceType IN C_FIN_OTHERS));

Policy: => PropertyID_FM := PolicyProperty(H_FirstMortgage).Location;

Report: => H_CntProptyWithFinTypeFM := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM := MIN(H_CntProptyWithFinTypeFM, CAP_999);

Report: => H_CntProptyWithFinTypeFMHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFMHO := MIN(H_CntProptyWithFinTypeFMHO, CAP_999);

Report: => H_CntProptyWithFinTypeFMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																							G_SetDefault2ProptyP => DEFAULT_2,
																							G_SetDefault3ProptyP => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFMProptyP := MIN(H_CntProptyWithFinTypeFMProptyP, CAP_999);

// I_CntProptyWithFinTypeFM1Y
// I_CntProptyWithFinTypeFM1YHO
// I_CntProptyWithFinTypeFM1YProptyP
Report: => H_CntProptyWithFinTypeFM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1Y := MIN(H_CntProptyWithFinTypeFM1Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1YHO := MIN(H_CntProptyWithFinTypeFM1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM1YProptyP := MIN(H_CntProptyWithFinTypeFM1YProptyP, CAP_999);

// I_CntProptyWithFinTypeFM3Y
// I_CntProptyWithFinTypeFM3YHO
// I_CntProptyWithFinTypeFM3YProptyP
Report: => H_CntProptyWithFinTypeFM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3Y := MIN(H_CntProptyWithFinTypeFM3Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3YHO := MIN(H_CntProptyWithFinTypeFM3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM3YProptyP := MIN(H_CntProptyWithFinTypeFM3YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM
// I_CntProptyWithFinTypeSMHO
// I_CntProptyWithFinTypeSMProptyP
// I_CntProptyWithFinTypeSM1Y
// I_CntProptyWithFinTypeSM1YHO
// I_CntProptyWithFinTypeSM1YProptyP
// I_CntProptyWithFinTypeSM3Y
// I_CntProptyWithFinTypeSM3YHO
// I_CntProptyWithFinTypeSM3YProptyP
Policy: => PropertyID_SM := PolicyProperty(H_SecondaryMortgage).Location;
Report: => H_CntProptyWithFinTypeSM := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM := MIN(H_CntProptyWithFinTypeSM, CAP_999);

Report: => H_CntProptyWithFinTypeSMHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSMHO := MIN(H_CntProptyWithFinTypeSMHO, CAP_999);

Report: => H_CntProptyWithFinTypeSMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSMProptyP := MIN(H_CntProptyWithFinTypeSMProptyP, CAP_999);


Report: => H_CntProptyWithFinTypeSM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1Y := MIN(H_CntProptyWithFinTypeSM1Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1YHO := MIN(H_CntProptyWithFinTypeSM1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM1YProptyP := MIN(H_CntProptyWithFinTypeSM1YProptyP, CAP_999);


Report: => H_CntProptyWithFinTypeSM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3Y := MIN(H_CntProptyWithFinTypeSM3Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3YHO := MIN(H_CntProptyWithFinTypeSM3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM3YProptyP := MIN(H_CntProptyWithFinTypeSM3YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers
// I_CntProptyWithFinTypeOthersHO
// I_CntProptyWithFinTypeOthersProptyP
// I_CntProptyWithFinTypeOthers1Y
// I_CntProptyWithFinTypeOthers1YHO
// I_CntProptyWithFinTypeOthers1YProptyP
// I_CntProptyWithFinTypeOthers3Y
// I_CntProptyWithFinTypeOthers3YHO
// I_CntProptyWithFinTypeOthers3YProptyP
Policy: => PropertyID_Others := PolicyProperty(H_OtherMortgage).Location;
Report: => H_CntProptyWithFinTypeOthers := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers := MIN(H_CntProptyWithFinTypeOthers, CAP_999);

Report: => H_CntProptyWithFinTypeOthersHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthersHO := MIN(H_CntProptyWithFinTypeOthersHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthersProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthersProptyP := MIN(H_CntProptyWithFinTypeOthersProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers1Y
// I_CntProptyWithFinTypeOthers1YHO
// I_CntProptyWithFinTypeOthers1YProptyP
Report: => H_CntProptyWithFinTypeOthers1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1Y := MIN(H_CntProptyWithFinTypeOthers1Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1YHO := MIN(H_CntProptyWithFinTypeOthers1YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers1YProptyP := MIN(H_CntProptyWithFinTypeOthers1YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers3Y
// I_CntProptyWithFinTypeOthers3YHO
// I_CntProptyWithFinTypeOthers3YProptyP
Report: => H_CntProptyWithFinTypeOthers3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3Y := MIN(H_CntProptyWithFinTypeOthers3Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3YHO := MIN(H_CntProptyWithFinTypeOthers3YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers3YProptyP := MIN(H_CntProptyWithFinTypeOthers3YProptyP, CAP_999);


// I_CntDistFinType
// I_CntDistFinTypeHO
// I_CntDistFinTypeProptyP
// I_CntDistFinType1Y
// I_CntDistFinType1YHO
// I_CntDistFinType1YProptyP
// I_CntDistFinType3Y
// I_CntDistFinType3YHO
// I_CntDistFinType3YProptyP


//count distinct Finance types
PolicyProperty: => FinanceType := FinanceInfo{FinanceType};
Policy: => H_FinanceTypes := PolicyProperty.FinanceType{FinanceType};
Report: => H_CntDistFinType := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType := MIN(H_CntDistFinType, CAP_999);		

Report: => H_CntDistFinTypeHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_HOPolicy).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinTypeHO := MIN(H_CntDistFinTypeHO, CAP_999);	

Report: => H_CntDistFinTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinTypeProptyP := MIN(H_CntDistFinTypeProptyP, CAP_999);


Report: => H_CntDistFinType1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1Y := MIN(H_CntDistFinType1Y, CAP_999);    

Report: => H_CntDistFinType1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1YHO := MIN(H_CntDistFinType1YHO, CAP_999);  

Report: => H_CntDistFinType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType1YProptyP := MIN(H_CntDistFinType1YProptyP, CAP_999);

Report: => H_CntDistFinType3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3Y := MIN(H_CntDistFinType3Y, CAP_999);    

Report: => H_CntDistFinType3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3YHO := MIN(H_CntDistFinType3YHO, CAP_999);  

Report: => H_CntDistFinType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType3YProptyP := MIN(H_CntDistFinType3YProptyP, CAP_999);


// I_CntFinCompany
// I_CntFinCompanyHO
// I_CntFinCompanyProptyP
// I_CntFinCompany1Y
// I_CntFinCompany1YHO
// I_CntFinCompany1YProptyP
// I_CntFinCompany3Y
// I_CntFinCompany3YHO
// I_CntFinCompany3YProptyP
//Dedupe the finance company by the finance type of each property id
PolicyProperty.FinanceInfo: => Location := PolicyProperty.Location;
Policy: => FinCompany := PolicyProperty.FinanceInfo(NOT FinanceType:Null){Location,FinanceType};

//All History 
Report: => FinCompany := Policy(G_CountablePolicy).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany));
Report: => I_CntFinCompany := MIN(H_CntFinCompany, CAP_999);	

//HO group
Report: => FinCompanyHO := Policy(G_CountablePolicy AND G_HOPolicy).FinCompany{Location,FinanceType};

Report: => H_CntFinCompanyHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompanyHO));
Report: => I_CntFinCompanyHO := MIN(H_CntFinCompanyHO, CAP_999);      

//Primary group
Report: => FinCompanyProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty).FinCompany{Location,FinanceType};

Report: => H_CntFinCompanyProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompanyProptyP));
Report: => I_CntFinCompanyProptyP := MIN(H_CntFinCompanyProptyP, CAP_999);    



//1Y
Report: => FinCompany1Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany1Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany1Y));
Report: => I_CntFinCompany1Y := MIN(H_CntFinCompany1Y, CAP_999);	

//1Y HO group
Report: => FinCompany1YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany1YHO));
Report: => I_CntFinCompany1YHO := MIN(H_CntFinCompany1YHO, CAP_999);      

//1Y Primary group
Report: => FinCompany1YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany1YProptyP));
Report: => I_CntFinCompany1YProptyP := MIN(H_CntFinCompany1YProptyP, CAP_999);    



//2Y
Report: => FinCompany2Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany2Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany2Y));
Report: => I_CntFinCompany2Y := MIN(H_CntFinCompany2Y, CAP_999);	

//2Y HO group
Report: => FinCompany2YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany2YHO));
Report: => I_CntFinCompany2YHO := MIN(H_CntFinCompany2YHO, CAP_999);      

//2Y Primary group
Report: => FinCompany2YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany2YProptyP));
Report: => I_CntFinCompany2YProptyP := MIN(H_CntFinCompany2YProptyP, CAP_999);    


//3Y
Report: => FinCompany3Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany3Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany3Y));
Report: => I_CntFinCompany3Y := MIN(H_CntFinCompany3Y, CAP_999);	

//3Y HO group
Report: => FinCompany3YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany3YHO));
Report: => I_CntFinCompany3YHO := MIN(H_CntFinCompany3YHO, CAP_999);      

//3Y Primary group
Report: => FinCompany3YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany3YProptyP));
Report: => I_CntFinCompany3YProptyP := MIN(H_CntFinCompany3YProptyP, CAP_999);    


//4Y
Report: => FinCompany4Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany4Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany4Y));
Report: => I_CntFinCompany4Y := MIN(H_CntFinCompany4Y, CAP_999);	

//4Y HO group
Report: => FinCompany4YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany4YHO));
Report: => I_CntFinCompany4YHO := MIN(H_CntFinCompany4YHO, CAP_999);      

//4Y Primary group
Report: => FinCompany4YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany4YProptyP));
Report: => I_CntFinCompany4YProptyP := MIN(H_CntFinCompany4YProptyP, CAP_999);    


//5Y
Report: => FinCompany5Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany5Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany5Y));
Report: => I_CntFinCompany5Y := MIN(H_CntFinCompany5Y, CAP_999);	

//5Y HO group
Report: => FinCompany5YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany5YHO));
Report: => I_CntFinCompany5YHO := MIN(H_CntFinCompany5YHO, CAP_999);      

//5Y Primary group
Report: => FinCompany5YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany5YProptyP));
Report: => I_CntFinCompany5YProptyP := MIN(H_CntFinCompany5YProptyP, CAP_999);    


//6Y
Report: => FinCompany6Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany6Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany6Y));
Report: => I_CntFinCompany6Y := MIN(H_CntFinCompany6Y, CAP_999);	

//6Y HO group
Report: => FinCompany6YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany6YHO));
Report: => I_CntFinCompany6YHO := MIN(H_CntFinCompany6YHO, CAP_999);      

//6Y Primary group
Report: => FinCompany6YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany6YProptyP));
Report: => I_CntFinCompany6YProptyP := MIN(H_CntFinCompany6YProptyP, CAP_999);    



//7Y
Report: => FinCompany7Y := Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany7Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(FinCompany7Y));
Report: => I_CntFinCompany7Y := MIN(H_CntFinCompany7Y, CAP_999);	

//7Y HO group
Report: => FinCompany7YHO := Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault2HO => DEFAULT_2,
                                    G_SetDefault3HO => DEFAULT_3, 
                              COUNT(FinCompany7YHO));
Report: => I_CntFinCompany7YHO := MIN(H_CntFinCompany7YHO, CAP_999);      

//7Y Primary group
Report: => FinCompany7YProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).FinCompany{Location,FinanceType};

Report: => H_CntFinCompany7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault2ProptyP => DEFAULT_2,
                                         G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(FinCompany7YProptyP));
Report: => I_CntFinCompany7YProptyP := MIN(H_CntFinCompany7YProptyP, CAP_999);    


//Count for property
// I_CntPropty
// I_CntProptyHO
// I_CntPropty1Y
// I_CntPropty1YHO
// I_CntPropty3Y
// I_CntPropty3YHO
Policy: => PropertyID := PolicyProperty.Location;
Report: => H_CntPropty := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy).PropertyID{UID}));
Report: => I_CntPropty := MIN(H_CntPropty, CAP_999);

Report: => H_CntProptyHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_HOPolicy).PropertyID{UID}));
Report: => I_CntProptyHO := MIN(H_CntProptyHO, CAP_999);


Report: => H_CntPropty1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID{UID}));
Report: => I_CntPropty1Y := MIN(H_CntPropty1Y, CAP_999);

Report: => H_CntPropty1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).PropertyID{UID}));
Report: => I_CntPropty1YHO := MIN(H_CntPropty1YHO, CAP_999);


Report: => H_CntPropty3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID{UID}));
Report: => I_CntPropty3Y := MIN(H_CntPropty3Y, CAP_999);

Report: => H_CntPropty3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).PropertyID{UID}));
Report: => I_CntPropty3YHO := MIN(H_CntPropty3YHO, CAP_999);


// I_CntDistProptyType
// I_CntDistProptyType1Y
// I_CntDistProptyType3Y

PolicyProperty: => PropertyType := Coverages{PropertyType};
Policy: => H_PropertyType := PolicyProperty.PropertyType{PropertyType};
Report: => H_PropertyType := Policy(G_CountablePolicy).H_PropertyType{PropertyType};

Report: => H_CntDistProptyType := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType := MIN(H_CntDistProptyType, CAP_999);


Report: => H_CntDistProptyType1Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType1Y := MIN(H_CntDistProptyType1Y, CAP_999);


Report: => H_CntDistProptyType3Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType3Y := MIN(H_CntDistProptyType3Y, CAP_999);
							

//Count policy per property type
// I_CntPolProptyTypeOther
// I_CntPolProptyTypeOther1Y
// I_CntPolProptyTypeOther3Y
// I_CntPolProptyTypeOtherHO
// I_CntPolProptyTypeOther1YHO
// I_CntPolProptyTypeOther3YHO
Report: => H_CntPolProptyTypeOther := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypeOther := MIN(H_CntPolProptyTypeOther, CAP_999);

Report: => H_CntPolProptyTypeOtherHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypeOtherHO := MIN(H_CntPolProptyTypeOtherHO, CAP_999);


Report: => H_CntPolProptyTypeOther1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeOther1Y := MIN(H_CntPolProptyTypeOther1Y, CAP_999);

Report: => H_CntPolProptyTypeOther1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeOther1YHO := MIN(H_CntPolProptyTypeOther1YHO, CAP_999);


Report: => H_CntPolProptyTypeOther3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeOther3Y := MIN(H_CntPolProptyTypeOther3Y, CAP_999);

Report: => H_CntPolProptyTypeOther3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeOther3YHO := MIN(H_CntPolProptyTypeOther3YHO, CAP_999);


// I_CntPolProptyTypePrim
// I_CntPolProptyTypePrim1Y
// I_CntPolProptyTypePrim3Y
// I_CntPolProptyTypePrimHO
// I_CntPolProptyTypePrim1YHO
// I_CntPolProptyTypePrim3YHO
Report: => H_CntPolProptyTypePrim := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypePrim := MIN(H_CntPolProptyTypePrim, CAP_999);

Report: => H_CntPolProptyTypePrimHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypePrimHO := MIN(H_CntPolProptyTypePrimHO, CAP_999);


Report: => H_CntPolProptyTypePrim1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypePrim1Y := MIN(H_CntPolProptyTypePrim1Y, CAP_999);

Report: => H_CntPolProptyTypePrim1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypePrim1YHO := MIN(H_CntPolProptyTypePrim1YHO, CAP_999);


Report: => H_CntPolProptyTypePrim3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypePrim3Y := MIN(H_CntPolProptyTypePrim3Y, CAP_999);

Report: => H_CntPolProptyTypePrim3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypePrim3YHO := MIN(H_CntPolProptyTypePrim3YHO, CAP_999);

// I_CntPolProptyTypeSecond
// I_CntPolProptyTypeSecond1Y
// I_CntPolProptyTypeSecond3Y
// I_CntPolProptyTypeSecondHO
// I_CntPolProptyTypeSecond1YHO
// I_CntPolProptyTypeSecond3YHO
Report: => H_CntPolProptyTypeSecond := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy)));
Report: => I_CntPolProptyTypeSecond := MIN(H_CntPolProptyTypeSecond, CAP_999);

Report: => H_CntPolProptyTypeSecondHO := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault2HO => DEFAULT_2,
																G_SetDefault3HO => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy)));
Report: => I_CntPolProptyTypeSecondHO := MIN(H_CntPolProptyTypeSecondHO, CAP_999);


Report: => H_CntPolProptyTypeSecond1Y := MAP(G_SetDefault1  => DEFAULT_1,
																G_SetDefault3 => DEFAULT_3, 
																COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeSecond1Y := MIN(H_CntPolProptyTypeSecond1Y, CAP_999);

Report: => H_CntPolProptyTypeSecond1YHO := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12)));
Report: => I_CntPolProptyTypeSecond1YHO := MIN(H_CntPolProptyTypeSecond1YHO, CAP_999);


Report: => H_CntPolProptyTypeSecond3Y := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeSecond3Y := MIN(H_CntPolProptyTypeSecond3Y, CAP_999);

Report: => H_CntPolProptyTypeSecond3YHO := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2HO => DEFAULT_2,
																						G_SetDefault3HO => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36)));
Report: => I_CntPolProptyTypeSecond3YHO := MIN(H_CntPolProptyTypeSecond3YHO, CAP_999);

//Count policy type
Report: => H_CntDistPoltype := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy){PolicyType}));
Report: => I_CntDistPoltype := MIN(H_CntDistPoltype,CAP_999);																

Report: => H_CntDistPoltypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){PolicyType}));
Report: => I_CntDistPoltypeProptyP := MIN(H_CntDistPoltypeProptyP,CAP_999);

Report: => H_CntDistPoltype1Y := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype1Y := MIN(H_CntDistPoltype1Y,CAP_999);

Report: => H_CntDistPoltype1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype1YProptyP := MIN(H_CntDistPoltype1YProptyP,CAP_999);

Report: => H_CntDistPoltype3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype3Y := MIN(H_CntDistPoltype3Y,CAP_999);

Report: => H_CntDistPoltype3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype3YProptyP := MIN(H_CntDistPoltype3YProptyP,CAP_999);

//Count policy per Policy type
// I_CntPolOfHO
// I_CntPolOfHOProptyP
// I_CntPolOfHO1Y
// I_CntPolOfHO1YProptyP
// I_CntPolOfHO3Y
// I_CntPolOfHO3YProptyP
Report: => H_CntPolOfHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO := MIN(H_CntPolOfHO,CAP_999);                               

Report: => H_CntPolOfHOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHOProptyP := MIN(H_CntPolOfHOProptyP,CAP_999);

Report: => H_CntPolOfHO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO1Y := MIN(H_CntPolOfHO1Y,CAP_999);

Report: => H_CntPolOfHO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO1YProptyP := MIN(H_CntPolOfHO1YProptyP,CAP_999);

Report: => H_CntPolOfHO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO3Y := MIN(H_CntPolOfHO3Y,CAP_999);

Report: => H_CntPolOfHO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO3YProptyP := MIN(H_CntPolOfHO3YProptyP,CAP_999);
// I_CntPolOfCO
// I_CntPolOfCO1Y
// I_CntPolOfCO1YProptyP
// I_CntPolOfCO3Y
// I_CntPolOfCO3YProptyP
// I_CntPolOfCOProptyP
Report: => H_CntPolOfCO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO := MIN(H_CntPolOfCO,CAP_999);                               

Report: => H_CntPolOfCOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCOProptyP := MIN(H_CntPolOfCOProptyP,CAP_999);

Report: => H_CntPolOfCO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO1Y := MIN(H_CntPolOfCO1Y,CAP_999);

Report: => H_CntPolOfCO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO1YProptyP := MIN(H_CntPolOfCO1YProptyP,CAP_999);

Report: => H_CntPolOfCO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO3Y := MIN(H_CntPolOfCO3Y,CAP_999);

Report: => H_CntPolOfCO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO3YProptyP := MIN(H_CntPolOfCO3YProptyP,CAP_999);

// I_CntPolOfFL
// I_CntPolOfFL1Y
// I_CntPolOfFL1YProptyP
// I_CntPolOfFL3Y
// I_CntPolOfFL3YProptyP
// I_CntPolOfFLProptyP
Report: => H_CntPolOfFL := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL := MIN(H_CntPolOfFL,CAP_999);                               

Report: => H_CntPolOfFLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFLProptyP := MIN(H_CntPolOfFLProptyP,CAP_999);

Report: => H_CntPolOfFL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL1Y := MIN(H_CntPolOfFL1Y,CAP_999);

Report: => H_CntPolOfFL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL1YProptyP := MIN(H_CntPolOfFL1YProptyP,CAP_999);

Report: => H_CntPolOfFL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL3Y := MIN(H_CntPolOfFL3Y,CAP_999);

Report: => H_CntPolOfFL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL3YProptyP := MIN(H_CntPolOfFL3YProptyP,CAP_999);




// I_CntPolOfFR
// I_CntPolOfFR1Y
// I_CntPolOfFR1YProptyP
// I_CntPolOfFR3Y
// I_CntPolOfFR3YProptyP
// I_CntPolOfFRProptyP
Report: => H_CntPolOfFR := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR := MIN(H_CntPolOfFR,CAP_999);                               

Report: => H_CntPolOfFRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFRProptyP := MIN(H_CntPolOfFRProptyP,CAP_999);

Report: => H_CntPolOfFR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR1Y := MIN(H_CntPolOfFR1Y,CAP_999);

Report: => H_CntPolOfFR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR1YProptyP := MIN(H_CntPolOfFR1YProptyP,CAP_999);

Report: => H_CntPolOfFR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR3Y := MIN(H_CntPolOfFR3Y,CAP_999);

Report: => H_CntPolOfFR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR3YProptyP := MIN(H_CntPolOfFR3YProptyP,CAP_999);



// I_CntPolOfHL
// I_CntPolOfHL1Y
// I_CntPolOfHL1YProptyP
// I_CntPolOfHL3Y
// I_CntPolOfHL3YProptyP
// I_CntPolOfHLProptyP
Report: => H_CntPolOfHL := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL := MIN(H_CntPolOfHL,CAP_999);                               

Report: => H_CntPolOfHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHLProptyP := MIN(H_CntPolOfHLProptyP,CAP_999);

Report: => H_CntPolOfHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL1Y := MIN(H_CntPolOfHL1Y,CAP_999);

Report: => H_CntPolOfHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL1YProptyP := MIN(H_CntPolOfHL1YProptyP,CAP_999);

Report: => H_CntPolOfHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL3Y := MIN(H_CntPolOfHL3Y,CAP_999);

Report: => H_CntPolOfHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL3YProptyP := MIN(H_CntPolOfHL3YProptyP,CAP_999);


// I_CntPolOfIM
// I_CntPolOfIM1Y
// I_CntPolOfIM1YProptyP
// I_CntPolOfIM3Y
// I_CntPolOfIM3YProptyP
// I_CntPolOfIMProptyP
Report: => H_CntPolOfIM := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM := MIN(H_CntPolOfIM,CAP_999);                               

Report: => H_CntPolOfIMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIMProptyP := MIN(H_CntPolOfIMProptyP,CAP_999);

Report: => H_CntPolOfIM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM1Y := MIN(H_CntPolOfIM1Y,CAP_999);

Report: => H_CntPolOfIM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM1YProptyP := MIN(H_CntPolOfIM1YProptyP,CAP_999);

Report: => H_CntPolOfIM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM3Y := MIN(H_CntPolOfIM3Y,CAP_999);

Report: => H_CntPolOfIM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM3YProptyP := MIN(H_CntPolOfIM3YProptyP,CAP_999);




// I_CntPolOfMH
// I_CntPolOfMH1Y
// I_CntPolOfMH1YProptyP
// I_CntPolOfMH3Y
// I_CntPolOfMH3YProptyP
// I_CntPolOfMHProptyP
Report: => H_CntPolOfMH := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH := MIN(H_CntPolOfMH,CAP_999);                               

Report: => H_CntPolOfMHProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMHProptyP := MIN(H_CntPolOfMHProptyP,CAP_999);

Report: => H_CntPolOfMH1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH1Y := MIN(H_CntPolOfMH1Y,CAP_999);

Report: => H_CntPolOfMH1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH1YProptyP := MIN(H_CntPolOfMH1YProptyP,CAP_999);

Report: => H_CntPolOfMH3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH3Y := MIN(H_CntPolOfMH3Y,CAP_999);

Report: => H_CntPolOfMH3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH3YProptyP := MIN(H_CntPolOfMH3YProptyP,CAP_999);

// I_CntPolOfQK
// I_CntPolOfQK1Y
// I_CntPolOfQK1YProptyP
// I_CntPolOfQK3Y
// I_CntPolOfQK3YProptyP
// I_CntPolOfQKProptyP
Report: => H_CntPolOfQK := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK := MIN(H_CntPolOfQK,CAP_999);                               

Report: => H_CntPolOfQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQKProptyP := MIN(H_CntPolOfQKProptyP,CAP_999);

Report: => H_CntPolOfQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK1Y := MIN(H_CntPolOfQK1Y,CAP_999);

Report: => H_CntPolOfQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK1YProptyP := MIN(H_CntPolOfQK1YProptyP,CAP_999);

Report: => H_CntPolOfQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK3Y := MIN(H_CntPolOfQK3Y,CAP_999);

Report: => H_CntPolOfQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK3YProptyP := MIN(H_CntPolOfQK3YProptyP,CAP_999);



// I_CntPolOfRF
// I_CntPolOfRF1Y
// I_CntPolOfRF1YProptyP
// I_CntPolOfRF3Y
// I_CntPolOfRF3YProptyP
// I_CntPolOfRFProptyP
Report: => H_CntPolOfRF := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF := MIN(H_CntPolOfRF,CAP_999);                               

Report: => H_CntPolOfRFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRFProptyP := MIN(H_CntPolOfRFProptyP,CAP_999);

Report: => H_CntPolOfRF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF1Y := MIN(H_CntPolOfRF1Y,CAP_999);

Report: => H_CntPolOfRF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF1YProptyP := MIN(H_CntPolOfRF1YProptyP,CAP_999);

Report: => H_CntPolOfRF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF3Y := MIN(H_CntPolOfRF3Y,CAP_999);

Report: => H_CntPolOfRF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF3YProptyP := MIN(H_CntPolOfRF3YProptyP,CAP_999);




// I_CntPolOfTN
// I_CntPolOfTN1Y
// I_CntPolOfTN1YProptyP
// I_CntPolOfTN3Y
// I_CntPolOfTN3YProptyP
// I_CntPolOfTNProptyP
Report: => H_CntPolOfTN := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN := MIN(H_CntPolOfTN,CAP_999);                               

Report: => H_CntPolOfTNProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTNProptyP := MIN(H_CntPolOfTNProptyP,CAP_999);

Report: => H_CntPolOfTN1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN1Y := MIN(H_CntPolOfTN1Y,CAP_999);

Report: => H_CntPolOfTN1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN1YProptyP := MIN(H_CntPolOfTN1YProptyP,CAP_999);

Report: => H_CntPolOfTN3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN3Y := MIN(H_CntPolOfTN3Y,CAP_999);

Report: => H_CntPolOfTN3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN3YProptyP := MIN(H_CntPolOfTN3YProptyP,CAP_999);



// I_CntPolOfUM
// I_CntPolOfUM1Y
// I_CntPolOfUM1YProptyP
// I_CntPolOfUM3Y
// I_CntPolOfUM3YProptyP
// I_CntPolOfUMProptyP
Report: => H_CntPolOfUM := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM := MIN(H_CntPolOfUM,CAP_999);                               

Report: => H_CntPolOfUMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUMProptyP := MIN(H_CntPolOfUMProptyP,CAP_999);

Report: => H_CntPolOfUM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM1Y := MIN(H_CntPolOfUM1Y,CAP_999);

Report: => H_CntPolOfUM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM1YProptyP := MIN(H_CntPolOfUM1YProptyP,CAP_999);

Report: => H_CntPolOfUM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM3Y := MIN(H_CntPolOfUM3Y,CAP_999);

Report: => H_CntPolOfUM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM3YProptyP := MIN(H_CntPolOfUM3YProptyP,CAP_999);

// I_CntPolOfWC, WATERCRAFT AND BOAT
// I_CntPolOfWC1Y
// I_CntPolOfWC1YProptyP
// I_CntPolOfWC3Y
// I_CntPolOfWC3YProptyP
// I_CntPolOfWCProptyP
Report: => H_CntPolOfWC := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC := MIN(H_CntPolOfWC,CAP_999);                               

Report: => H_CntPolOfWCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWCProptyP := MIN(H_CntPolOfWCProptyP,CAP_999);

Report: => H_CntPolOfWC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC1Y := MIN(H_CntPolOfWC1Y,CAP_999);

Report: => H_CntPolOfWC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC1YProptyP := MIN(H_CntPolOfWC1YProptyP,CAP_999);

Report: => H_CntPolOfWC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC3Y := MIN(H_CntPolOfWC3Y,CAP_999);

Report: => H_CntPolOfWC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC3YProptyP := MIN(H_CntPolOfWC3YProptyP,CAP_999);

// I_CntPolOfXO
// I_CntPolOfXO1Y
// I_CntPolOfXO1YProptyP
// I_CntPolOfXO3Y
// I_CntPolOfXO3YProptyP
// I_CntPolOfXOProptyP
Report: => H_CntPolOfXO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO := MIN(H_CntPolOfXO,CAP_999);                               

Report: => H_CntPolOfXOProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXOProptyP := MIN(H_CntPolOfXOProptyP,CAP_999);

Report: => H_CntPolOfXO1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO1Y := MIN(H_CntPolOfXO1Y,CAP_999);

Report: => H_CntPolOfXO1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO1YProptyP := MIN(H_CntPolOfXO1YProptyP,CAP_999);

Report: => H_CntPolOfXO3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO3Y := MIN(H_CntPolOfXO3Y,CAP_999);

Report: => H_CntPolOfXO3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO3YProptyP := MIN(H_CntPolOfXO3YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV1Y
// I_CntDistCOV1YHO
// I_CntDistCOV1YProptyP
// I_CntDistCOV3Y
// I_CntDistCOV3YHO
// I_CntDistCOV3YProptyP
// I_CntDistCOVHO
// I_CntDistCOVProptyP

//Meeting with Brad and Kelly, scoring team will handle the issue to keep the most recnet coverage term for each property. 10/5/2020
//Be Careful, if intermediate data includeds history coverage terms for property, then this will mix all coverage types together. 
PolicyProperty: => CoverageTypes := Coverages{CoverageType};

//The folloiwng two lines of code were used to handle the history coverage terms for sa single property.
// PolicyProperty.Coverages: => MostRecentTerm := TOPN(Coverages{CoverageEndDate,CoverageStartDate},1,-CoverageEndDate, -CoverageStartDate);//keep the most recent term
// PolicyProperty: => CoverageTypes := Coverages(CoverageEndDate = MostRecentTerm.CoverageEndDate AND CoverageStartDate = MostRecentTerm.CoverageStartDate){CoverageType};//extract the most recent terms

//extract the all coverage types that a policy has and then count. 
Policy: => H_CovrageTypes := TOPN(PolicyProperty.CoverageTypes{CoverageType},100,CoverageType);
// Report: => H_CovrageTypes := Policy(G_CountablePolicy).H_CovrageTypes{CoverageType};

Report: => H_CntDistCOV := MAP(G_SetDefault1  => DEFAULT_1,
															G_SetDefault3 => DEFAULT_3, 
															COUNT(Policy(G_CountablePolicy).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV := MIN(H_CntDistCOV, CAP_999);		


Report: => H_CntDistCOVHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOVHO := MIN(H_CntDistCOVHO, CAP_999);   
 
Report: => H_CntDistCOVProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOVProptyP := MIN(H_CntDistCOVProptyP, CAP_999);    



Report: => H_CntDistCOV1Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1Y := MIN(H_CntDistCOV1Y, CAP_999);    


Report: => H_CntDistCOV1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1YHO := MIN(H_CntDistCOV1YHO, CAP_999);   
 
Report: => H_CntDistCOV1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV1YProptyP := MIN(H_CntDistCOV1YProptyP, CAP_999);    


Report: => H_CntDistCOV3Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3Y := MIN(H_CntDistCOV3Y, CAP_999);    


Report: => H_CntDistCOV3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3YHO := MIN(H_CntDistCOV3YHO, CAP_999);   
 
Report: => H_CntDistCOV3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV3YProptyP := MIN(H_CntDistCOV3YProptyP, CAP_999);    




//Coverage package:
// I_CntDistPackageType
// I_CntDistPackageTypeHO
// I_CntDistPackageTypeProptyP
// I_CntDistPackageType1Y
// I_CntDistPackageType1YHO
// I_CntDistPackageType1YProptyP
// I_CntDistPackageType3Y
// I_CntDistPackageType3YHO
// I_CntDistPackageType3YProptyP

// Step 1.) Pull out the unique coverage types on this PolicyProperty record
// PolicyProperty: => CoverageTypes := Coverages{CoverageType};

PolicyProperty: => CoverageTypesDelimited := CONCAT(TOPN(CoverageTypes{CoverageType}, 100, CoverageType), ','); 
// Convert the CoverageTypes set into a single string
Policy: => H_CoverageTypesDelimited := PolicyProperty{CoverageTypesDelimited};


// Step 2.) Pull out the unique coverage types across all linked PolicyProperty records
// Policy: => CoverageTypes := PolicyProperty.CoverageTypes{CoverageType};
//Policy: => CoveragePackage := CONCAT(H_CovrageTypes, ',');
// Policy: => CoveragePackageDelimited := CONCAT(H_CoverageTypesDelimited, ',');

// Step 3.) Pull out the unique coverage types across all linked Policies for this Report
// Report: => CoverageTypes := Policy.CoverageTypes{CoverageType};
//Report: => CoveragePackages := Policy(G_CountablePolicy){CoveragePackage};
//Report: => CoveragePackagesHO := Policy(G_CountablePolicy AND G_HOPolicy){CoveragePackage};
//Report: => CoveragePackagesProptyP := Policy(G_CountablePolicy AND G_PrimaryProperty){CoveragePackage};

// := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages := TOPN(Policy(G_CountablePolicy).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackagesHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackagesProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages1Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages1YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages1YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => G_CoveragePackages3Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages3YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages3YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);


Report: => H_CntDistPackageType := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault3 => DEFAULT_3, 
																				COUNT(G_CoveragePackages));
Report: => I_CntDistPackageType := MIN(H_CntDistPackageType, CAP_999);

Report: => H_CntDistPackageTypeHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,
																				COUNT(G_CoveragePackagesHO));
Report: => I_CntDistPackageTypeHO := MIN(H_CntDistPackageTypeHO, CAP_999);

Report: => H_CntDistPackageTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){H_CoverageTypesDelimited}));
Report: => I_CntDistPackageTypeProptyP := MIN(H_CntDistPackageTypeProptyP, CAP_999);

Report: => H_CntDistPackageType1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        COUNT(G_CoveragePackages1Y));
Report: => I_CntDistPackageType1Y := MIN(H_CntDistPackageType1Y, CAP_999);

Report: => H_CntDistPackageType1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        COUNT(G_CoveragePackages1YHO));
Report: => I_CntDistPackageType1YHO := MIN(H_CntDistPackageType1YHO, CAP_999);

Report: => H_CntDistPackageType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
																			 COUNT(G_CoveragePackages1YProptyP));
Report: => I_CntDistPackageType1YProptyP := MIN(H_CntDistPackageType1YProptyP, CAP_999);

Report: => H_CntDistPackageType3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
																				COUNT(G_CoveragePackages3Y));
Report: => I_CntDistPackageType3Y := MIN(H_CntDistPackageType3Y, CAP_999);

Report: => H_CntDistPackageType3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																	COUNT(G_CoveragePackages3YHO));
Report: => I_CntDistPackageType3YHO := MIN(H_CntDistPackageType3YHO, CAP_999);

Report: => H_CntDistPackageType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
																			 COUNT(G_CoveragePackages3YProptyP));
Report: => I_CntDistPackageType3YProptyP := MIN(H_CntDistPackageType3YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault3 => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy){RiskType}));
Report: => I_CntDistRisk := MIN(H_CntDistRisk, CAP_999);

Report: => H_CntDistRiskHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy){RiskType}));
Report: => I_CntDistRiskHO := MIN(H_CntDistRiskHO, CAP_999);

Report: => H_CntDistRiskProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty){RiskType}));
Report: => I_CntDistRiskProptyP := MIN(H_CntDistRiskProptyP, CAP_999);

Report: => H_CntDistRisk1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1Y := MIN(H_CntDistRisk1Y, CAP_999);

Report: => H_CntDistRisk1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1YHO := MIN(H_CntDistRisk1YHO, CAP_999);

Report: => H_CntDistRisk1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk1YProptyP := MIN(H_CntDistRisk1YProptyP, CAP_999);

Report: => H_CntDistRisk3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3Y := MIN(H_CntDistRisk3Y, CAP_999);

Report: => H_CntDistRisk3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3YHO := MIN(H_CntDistRisk3YHO, CAP_999);

Report: => H_CntDistRisk3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk3YProptyP := MIN(H_CntDistRisk3YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard := MIN(H_CntPolRiskStandard, CAP_999);

Report: => H_CntPolRiskStandardHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandardHO := MIN(H_CntPolRiskStandardHO, CAP_999);

Report: => H_CntPolRiskStandardProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandardProptyP := MIN(H_CntPolRiskStandardProptyP, CAP_999);

Report: => H_CntPolRiskStandard1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard1Y := MIN(H_CntPolRiskStandard1Y, CAP_999);

Report: => H_CntPolRiskStandard1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard1YHO := MIN(H_CntPolRiskStandard1YHO, CAP_999);

Report: => H_CntPolRiskStandard1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard1YProptyP := MIN(H_CntPolRiskStandard1YProptyP, CAP_999);

Report: => H_CntPolRiskStandard3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard3Y := MIN(H_CntPolRiskStandard3Y, CAP_999);

Report: => H_CntPolRiskStandard3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard3YHO := MIN(H_CntPolRiskStandard3YHO, CAP_999);

Report: => H_CntPolRiskStandard3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard3YProptyP := MIN(H_CntPolRiskStandard3YProptyP, CAP_999);


//RiskTypePreferred
Report: => H_CntPolRiskPreferred := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred := MIN(H_CntPolRiskPreferred, CAP_999);

Report: => H_CntPolRiskPreferredHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferredHO := MIN(H_CntPolRiskPreferredHO, CAP_999);

Report: => H_CntPolRiskPreferredProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferredProptyP := MIN(H_CntPolRiskPreferredProptyP, CAP_999);

Report: => H_CntPolRiskPreferred1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1Y := MIN(H_CntPolRiskPreferred1Y, CAP_999);

Report: => H_CntPolRiskPreferred1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1YHO := MIN(H_CntPolRiskPreferred1YHO, CAP_999);

Report: => H_CntPolRiskPreferred1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred1YProptyP := MIN(H_CntPolRiskPreferred1YProptyP, CAP_999);

Report: => H_CntPolRiskPreferred3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3Y := MIN(H_CntPolRiskPreferred3Y, CAP_999);

Report: => H_CntPolRiskPreferred3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3YHO := MIN(H_CntPolRiskPreferred3YHO, CAP_999);

Report: => H_CntPolRiskPreferred3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred3YProptyP := MIN(H_CntPolRiskPreferred3YProptyP, CAP_999);

//RiskTypeOthers
Report: => H_CntPolRiskOthers := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers := MIN(H_CntPolRiskOthers, CAP_999);

Report: => H_CntPolRiskOthersHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthersHO := MIN(H_CntPolRiskOthersHO, CAP_999);

Report: => H_CntPolRiskOthersProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthersProptyP := MIN(H_CntPolRiskOthersProptyP, CAP_999);

Report: => H_CntPolRiskOthers1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers1Y := MIN(H_CntPolRiskOthers1Y, CAP_999);

Report: => H_CntPolRiskOthers1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers1YHO := MIN(H_CntPolRiskOthers1YHO, CAP_999);

Report: => H_CntPolRiskOthers1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers1YProptyP := MIN(H_CntPolRiskOthers1YProptyP, CAP_999);

Report: => H_CntPolRiskOthers3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers3Y := MIN(H_CntPolRiskOthers3Y, CAP_999);

Report: => H_CntPolRiskOthers3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers3YHO := MIN(H_CntPolRiskOthers3YHO, CAP_999);

Report: => H_CntPolRiskOthers3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers3YProptyP := MIN(H_CntPolRiskOthers3YProptyP, CAP_999);


//Flood Zone. true 0, there is no flood zone indicator
Policy: => G_ExistFLZone := EXISTS(PolicyProperty.Coverages(NOT FloodZone:Null));
Report: => H_CntFloodZonePol := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_ExistFLZone)));
Report: => I_CntFloodZonePol := MIN(H_CntFloodZonePol, CAP_999);

Report: => H_CntFloodZonePolProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty)));
Report: => I_CntFloodZonePolProptyP := MIN(H_CntFloodZonePolProptyP, CAP_999);


Report: => H_CntFloodZonePol1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol1Y := MIN(H_CntFloodZonePol1Y, CAP_999);

Report: => H_CntFloodZonePol1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 12 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol1YProptyP := MIN(H_CntFloodZonePol1YProptyP, CAP_999);

Report: => H_CntFloodZonePol3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol3Y := MIN(H_CntFloodZonePol3Y, CAP_999);

Report: => H_CntFloodZonePol3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 36 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol3YProptyP := MIN(H_CntFloodZonePol3YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType1Y
// I_CntFloodZoneType1YProptyP
// I_CntFloodZoneType3Y
// I_CntFloodZoneType3YProptyP
// I_CntFloodZoneTypeProptyP

PolicyProperty: => FloodZone := Coverages{FloodZone};
Policy: => H_FloodZone := PolicyProperty.FloodZone{FloodZone};
Report: => H_FloodZone := Policy(G_CountablePolicy).H_FloodZone{FloodZone};

Report: => H_CntFloodZoneType := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType := MIN(H_CntFloodZoneType, CAP_999);


Report: => H_CntFloodZoneTypeProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneTypeProptyP := MIN(H_CntFloodZoneTypeProptyP, CAP_999);


Report: => H_CntFloodZoneType1Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType1Y := MIN(H_CntFloodZoneType1Y, CAP_999);


Report: => H_CntFloodZoneType1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType1YProptyP := MIN(H_CntFloodZoneType1YProptyP, CAP_999);


Report: => H_CntFloodZoneType3Y := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType3Y := MIN(H_CntFloodZoneType3Y, CAP_999);


Report: => H_CntFloodZoneType3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType3YProptyP := MIN(H_CntFloodZoneType3YProptyP, CAP_999);


//Deduct
// R_AvgOverallDeduct
// R_AvgOverallDeduct1Y
// R_AvgOverallDeduct1YHO
// R_AvgOverallDeduct1YProptyP
// R_AvgOverallDeduct3Y
// R_AvgOverallDeduct3YHO
// R_AvgOverallDeduct3YProptyP
// R_AvgOverallDeductHO
// R_AvgOverallDeductProptyP

// R_AvgTheftDeduct
// R_AvgTheftDeductHO
// R_AvgTheftDeductProptyP
// R_AvgTheftDeduct1Y
// R_AvgTheftDeduct1YHO
// R_AvgTheftDeduct1YProptyP
// R_AvgTheftDeduct3Y
// R_AvgTheftDeduct3YHO
// R_AvgTheftDeduct3YProptyP


//pull the theft ductible / overall deductible of most recent coverage for one property
// PolicyProperty: => TheftDeductible := ONLY(TOPN(Coverages{TheftDeductible,CoverageEndDate,CoverageStartDate},1,-CoverageEndDate,-CoverageStartDate)).TheftDeductible;
// PolicyProperty: => TheftDeductible := ONLY(TOPN(Coverages{TheftDeductible,CoverageEndDate,CoverageStartDate},1,-CoverageEndDate,-CoverageStartDate),TheftDeductible);
// PolicyProperty: => OverallDeductible := ONLY(TOPN(Coverages,1,-CoverageEndDate,-CoverageStartDate),OverallDeductible);

//Scoring team will work on the code to keep the most recent coverage. The result will not be different
PolicyProperty: => TheftDeductible := AVE(Coverages,TheftDeductible);
PolicyProperty: => OverallDeductible := AVE(Coverages,OverallDeductible);

// PolicyProperty: => IndividualLimit := TOPN(Coverages,1,-CoverageEndDate,-CoverageStartDate);

//average value to policy level, if multiple properties in a single policy
Policy: => TheftDeductible := AVE(PolicyProperty, TheftDeductible);
Policy: => OverallDeductible := AVE(PolicyProperty, OverallDeductible);

Report: => G_SetDefault4TheftDeduct := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null));
Report: => G_SetDefault4OverallDeduct := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null));

Report: => G_SetDefault4TheftDeduct1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4TheftDeductHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy));
Report: => G_SetDefault4OverallDeductHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy));

Report: => G_SetDefault4TheftDeduct1YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4TheftDeductProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty));
Report: => G_SetDefault4OverallDeductProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty));

Report: => G_SetDefault4TheftDeduct1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));
Report: => G_SetDefault4OverallDeduct1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4TheftDeduct3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));
Report: => G_SetDefault4OverallDeduct3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));


Report: => H_AvgTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy),TheftDeductible));
Report: => R_AvgTheftDeduct := MIN(ROUND2(H_AvgTheftDeduct), CAP_99999999_99);

Report: => H_AvgTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																	G_SetDefault4TheftDeductHO => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy AND G_HOPolicy),TheftDeductible));
Report: => R_AvgTheftDeductHO := MIN(ROUND2(H_AvgTheftDeductHO), CAP_99999999_99);

Report: => H_AvgTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																	G_SetDefault4TheftDeductProptyP => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy AND G_PrimaryProperty),TheftDeductible));
Report: => R_AvgTheftDeductProptyP := MIN(ROUND2(H_AvgTheftDeductProptyP), CAP_99999999_99);

Report: => H_AvgTheftDeduct1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct1Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1Y := MIN(ROUND2(H_AvgTheftDeduct1Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																	G_SetDefault4TheftDeduct1YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1YHO := MIN(ROUND2(H_AvgTheftDeduct1YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeduct1YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),TheftDeductible));
Report: => R_AvgTheftDeduct1YProptyP := MIN(ROUND2(H_AvgTheftDeduct1YProptyP), CAP_99999999_99);


Report: => H_AvgTheftDeduct3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3Y := MIN(ROUND2(H_AvgTheftDeduct3Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3YHO := MIN(ROUND2(H_AvgTheftDeduct3YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeduct3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),TheftDeductible));
Report: => R_AvgTheftDeduct3YProptyP := MIN(ROUND2(H_AvgTheftDeduct3YProptyP), CAP_99999999_99);



Report: => H_AvgOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),OverallDeductible));
Report: => R_AvgOverallDeduct := MIN(ROUND2(H_AvgOverallDeduct), CAP_99999999_99);

Report: => H_AvgOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy),OverallDeductible));
Report: => R_AvgOverallDeductHO := MIN(ROUND2(H_AvgOverallDeductHO), CAP_99999999_99);

Report: => H_AvgOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty),OverallDeductible));
Report: => R_AvgOverallDeductProptyP := MIN(ROUND2(H_AvgOverallDeductProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1Y := MIN(ROUND2(H_AvgOverallDeduct1Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct1YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1YHO := MIN(ROUND2(H_AvgOverallDeduct1YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeduct1YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),OverallDeductible));
Report: => R_AvgOverallDeduct1YProptyP := MIN(ROUND2(H_AvgOverallDeduct1YProptyP), CAP_99999999_99);


Report: => H_AvgOverallDeduct3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3Y := MIN(ROUND2(H_AvgOverallDeduct3Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct3YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4OverallDeduct3YHO => DEFAULT_4,  
																		// G_SetDefault4OverallDeduct => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3YHO := MIN(ROUND2(H_AvgOverallDeduct3YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeduct3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),OverallDeductible));
Report: => R_AvgOverallDeduct3YProptyP := MIN(ROUND2(H_AvgOverallDeduct3YProptyP), CAP_99999999_99);



// R_MaxOverallDeduct
// R_MaxOverallDeductHO
// R_MaxOverallDeductProptyP
// R_MaxTheftDeduct
// R_MaxTheftDeductHO
// R_MaxTheftDeductProptyP
// R_MinOverallDeduct
// R_MinOverallDeductHO
// R_MinOverallDeductProptyP
// R_MinTheftDeduct
// R_MinTheftDeductHO
// R_MinTheftDeductProptyP
Policy: => MinTheftDeductible := MIN(PolicyProperty, TheftDeductible);
Policy: => MinOverallDeductible := MIN(PolicyProperty, OverallDeductible);
Policy: => MaxTheftDeductible := MAX(PolicyProperty, TheftDeductible);
Policy: => MaxOverallDeductible := MAX(PolicyProperty, OverallDeductible);

Report: => H_MinOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),MinOverallDeductible));
Report: => R_MinOverallDeduct := MIN(ROUND2(H_MinOverallDeduct), CAP_99999999_99);

Report: => H_MinOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_HOPolicy),MinOverallDeductible));
Report: => R_MinOverallDeductHO := MIN(ROUND2(H_MinOverallDeductHO), CAP_99999999_99);

Report: => H_MinOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_PrimaryProperty),MinOverallDeductible));
Report: => R_MinOverallDeductProptyP := MIN(ROUND2(H_MinOverallDeductProptyP), CAP_99999999_99);

Report: => H_MinTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),MinTheftDeductible));
Report: => R_MinTheftDeduct := MIN(ROUND2(H_MinTheftDeduct), CAP_99999999_99);

Report: => H_MinTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeductHO => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_HOPolicy),MinTheftDeductible));
Report: => R_MinTheftDeductHO := MIN(ROUND2(H_MinTheftDeductHO), CAP_99999999_99);

Report: => H_MinTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeductProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy AND G_PrimaryProperty),MinTheftDeductible));
Report: => R_MinTheftDeductProptyP := MIN(ROUND2(H_MinTheftDeductProptyP), CAP_99999999_99);


Report: => H_MaxOverallDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4OverallDeduct => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),MaxOverallDeductible));
Report: => R_MaxOverallDeduct := MIN(ROUND2(H_MaxOverallDeduct), CAP_99999999_99);

Report: => H_MaxOverallDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
																		G_SetDefault4OverallDeductHO => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_HOPolicy),MaxOverallDeductible));
Report: => R_MaxOverallDeductHO := MIN(ROUND2(H_MaxOverallDeductHO), CAP_99999999_99);

Report: => H_MaxOverallDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4OverallDeductProptyP => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_PrimaryProperty),MaxOverallDeductible));
Report: => R_MaxOverallDeductProptyP := MIN(ROUND2(H_MaxOverallDeductProptyP), CAP_99999999_99);

Report: => H_MaxTheftDeduct := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4TheftDeduct => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),MaxTheftDeductible));
Report: => R_MaxTheftDeduct := MIN(ROUND2(H_MaxTheftDeduct), CAP_99999999_99);

Report: => H_MaxTheftDeductHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
																		G_SetDefault4TheftDeductHO => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_HOPolicy),MaxTheftDeductible));
Report: => R_MaxTheftDeductHO := MIN(ROUND2(H_MaxTheftDeductHO), CAP_99999999_99);

Report: => H_MaxTheftDeductProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4TheftDeductProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_PrimaryProperty),MaxTheftDeductible));
Report: => R_MaxTheftDeductProptyP := MIN(ROUND2(H_MaxTheftDeductProptyP), CAP_99999999_99);



//Limit attributes assume that Scoring team will drop the property that was removed before policy ends and also keep the most recent policy term/coverage for each property

//The following two lines of codes kept the most recent coverage term for a single property, however, team decided to let scoring team to handle this (FCRA regulation, attribute can only use report information)
// PolicyProperty: => MostRecentTermPerProperty := Coverages(CoverageEndDate = MostRecentTerm.CoverageEndDate AND CoverageStartDate = MostRecentTerm.CoverageStartDate);//keep the most recent term
//step 2, average the IndividualLimit of all coverage types
// PolicyProperty: => AvgIndividualLimit := AVE(MostRecentTermPerProperty,IndividualLimit);

PolicyProperty: => AvgIndividualLimit := AVE(Coverages(IndividualLimit > 0),IndividualLimit);
//step3, average the AvgIndividualLimit to policy level, if multiple properties exist, then take average
Policy: => AvgIndividualLimit := AVE(PolicyProperty,AvgIndividualLimit);
// Policy: => H_AvgIndividualLimit := PolicyProperty.IndividualLimit{CoverageType,AvgIndividualLimit};

// Report: => G_SetDefault4IndLimit := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimit:Null));
//No individual limiat at all
Report: => G_SetDefault4IndLimit := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null));

Report: => G_SetDefault4IndLimit1Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy));

Report: => G_SetDefault4IndLimit1YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimit1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimit3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

//Coverage limit for policy type is flood
// R_AvgFLIndivLimit
// R_AvgFLIndivLimitProptyP
// R_AvgFLIndivLimit1Y
// R_AvgFLIndivLimit1YProptyP
// R_AvgFLIndivLimit3Y
// R_AvgFLIndivLimit3YProptyP
Report: => H_AvgFLIndivLimit := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit := MIN(ROUND2(H_AvgFLIndivLimit), CAP_99999999_99);

Report: => H_AvgFLIndivLimitProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3, 
																		G_SetDefault4IndLimitProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty),AvgIndividualLimit));
Report: => R_AvgFLIndivLimitProptyP := MIN(ROUND2(H_AvgFLIndivLimitProptyP), CAP_99999999_99);


Report: => H_AvgFLIndivLimit1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit1Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit1Y := MIN(ROUND2(H_AvgFLIndivLimit1Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3, 
																						G_SetDefault4IndLimit1YProptyP => DEFAULT_4,
																						MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit1YProptyP := MIN(ROUND2(H_AvgFLIndivLimit1YProptyP), CAP_99999999_99);


Report: => G_SetDefault4IndLimit2Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimit2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgFLIndivLimit2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit2Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit2Y := MIN(ROUND2(H_AvgFLIndivLimit2Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
										G_SetDefault2ProptyP => DEFAULT_2,
										G_SetDefault3ProptyP => DEFAULT_3, 
										G_SetDefault4IndLimit2YProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit2YProptyP := MIN(ROUND2(H_AvgFLIndivLimit2YProptyP), CAP_99999999_99);


Report: => H_AvgFLIndivLimit3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
									G_SetDefault4IndLimit3Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit3Y := MIN(ROUND2(H_AvgFLIndivLimit3Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																							G_SetDefault2ProptyP => DEFAULT_2,
																							G_SetDefault3ProptyP => DEFAULT_3, 
																							G_SetDefault4IndLimit3YProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit3YProptyP := MIN(ROUND2(H_AvgFLIndivLimit3YProptyP), CAP_99999999_99);

Report: => G_SetDefault4IndLimit4Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimit4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgFLIndivLimit4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit4Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit4Y := MIN(ROUND2(H_AvgFLIndivLimit4Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3, 
																						G_SetDefault4IndLimit4YProptyP => DEFAULT_4,
																			MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit4YProptyP := MIN(ROUND2(H_AvgFLIndivLimit4YProptyP), CAP_99999999_99);

Report: => G_SetDefault4IndLimit5Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimit5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgFLIndivLimit5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit5Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit5Y := MIN(ROUND2(H_AvgFLIndivLimit5Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3, 
																						G_SetDefault4IndLimit5YProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit5YProptyP := MIN(ROUND2(H_AvgFLIndivLimit5YProptyP), CAP_99999999_99);


Report: => G_SetDefault4IndLimit6Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimit6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgFLIndivLimit6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit6Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit6Y := MIN(ROUND2(H_AvgFLIndivLimit6Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2ProptyP => DEFAULT_2,
																	G_SetDefault3ProptyP => DEFAULT_3, 
																	G_SetDefault4IndLimit6YProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit6YProptyP := MIN(ROUND2(H_AvgFLIndivLimit6YProptyP), CAP_99999999_99);

Report: => G_SetDefault4IndLimit7Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimit7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgFLIndivLimit7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimit7Y => DEFAULT_4, 
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit7Y := MIN(ROUND2(H_AvgFLIndivLimit7Y), CAP_99999999_99);

Report: => H_AvgFLIndivLimit7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																	G_SetDefault2ProptyP => DEFAULT_2,
																	G_SetDefault3ProptyP => DEFAULT_3, 
																	G_SetDefault4IndLimit7YProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy AND G_FLPolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimit));
Report: => R_AvgFLIndivLimit7YProptyP := MIN(ROUND2(H_AvgFLIndivLimit7YProptyP), CAP_99999999_99);

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSP
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP1Y
// R_AvgIndivLimitBUSP1YProptyP
// R_AvgIndivLimitBUSP3Y
// R_AvgIndivLimitBUSP3YProptyP

// R_MaxIndivLimitBUSP
// R_MaxIndivLimitBUSPProptyP
// R_MinIndivLimitBUSP
// R_MinIndivLimitBUSPProptyP
//all individual limit attributes utilized hte null in kel, if kel function 
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitBUSP := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_BUSP),IndividualLimit); //if BUSP coverage, then average, otherwise null. 

PolicyProperty: => AvgIndividualLimitBUSP := AVE(Coverages((CoverageType IN C_COVERAGE_BUSP) AND (IndividualLimit > 0)),IndividualLimit); //if BUSP coverage, then average, otherwise null. 
Policy: => AvgIndividualLimitBUSP := AVE(PolicyProperty,AvgIndividualLimitBUSP);//average of availabe multiple properties for one policy (null is ignored), return null, if no busp coverage

// Report: => G_SetDefault4IndLimitBUSP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null));
Report: => G_SetDefault4IndLimitBUSP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null));

Report: => G_SetDefault4IndLimitBUSP1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitBUSP3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitBUSPProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitBUSP1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitBUSP3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MaxIndivLimitBUSP := MIN(ROUND2(H_MaxIndivLimitBUSP), CAP_99999999_99);

Report: => H_MaxIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																					G_SetDefault4IndLimitBUSPProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MaxIndivLimitBUSPProptyP := MIN(ROUND2(H_MaxIndivLimitBUSPProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MinIndivLimitBUSP := MIN(ROUND2(H_MinIndivLimitBUSP), CAP_99999999_99);

Report: => H_MinIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																					G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_MinIndivLimitBUSPProptyP := MIN(ROUND2(H_MinIndivLimitBUSPProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitBUSP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP := MIN(ROUND2(H_AvgIndivLimitBUSP), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2ProptyP => DEFAULT_2,
																					G_SetDefault3ProptyP => DEFAULT_3,  
																					G_SetDefault4IndLimitBUSPProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSPProptyP := MIN(ROUND2(H_AvgIndivLimitBUSPProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitBUSP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP1Y := MIN(ROUND2(H_AvgIndivLimitBUSP1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																					G_SetDefault4IndLimitBUSP1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP1YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP3Y := MIN(ROUND2(H_AvgIndivLimitBUSP3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
																					G_SetDefault4IndLimitBUSP3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP3YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovA
// R_AvgIndivLimitCovA1Y
// R_AvgIndivLimitCovA1YHO
// R_AvgIndivLimitCovA1YProptyP
// R_AvgIndivLimitCovA3Y
// R_AvgIndivLimitCovA3YHO
// R_AvgIndivLimitCovA3YProptyP
// R_AvgIndivLimitCovAHO
// R_AvgIndivLimitCovAProptyP

//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVA := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVA),IndividualLimit);

PolicyProperty: => AvgIndividualLimitCOVA := AVE(Coverages((CoverageType IN C_COVERAGE_COVA) AND (IndividualLimit > 0)),IndividualLimit);
PolicyProperty: => ExistCOVA := EXISTS(Coverages(CoverageType IN C_COVERAGE_COVA));
Policy: => AvgIndividualLimitCOVA := AVE(PolicyProperty,AvgIndividualLimitCOVA);// Null if no COVA or no limit for cova
Policy: => ExistCOVA := EXISTS(PolicyProperty(ExistCOVA));// Null if no COVA or no limit for cova

Report: => G_SetDefault4IndLimitCOVA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null));

// Report: => G_SetDefault4IndLimitCOVA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null));

Report: => G_SetDefault4IndLimitCOVA1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVA3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVAProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVA1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVA3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MaxIndivLimitCOVA := MIN(ROUND2(H_MaxIndivLimitCOVA), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVAProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MaxIndivLimitCOVAProptyP := MIN(ROUND2(H_MaxIndivLimitCOVAProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MinIndivLimitCOVA := MIN(ROUND2(H_MinIndivLimitCOVA), CAP_99999999_99);

Report: => H_MinIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_MinIndivLimitCOVAProptyP := MIN(ROUND2(H_MinIndivLimitCOVAProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVA := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVA => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA := MIN(ROUND2(H_AvgIndivLimitCOVA), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVAProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVAProptyP := MIN(ROUND2(H_AvgIndivLimitCOVAProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVA1Y := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVA1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA1Y := MIN(ROUND2(H_AvgIndivLimitCOVA1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA3Y := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVA3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA3Y := MIN(ROUND2(H_AvgIndivLimitCOVA3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                          G_SetDefault4IndLimitCOVA3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB
// R_AvgIndivLimitCovB1Y
// R_AvgIndivLimitCovB1YHO
// R_AvgIndivLimitCovB1YProptyP
// R_AvgIndivLimitCovB3Y
// R_AvgIndivLimitCovB3YHO
// R_AvgIndivLimitCovB3YProptyP
// R_AvgIndivLimitCovBHO
// R_AvgIndivLimitCovBProptyP

//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVB := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVB),IndividualLimit);
PolicyProperty: => AvgIndividualLimitCOVB := AVE(Coverages((CoverageType IN C_COVERAGE_COVB) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitCOVB := AVE(PolicyProperty,AvgIndividualLimitCOVB);

Report: => G_SetDefault4IndLimitCOVB := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null));
// Report: => G_SetDefault4IndLimitCOVB := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null));

Report: => G_SetDefault4IndLimitCOVB1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVB3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVBProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVB1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVB3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
                                      G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MaxIndivLimitCOVB := MIN(ROUND2(H_MaxIndivLimitCOVB), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVBProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MaxIndivLimitCOVBProptyP := MIN(ROUND2(H_MaxIndivLimitCOVBProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MinIndivLimitCOVB := MIN(ROUND2(H_MinIndivLimitCOVB), CAP_99999999_99);

Report: => H_MinIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_MinIndivLimitCOVBProptyP := MIN(H_MinIndivLimitCOVBProptyP, CAP_99999999_99);


Report: => H_AvgIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB := MIN(ROUND2(H_AvgIndivLimitCOVB), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVBProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVBProptyP := MIN(ROUND2(H_AvgIndivLimitCOVBProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVB1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB1Y := MIN(ROUND2(H_AvgIndivLimitCOVB1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB3Y := MIN(ROUND2(H_AvgIndivLimitCOVB3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                          G_SetDefault4IndLimitCOVB3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB3YProptyP), CAP_99999999_99);


// Report: => H_MaxIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MaxIndivLimitCOVB := MIN(ROUND2(H_MaxIndivLimitCOVB), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MaxIndivLimitCOVBProptyP := MIN(ROUND2(H_MaxIndivLimitCOVBProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MinIndivLimitCOVB := MIN(ROUND2(H_MinIndivLimitCOVB), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_MinIndivLimitCOVBProptyP := MIN(ROUND2(H_MinIndivLimitCOVBProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVB := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB := MIN(ROUND2(H_AvgIndivLimitCOVB), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVBProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVBProptyP := MIN(ROUND2(H_AvgIndivLimitCOVBProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVB1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB1Y := MIN(ROUND2(H_AvgIndivLimitCOVB1Y, CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVB1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVB3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB3Y := MIN(ROUND2(H_AvgIndivLimitCOVB3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVB3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVB => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVB));
// Report: => R_AvgIndivLimitCOVB3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitCovC
// R_AvgIndivLimitCovC1Y
// R_AvgIndivLimitCovC1YHO
// R_AvgIndivLimitCovC1YProptyP
// R_AvgIndivLimitCovC3Y
// R_AvgIndivLimitCovC3YHO
// R_AvgIndivLimitCovC3YProptyP
// R_AvgIndivLimitCovCHO
// R_AvgIndivLimitCovCProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVC := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVC),IndividualLimit);
PolicyProperty: => AvgIndividualLimitCOVC := AVE(Coverages((CoverageType IN C_COVERAGE_COVC) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitCOVC := AVE(PolicyProperty,AvgIndividualLimitCOVC);

Report: => G_SetDefault4IndLimitCOVC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null));
// Report: => G_SetDefault4IndLimitCOVC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null));

Report: => G_SetDefault4IndLimitCOVC1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVC3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVCProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVC1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVC3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MaxIndivLimitCOVC := MIN(ROUND2(H_MaxIndivLimitCOVC), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVCProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MaxIndivLimitCOVCProptyP := MIN(ROUND2(H_MaxIndivLimitCOVCProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MinIndivLimitCOVC := MIN(ROUND2(H_MinIndivLimitCOVC), CAP_99999999_99);

Report: => H_MinIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_MinIndivLimitCOVCProptyP := MIN(ROUND2(H_MinIndivLimitCOVCProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC := MIN(ROUND2(H_AvgIndivLimitCOVC), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVCProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVCProptyP := MIN(ROUND2(H_AvgIndivLimitCOVCProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC1Y := MIN(ROUND2(H_AvgIndivLimitCOVC1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC3Y := MIN(ROUND2(H_AvgIndivLimitCOVC3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVC3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MaxIndivLimitCOVC := MIN(ROUND2(H_MaxIndivLimitCOVC), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MaxIndivLimitCOVCProptyP := MIN(ROUND2(H_MaxIndivLimitCOVCProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MinIndivLimitCOVC := MIN(ROUND2(H_MinIndivLimitCOVC), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_MinIndivLimitCOVCProptyP := MIN(ROUND2(H_MinIndivLimitCOVCProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC := MIN(ROUND2(H_AvgIndivLimitCOVC), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVCProptyP := MIN(ROUND2(H_AvgIndivLimitCOVCProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC1Y := MIN(ROUND2(H_AvgIndivLimitCOVC1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC3Y := MIN(ROUND2(H_AvgIndivLimitCOVC3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVC));
// Report: => R_AvgIndivLimitCOVC3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD
// R_AvgIndivLimitCovD1Y
// R_AvgIndivLimitCovD1YHO
// R_AvgIndivLimitCovD1YProptyP
// R_AvgIndivLimitCovD3Y
// R_AvgIndivLimitCovD3YHO
// R_AvgIndivLimitCovD3YProptyP
// R_AvgIndivLimitCovDHO
// R_AvgIndivLimitCovDProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVD),IndividualLimit);
PolicyProperty: => AvgIndividualLimitCOVD := AVE(Coverages((CoverageType IN C_COVERAGE_COVD) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitCOVD := AVE(PolicyProperty,AvgIndividualLimitCOVD);

Report: => G_SetDefault4IndLimitCOVD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null));

Report: => G_SetDefault4IndLimitCOVD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MaxIndivLimitCOVD := MIN(ROUND2(H_MaxIndivLimitCOVD), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MaxIndivLimitCOVDProptyP := MIN(ROUND2(H_MaxIndivLimitCOVDProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MinIndivLimitCOVD := MIN(ROUND2(H_MinIndivLimitCOVD), CAP_99999999_99);

Report: => H_MinIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_MinIndivLimitCOVDProptyP := MIN(ROUND2(H_MinIndivLimitCOVDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD := MIN(ROUND2(H_AvgIndivLimitCOVD), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVDProptyP := MIN(ROUND2(H_AvgIndivLimitCOVDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD1Y := MIN(ROUND2(H_AvgIndivLimitCOVD1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD3Y := MIN(ROUND2(H_AvgIndivLimitCOVD3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD3YProptyP), CAP_99999999_99);

// Report: => G_SetDefault4IndLimitCOVD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null));

// Report: => H_MaxIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MaxIndivLimitCOVD := MIN(ROUND2(H_MaxIndivLimitCOVD), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MaxIndivLimitCOVDProptyP := MIN(ROUND2(H_MaxIndivLimitCOVDProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MinIndivLimitCOVD := MIN(ROUND2(H_MinIndivLimitCOVD), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_MinIndivLimitCOVDProptyP := MIN(ROUND2(H_MinIndivLimitCOVDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD := MIN(ROUND2(H_AvgIndivLimitCOVD), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVDProptyP := MIN(ROUND2(H_AvgIndivLimitCOVDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD1Y := MIN(ROUND2(H_AvgIndivLimitCOVD1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD3Y := MIN(ROUND2(H_AvgIndivLimitCOVD3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVD));
// Report: => R_AvgIndivLimitCOVD3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE
// R_AvgIndivLimitCovE1Y
// R_AvgIndivLimitCovE1YHO
// R_AvgIndivLimitCovE1YProptyP
// R_AvgIndivLimitCovE3Y
// R_AvgIndivLimitCovE3YHO
// R_AvgIndivLimitCovE3YProptyP
// R_AvgIndivLimitCovEHO
// R_AvgIndivLimitCovEProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVE := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVE),IndividualLimit);
PolicyProperty: => AvgIndividualLimitCOVE := AVE(Coverages((CoverageType IN C_COVERAGE_COVE) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitCOVE := AVE(PolicyProperty,AvgIndividualLimitCOVE);

Report: => G_SetDefault4IndLimitCOVE := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null));
// Report: => G_SetDefault4IndLimitCOVE := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null));

Report: => G_SetDefault4IndLimitCOVE1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVE3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVEProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVE1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVE3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MaxIndivLimitCOVE := MIN(ROUND2(H_MaxIndivLimitCOVE), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVEProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MaxIndivLimitCOVEProptyP := MIN(ROUND2(H_MaxIndivLimitCOVEProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MinIndivLimitCOVE := MIN(ROUND2(H_MinIndivLimitCOVE), CAP_99999999_99);

Report: => H_MinIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_MinIndivLimitCOVEProptyP := MIN(ROUND2(H_MinIndivLimitCOVEProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE := MIN(ROUND2(H_AvgIndivLimitCOVE), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVEProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVEProptyP := MIN(ROUND2(H_AvgIndivLimitCOVEProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVE1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE1Y := MIN(ROUND2(H_AvgIndivLimitCOVE1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE3Y := MIN(ROUND2(H_AvgIndivLimitCOVE3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVE3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MaxIndivLimitCOVE := MIN(ROUND2(H_MaxIndivLimitCOVE), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MaxIndivLimitCOVEProptyP := MIN(ROUND2(H_MaxIndivLimitCOVEProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MinIndivLimitCOVE := MIN(ROUND2(H_MinIndivLimitCOVE), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_MinIndivLimitCOVEProptyP := MIN(ROUND2(H_MinIndivLimitCOVEProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVE := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE := MIN(ROUND2(H_AvgIndivLimitCOVE), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVEProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVEProptyP := MIN(ROUND2(H_AvgIndivLimitCOVEProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVE1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE1Y := MIN(ROUND2(H_AvgIndivLimitCOVE1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVE1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVE3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE3Y := MIN(ROUND2(H_AvgIndivLimitCOVE3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVE3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVE => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVE));
// Report: => R_AvgIndivLimitCOVE3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF
// R_AvgIndivLimitCovF1Y
// R_AvgIndivLimitCovF1YHO
// R_AvgIndivLimitCovF1YProptyP
// R_AvgIndivLimitCovF3Y
// R_AvgIndivLimitCovF3YHO
// R_AvgIndivLimitCovF3YProptyP
// R_AvgIndivLimitCovFHO
// R_AvgIndivLimitCovFProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitCOVF := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_COVF),IndividualLimit);
PolicyProperty: => AvgIndividualLimitCOVF := AVE(Coverages((CoverageType IN C_COVERAGE_COVF) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitCOVF := AVE(PolicyProperty,AvgIndividualLimitCOVF);

Report: => G_SetDefault4IndLimitCOVF := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null));
// Report: => G_SetDefault4IndLimitCOVF := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null));

Report: => G_SetDefault4IndLimitCOVF1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVF3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitCOVFProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitCOVF1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitCOVF3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MaxIndivLimitCOVF := MIN(ROUND2(H_MaxIndivLimitCOVF), CAP_99999999_99);

Report: => H_MaxIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVFProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MaxIndivLimitCOVFProptyP := MIN(ROUND2(H_MaxIndivLimitCOVFProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MinIndivLimitCOVF := MIN(ROUND2(H_MinIndivLimitCOVF), CAP_99999999_99);

Report: => H_MinIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_MinIndivLimitCOVFProptyP := MIN(ROUND2(H_MinIndivLimitCOVFProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3,  
																			G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF := MIN(ROUND2(H_AvgIndivLimitCOVF), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitCOVFProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVFProptyP := MIN(ROUND2(H_AvgIndivLimitCOVFProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitCOVF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF1Y := MIN(ROUND2(H_AvgIndivLimitCOVF1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF3Y := MIN(ROUND2(H_AvgIndivLimitCOVF3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitCOVF3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MaxIndivLimitCOVF := MIN(ROUND2(H_MaxIndivLimitCOVF), CAP_99999999_99);

// Report: => H_MaxIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MaxIndivLimitCOVFProptyP := MIN(ROUND2(H_MaxIndivLimitCOVFProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MinIndivLimitCOVF := MIN(ROUND2(H_MinIndivLimitCOVF), CAP_99999999_99);

// Report: => H_MinIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_MinIndivLimitCOVFProptyP := MIN(ROUND2(H_MinIndivLimitCOVFProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVF := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF := MIN(ROUND2(H_AvgIndivLimitCOVF), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVFProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVFProptyP := MIN(ROUND2(H_AvgIndivLimitCOVFProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitCOVF1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF1Y := MIN(ROUND2(H_AvgIndivLimitCOVF1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVF1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF1YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVF3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF3Y := MIN(ROUND2(H_AvgIndivLimitCOVF3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitCOVF3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitCOVF => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitCOVF));
// Report: => R_AvgIndivLimitCOVF3YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI
// R_AvgIndivLimitEQKI1Y
// R_AvgIndivLimitEQKI1YProptyP
// R_AvgIndivLimitEQKI3Y
// R_AvgIndivLimitEQKI3YProptyP
// R_AvgIndivLimitEQKIProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitEQKI := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_EQKI),IndividualLimit);
PolicyProperty: => AvgIndividualLimitEQKI := AVE(Coverages((CoverageType IN C_COVERAGE_EQKI) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitEQKI := AVE(PolicyProperty,AvgIndividualLimitEQKI);

Report: => G_SetDefault4IndLimitEQKI := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null));
// Report: => G_SetDefault4IndLimitEQKT := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKT:Null));

Report: => G_SetDefault4IndLimitEQKI1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitEQKI3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitEQKIProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitEQKI1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitEQKI3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MaxIndivLimitEQKI := MIN(ROUND2(H_MaxIndivLimitEQKI), CAP_99999999_99);

Report: => H_MaxIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKIProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MaxIndivLimitEQKIProptyP := MIN(ROUND2(H_MaxIndivLimitEQKIProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MinIndivLimitEQKI := MIN(ROUND2(H_MinIndivLimitEQKI), CAP_99999999_99);

Report: => H_MinIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKIProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_MinIndivLimitEQKIProptyP := MIN(ROUND2(H_MinIndivLimitEQKIProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI := MIN(ROUND2(H_AvgIndivLimitEQKI), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitEQKIProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKIProptyP := MIN(ROUND2(H_AvgIndivLimitEQKIProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitEQKI1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI1Y := MIN(ROUND2(H_AvgIndivLimitEQKI1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI1YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI3Y := MIN(ROUND2(H_AvgIndivLimitEQKI3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitEQKI3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI3YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MaxIndivLimitEQKI := MIN(ROUND2(H_MaxIndivLimitEQKI), CAP_99999999_99);

// Report: => H_MaxIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MaxIndivLimitEQKIProptyP := MIN(ROUND2(H_MaxIndivLimitEQKIProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MinIndivLimitEQKI := MIN(ROUND2(H_MinIndivLimitEQKI), CAP_99999999_99);

// Report: => H_MinIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_MinIndivLimitEQKIProptyP := MIN(ROUND2(H_MinIndivLimitEQKIProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitEQKI := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI := MIN(ROUND2(H_AvgIndivLimitEQKI), CAP_99999999_99);

// Report: => H_AvgIndivLimitEQKIProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKIProptyP := MIN(ROUND2(H_AvgIndivLimitEQKIProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitEQKI1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI1Y := MIN(ROUND2(H_AvgIndivLimitEQKI1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitEQKI1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI1YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitEQKI3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI3Y := MIN(ROUND2(H_AvgIndivLimitEQKI3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitEQKI3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitEQKI => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitEQKI));
// Report: => R_AvgIndivLimitEQKI3YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitERQK
// R_AvgIndivLimitERQK1Y
// R_AvgIndivLimitERQK1YProptyP
// R_AvgIndivLimitERQK3Y
// R_AvgIndivLimitERQK3YProptyP
// R_AvgIndivLimitERQKProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitERQK := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_ERQK),IndividualLimit);
PolicyProperty: => AvgIndividualLimitERQK := AVE(Coverages((CoverageType IN C_COVERAGE_ERQK) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitERQK := AVE(PolicyProperty,AvgIndividualLimitERQK);

Report: => G_SetDefault4IndLimitERQK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null));
// Report: => G_SetDefault4IndLimitERQK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null));

Report: => G_SetDefault4IndLimitERQK1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitERQK3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitERQKProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitERQK1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitERQK3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MaxIndivLimitERQK := MIN(ROUND2(H_MaxIndivLimitERQK), CAP_99999999_99);

Report: => H_MaxIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQKProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MaxIndivLimitERQKProptyP := MIN(ROUND2(H_MaxIndivLimitERQKProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MinIndivLimitERQK := MIN(ROUND2(H_MinIndivLimitERQK), CAP_99999999_99);

Report: => H_MinIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQKProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_MinIndivLimitERQKProptyP := MIN(ROUND2(H_MinIndivLimitERQKProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK := MIN(ROUND2(H_AvgIndivLimitERQK), CAP_99999999_99);

Report: => H_AvgIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitERQKProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQKProptyP := MIN(ROUND2(H_AvgIndivLimitERQKProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitERQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK1Y := MIN(ROUND2(H_AvgIndivLimitERQK1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK1YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK3Y := MIN(ROUND2(H_AvgIndivLimitERQK3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitERQK3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK3YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MaxIndivLimitERQK := MIN(ROUND2(H_MaxIndivLimitERQK), CAP_99999999_99);

// Report: => H_MaxIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MaxIndivLimitERQKProptyP := MIN(ROUND2(H_MaxIndivLimitERQKProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MinIndivLimitERQK := MIN(ROUND2(H_MinIndivLimitERQK), CAP_99999999_99);

// Report: => H_MinIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_MinIndivLimitERQKProptyP := MIN(ROUND2(H_MinIndivLimitERQKProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitERQK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK := MIN(ROUND2(H_AvgIndivLimitERQK), CAP_99999999_99);

// Report: => H_AvgIndivLimitERQKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQKProptyP := MIN(ROUND2(H_AvgIndivLimitERQKProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitERQK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK1Y := MIN(ROUND2(H_AvgIndivLimitERQK1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitERQK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK1YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitERQK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3,
																		// G_SetDefault4IndLimitERQK => DEFAULT_4, 
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK3Y := MIN(ROUND2(H_AvgIndivLimitERQK3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitERQK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitERQK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitERQK));
// Report: => R_AvgIndivLimitERQK3YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitFARM
// R_AvgIndivLimitFARM1Y
// R_AvgIndivLimitFARM3Y
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitFARM := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FARM),IndividualLimit);
PolicyProperty: => AvgIndividualLimitFARM := AVE(Coverages((CoverageType IN C_COVERAGE_FARM) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitFARM := AVE(PolicyProperty,AvgIndividualLimitFARM);

// Report: => G_SetDefault4IndLimitFARM := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null));
Report: => G_SetDefault4IndLimitFARM := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null));

Report: => G_SetDefault4IndLimitFARM1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFARM3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFARMProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFARM1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFARM3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MaxIndivLimitFARM := MIN(ROUND2(H_MaxIndivLimitFARM), CAP_99999999_99);

Report: => H_MaxIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARMProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MaxIndivLimitFARMProptyP := MIN(ROUND2(H_MaxIndivLimitFARMProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MinIndivLimitFARM := MIN(ROUND2(H_MinIndivLimitFARM), CAP_99999999_99);

Report: => H_MinIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARMProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_MinIndivLimitFARMProptyP := MIN(ROUND2(H_MinIndivLimitFARMProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM := MIN(ROUND2(H_AvgIndivLimitFARM), CAP_99999999_99);

Report: => H_AvgIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFARMProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARMProptyP := MIN(ROUND2(H_AvgIndivLimitFARMProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFARM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM1Y := MIN(ROUND2(H_AvgIndivLimitFARM1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM1YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM3Y := MIN(ROUND2(H_AvgIndivLimitFARM3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFARM3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM3YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MaxIndivLimitFARM := MIN(ROUND2(H_MaxIndivLimitFARM), CAP_99999999_99);

// Report: => H_MaxIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MaxIndivLimitFARMProptyP := MIN(ROUND2(H_MaxIndivLimitFARMProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MinIndivLimitFARM := MIN(ROUND2(H_MinIndivLimitFARM), CAP_99999999_99);

// Report: => H_MinIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_MinIndivLimitFARMProptyP := MIN(ROUND2(H_MinIndivLimitFARMProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFARM := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM := MIN(ROUND2(H_AvgIndivLimitFARM), CAP_99999999_99);

// Report: => H_AvgIndivLimitFARMProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARMProptyP := MIN(ROUND2(H_AvgIndivLimitFARMProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFARM1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM1Y := MIN(ROUND2(H_AvgIndivLimitFARM1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFARM1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM1YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitFARM3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM3Y := MIN(ROUND2(H_AvgIndivLimitFARM3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFARM3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFARM => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFARM));
// Report: => R_AvgIndivLimitFARM3YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitFIRA
// R_AvgIndivLimitFIRA1Y
// R_AvgIndivLimitFIRA1YProptyP
// R_AvgIndivLimitFIRA3Y
// R_AvgIndivLimitFIRA3YProptyP
// R_AvgIndivLimitFIRAProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitFIRA := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FIRA),IndividualLimit);
PolicyProperty: => AvgIndividualLimitFIRA := AVE(Coverages((CoverageType IN C_COVERAGE_FIRA) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitFIRA := AVE(PolicyProperty,AvgIndividualLimitFIRA);

// Report: => G_SetDefault4IndLimitFIRA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null));
Report: => G_SetDefault4IndLimitFIRA := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null));

Report: => G_SetDefault4IndLimitFIRA1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFIRA3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFIRAProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFIRA1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFIRA3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MaxIndivLimitFIRA := MIN(ROUND2(H_MaxIndivLimitFIRA), CAP_99999999_99);

Report: => H_MaxIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRAProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MaxIndivLimitFIRAProptyP := MIN(ROUND2(H_MaxIndivLimitFIRAProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MinIndivLimitFIRA := MIN(ROUND2(H_MinIndivLimitFIRA), CAP_99999999_99);

Report: => H_MinIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRAProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_MinIndivLimitFIRAProptyP := MIN(ROUND2(H_MinIndivLimitFIRAProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA := MIN(ROUND2(H_AvgIndivLimitFIRA), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFIRAProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRAProptyP := MIN(ROUND2(H_AvgIndivLimitFIRAProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFIRA1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA1Y := MIN(ROUND2(H_AvgIndivLimitFIRA1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA1YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA3Y := MIN(ROUND2(H_AvgIndivLimitFIRA3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFIRA3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA3YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MaxIndivLimitFIRA := MIN(ROUND2(H_MaxIndivLimitFIRA), CAP_99999999_99);

// Report: => H_MaxIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MaxIndivLimitFIRAProptyP := MIN(ROUND2(H_MaxIndivLimitFIRAProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MinIndivLimitFIRA := MIN(ROUND2(H_MinIndivLimitFIRA), CAP_99999999_99);

// Report: => H_MinIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3,
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4, 
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_MinIndivLimitFIRAProptyP := MIN(ROUND2(H_MinIndivLimitFIRAProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFIRA := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA := MIN(ROUND2(H_AvgIndivLimitFIRA), CAP_99999999_99);

// Report: => H_AvgIndivLimitFIRAProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRAProptyP := MIN(ROUND2(H_AvgIndivLimitFIRAProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFIRA1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA1Y := MIN(ROUND2(H_AvgIndivLimitFIRA1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFIRA1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA1YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitFIRA3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA3Y := MIN(ROUND2(H_AvgIndivLimitFIRA3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFIRA3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitFIRA => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFIRA));
// Report: => R_AvgIndivLimitFIRA3YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitFLOD
// R_AvgIndivLimitFLOD1Y
// R_AvgIndivLimitFLOD1YProptyP
// R_AvgIndivLimitFLOD3Y
// R_AvgIndivLimitFLOD3YProptyP
// R_AvgIndivLimitFLODProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitFLOD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_FLOD),IndividualLimit);
PolicyProperty: => AvgIndividualLimitFLOD := AVE(Coverages((CoverageType IN C_COVERAGE_FLOD) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitFLOD := AVE(PolicyProperty,AvgIndividualLimitFLOD);

// Report: => G_SetDefault4IndLimitFLOD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null));
Report: => G_SetDefault4IndLimitFLOD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null));

Report: => G_SetDefault4IndLimitFLOD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFLOD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitFLODProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitFLOD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitFLOD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MaxIndivLimitFLOD := MIN(ROUND2(H_MaxIndivLimitFLOD), CAP_99999999_99);

Report: => H_MaxIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLODProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MaxIndivLimitFLODProptyP := MIN(ROUND2(H_MaxIndivLimitFLODProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MinIndivLimitFLOD := MIN(ROUND2(H_MinIndivLimitFLOD), CAP_99999999_99);

Report: => H_MinIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLODProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_MinIndivLimitFLODProptyP := MIN(ROUND2(H_MinIndivLimitFLODProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD := MIN(ROUND2(H_AvgIndivLimitFLOD), CAP_99999999_99);

Report: => H_AvgIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitFLODProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLODProptyP := MIN(ROUND2(H_AvgIndivLimitFLODProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitFLOD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD1Y := MIN(ROUND2(H_AvgIndivLimitFLOD1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD1YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD3Y := MIN(ROUND2(H_AvgIndivLimitFLOD3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitFLOD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD3YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MaxIndivLimitFLOD := MIN(ROUND2(H_MaxIndivLimitFLOD), CAP_99999999_99);

// Report: => H_MaxIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MaxIndivLimitFLODProptyP := MIN(ROUND2(H_MaxIndivLimitFLODProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MinIndivLimitFLOD := MIN(ROUND2(H_MinIndivLimitFLOD), CAP_99999999_99);

// Report: => H_MinIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_MinIndivLimitFLODProptyP := MIN(ROUND2(H_MinIndivLimitFLODProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFLOD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD := MIN(ROUND2(H_AvgIndivLimitFLOD), CAP_99999999_99);

// Report: => H_AvgIndivLimitFLODProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLODProptyP := MIN(ROUND2(H_AvgIndivLimitFLODProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitFLOD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD1Y := MIN(ROUND2(H_AvgIndivLimitFLOD1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFLOD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD1YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitFLOD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD3Y := MIN(ROUND2(H_AvgIndivLimitFLOD3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitFLOD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitFLOD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitFLOD));
// Report: => R_AvgIndivLimitFLOD3YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitGRPL
// R_AvgIndivLimitGRPL1Y
// R_AvgIndivLimitGRPL1YProptyP
// R_AvgIndivLimitGRPL3Y
// R_AvgIndivLimitGRPL3YProptyP
// R_AvgIndivLimitGRPLProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitGRPL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_GRPL),IndividualLimit);
PolicyProperty: => AvgIndividualLimitGRPL := AVE(Coverages((CoverageType IN C_COVERAGE_GRPL) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitGRPL := AVE(PolicyProperty,AvgIndividualLimitGRPL);


// Report: => G_SetDefault4IndLimitGRPL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null));
Report: => G_SetDefault4IndLimitGRPL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null));

Report: => G_SetDefault4IndLimitGRPL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitGRPL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitGRPLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitGRPL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitGRPL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MaxIndivLimitGRPL := MIN(ROUND2(H_MaxIndivLimitGRPL), CAP_99999999_99);

Report: => H_MaxIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MaxIndivLimitGRPLProptyP := MIN(ROUND2(H_MaxIndivLimitGRPLProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MinIndivLimitGRPL := MIN(ROUND2(H_MinIndivLimitGRPL), CAP_99999999_99);

Report: => H_MinIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPLProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_MinIndivLimitGRPLProptyP := MIN(ROUND2(H_MinIndivLimitGRPLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL := MIN(ROUND2(H_AvgIndivLimitGRPL), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitGRPLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPLProptyP := MIN(ROUND2(H_AvgIndivLimitGRPLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitGRPL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL1Y := MIN(ROUND2(H_AvgIndivLimitGRPL1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL1YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL3Y := MIN(ROUND2(H_AvgIndivLimitGRPL3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitGRPL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL3YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MaxIndivLimitGRPL := MIN(ROUND2(H_MaxIndivLimitGRPL), CAP_99999999_99);

// Report: => H_MaxIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MaxIndivLimitGRPLProptyP := MIN(ROUND2(H_MaxIndivLimitGRPLProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MinIndivLimitGRPL := MIN(ROUND2(H_MinIndivLimitGRPL), CAP_99999999_99);

// Report: => H_MinIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_MinIndivLimitGRPLProptyP := MIN(ROUND2(H_MinIndivLimitGRPLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitGRPL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL := MIN(ROUND2(H_AvgIndivLimitGRPL), CAP_99999999_99);

// Report: => H_AvgIndivLimitGRPLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPLProptyP := MIN(ROUND2(H_AvgIndivLimitGRPLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitGRPL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL1Y := MIN(ROUND2(H_AvgIndivLimitGRPL1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitGRPL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL1YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitGRPL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL3Y := MIN(ROUND2(H_AvgIndivLimitGRPL3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitGRPL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitGRPL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitGRPL));
// Report: => R_AvgIndivLimitGRPL3YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitHAIL
// R_AvgIndivLimitHAIL1Y
// R_AvgIndivLimitHAIL1YProptyP
// R_AvgIndivLimitHAIL3Y
// R_AvgIndivLimitHAIL3YProptyP
// R_AvgIndivLimitHAILProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitHAIL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HAIL),IndividualLimit);
PolicyProperty: => AvgIndividualLimitHAIL := AVE(Coverages((CoverageType IN C_COVERAGE_HAIL) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitHAIL := AVE(PolicyProperty,AvgIndividualLimitHAIL);

// Report: => G_SetDefault4IndLimitHAIL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null));
Report: => G_SetDefault4IndLimitHAIL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null));

Report: => G_SetDefault4IndLimitHAIL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHAIL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHAILProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHAIL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHAIL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MaxIndivLimitHAIL := MIN(ROUND2(H_MaxIndivLimitHAIL), CAP_99999999_99);

Report: => H_MaxIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAILProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MaxIndivLimitHAILProptyP := MIN(ROUND2(H_MaxIndivLimitHAILProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MinIndivLimitHAIL := MIN(ROUND2(H_MinIndivLimitHAIL), CAP_99999999_99);

Report: => H_MinIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAILProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_MinIndivLimitHAILProptyP := MIN(ROUND2(H_MinIndivLimitHAILProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL := MIN(ROUND2(H_AvgIndivLimitHAIL), CAP_99999999_99);

Report: => H_AvgIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHAILProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAILProptyP := MIN(ROUND2(H_AvgIndivLimitHAILProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHAIL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL1Y := MIN(ROUND2(H_AvgIndivLimitHAIL1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL1YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL3Y := MIN(ROUND2(H_AvgIndivLimitHAIL3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHAIL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL3YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,																		
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MaxIndivLimitHAIL := MIN(ROUND2(H_MaxIndivLimitHAIL), CAP_99999999_99);

// Report: => H_MaxIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MaxIndivLimitHAILProptyP := MIN(ROUND2(H_MaxIndivLimitHAILProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MinIndivLimitHAIL := MIN(ROUND2(H_MinIndivLimitHAIL), CAP_99999999_99);

// Report: => H_MinIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_MinIndivLimitHAILProptyP := MIN(ROUND2(H_MinIndivLimitHAILProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHAIL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL := MIN(ROUND2(H_AvgIndivLimitHAIL), CAP_99999999_99);

// Report: => H_AvgIndivLimitHAILProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAILProptyP := MIN(ROUND2(H_AvgIndivLimitHAILProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHAIL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL1Y := MIN(ROUND2(H_AvgIndivLimitHAIL1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHAIL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL1YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitHAIL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL3Y := MIN(ROUND2(H_AvgIndivLimitHAIL3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHAIL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHAIL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHAIL));
// Report: => R_AvgIndivLimitHAIL3YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitHDCR
// R_AvgIndivLimitHDCR1Y
// R_AvgIndivLimitHDCR1YProptyP
// R_AvgIndivLimitHDCR3Y
// R_AvgIndivLimitHDCR3YProptyP
// R_AvgIndivLimitHDCRProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitHDCR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HDCR),IndividualLimit);
PolicyProperty: => AvgIndividualLimitHDCR := AVE(Coverages((CoverageType IN C_COVERAGE_HDCR) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitHDCR := AVE(PolicyProperty,AvgIndividualLimitHDCR);

// Report: => G_SetDefault4IndLimitHDCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null));
Report: => G_SetDefault4IndLimitHDCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null));

Report: => G_SetDefault4IndLimitHDCR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHDCR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHDCRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHDCR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHDCR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MaxIndivLimitHDCR := MIN(ROUND2(H_MaxIndivLimitHDCR), CAP_99999999_99);

Report: => H_MaxIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MaxIndivLimitHDCRProptyP := MIN(ROUND2(H_MaxIndivLimitHDCRProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MinIndivLimitHDCR := MIN(ROUND2(H_MinIndivLimitHDCR), CAP_99999999_99);

Report: => H_MinIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCRProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_MinIndivLimitHDCRProptyP := MIN(ROUND2(H_MinIndivLimitHDCRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR := MIN(ROUND2(H_AvgIndivLimitHDCR), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHDCRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCRProptyP := MIN(ROUND2(H_AvgIndivLimitHDCRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHDCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR1Y := MIN(ROUND2(H_AvgIndivLimitHDCR1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR1YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR3Y := MIN(ROUND2(H_AvgIndivLimitHDCR3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHDCR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR3YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MaxIndivLimitHDCR := MIN(ROUND2(H_MaxIndivLimitHDCR), CAP_99999999_99);

// Report: => H_MaxIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MaxIndivLimitHDCRProptyP := MIN(ROUND2(H_MaxIndivLimitHDCRProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MinIndivLimitHDCR := MIN(ROUND2(H_MinIndivLimitHDCR), CAP_99999999_99);

// Report: => H_MinIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_MinIndivLimitHDCRProptyP := MIN(ROUND2(H_MinIndivLimitHDCRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHDCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR := MIN(ROUND2(H_AvgIndivLimitHDCR), CAP_99999999_99);

// Report: => H_AvgIndivLimitHDCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCRProptyP := MIN(ROUND2(H_AvgIndivLimitHDCRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHDCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR1Y := MIN(ROUND2(H_AvgIndivLimitHDCR1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHDCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR1YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitHDCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR3Y := MIN(ROUND2(H_AvgIndivLimitHDCR3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHDCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHDCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHDCR));
// Report: => R_AvgIndivLimitHDCR3YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitHULL
// R_AvgIndivLimitHULL1Y
// R_AvgIndivLimitHULL1YProptyP
// R_AvgIndivLimitHULL3Y
// R_AvgIndivLimitHULL3YProptyP
// R_AvgIndivLimitHULLProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitHULL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HULL),IndividualLimit);
PolicyProperty: => AvgIndividualLimitHULL := AVE(Coverages((CoverageType IN C_COVERAGE_HULL) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitHULL := AVE(PolicyProperty,AvgIndividualLimitHULL);

// Report: => G_SetDefault4IndLimitHULL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null));
Report: => G_SetDefault4IndLimitHULL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null));

Report: => G_SetDefault4IndLimitHULL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHULL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHULLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHULL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHULL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MaxIndivLimitHULL := MIN(ROUND2(H_MaxIndivLimitHULL), CAP_99999999_99);

Report: => H_MaxIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MaxIndivLimitHULLProptyP := MIN(ROUND2(H_MaxIndivLimitHULLProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MinIndivLimitHULL := MIN(ROUND2(H_MinIndivLimitHULL), CAP_99999999_99);

Report: => H_MinIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULLProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_MinIndivLimitHULLProptyP := MIN(ROUND2(H_MinIndivLimitHULLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL := MIN(ROUND2(H_AvgIndivLimitHULL), CAP_99999999_99);

Report: => H_AvgIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHULLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULLProptyP := MIN(ROUND2(H_AvgIndivLimitHULLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHULL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL1Y := MIN(ROUND2(H_AvgIndivLimitHULL1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL1YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL3Y := MIN(ROUND2(H_AvgIndivLimitHULL3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHULL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL3YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MaxIndivLimitHULL := MIN(ROUND2(H_MaxIndivLimitHULL), CAP_99999999_99);

// Report: => H_MaxIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MaxIndivLimitHULLProptyP := MIN(ROUND2(H_MaxIndivLimitHULLProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MinIndivLimitHULL := MIN(ROUND2(H_MinIndivLimitHULL), CAP_99999999_99);

// Report: => H_MinIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_MinIndivLimitHULLProptyP := MIN(ROUND2(H_MinIndivLimitHULLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHULL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL := MIN(ROUND2(H_AvgIndivLimitHULL), CAP_99999999_99);

// Report: => H_AvgIndivLimitHULLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULLProptyP := MIN(ROUND2(H_AvgIndivLimitHULLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHULL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL1Y := MIN(ROUND2(H_AvgIndivLimitHULL1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHULL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL1YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitHULL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL3Y := MIN(ROUND2(H_AvgIndivLimitHULL3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHULL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitHULL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHULL));
// Report: => R_AvgIndivLimitHULL3YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitHURR
// R_AvgIndivLimitHURR1Y
// R_AvgIndivLimitHURR1YProptyP
// R_AvgIndivLimitHURR3Y
// R_AvgIndivLimitHURR3YProptyP
// R_AvgIndivLimitHURRProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitHURR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_HURR),IndividualLimit);
PolicyProperty: => AvgIndividualLimitHURR := AVE(Coverages((CoverageType IN C_COVERAGE_HURR) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitHURR := AVE(PolicyProperty,AvgIndividualLimitHURR);

// Report: => G_SetDefault4IndLimitHURR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null));
Report: => G_SetDefault4IndLimitHURR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null));

Report: => G_SetDefault4IndLimitHURR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHURR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitHURRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitHURR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitHURR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MaxIndivLimitHURR := MIN(ROUND2(H_MaxIndivLimitHURR), CAP_99999999_99);

Report: => H_MaxIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MaxIndivLimitHURRProptyP := MIN(ROUND2(H_MaxIndivLimitHURRProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MinIndivLimitHURR := MIN(ROUND2(H_MinIndivLimitHURR), CAP_99999999_99);

Report: => H_MinIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURRProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_MinIndivLimitHURRProptyP := MIN(ROUND2(H_MinIndivLimitHURRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR := MIN(ROUND2(H_AvgIndivLimitHURR), CAP_99999999_99);

Report: => H_AvgIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitHURRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURRProptyP := MIN(ROUND2(H_AvgIndivLimitHURRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitHURR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR1Y := MIN(ROUND2(H_AvgIndivLimitHURR1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR1YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR3Y := MIN(ROUND2(H_AvgIndivLimitHURR3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitHURR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR3YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MaxIndivLimitHURR := MIN(ROUND2(H_MaxIndivLimitHURR), CAP_99999999_99);

// Report: => H_MaxIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MaxIndivLimitHURRProptyP := MIN(ROUND2(H_MaxIndivLimitHURRProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MinIndivLimitHURR := MIN(ROUND2(H_MinIndivLimitHURR), CAP_99999999_99);

// Report: => H_MinIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_MinIndivLimitHURRProptyP := MIN(ROUND2(H_MinIndivLimitHURRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHURR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR := MIN(ROUND2(H_AvgIndivLimitHURR), CAP_99999999_99);

// Report: => H_AvgIndivLimitHURRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURRProptyP := MIN(ROUND2(H_AvgIndivLimitHURRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitHURR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR1Y := MIN(ROUND2(H_AvgIndivLimitHURR1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHURR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR1YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitHURR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR3Y := MIN(ROUND2(H_AvgIndivLimitHURR3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitHURR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitHURR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitHURR));
// Report: => R_AvgIndivLimitHURR3YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitMOLD
// R_AvgIndivLimitMOLD1Y
// R_AvgIndivLimitMOLD1YProptyP
// R_AvgIndivLimitMOLD3Y
// R_AvgIndivLimitMOLD3YProptyP
// R_AvgIndivLimitMOLDProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitMOLD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_MOLD),IndividualLimit);
PolicyProperty: => AvgIndividualLimitMOLD := AVE(Coverages((CoverageType IN C_COVERAGE_MOLD) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitMOLD := AVE(PolicyProperty,AvgIndividualLimitMOLD);

// Report: => G_SetDefault4IndLimitMOLD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null));
Report: => G_SetDefault4IndLimitMOLD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null));

Report: => G_SetDefault4IndLimitMOLD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitMOLD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitMOLDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitMOLD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitMOLD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MaxIndivLimitMOLD := MIN(ROUND2(H_MaxIndivLimitMOLD), CAP_99999999_99);

Report: => H_MaxIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MaxIndivLimitMOLDProptyP := MIN(ROUND2(H_MaxIndivLimitMOLDProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MinIndivLimitMOLD := MIN(ROUND2(H_MinIndivLimitMOLD), CAP_99999999_99);

Report: => H_MinIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLDProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_MinIndivLimitMOLDProptyP := MIN(ROUND2(H_MinIndivLimitMOLDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD := MIN(ROUND2(H_AvgIndivLimitMOLD), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitMOLDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLDProptyP := MIN(ROUND2(H_AvgIndivLimitMOLDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitMOLD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD1Y := MIN(ROUND2(H_AvgIndivLimitMOLD1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD1YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD3Y := MIN(ROUND2(H_AvgIndivLimitMOLD3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitMOLD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD3YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MaxIndivLimitMOLD := MIN(ROUND2(H_MaxIndivLimitMOLD), CAP_99999999_99);

// Report: => H_MaxIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MaxIndivLimitMOLDProptyP := MIN(ROUND2(H_MaxIndivLimitMOLDProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MinIndivLimitMOLD := MIN(ROUND2(H_MinIndivLimitMOLD), CAP_99999999_99);

// Report: => H_MinIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_MinIndivLimitMOLDProptyP := MIN(ROUND2(H_MinIndivLimitMOLDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitMOLD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD := MIN(ROUND2(H_AvgIndivLimitMOLD), CAP_99999999_99);

// Report: => H_AvgIndivLimitMOLDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLDProptyP := MIN(ROUND2(H_AvgIndivLimitMOLDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitMOLD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD1Y := MIN(ROUND2(H_AvgIndivLimitMOLD1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitMOLD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD1YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitMOLD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD3Y := MIN(ROUND2(H_AvgIndivLimitMOLD3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitMOLD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitMOLD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitMOLD));
// Report: => R_AvgIndivLimitMOLD3YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitOTHR
// R_AvgIndivLimitOTHR1Y
// R_AvgIndivLimitOTHR1YProptyP
// R_AvgIndivLimitOTHR3Y
// R_AvgIndivLimitOTHR3YProptyP
// R_AvgIndivLimitOTHRProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitOTHR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_OTHR),IndividualLimit);
PolicyProperty: => AvgIndividualLimitOTHR := AVE(Coverages((CoverageType IN C_COVERAGE_OTHR) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitOTHR := AVE(PolicyProperty,AvgIndividualLimitOTHR);


// Report: => G_SetDefault4IndLimitOTHR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null));
Report: => G_SetDefault4IndLimitOTHR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null));

Report: => G_SetDefault4IndLimitOTHR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOTHR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitOTHRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitOTHR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOTHR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MaxIndivLimitOTHR := MIN(ROUND2(H_MaxIndivLimitOTHR), CAP_99999999_99);

Report: => H_MaxIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MaxIndivLimitOTHRProptyP := MIN(ROUND2(H_MaxIndivLimitOTHRProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MinIndivLimitOTHR := MIN(ROUND2(H_MinIndivLimitOTHR), CAP_99999999_99);

Report: => H_MinIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHRProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_MinIndivLimitOTHRProptyP := MIN(ROUND2(H_MinIndivLimitOTHRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR := MIN(ROUND2(H_AvgIndivLimitOTHR), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOTHRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHRProptyP := MIN(ROUND2(H_AvgIndivLimitOTHRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitOTHR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR1Y := MIN(ROUND2(H_AvgIndivLimitOTHR1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR1YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR3Y := MIN(ROUND2(H_AvgIndivLimitOTHR3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitOTHR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR3YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MaxIndivLimitOTHR := MIN(ROUND2(H_MaxIndivLimitOTHR), CAP_99999999_99);

// Report: => H_MaxIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MaxIndivLimitOTHRProptyP := MIN(ROUND2(H_MaxIndivLimitOTHRProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MinIndivLimitOTHR := MIN(ROUND2(H_MinIndivLimitOTHR), CAP_99999999_99);

// Report: => H_MinIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_MinIndivLimitOTHRProptyP := MIN(ROUND2(H_MinIndivLimitOTHRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitOTHR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR := MIN(ROUND2(H_AvgIndivLimitOTHR), CAP_99999999_99);

// Report: => H_AvgIndivLimitOTHRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHRProptyP := MIN(ROUND2(H_AvgIndivLimitOTHRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitOTHR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR1Y := MIN(ROUND2(H_AvgIndivLimitOTHR1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitOTHR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR1YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitOTHR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR3Y := MIN(ROUND2(H_AvgIndivLimitOTHR3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitOTHR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitOTHR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOTHR));
// Report: => R_AvgIndivLimitOTHR3YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitOVRD
// R_AvgIndivLimitOVRD1Y
// R_AvgIndivLimitOVRD1YProptyP
// R_AvgIndivLimitOVRD3Y
// R_AvgIndivLimitOVRD3YProptyP
// R_AvgIndivLimitOVRDProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitOVRD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_OVRD),IndividualLimit);
PolicyProperty: => AvgIndividualLimitOVRD := AVE(Coverages((CoverageType IN C_COVERAGE_OVRD) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitOVRD := AVE(PolicyProperty,AvgIndividualLimitOVRD);


// Report: => G_SetDefault4IndLimitOVRD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null));
Report: => G_SetDefault4IndLimitOVRD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null));

Report: => G_SetDefault4IndLimitOVRD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOVRD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitOVRDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitOVRD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitOVRD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MaxIndivLimitOVRD := MIN(ROUND2(H_MaxIndivLimitOVRD), CAP_99999999_99);

Report: => H_MaxIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MaxIndivLimitOVRDProptyP := MIN(ROUND2(H_MaxIndivLimitOVRDProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MinIndivLimitOVRD := MIN(ROUND2(H_MinIndivLimitOVRD), CAP_99999999_99);

Report: => H_MinIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRDProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_MinIndivLimitOVRDProptyP := MIN(ROUND2(H_MinIndivLimitOVRDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD := MIN(ROUND2(H_AvgIndivLimitOVRD), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitOVRDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRDProptyP := MIN(ROUND2(H_AvgIndivLimitOVRDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitOVRD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD1Y := MIN(ROUND2(H_AvgIndivLimitOVRD1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD1YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD3Y := MIN(ROUND2(H_AvgIndivLimitOVRD3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitOVRD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD3YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MaxIndivLimitOVRD := MIN(ROUND2(H_MaxIndivLimitOVRD), CAP_99999999_99);

// Report: => H_MaxIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MaxIndivLimitOVRDProptyP := MIN(ROUND2(H_MaxIndivLimitOVRDProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MinIndivLimitOVRD := MIN(ROUND2(H_MinIndivLimitOVRD), CAP_99999999_99);

// Report: => H_MinIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_MinIndivLimitOVRDProptyP := MIN(ROUND2(H_MinIndivLimitOVRDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitOVRD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD := MIN(ROUND2(H_AvgIndivLimitOVRD), CAP_99999999_99);

// Report: => H_AvgIndivLimitOVRDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRDProptyP := MIN(ROUND2(H_AvgIndivLimitOVRDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitOVRD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD1Y := MIN(ROUND2(H_AvgIndivLimitOVRD1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitOVRD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD1YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitOVRD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD3Y := MIN(ROUND2(H_AvgIndivLimitOVRD3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitOVRD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitOVRD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitOVRD));
// Report: => R_AvgIndivLimitOVRD3YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD3YProptyP), CAP_99999999_99);



// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC1Y
// R_AvgIndivLimitPPRC1YProptyP
// R_AvgIndivLimitPPRC3Y
// R_AvgIndivLimitPPRC3YProptyP
// R_AvgIndivLimitPPRCProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitPPRC := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_PPRC),IndividualLimit);
PolicyProperty: => AvgIndividualLimitPPRC := AVE(Coverages((CoverageType IN C_COVERAGE_PPRC) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitPPRC := AVE(PolicyProperty,AvgIndividualLimitPPRC);

// Report: => G_SetDefault4IndLimitPPRC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null));
Report: => G_SetDefault4IndLimitPPRC := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null));

Report: => G_SetDefault4IndLimitPPRC1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitPPRC3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitPPRCProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitPPRC1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitPPRC3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MaxIndivLimitPPRC := MIN(ROUND2(H_MaxIndivLimitPPRC), CAP_99999999_99);

Report: => H_MaxIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRCProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MaxIndivLimitPPRCProptyP := MIN(ROUND2(H_MaxIndivLimitPPRCProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MinIndivLimitPPRC := MIN(ROUND2(H_MinIndivLimitPPRC), CAP_99999999_99);

Report: => H_MinIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRCProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_MinIndivLimitPPRCProptyP := MIN(ROUND2(H_MinIndivLimitPPRCProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC := MIN(ROUND2(H_AvgIndivLimitPPRC), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitPPRCProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRCProptyP := MIN(ROUND2(H_AvgIndivLimitPPRCProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitPPRC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC1Y := MIN(ROUND2(H_AvgIndivLimitPPRC1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC1YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC3Y := MIN(ROUND2(H_AvgIndivLimitPPRC3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitPPRC3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC3YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MaxIndivLimitPPRC := MIN(ROUND2(H_MaxIndivLimitPPRC), CAP_99999999_99);

// Report: => H_MaxIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MaxIndivLimitPPRCProptyP := MIN(ROUND2(H_MaxIndivLimitPPRCProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MinIndivLimitPPRC := MIN(ROUND2(H_MinIndivLimitPPRC), CAP_99999999_99);

// Report: => H_MinIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_MinIndivLimitPPRCProptyP := MIN(ROUND2(H_MinIndivLimitPPRCProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitPPRC := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC := MIN(ROUND2(H_AvgIndivLimitPPRC), CAP_99999999_99);

// Report: => H_AvgIndivLimitPPRCProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRCProptyP := MIN(ROUND2(H_AvgIndivLimitPPRCProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitPPRC1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC1Y := MIN(ROUND2(H_AvgIndivLimitPPRC1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitPPRC1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC1YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitPPRC3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC3Y := MIN(ROUND2(H_AvgIndivLimitPPRC3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitPPRC3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitPPRC => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitPPRC));
// Report: => R_AvgIndivLimitPPRC3YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP1Y
// R_AvgIndivLimitSCPP1YProptyP
// R_AvgIndivLimitSCPP3Y
// R_AvgIndivLimitSCPP3YProptyP
// R_AvgIndivLimitSCPPProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitSCPP := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_SCPP),IndividualLimit);
PolicyProperty: => AvgIndividualLimitSCPP := AVE(Coverages((CoverageType IN C_COVERAGE_SCPP) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitSCPP := AVE(PolicyProperty,AvgIndividualLimitSCPP);

// Report: => G_SetDefault4IndLimitSCPP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null));
Report: => G_SetDefault4IndLimitSCPP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null));

Report: => G_SetDefault4IndLimitSCPP1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSCPP3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitSCPPProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitSCPP1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSCPP3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MaxIndivLimitSCPP := MIN(ROUND2(H_MaxIndivLimitSCPP), CAP_99999999_99);

Report: => H_MaxIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPPProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MaxIndivLimitSCPPProptyP := MIN(ROUND2(H_MaxIndivLimitSCPPProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MinIndivLimitSCPP := MIN(ROUND2(H_MinIndivLimitSCPP), CAP_99999999_99);

Report: => H_MinIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPPProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_MinIndivLimitSCPPProptyP := MIN(ROUND2(H_MinIndivLimitSCPPProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP := MIN(ROUND2(H_AvgIndivLimitSCPP), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSCPPProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPPProptyP := MIN(ROUND2(H_AvgIndivLimitSCPPProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitSCPP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP1Y := MIN(ROUND2(H_AvgIndivLimitSCPP1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP1YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP3Y := MIN(ROUND2(H_AvgIndivLimitSCPP3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitSCPP3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP3YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MaxIndivLimitSCPP := MIN(ROUND2(H_MaxIndivLimitSCPP), CAP_99999999_99);

// Report: => H_MaxIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MaxIndivLimitSCPPProptyP := MIN(ROUND2(H_MaxIndivLimitSCPPProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MinIndivLimitSCPP := MIN(ROUND2(H_MinIndivLimitSCPP), CAP_99999999_99);

// Report: => H_MinIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_MinIndivLimitSCPPProptyP := MIN(ROUND2(H_MinIndivLimitSCPPProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitSCPP := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP := MIN(ROUND2(H_AvgIndivLimitSCPP), CAP_99999999_99);

// Report: => H_AvgIndivLimitSCPPProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPPProptyP := MIN(ROUND2(H_AvgIndivLimitSCPPProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitSCPP1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP1Y := MIN(ROUND2(H_AvgIndivLimitSCPP1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitSCPP1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP1YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitSCPP3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP3Y := MIN(ROUND2(H_AvgIndivLimitSCPP3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitSCPP3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSCPP => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSCPP));
// Report: => R_AvgIndivLimitSCPP3YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSINK
// R_AvgIndivLimitSINK1Y
// R_AvgIndivLimitSINK1YProptyP
// R_AvgIndivLimitSINK3Y
// R_AvgIndivLimitSINK3YProptyP
// R_AvgIndivLimitSINKProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitSINK := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_SINK),IndividualLimit);
PolicyProperty: => AvgIndividualLimitSINK := AVE(Coverages((CoverageType IN C_COVERAGE_SINK) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitSINK := AVE(PolicyProperty,AvgIndividualLimitSINK);

// Report: => G_SetDefault4IndLimitSINK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null));
Report: => G_SetDefault4IndLimitSINK := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null));

Report: => G_SetDefault4IndLimitSINK1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSINK3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitSINKProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitSINK1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitSINK3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MaxIndivLimitSINK := MIN(ROUND2(H_MaxIndivLimitSINK), CAP_99999999_99);

Report: => H_MaxIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINKProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MaxIndivLimitSINKProptyP := MIN(ROUND2(H_MaxIndivLimitSINKProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MinIndivLimitSINK := MIN(ROUND2(H_MinIndivLimitSINK), CAP_99999999_99);

Report: => H_MinIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINKProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_MinIndivLimitSINKProptyP := MIN(ROUND2(H_MinIndivLimitSINKProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK := MIN(ROUND2(H_AvgIndivLimitSINK), CAP_99999999_99);

Report: => H_AvgIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitSINKProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINKProptyP := MIN(ROUND2(H_AvgIndivLimitSINKProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitSINK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK1Y := MIN(ROUND2(H_AvgIndivLimitSINK1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK1YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK3Y := MIN(ROUND2(H_AvgIndivLimitSINK3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitSINK3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK3YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MaxIndivLimitSINK := MIN(ROUND2(H_MaxIndivLimitSINK), CAP_99999999_99);

// Report: => H_MaxIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MaxIndivLimitSINKProptyP := MIN(ROUND2(H_MaxIndivLimitSINKProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MinIndivLimitSINK := MIN(ROUND2(H_MinIndivLimitSINK), CAP_99999999_99);

// Report: => H_MinIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_MinIndivLimitSINKProptyP := MIN(ROUND2(H_MinIndivLimitSINKProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitSINK := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK := MIN(ROUND2(H_AvgIndivLimitSINK), CAP_99999999_99);

// Report: => H_AvgIndivLimitSINKProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINKProptyP := MIN(ROUND2(H_AvgIndivLimitSINKProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitSINK1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK1Y := MIN(ROUND2(H_AvgIndivLimitSINK1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitSINK1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK1YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitSINK3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK3Y := MIN(ROUND2(H_AvgIndivLimitSINK3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitSINK3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitSINK => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitSINK));
// Report: => R_AvgIndivLimitSINK3YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD
// R_AvgIndivLimitTHTD1Y
// R_AvgIndivLimitTHTD1YProptyP
// R_AvgIndivLimitTHTD3Y
// R_AvgIndivLimitTHTD3YProptyP
// R_AvgIndivLimitTHTDProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitTHTD := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_THTD),IndividualLimit);
PolicyProperty: => AvgIndividualLimitTHTD := AVE(Coverages((CoverageType IN C_COVERAGE_THTD) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitTHTD := AVE(PolicyProperty,AvgIndividualLimitTHTD);

// Report: => G_SetDefault4IndLimitTHTD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null));
Report: => G_SetDefault4IndLimitTHTD := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null));

Report: => G_SetDefault4IndLimitTHTD1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitTHTD3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitTHTDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitTHTD1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitTHTD3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MaxIndivLimitTHTD := MIN(ROUND2(H_MaxIndivLimitTHTD), CAP_99999999_99);

Report: => H_MaxIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MaxIndivLimitTHTDProptyP := MIN(ROUND2(H_MaxIndivLimitTHTDProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MinIndivLimitTHTD := MIN(ROUND2(H_MinIndivLimitTHTD), CAP_99999999_99);

Report: => H_MinIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTDProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_MinIndivLimitTHTDProptyP := MIN(ROUND2(H_MinIndivLimitTHTDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD := MIN(ROUND2(H_AvgIndivLimitTHTD), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitTHTDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTDProptyP := MIN(ROUND2(H_AvgIndivLimitTHTDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitTHTD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD1Y := MIN(ROUND2(H_AvgIndivLimitTHTD1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD1YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD3Y := MIN(ROUND2(H_AvgIndivLimitTHTD3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitTHTD3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD3YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MaxIndivLimitTHTD := MIN(ROUND2(H_MaxIndivLimitTHTD), CAP_99999999_99);

// Report: => H_MaxIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MaxIndivLimitTHTDProptyP := MIN(ROUND2(H_MaxIndivLimitTHTDProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MinIndivLimitTHTD := MIN(ROUND2(H_MinIndivLimitTHTD), CAP_99999999_99);

// Report: => H_MinIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_MinIndivLimitTHTDProptyP := MIN(ROUND2(H_MinIndivLimitTHTDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitTHTD := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD := MIN(ROUND2(H_AvgIndivLimitTHTD), CAP_99999999_99);

// Report: => H_AvgIndivLimitTHTDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTDProptyP := MIN(ROUND2(H_AvgIndivLimitTHTDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitTHTD1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD1Y := MIN(ROUND2(H_AvgIndivLimitTHTD1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitTHTD1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD1YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitTHTD3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD3Y := MIN(ROUND2(H_AvgIndivLimitTHTD3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitTHTD3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		 // G_SetDefault4IndLimitTHTD => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitTHTD));
// Report: => R_AvgIndivLimitTHTD3YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitUMBR
// R_AvgIndivLimitUMBR1Y
// R_AvgIndivLimitUMBR1YProptyP
// R_AvgIndivLimitUMBR3Y
// R_AvgIndivLimitUMBR3YProptyP
// R_AvgIndivLimitUMBRProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitUMBR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_UMBR),IndividualLimit);
PolicyProperty: => AvgIndividualLimitUMBR := AVE(Coverages((CoverageType IN C_COVERAGE_UMBR) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitUMBR := AVE(PolicyProperty,AvgIndividualLimitUMBR);

// Report: => G_SetDefault4IndLimitUMBR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null));
Report: => G_SetDefault4IndLimitUMBR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null));

Report: => G_SetDefault4IndLimitUMBR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitUMBR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitUMBRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitUMBR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitUMBR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MaxIndivLimitUMBR := MIN(ROUND2(H_MaxIndivLimitUMBR), CAP_99999999_99);

Report: => H_MaxIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MaxIndivLimitUMBRProptyP := MIN(ROUND2(H_MaxIndivLimitUMBRProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MinIndivLimitUMBR := MIN(ROUND2(H_MinIndivLimitUMBR), CAP_99999999_99);

Report: => H_MinIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBRProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_MinIndivLimitUMBRProptyP := MIN(ROUND2(H_MinIndivLimitUMBRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR := MIN(ROUND2(H_AvgIndivLimitUMBR), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitUMBRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBRProptyP := MIN(ROUND2(H_AvgIndivLimitUMBRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitUMBR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR1Y := MIN(ROUND2(H_AvgIndivLimitUMBR1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR1YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR3Y := MIN(ROUND2(H_AvgIndivLimitUMBR3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitUMBR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR3YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MaxIndivLimitUMBR := MIN(ROUND2(H_MaxIndivLimitUMBR), CAP_99999999_99);

// Report: => H_MaxIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MaxIndivLimitUMBRProptyP := MIN(ROUND2(H_MaxIndivLimitUMBRProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MinIndivLimitUMBR := MIN(ROUND2(H_MinIndivLimitUMBR), CAP_99999999_99);

// Report: => H_MinIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_MinIndivLimitUMBRProptyP := MIN(ROUND2(H_MinIndivLimitUMBRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitUMBR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR := MIN(ROUND2(H_AvgIndivLimitUMBR), CAP_99999999_99);

// Report: => H_AvgIndivLimitUMBRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBRProptyP := MIN(ROUND2(H_AvgIndivLimitUMBRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitUMBR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR1Y := MIN(ROUND2(H_AvgIndivLimitUMBR1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitUMBR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR1YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitUMBR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR3Y := MIN(ROUND2(H_AvgIndivLimitUMBR3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitUMBR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitUMBR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitUMBR));
// Report: => R_AvgIndivLimitUMBR3YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWDHL
// R_AvgIndivLimitWDHL1Y
// R_AvgIndivLimitWDHL1YProptyP
// R_AvgIndivLimitWDHL3Y
// R_AvgIndivLimitWDHL3YProptyP
// R_AvgIndivLimitWDHLProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitWDHL := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WDHL),IndividualLimit);
PolicyProperty: => AvgIndividualLimitWDHL := AVE(Coverages((CoverageType IN C_COVERAGE_WDHL) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitWDHL := AVE(PolicyProperty,AvgIndividualLimitWDHL);

// Report: => G_SetDefault4IndLimitWDHL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null));
Report: => G_SetDefault4IndLimitWDHL := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null));

Report: => G_SetDefault4IndLimitWDHL1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWDHL3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWDHLProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWDHL1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWDHL3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MaxIndivLimitWDHL := MIN(ROUND2(H_MaxIndivLimitWDHL), CAP_99999999_99);

Report: => H_MaxIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHLProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MaxIndivLimitWDHLProptyP := MIN(ROUND2(H_MaxIndivLimitWDHLProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MinIndivLimitWDHL := MIN(ROUND2(H_MinIndivLimitWDHL), CAP_99999999_99);

Report: => H_MinIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHLProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_MinIndivLimitWDHLProptyP := MIN(ROUND2(H_MinIndivLimitWDHLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL := MIN(ROUND2(H_AvgIndivLimitWDHL), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWDHLProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHLProptyP := MIN(ROUND2(H_AvgIndivLimitWDHLProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWDHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL1Y := MIN(ROUND2(H_AvgIndivLimitWDHL1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL1YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL3Y := MIN(ROUND2(H_AvgIndivLimitWDHL3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWDHL3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL3YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MaxIndivLimitWDHL := MIN(ROUND2(H_MaxIndivLimitWDHL), CAP_99999999_99);

// Report: => H_MaxIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MaxIndivLimitWDHLProptyP := MIN(ROUND2(H_MaxIndivLimitWDHLProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MinIndivLimitWDHL := MIN(ROUND2(H_MinIndivLimitWDHL), CAP_99999999_99);

// Report: => H_MinIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_MinIndivLimitWDHLProptyP := MIN(ROUND2(H_MinIndivLimitWDHLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWDHL := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL := MIN(ROUND2(H_AvgIndivLimitWDHL), CAP_99999999_99);

// Report: => H_AvgIndivLimitWDHLProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHLProptyP := MIN(ROUND2(H_AvgIndivLimitWDHLProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWDHL1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL1Y := MIN(ROUND2(H_AvgIndivLimitWDHL1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWDHL1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL1YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitWDHL3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL3Y := MIN(ROUND2(H_AvgIndivLimitWDHL3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWDHL3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWDHL => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWDHL));
// Report: => R_AvgIndivLimitWDHL3YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND
// R_AvgIndivLimitWIND1Y
// R_AvgIndivLimitWIND1YProptyP
// R_AvgIndivLimitWIND3Y
// R_AvgIndivLimitWIND3YProptyP
// R_AvgIndivLimitWINDProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitWIND := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WIND),IndividualLimit);
PolicyProperty: => AvgIndividualLimitWIND := AVE(Coverages((CoverageType IN C_COVERAGE_WIND) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitWIND := AVE(PolicyProperty,AvgIndividualLimitWIND);

// Report: => G_SetDefault4IndLimitWIND := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null));
Report: => G_SetDefault4IndLimitWIND := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null));

Report: => G_SetDefault4IndLimitWIND1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWIND3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWINDProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWIND1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWIND3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MaxIndivLimitWIND := MIN(ROUND2(H_MaxIndivLimitWIND), CAP_99999999_99);

Report: => H_MaxIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINDProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MaxIndivLimitWINDProptyP := MIN(ROUND2(H_MaxIndivLimitWINDProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MinIndivLimitWIND := MIN(ROUND2(H_MinIndivLimitWIND), CAP_99999999_99);

Report: => H_MinIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINDProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_MinIndivLimitWINDProptyP := MIN(ROUND2(H_MinIndivLimitWINDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND := MIN(ROUND2(H_AvgIndivLimitWIND), CAP_99999999_99);

Report: => H_AvgIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINDProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWINDProptyP := MIN(ROUND2(H_AvgIndivLimitWINDProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWIND1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND1Y := MIN(ROUND2(H_AvgIndivLimitWIND1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND1YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND3Y := MIN(ROUND2(H_AvgIndivLimitWIND3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWIND3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND3YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MaxIndivLimitWIND := MIN(ROUND2(H_MaxIndivLimitWIND), CAP_99999999_99);

// Report: => H_MaxIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MaxIndivLimitWINDProptyP := MIN(ROUND2(H_MaxIndivLimitWINDProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MinIndivLimitWIND := MIN(ROUND2(H_MinIndivLimitWIND), CAP_99999999_99);

// Report: => H_MinIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_MinIndivLimitWINDProptyP := MIN(ROUND2(H_MinIndivLimitWINDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWIND := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND := MIN(ROUND2(H_AvgIndivLimitWIND), CAP_99999999_99);

// Report: => H_AvgIndivLimitWINDProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWINDProptyP := MIN(ROUND2(H_AvgIndivLimitWINDProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWIND1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND1Y := MIN(ROUND2(H_AvgIndivLimitWIND1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWIND1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND1YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitWIND3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND3Y := MIN(ROUND2(H_AvgIndivLimitWIND3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWIND3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWIND => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWIND));
// Report: => R_AvgIndivLimitWIND3YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND3YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX
// R_AvgIndivLimitWINX1Y
// R_AvgIndivLimitWINX1YProptyP
// R_AvgIndivLimitWINX3Y
// R_AvgIndivLimitWINX3YProptyP
// R_AvgIndivLimitWINXProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitWINX := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WINX),IndividualLimit);
PolicyProperty: => AvgIndividualLimitWINX := AVE(Coverages((CoverageType IN C_COVERAGE_WINX) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitWINX := AVE(PolicyProperty,AvgIndividualLimitWINX);

// Report: => G_SetDefault4IndLimitWINX := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null));
Report: => G_SetDefault4IndLimitWINX := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null));

Report: => G_SetDefault4IndLimitWINX1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWINX3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWINXProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWINX1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWINX3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MaxIndivLimitWINX := MIN(ROUND2(H_MaxIndivLimitWINX), CAP_99999999_99);

Report: => H_MaxIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINXProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MaxIndivLimitWINXProptyP := MIN(ROUND2(H_MaxIndivLimitWINXProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MinIndivLimitWINX := MIN(ROUND2(H_MinIndivLimitWINX), CAP_99999999_99);

Report: => H_MinIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINXProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_MinIndivLimitWINXProptyP := MIN(ROUND2(H_MinIndivLimitWINXProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX := MIN(ROUND2(H_AvgIndivLimitWINX), CAP_99999999_99);

Report: => H_AvgIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWINXProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINXProptyP := MIN(ROUND2(H_AvgIndivLimitWINXProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWINX1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX1Y := MIN(ROUND2(H_AvgIndivLimitWINX1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX1YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX3Y := MIN(ROUND2(H_AvgIndivLimitWINX3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWINX3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX3YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX3YProptyP), CAP_99999999_99);

 // Report: => H_MaxIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MaxIndivLimitWINX := MIN(ROUND2(H_MaxIndivLimitWINX), CAP_99999999_99);

// Report: => H_MaxIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MaxIndivLimitWINXProptyP := MIN(ROUND2(H_MaxIndivLimitWINXProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MinIndivLimitWINX := MIN(ROUND2(H_MinIndivLimitWINX), CAP_99999999_99);

// Report: => H_MinIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_MinIndivLimitWINXProptyP := MIN(ROUND2(H_MinIndivLimitWINXProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWINX := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX := MIN(ROUND2(H_AvgIndivLimitWINX), CAP_99999999_99);

// Report: => H_AvgIndivLimitWINXProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINXProptyP := MIN(ROUND2(H_AvgIndivLimitWINXProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWINX1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX1Y := MIN(ROUND2(H_AvgIndivLimitWINX1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWINX1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX1YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitWINX3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWINX => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX3Y := MIN(ROUND2(H_AvgIndivLimitWINX3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWINX3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3,
																		// G_SetDefault4IndLimitWINX => DEFAULT_4, 
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWINX));
// Report: => R_AvgIndivLimitWINX3YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX3YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWTCR
// R_AvgIndivLimitWTCR1Y
// R_AvgIndivLimitWTCR1YProptyP
// R_AvgIndivLimitWTCR3Y
// R_AvgIndivLimitWTCR3YProptyP
// R_AvgIndivLimitWTCRProptyP
//The following code was used to keep the most rence terms coverage types. Drop this because Scoring team will handle this. 10/2/2020
// PolicyProperty: => AvgIndividualLimitWTCR := AVE(MostRecentTermPerProperty(CoverageType IN C_COVERAGE_WTCR),IndividualLimit);
PolicyProperty: => AvgIndividualLimitWTCR := AVE(Coverages((CoverageType IN C_COVERAGE_WTCR) AND (IndividualLimit > 0)),IndividualLimit);
Policy: => AvgIndividualLimitWTCR := AVE(PolicyProperty,AvgIndividualLimitWTCR);

// Report: => G_SetDefault4IndLimitWTCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null));
Report: => G_SetDefault4IndLimitWTCR := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null));

Report: => G_SetDefault4IndLimitWTCR1Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWTCR3Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => G_SetDefault4IndLimitWTCRProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty));

Report: => G_SetDefault4IndLimitWTCR1YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12));

Report: => G_SetDefault4IndLimitWTCR3YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36));

Report: => H_MaxIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MaxIndivLimitWTCR := MIN(ROUND2(H_MaxIndivLimitWTCR), CAP_99999999_99);

Report: => H_MaxIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCRProptyP => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MaxIndivLimitWTCRProptyP := MIN(ROUND2(H_MaxIndivLimitWTCRProptyP), CAP_99999999_99);

Report: => H_MinIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MinIndivLimitWTCR := MIN(ROUND2(H_MinIndivLimitWTCR), CAP_99999999_99);

Report: => H_MinIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCRProptyP => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_MinIndivLimitWTCRProptyP := MIN(ROUND2(H_MinIndivLimitWTCRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR := MIN(ROUND2(H_AvgIndivLimitWTCR), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2ProptyP => DEFAULT_2,
                                             G_SetDefault3ProptyP => DEFAULT_3,  
                                             G_SetDefault4IndLimitWTCRProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCRProptyP := MIN(ROUND2(H_AvgIndivLimitWTCRProptyP), CAP_99999999_99);


Report: => H_AvgIndivLimitWTCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR1Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR1Y := MIN(ROUND2(H_AvgIndivLimitWTCR1Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR1YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR1YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR1YProptyP), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR3Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR3Y := MIN(ROUND2(H_AvgIndivLimitWTCR3Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,  
                                        G_SetDefault4IndLimitWTCR3YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR3YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR3YProptyP), CAP_99999999_99);

// Report: => H_MaxIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3,
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MaxIndivLimitWTCR := MIN(ROUND2(H_MaxIndivLimitWTCR), CAP_99999999_99);

// Report: => H_MaxIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MAX(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MaxIndivLimitWTCRProptyP := MIN(ROUND2(H_MaxIndivLimitWTCRProptyP), CAP_99999999_99);

// Report: => H_MinIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MinIndivLimitWTCR := MIN(ROUND2(H_MinIndivLimitWTCR), CAP_99999999_99);

// Report: => H_MinIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // MIN(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_MinIndivLimitWTCRProptyP := MIN(ROUND2(H_MinIndivLimitWTCRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWTCR := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR := MIN(ROUND2(H_AvgIndivLimitWTCR), CAP_99999999_99);

// Report: => H_AvgIndivLimitWTCRProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCRProptyP := MIN(ROUND2(H_AvgIndivLimitWTCRProptyP), CAP_99999999_99);


// Report: => H_AvgIndivLimitWTCR1Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR1Y := MIN(ROUND2(H_AvgIndivLimitWTCR1Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWTCR1YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 12),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR1YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR1YProptyP), CAP_99999999_99);

// Report: => H_AvgIndivLimitWTCR3Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault3 => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR3Y := MIN(ROUND2(H_AvgIndivLimitWTCR3Y), CAP_99999999_99);

// Report: => H_AvgIndivLimitWTCR3YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          // G_SetDefault2ProptyP => DEFAULT_2,
                                          // G_SetDefault3ProptyP => DEFAULT_3, 
																		// G_SetDefault4IndLimitWTCR => DEFAULT_4,
                                    // AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 36),AvgIndividualLimitWTCR));
// Report: => R_AvgIndivLimitWTCR3YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR3YProptyP), CAP_99999999_99);


//Returning customer
//Note, this attribute does not check the most recent
Policy: => NextPolicy := Sequence.NextWhere(rReport = Policy.rReport AND G_ValidPolicy,Calculated_End_Date,Calculated_Start_Date);// same with product logic
Policy: => NextPolicySameAmbest := Sequence.NextWhere((rReport = Policy.rReport) AND (Ambest = Policy.Ambest) AND G_ValidPolicy,Calculated_Start_Date, Calculated_End_Date);
Policy: => PreviousAmbestSub := Sequence.NextWhere((rReport = Policy.rReport) AND G_ValidPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbest := PreviousAmbestSub.Ambest;

//Audit
// Policy: => NextPolicySameAmbest := Sequence.NextWhere(rReport = Policy.rReport AND Ambest = Policy.Ambest AND G_ValidPolicy,Calculated_Start_Date, Calculated_End_Date);
// Policy: => PreviousAmbestSub := Sequence.NextWhere(rReport = Policy.rReport AND G_ValidPolicy,Calculated_Start_Date,Calculated_End_Date);
// Policy: => PreviousAmbest := PreviousAmbestSub.Ambest;

Policy: => AuditNextPolicyStartDate := NextPolicy.Calculated_Start_Date;
Policy: => AuditPreviousPolicySameAmbest := NextPolicySameAmbest.Calculated_End_Date;
Policy: => AuditPreviousPolicySameAStartDate := NextPolicySameAmbest.Calculated_Start_Date;
//

Policy: => LapseSameAmbest := MAP((DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date) < 0)  AND G_ValidPolicy => TRUE,
                              FALSE);
Policy: => LapseSameAmbestAge := DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date);
														
Policy: => ReturningInd := MAP((PreviousAmbest != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbest.Calculated_Start_Date, Calculated_End_Date) < 0) AND (NOT NextPolicySameAmbest.Calculated_Start_Date:Null) AND G_ValidPolicy => TRUE,
                              FALSE);

														
Report: => H_CntReturningTimes := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(G_ValidPolicy AND ReturningInd)));			
Report: => I_CntReturningTimes := MIN(H_CntReturningTimes, CAP_999);		

Report: => H_MaxReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes = 0 => DEFAULT_4,
																		MAX(Policy(G_ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge)));	
Report: => I_MaxReturningAge := MIN(H_MaxReturningAge, CAP_9999);																						


Report: => H_MinReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes = 0 => DEFAULT_4,
																		MIN(Policy(G_ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge)));	
Report: => I_MinReturningAge := MIN(H_MinReturningAge, CAP_9999);

Report: => H_SumReturningAge := SUM(Policy(G_ValidPolicy AND ReturningInd),ABS(LapseSameAmbestAge));	
Report: => H_AvgReturningAge := MAP(G_SetDefault1  => DEFAULT_1,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimes < 1 => DEFAULT_4, //no value to calculat, 
																		H_SumReturningAge/H_CntReturningTimes);	
Report: => R_AvgReturningAge := MIN(ROUND2(H_AvgReturningAge), CAP_9999);

//homeowner policy returning customer
Policy: => NextPolicyHO := Sequence.NextWhere((rReport = Policy.rReport) AND G_ValidPolicy AND G_HOPolicy,Calculated_End_Date, Calculated_Start_Date);// same with product logic
Policy: => NextPolicySameAmbestHO := Sequence.NextWhere((rReport = Policy.rReport) AND (Ambest = Policy.Ambest) AND G_ValidPolicy AND G_HOPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbestSubHO := Sequence.NextWhere((rReport = Policy.rReport) AND G_ValidPolicy AND G_HOPolicy,Calculated_Start_Date,Calculated_End_Date);
Policy: => PreviousAmbestHO := PreviousAmbestSubHO.Ambest;

Policy: => LapseSameAmbestHO := MAP((DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND G_ValidPolicy => TRUE,
                              FALSE);
Policy: => LapseSameAmbestAgeHO := DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date);
//as long as this customer left the carrier,PreviousAmbest != Ambest, no limitation on the policy type, then count it										
// Policy: => ReturningIndHO := MAP((PreviousAmbest != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND G_ValidPolicy AND G_HOPolicy => TRUE,

Policy: => ReturningIndHO := MAP((PreviousAmbestHO != Ambest) AND (DAYSBETWEEN(NextPolicySameAmbestHO.Calculated_Start_Date, Calculated_End_Date) < 0)  AND G_ValidPolicy AND G_HOPolicy => TRUE,
                              FALSE);
															
Report: => H_CntReturningTimesHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																			G_SetDefault3 => DEFAULT_3, 
																			COUNT(Policy(G_ValidPolicy AND G_HOPolicy AND ReturningIndHO)));			
Report: => I_CntReturningTimesHO := MIN(H_CntReturningTimesHO, CAP_9999);		

Report: => H_MaxReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimesHO = 0 => DEFAULT_4,
																		MAX(Policy(G_ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO)));	
Report: => I_MaxReturningAgeHO := MIN(H_MaxReturningAgeHO, CAP_9999);																						


Report: => H_MinReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																		G_SetDefault3 => DEFAULT_3,  
																		H_CntReturningTimesHO = 0 => DEFAULT_4,
																		MIN(Policy(G_ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO)));	
Report: => I_MinReturningAgeHO := MIN(H_MinReturningAgeHO, CAP_9999);

Report: => H_SumReturningAgeHO := SUM(Policy(G_ValidPolicy AND G_HOPolicy AND ReturningIndHO),ABS(LapseSameAmbestAgeHO));	
Report: => H_AvgReturningAgeHO := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2HO => DEFAULT_2,
																		G_SetDefault3 => DEFAULT_3, 
																		H_CntReturningTimesHO < 1 => DEFAULT_4,// if no returning customer, then no value to calculate
																		H_SumReturningAgeHO/H_CntReturningTimesHO);	
Report: => R_AvgReturningAgeHO := MIN(ROUND2(H_AvgReturningAgeHO), CAP_9999);
	

// Policy: => LapseAmbest := MAP(FirstAmbest AND Calculated_End_Date < rReport.DateOfReport => TRUE,
                              // MONTHSBETWEEN(PreviousPolicyAmbest.Calculated_End_Date, Calculated_Start_Date) > 0 => TRUE,
                              // FALSE);



//Lapse, same with the product lapse
// Policy: => PreviousPolicy := Sequence.PreviousWhere(rReport = Policy.rReport AND G_ValidPolicy,Calculated_End_Date,Calculated_Start_Date);
// Policy: => PreviousPolicySameAmbest := Sequence.PreviousWhere(rReport = Policy.rReport AND Ambest = Policy.Ambest AND G_ValidPolicy,Calculated_End_Date,Calculated_Start_Date);
Policy: => MostRecentPolicy := NextPolicy:Null;
// Policy: => FirstAmbest := PreviousPolicySameAmbest:Null;
Policy: => Lapse := MAP(G_ValidPolicy AND MostRecentPolicy AND (SubjectEndDatePolicy < rReport.DateOfReport) => TRUE,
                        G_ValidPolicy AND (DAYSBETWEEN(SubjectEndDatePolicy, NextPolicy.Calculated_Start_Date) > 0) => TRUE, //in order to caluclate the future policy, or current
                        FALSE);	
Policy: => LapseAge := 	IF(Lapse,DAYSBETWEEN(Calculated_End_Date, NextPolicy.Calculated_Start_Date), 0);	
Report: => H_CntLapse := MAP(G_SetDefault1  => DEFAULT_1,
														 G_SetDefault3 => DEFAULT_3, 
														 COUNT(Policy(G_ValidPolicy AND Lapse)));
Report: => I_CntLapse := MIN(H_CntLapse,CAP_999);



// Report: => LapseAmbestCount := COUNT(Policy(LapseAmbest));

//Advanced quoting
PolicyProperty: => PropertyUID := Location.UID; // pull property UID to make sure the lapse will be caluclated for each UID
PolicyProperty: => PolicyUID := Transaction.UID;
PolicyProperty: => PolicyTransactionID := Transaction.TransactionID;
PolicyProperty: => PolicyCalculated_Start_Date := Transaction.Calculated_Start_Date;
PolicyProperty: => PolicyCalculated_End_Date := Transaction.Calculated_End_Date;
PolicyProperty: => PolicyValidPolicy := Transaction.G_ValidPolicy;
PolicyProperty: => PolicyCancellationDate := Transaction.CancellationDate;

PolicyProperty: => FuturePolicy := PolicyCalculated_End_Date > PolicyCalculated_Start_Date; // incepation date is earlier than then retro date
PolicyProperty: => NextCalculateStartDateNoCancel := Sequence.NextWhere(PolicyValidPolicy AND PolicyTransactionID = PolicyProperty.PolicyTransactionID AND PropertyUID = PolicyProperty.PropertyUID AND PolicyCancellationDate:Null, PolicyCalculated_End_Date, PolicyCalculated_Start_Date).PolicyCalculated_Start_Date;
PolicyProperty: => LapseSameProptyNoCancel := DAYSBETWEEN(PolicyCalculated_End_Date, NextCalculateStartDateNoCancel);
PolicyProperty: => DaysAdvancedQuote := IF((PolicyCalculated_End_Date > NextCalculateStartDateNoCancel) AND (NextCalculateStartDateNoCancel > PolicyCalculated_Start_Date)  AND PolicyCancellationDate:Null, -LapseSameProptyNoCancel, 0);

// PolicyProperty: => LapseBetweenPolicy := IF((DAYSBETWEEN(PreviousCalculatedEndDate, PolicyCalculated_Start_Date) - C_GRACETIME) > 0, 1, 0); // the earliest policy should has 0 (check null case)
// Policy: => LapseBetweenPolicy := EXISTS(PolicyProperty(NOT FuturePolicy AND PolicyValidPolicy AND LapseBetweenPolicy = 1));


//lapse
// PolicyProperty: => PropertyUID := Location.UID; // pull property UID to make sure the lapse will be caluclated for each UID
// PolicyProperty: => PolicyUID := Transaction.UID;
// PolicyProperty: => PolicyTransactionID := Transaction.TransactionID;
// PolicyProperty: => PolicyCalculated_Start_Date := Transaction.Calculated_Start_Date;
// PolicyProperty: => PolicyCalculated_End_Date := Transaction.Calculated_End_Date;
// PolicyProperty: => PolicyValidPolicy := Transaction.ValidPolicy;

//lapse for the very first policy, calculated end date compre with date of order 
// Report: MostRecentPolicyEndDate := TOPN(Policy,Calculated_End_Date);
// Report: => MostRecentPolicyEndDate := TOPN(Policy(PolicyType IN POLICYTYPE_PP){UID, Calculated_End_Date, Calculated_Start_Date}, 1,  -Calculated_End_Date, -Calculated_Start_Date);
// Report: => EarliestPolicyEndDate := TOPN(Policy(PolicyType IN POLICYTYPE_PP){UID, Calculated_End_Date, Calculated_Start_Date}, 1,  Calculated_End_Date, Calculated_Start_Date);

// Report: => LapseForMostRecentPolicy := IF(MostRecentPolicyEndDate.Calculated_End_Date < DateOfReport, 1, 0);

// Policy: => LapseForMostRecentPolicy := rReport.LapseForMostRecentPolicy;


//lapse for the rest policies

// PolicyProperty: => FuturePolicy := PreviousCalculatedEndDate > PolicyCalculated_Start_Date;
// PolicyProperty: => PreviousCalculatedEndDate := Sequence.PreviousWhere(PolicyValidPolicy AND PolicyTransactionID = PolicyProperty.PolicyTransactionID AND PropertyUID = PolicyProperty.PropertyUID, -PolicyCalculated_End_Date, -PolicyCalculated_Start_Date).PolicyCalculated_End_Date;
// PolicyProperty: => LapseBetweenPolicy := IF((DAYSBETWEEN(PreviousCalculatedEndDate, PolicyCalculated_Start_Date) - C_GRACETIME) > 0, 1, 0); // the earliest policy should has 0 (check null case)
// Policy: => LapseBetweenPolicy := EXISTS(PolicyProperty(NOT FuturePolicy AND PolicyValidPolicy AND LapseBetweenPolicy = 1));


// PolicyProperty: => PreviousPolicy := Sequence.PreviousWhere(Transaction.rReport = PolicyProperty.Transaction.rReport,propty_coverage_end_date,propty_coverage_start_date);
// PolicyProperty: => Returning := EXISTS(PreviousPolicy) AND MONTHSBETWEEN(PreviousPolicy.propty_coverage_end_date, propty_coverage_start_date) > 0;
// Policy: => ReturningCount :- COUNT(PolicyProperty.Returning);
// Report: => ReturningCount := SUM(Policy,ReturningCount);


// Report: => CntAmbestWithLapsePolicy := 





///////////////////////2019 attributes///////////////////////
// Helper attributes and Constants
// Policy: POLICY_TYPE_LIST := ['HO'];

// Policy: =>Calculated_Start_Date:= MIN(InceptionDate, PolicyBeginDate);
// Policy: =>Calculated_End_Date_tmp:= MIN(PolicyEndDate, PolicyCancelDate);
// Policy: =>Calculated_End_Date:= MIN(Calculated_End_Date_tmp, CURRENTDATE());
// Policy: =>G_PolicyTenure := MONTHSBETWEEN(Calculated_Start_Date, Calculated_End_Date);

// 
// Report: => G_PolicyTenure_tmp := ONLY(Current_Policy, G_PolicyTenure);


//Attributes 
// Report: => Plcy_Tenure_CP := IF(G_PolicyTenure_tmp:Null, -1,G_PolicyTenure_tmp);
// Report: => Plcy_MIN_Tenure := MIN(Policy(PolicyType IN POLICY_TYPE_LIST),G_PolicyTenure);
// Report: => Plcy_MAX_Tenure := MAX(Policy(PolicyType IN POLICY_TYPE_LIST), G_PolicyTenure);
// Report: => Plcy_TOT_Tenure := SUM(Policy(PolicyType IN POLICY_TYPE_LIST), G_PolicyTenure);
// Report: => Plcy_AVG_Tenure := IF(Plcy_CNT_All = 0, -1,ROUND((Plcy_TOT_Tenure / Plcy_CNT_All) * 10000)/10000);
// Report: => Plcy_CNT_All    := COUNT(Policy(PolicyType IN POLICY_TYPE_LIST));

//Audit
// Report: => Policy := 

//PolicyReport := ASSOCIATION(FLAT(Report Report = UID(TransactionID),Policy PolicyInformation = UID(TransactionID, Ambest, PolicyNumber)));



//********************Added more time window based on request from State Farm********************//
//2 YEAR
Report: => H_CntCancelledPol2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                      G_SetDefault3 => DEFAULT_3, 
                                      COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol2Y := MIN(H_CntCancelledPol2Y,CAP_999);     

Report: => H_CntCancelledPol2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol2YHO := MIN(H_CntCancelledPol2YHO,CAP_999);     


Report: => H_CntCancelledPol2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2ProptyP => DEFAULT_2,
                                        G_SetDefault3ProptyP => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol2YProptyP := MIN(H_CntCancelledPol2YProptyP,CAP_999);       

Report: => H_CntCancelledPol2YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskP => DEFAULT_2,
                                           G_SetDefault3RiskP => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol2YRiskP := MIN(H_CntCancelledPol2YRiskP,CAP_999);       

Report: => H_CntCancelledPol2YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskS => DEFAULT_2,
                                           G_SetDefault3RiskS => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol2YRiskS := MIN(H_CntCancelledPol2YRiskS,CAP_999);

// I_CntDerogCancellation2Y
// I_CntDerogCancellation2YHO
// I_CntDerogCancellation2YProptyP                                                                           
Report: => H_CntDerogCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation2Y := MIN(H_CntDerogCancellation2Y, CAP_999);

Report: => H_CntDerogCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation2YHO := MIN(H_CntDerogCancellation2YHO,CAP_9999);

Report: => H_CntDerogCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation2YProptyP := MIN(H_CntDerogCancellation2YProptyP,CAP_9999);
                                                              
Report: => H_CntCOMPCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation2Y := MIN(H_CntCOMPCancellation2Y, CAP_999);

Report: => H_CntCOMPCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation2YHO := MIN(H_CntCOMPCancellation2YHO,CAP_9999);

Report: => H_CntCOMPCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation2YProptyP := MIN(H_CntCOMPCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntCPLCCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation2Y := MIN(H_CntCPLCCancellation2Y, CAP_999);

Report: => H_CntCPLCCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation2YHO := MIN(H_CntCPLCCancellation2YHO,CAP_9999);

Report: => H_CntCPLCCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation2YProptyP := MIN(H_CntCPLCCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntCUSTCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation2Y := MIN(H_CntCUSTCancellation2Y, CAP_999);

Report: => H_CntCUSTCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation2YHO := MIN(H_CntCUSTCancellation2YHO,CAP_9999);

Report: => H_CntCUSTCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation2YProptyP := MIN(H_CntCUSTCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntLAPSCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation2Y := MIN(H_CntLAPSCancellation2Y, CAP_999);

Report: => H_CntLAPSCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation2YHO := MIN(H_CntLAPSCancellation2YHO,CAP_9999);

Report: => H_CntLAPSCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation2YProptyP := MIN(H_CntLAPSCancellation2YProptyP,CAP_9999);


                                                                
Report: => H_CntMISRCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation2Y := MIN(H_CntMISRCancellation2Y, CAP_999);

Report: => H_CntMISRCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation2YHO := MIN(H_CntMISRCancellation2YHO,CAP_9999);

Report: => H_CntMISRCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation2YProptyP := MIN(H_CntMISRCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntNONPCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation2Y := MIN(H_CntNONPCancellation2Y, CAP_999);

Report: => H_CntNONPCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation2YHO := MIN(H_CntNONPCancellation2YHO,CAP_9999);

Report: => H_CntNONPCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation2YProptyP := MIN(H_CntNONPCancellation2YProptyP,CAP_9999);


                                                                
Report: => H_CntNYDICancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation2Y := MIN(H_CntNYDICancellation2Y, CAP_999);

Report: => H_CntNYDICancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation2YHO := MIN(H_CntNYDICancellation2YHO,CAP_9999);

Report: => H_CntNYDICancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation2YProptyP := MIN(H_CntNYDICancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntNYSICancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation2Y := MIN(H_CntNYSICancellation2Y, CAP_999);

Report: => H_CntNYSICancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation2YHO := MIN(H_CntNYSICancellation2YHO,CAP_9999);

Report: => H_CntNYSICancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation2YProptyP := MIN(H_CntNYSICancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntOTHRCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation2Y := MIN(H_CntOTHRCancellation2Y, CAP_999);

Report: => H_CntOTHRCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation2YHO := MIN(H_CntOTHRCancellation2YHO,CAP_9999);

Report: => H_CntOTHRCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation2YProptyP := MIN(H_CntOTHRCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntPROPCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation2Y := MIN(H_CntPROPCancellation2Y, CAP_999);

Report: => H_CntPROPCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation2YHO := MIN(H_CntPROPCancellation2YHO,CAP_9999);

Report: => H_CntPROPCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation2YProptyP := MIN(H_CntPROPCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntREWRCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation2Y := MIN(H_CntREWRCancellation2Y, CAP_999);

Report: => H_CntREWRCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation2YHO := MIN(H_CntREWRCancellation2YHO,CAP_9999);

Report: => H_CntREWRCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation2YProptyP := MIN(H_CntREWRCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntRTCKCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation2Y := MIN(H_CntRTCKCancellation2Y, CAP_999);

Report: => H_CntRTCKCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation2YHO := MIN(H_CntRTCKCancellation2YHO,CAP_9999);

Report: => H_CntRTCKCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation2YProptyP := MIN(H_CntRTCKCancellation2YProptyP,CAP_9999);

                                                                
Report: => H_CntSOLDCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation2Y := MIN(H_CntSOLDCancellation2Y, CAP_999);

Report: => H_CntSOLDCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation2YHO := MIN(H_CntSOLDCancellation2YHO,CAP_9999);

Report: => H_CntSOLDCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation2YProptyP := MIN(H_CntSOLDCancellation2YProptyP,CAP_9999);
                                                                
Report: => H_CntTRANCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation2Y := MIN(H_CntTRANCancellation2Y, CAP_999);

Report: => H_CntTRANCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation2YHO := MIN(H_CntTRANCancellation2YHO,CAP_9999);

Report: => H_CntTRANCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation2YProptyP := MIN(H_CntTRANCancellation2YProptyP,CAP_9999);

// I_CntProptyCancellation2Y
// I_CntProptyCancellation2YHO
Report: => H_CntProptyCancellation2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 24)));
Report: => I_CntProptyCancellation2Y := MIN(H_CntProptyCancellation2Y,CAP_999);

Report: => H_CntProptyCancellation2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2HO => DEFAULT_2,
                                              G_SetDefault3HO => DEFAULT_3, 
                                              COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 24)));
Report: => I_CntProptyCancellation2YHO := MIN(H_CntProptyCancellation2YHO,CAP_999);

Report: => H_CntProptyCancellation2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                   G_SetDefault2ProptyP => DEFAULT_2,
                                                   G_SetDefault3ProptyP => DEFAULT_3, 
                                                   COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 24)));
Report: => I_CntProptyCancellation2YProptyP := MIN(H_CntProptyCancellation2YProptyP,CAP_999);

// I_CntProptyWithFinTypeFM2Y
// I_CntProptyWithFinTypeFM2YHO
// I_CntProptyWithFinTypeFM2YProptyP
Report: => H_CntProptyWithFinTypeFM2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM2Y := MIN(H_CntProptyWithFinTypeFM2Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM2YHO := MIN(H_CntProptyWithFinTypeFM2YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM2YProptyP := MIN(H_CntProptyWithFinTypeFM2YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM2Y
// I_CntProptyWithFinTypeSM2YHO
// I_CntProptyWithFinTypeSM2YProptyP

Report: => H_CntProptyWithFinTypeSM2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM2Y := MIN(H_CntProptyWithFinTypeSM2Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM2YHO := MIN(H_CntProptyWithFinTypeSM2YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM2YProptyP := MIN(H_CntProptyWithFinTypeSM2YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers2Y
// I_CntProptyWithFinTypeOthers2YHO
// I_CntProptyWithFinTypeOthers2YProptyP
// I_CntProptyWithFinTypeOthers2Y
// I_CntProptyWithFinTypeOthers2YHO
// I_CntProptyWithFinTypeOthers2YProptyP
Report: => H_CntProptyWithFinTypeOthers2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers2Y := MIN(H_CntProptyWithFinTypeOthers2Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers2YHO := MIN(H_CntProptyWithFinTypeOthers2YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers2YProptyP := MIN(H_CntProptyWithFinTypeOthers2YProptyP, CAP_999);

// I_CntDistFinType2Y
// I_CntDistFinType2YHO
// I_CntDistFinType2YProptyP
Report: => H_CntDistFinType2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType2Y := MIN(H_CntDistFinType2Y, CAP_999);    

Report: => H_CntDistFinType2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType2YHO := MIN(H_CntDistFinType2YHO, CAP_999);  

Report: => H_CntDistFinType2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType2YProptyP := MIN(H_CntDistFinType2YProptyP, CAP_999);

// I_CntFinCompany2Y
// I_CntFinCompany2YHO
// I_CntFinCompany2YProptyP

// Report: => H_CntFinCompany2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault3 => DEFAULT_3, 
                                  // COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany2Y := MIN(H_CntFinCompany2Y, CAP_999);            

// Report: => H_CntFinCompany2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault2HO => DEFAULT_2,
                                    // G_SetDefault3HO => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany2YHO := MIN(H_CntFinCompany2YHO, CAP_999);      

// Report: => H_CntFinCompany2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 // G_SetDefault2ProptyP => DEFAULT_2,
                                                 // G_SetDefault3ProptyP => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 24 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany2YProptyP := MIN(H_CntFinCompany2YProptyP, CAP_999);     

// I_CntPropty2Y
// I_CntPropty2YHO
Report: => H_CntPropty2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                G_SetDefault3 => DEFAULT_3, 
                                COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID{UID}));
Report: => I_CntPropty2Y := MIN(H_CntPropty2Y, CAP_999);

Report: => H_CntPropty2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).PropertyID{UID}));
Report: => I_CntPropty2YHO := MIN(H_CntPropty2YHO, CAP_999);

// I_CntDistProptyType2Y
Report: => H_CntDistProptyType2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType2Y := MIN(H_CntDistProptyType2Y, CAP_999);

// I_CntPolProptyTypeOther2Y
// I_CntPolProptyTypeOther2YHO
Report: => H_CntPolProptyTypeOther2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypeOther2Y := MIN(H_CntPolProptyTypeOther2Y, CAP_999);

Report: => H_CntPolProptyTypeOther2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2HO => DEFAULT_2,
                                              G_SetDefault3HO => DEFAULT_3, 
                                              COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypeOther2YHO := MIN(H_CntPolProptyTypeOther2YHO, CAP_999);

// I_CntPolProptyTypePrim2Y
// I_CntPolProptyTypePrim2YHO
Report: => H_CntPolProptyTypePrim2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault3 => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypePrim2Y := MIN(H_CntPolProptyTypePrim2Y, CAP_999);

Report: => H_CntPolProptyTypePrim2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypePrim2YHO := MIN(H_CntPolProptyTypePrim2YHO, CAP_999);

// I_CntPolProptyTypeSecond2Y
// I_CntPolProptyTypeSecond2YHO
Report: => H_CntPolProptyTypeSecond2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypeSecond2Y := MIN(H_CntPolProptyTypeSecond2Y, CAP_999);

Report: => H_CntPolProptyTypeSecond2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24)));
Report: => I_CntPolProptyTypeSecond2YHO := MIN(H_CntPolProptyTypeSecond2YHO, CAP_999);

Report: => H_CntDistPoltype2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype2Y := MIN(H_CntDistPoltype2Y,CAP_999);

Report: => H_CntDistPoltype2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype2YProptyP := MIN(H_CntDistPoltype2YProptyP,CAP_999);

// I_CntPolOfHO2Y
// I_CntPolOfHO2YProptyP
Report: => H_CntPolOfHO2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO2Y := MIN(H_CntPolOfHO2Y,CAP_999);

Report: => H_CntPolOfHO2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO2YProptyP := MIN(H_CntPolOfHO2YProptyP,CAP_999);


// I_CntPolOfCO2Y
// I_CntPolOfCO2YProptyP
Report: => H_CntPolOfCO2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO2Y := MIN(H_CntPolOfCO2Y,CAP_999);

Report: => H_CntPolOfCO2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO2YProptyP := MIN(H_CntPolOfCO2YProptyP,CAP_999);

// I_CntPolOfFL2Y
// I_CntPolOfFL2YProptyP
Report: => H_CntPolOfFL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL2Y := MIN(H_CntPolOfFL2Y,CAP_999);

Report: => H_CntPolOfFL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL2YProptyP := MIN(H_CntPolOfFL2YProptyP,CAP_999);

// I_CntPolOfFR2Y
// I_CntPolOfFR2YProptyP
Report: => H_CntPolOfFR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR2Y := MIN(H_CntPolOfFR2Y,CAP_999);

Report: => H_CntPolOfFR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR2YProptyP := MIN(H_CntPolOfFR2YProptyP,CAP_999);

// I_CntPolOfHL2Y
// I_CntPolOfHL2YProptyP
Report: => H_CntPolOfHL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL2Y := MIN(H_CntPolOfHL2Y,CAP_999);

Report: => H_CntPolOfHL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL2YProptyP := MIN(H_CntPolOfHL2YProptyP,CAP_999);

// I_CntPolOfIM2Y
// I_CntPolOfIM2YProptyP
Report: => H_CntPolOfIM2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM2Y := MIN(H_CntPolOfIM2Y,CAP_999);

Report: => H_CntPolOfIM2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM2YProptyP := MIN(H_CntPolOfIM2YProptyP,CAP_999);

// I_CntPolOfMH2Y
// I_CntPolOfMH2YProptyP
Report: => H_CntPolOfMH2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH2Y := MIN(H_CntPolOfMH2Y,CAP_999);

Report: => H_CntPolOfMH2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH2YProptyP := MIN(H_CntPolOfMH2YProptyP,CAP_999);

// I_CntPolOfQK2Y
// I_CntPolOfQK2YProptyP
Report: => H_CntPolOfQK2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK2Y := MIN(H_CntPolOfQK2Y,CAP_999);

Report: => H_CntPolOfQK2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK2YProptyP := MIN(H_CntPolOfQK2YProptyP,CAP_999);

// I_CntPolOfRF2Y
// I_CntPolOfRF2YProptyP
Report: => H_CntPolOfRF2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF2Y := MIN(H_CntPolOfRF2Y,CAP_999);

Report: => H_CntPolOfRF2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF2YProptyP := MIN(H_CntPolOfRF2YProptyP,CAP_999);

// I_CntPolOfTN2Y
// I_CntPolOfTN2YProptyP
Report: => H_CntPolOfTN2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN2Y := MIN(H_CntPolOfTN2Y,CAP_999);

Report: => H_CntPolOfTN2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN2YProptyP := MIN(H_CntPolOfTN2YProptyP,CAP_999);

// I_CntPolOfUM2Y
// I_CntPolOfUM2YProptyP
Report: => H_CntPolOfUM2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM2Y := MIN(H_CntPolOfUM2Y,CAP_999);

Report: => H_CntPolOfUM2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM2YProptyP := MIN(H_CntPolOfUM2YProptyP,CAP_999);

// I_CntPolOfWC2Y
// I_CntPolOfWC2YProptyP
Report: => H_CntPolOfWC2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC2Y := MIN(H_CntPolOfWC2Y,CAP_999);

Report: => H_CntPolOfWC2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC2YProptyP := MIN(H_CntPolOfWC2YProptyP,CAP_999);

// I_CntPolOfXO2Y
// I_CntPolOfXO2YProptyP
Report: => H_CntPolOfXO2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO2Y := MIN(H_CntPolOfXO2Y,CAP_999);

Report: => H_CntPolOfXO2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO2YProptyP := MIN(H_CntPolOfXO2YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV2Y
// I_CntDistCOV2YHO
// I_CntDistCOV2YProptyP

Report: => H_CntDistCOV2Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV2Y := MIN(H_CntDistCOV2Y, CAP_999);    


Report: => H_CntDistCOV2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV2YHO := MIN(H_CntDistCOV2YHO, CAP_999);   
 
Report: => H_CntDistCOV2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV2YProptyP := MIN(H_CntDistCOV2YProptyP, CAP_999);    


//Coverage package:
// I_CntDistPackageType2Y
// I_CntDistPackageType2YHO
// I_CntDistPackageType2YProptyP
Report: => G_CoveragePackages2Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages2YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages2YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => H_CntDistPackageType2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages2Y));
Report: => I_CntDistPackageType2Y := MIN(H_CntDistPackageType2Y, CAP_999);

Report: => H_CntDistPackageType2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages2YHO));
Report: => I_CntDistPackageType2YHO := MIN(H_CntDistPackageType2YHO, CAP_999);

Report: => H_CntDistPackageType2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages2YProptyP));
Report: => I_CntDistPackageType2YProptyP := MIN(H_CntDistPackageType2YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk2Y := MIN(H_CntDistRisk2Y, CAP_999);

Report: => H_CntDistRisk2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk2YHO := MIN(H_CntDistRisk2YHO, CAP_999);

Report: => H_CntDistRisk2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk2YProptyP := MIN(H_CntDistRisk2YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard2Y := MIN(H_CntPolRiskStandard2Y, CAP_999);

Report: => H_CntPolRiskStandard2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard2YHO := MIN(H_CntPolRiskStandard2YHO, CAP_999);

Report: => H_CntPolRiskStandard2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard2YProptyP := MIN(H_CntPolRiskStandard2YProptyP, CAP_999);

//RiskTypePreferred
Report: => H_CntPolRiskPreferred2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred2Y := MIN(H_CntPolRiskPreferred2Y, CAP_999);

Report: => H_CntPolRiskPreferred2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred2YHO := MIN(H_CntPolRiskPreferred2YHO, CAP_999);

Report: => H_CntPolRiskPreferred2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred2YProptyP := MIN(H_CntPolRiskPreferred2YProptyP, CAP_999);

Report: => H_CntPolRiskOthers2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers2Y := MIN(H_CntPolRiskOthers2Y, CAP_999);

Report: => H_CntPolRiskOthers2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers2YHO := MIN(H_CntPolRiskOthers2YHO, CAP_999);

Report: => H_CntPolRiskOthers2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers2YProptyP := MIN(H_CntPolRiskOthers2YProptyP, CAP_999);


Report: => H_CntFloodZonePol2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol2Y := MIN(H_CntFloodZonePol2Y, CAP_999);

Report: => H_CntFloodZonePol2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 24 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol2YProptyP := MIN(H_CntFloodZonePol2YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType2Y
// I_CntFloodZoneType2YProptyP

Report: => H_CntFloodZoneType2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault3 => DEFAULT_3, 
                                       COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType2Y := MIN(H_CntFloodZoneType2Y, CAP_999);


Report: => H_CntFloodZoneType2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType2YProptyP := MIN(H_CntFloodZoneType2YProptyP, CAP_999);

//Deduct
// R_AvgOverallDeduct2Y
// R_AvgOverallDeduct2YHO
// R_AvgOverallDeduct2YProptyP
// R_AvgTheftDeduct2Y
// R_AvgTheftDeduct2YHO
// R_AvgTheftDeduct2YProptyP
Report: => G_SetDefault4TheftDeduct2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4OverallDeduct2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4TheftDeduct2YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4OverallDeduct2YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4TheftDeduct2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4OverallDeduct2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgTheftDeduct2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4TheftDeduct2Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),TheftDeductible));
Report: => R_AvgTheftDeduct2Y := MIN(ROUND2(H_AvgTheftDeduct2Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct2YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                                                    G_SetDefault4TheftDeduct2YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),TheftDeductible));
Report: => R_AvgTheftDeduct2YHO := MIN(ROUND2(H_AvgTheftDeduct2YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
                                  G_SetDefault4TheftDeduct2YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),TheftDeductible));
Report: => R_AvgTheftDeduct2YProptyP := MIN(ROUND2(H_AvgTheftDeduct2YProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct2Y := MAP(G_SetDefault1  => DEFAULT_1,
																				G_SetDefault3 => DEFAULT_3,  
																				G_SetDefault4OverallDeduct2Y => DEFAULT_4,
																				AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),OverallDeductible));
Report: => R_AvgOverallDeduct2Y := MIN(ROUND2(H_AvgOverallDeduct2Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct2YHO := MAP(G_SetDefault1  => DEFAULT_1,
																					G_SetDefault2HO => DEFAULT_2,
																					G_SetDefault3HO => DEFAULT_3,  
																					G_SetDefault4OverallDeduct2YHO => DEFAULT_4,
																				AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),OverallDeductible));
Report: => R_AvgOverallDeduct2YHO := MIN(ROUND2(H_AvgOverallDeduct2YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																						G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3,  
																						G_SetDefault4OverallDeduct2YProptyP => DEFAULT_4,
																						AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),OverallDeductible));
Report: => R_AvgOverallDeduct2YProptyP := MIN(ROUND2(H_AvgOverallDeduct2YProptyP), CAP_99999999_99);

// Report: => G_SetDefault4IndLimit2Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimit2YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
// Report: => G_SetDefault4IndLimit2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSP2Y
// R_AvgIndivLimitBUSP2YProptyP
Report: => G_SetDefault4IndLimitBUSP2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitBUSP2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitBUSP2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP2Y := MIN(ROUND2(H_AvgIndivLimitBUSP2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																					G_SetDefault4IndLimitBUSP2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP2YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovA2Y
// R_AvgIndivLimitCovA2YHO
// R_AvgIndivLimitCovA2YProptyP
Report: => G_SetDefault4IndLimitCOVA2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitCOVA2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitCOVA2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA2Y := MIN(ROUND2(H_AvgIndivLimitCOVA2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB2Y
// R_AvgIndivLimitCovB2YHO
// R_AvgIndivLimitCovB2YProptyP
Report: => G_SetDefault4IndLimitCOVB2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitCOVB2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitCOVB2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB2Y := MIN(ROUND2(H_AvgIndivLimitCOVB2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovC2Y
// R_AvgIndivLimitCovC2YHO
// R_AvgIndivLimitCovC2YProptyP
Report: => G_SetDefault4IndLimitCOVC2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitCOVC2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => H_AvgIndivLimitCOVC2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC2Y := MIN(ROUND2(H_AvgIndivLimitCOVC2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD2Y
// R_AvgIndivLimitCovD2YHO
// R_AvgIndivLimitCovD2YProptyP
Report: => G_SetDefault4IndLimitCOVD2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => G_SetDefault4IndLimitCOVD2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitCOVD2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD2Y := MIN(ROUND2(H_AvgIndivLimitCOVD2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE2Y
// R_AvgIndivLimitCovE2YHO
// R_AvgIndivLimitCovE2YProptyP
Report: => G_SetDefault4IndLimitCOVE2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitCOVE2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitCOVE2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE2Y := MIN(ROUND2(H_AvgIndivLimitCOVE2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF2Y
// R_AvgIndivLimitCovF2YHO
// R_AvgIndivLimitCovF2YProptyP
Report: => G_SetDefault4IndLimitCOVF2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitCOVF2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitCOVF2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF2Y := MIN(ROUND2(H_AvgIndivLimitCOVF2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF2YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI2Y
// R_AvgIndivLimitEQKI2YProptyP
Report: => G_SetDefault4IndLimitEQKI2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => G_SetDefault4IndLimitEQKI2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitEQKI2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI2Y := MIN(ROUND2(H_AvgIndivLimitEQKI2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI2YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitERQK2Y
// R_AvgIndivLimitERQK2YProptyP
Report: => G_SetDefault4IndLimitERQK2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitERQK2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitERQK2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK2Y := MIN(ROUND2(H_AvgIndivLimitERQK2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK2YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFARM2Y
Report: => G_SetDefault4IndLimitFARM2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitFARM2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitFARM2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM2Y := MIN(ROUND2(H_AvgIndivLimitFARM2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM2YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFIRA2Y
// R_AvgIndivLimitFIRA2YProptyP
Report: => G_SetDefault4IndLimitFIRA2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitFIRA2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitFIRA2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA2Y := MIN(ROUND2(H_AvgIndivLimitFIRA2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA2YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFLOD2Y
// R_AvgIndivLimitFLOD2YProptyP
Report: => G_SetDefault4IndLimitFLOD2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitFLOD2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitFLOD2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD2Y := MIN(ROUND2(H_AvgIndivLimitFLOD2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD2YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitGRPL2Y
// R_AvgIndivLimitGRPL2YProptyP
Report: => G_SetDefault4IndLimitGRPL2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitGRPL2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitGRPL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL2Y := MIN(ROUND2(H_AvgIndivLimitGRPL2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL2YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHAIL2Y
// R_AvgIndivLimitHAIL2YProptyP
Report: => G_SetDefault4IndLimitHAIL2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitHAIL2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitHAIL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL2Y := MIN(ROUND2(H_AvgIndivLimitHAIL2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL2YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHDCR2Y
// R_AvgIndivLimitHDCR2YProptyP

Report: => G_SetDefault4IndLimitHDCR2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => G_SetDefault4IndLimitHDCR2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitHDCR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR2Y := MIN(ROUND2(H_AvgIndivLimitHDCR2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR2YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHULL2Y
// R_AvgIndivLimitHULL2YProptyP
Report: => G_SetDefault4IndLimitHULL2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitHULL2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitHULL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL2Y := MIN(ROUND2(H_AvgIndivLimitHULL2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL2YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHURR2Y
// R_AvgIndivLimitHURR2YProptyP
Report: => G_SetDefault4IndLimitHURR2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => G_SetDefault4IndLimitHURR2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitHURR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR2Y := MIN(ROUND2(H_AvgIndivLimitHURR2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR2YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitMOLD2Y
// R_AvgIndivLimitMOLD2YProptyP

Report: => G_SetDefault4IndLimitMOLD2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitMOLD2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitMOLD2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD2Y := MIN(ROUND2(H_AvgIndivLimitMOLD2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD2YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOTHR2Y
// R_AvgIndivLimitOTHR2YProptyP

Report: => G_SetDefault4IndLimitOTHR2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitOTHR2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitOTHR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR2Y := MIN(ROUND2(H_AvgIndivLimitOTHR2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR2YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOVRD2Y
// R_AvgIndivLimitOVRD2YProptyP
Report: => G_SetDefault4IndLimitOVRD2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitOVRD2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitOVRD2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD2Y := MIN(ROUND2(H_AvgIndivLimitOVRD2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD2YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD2YProptyP), CAP_99999999_99);


// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC2Y
// R_AvgIndivLimitPPRC2YProptyP

Report: => G_SetDefault4IndLimitPPRC2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitPPRC2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitPPRC2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC2Y := MIN(ROUND2(H_AvgIndivLimitPPRC2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC2YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC2YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP2Y
// R_AvgIndivLimitSCPP2YProptyP

Report: => G_SetDefault4IndLimitSCPP2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitSCPP2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));


Report: => H_AvgIndivLimitSCPP2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP2Y := MIN(ROUND2(H_AvgIndivLimitSCPP2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP2YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitSINK2Y
// R_AvgIndivLimitSINK2YProptyP

Report: => G_SetDefault4IndLimitSINK2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitSINK2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitSINK2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK2Y := MIN(ROUND2(H_AvgIndivLimitSINK2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK2YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD2Y
// R_AvgIndivLimitTHTD2YProptyP

Report: => G_SetDefault4IndLimitTHTD2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitTHTD2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitTHTD2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD2Y := MIN(ROUND2(H_AvgIndivLimitTHTD2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD2YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitUMBR2Y
// R_AvgIndivLimitUMBR2YProptyP

Report: => G_SetDefault4IndLimitUMBR2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitUMBR2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitUMBR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR2Y := MIN(ROUND2(H_AvgIndivLimitUMBR2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR2YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWDHL2Y
// R_AvgIndivLimitWDHL2YProptyP

Report: => G_SetDefault4IndLimitWDHL2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitWDHL2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitWDHL2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL2Y := MIN(ROUND2(H_AvgIndivLimitWDHL2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL2YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL2YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND2Y
// R_AvgIndivLimitWIND2YProptyP

Report: => G_SetDefault4IndLimitWIND2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitWIND2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitWIND2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND2Y := MIN(ROUND2(H_AvgIndivLimitWIND2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND2YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX2Y
// R_AvgIndivLimitWINX2YProptyP
Report: => G_SetDefault4IndLimitWINX2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitWINX2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));

Report: => H_AvgIndivLimitWINX2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX2Y := MIN(ROUND2(H_AvgIndivLimitWINX2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX2YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX2YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWTCR2Y
// R_AvgIndivLimitWTCR2YProptyP
Report: => G_SetDefault4IndLimitWTCR2Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitWTCR4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitWTCR5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitWTCR6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitWTCR7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => G_SetDefault4IndLimitWTCR2YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24));
Report: => G_SetDefault4IndLimitWTCR4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitWTCR5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitWTCR6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitWTCR7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWTCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitWTCR2Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR2Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR2Y := MIN(ROUND2(H_AvgIndivLimitWTCR2Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR2YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR2YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 24),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR2YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR2YProptyP), CAP_99999999_99);


//4 year
//1 YEAR
Report: => H_CntCancelledPol4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                      G_SetDefault3 => DEFAULT_3,
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol4Y := MIN(H_CntCancelledPol4Y,CAP_999);     

Report: => H_CntCancelledPol4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3,
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol4YHO := MIN(H_CntCancelledPol4YHO,CAP_999);     


Report: => H_CntCancelledPol4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2ProptyP => DEFAULT_2,
                                        G_SetDefault3ProptyP => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol4YProptyP := MIN(H_CntCancelledPol4YProptyP,CAP_999);       

Report: => H_CntCancelledPol4YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskP => DEFAULT_2,
																					 G_SetDefault3RiskP => DEFAULT_3, 
																					 COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol4YRiskP := MIN(H_CntCancelledPol4YRiskP,CAP_999);       

Report: => H_CntCancelledPol4YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskS => DEFAULT_2,
																					 G_SetDefault3RiskS => DEFAULT_3,
																					 COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol4YRiskS := MIN(H_CntCancelledPol4YRiskS,CAP_999);

// I_CntDerogCancellation4Y
// I_CntDerogCancellation4YHO
// I_CntDerogCancellation4YProptyP                                                                           
Report: => H_CntDerogCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation4Y := MIN(H_CntDerogCancellation4Y, CAP_999);

Report: => H_CntDerogCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation4YHO := MIN(H_CntDerogCancellation4YHO,CAP_9999);

Report: => H_CntDerogCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation4YProptyP := MIN(H_CntDerogCancellation4YProptyP,CAP_9999);
                                                              
Report: => H_CntCOMPCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation4Y := MIN(H_CntCOMPCancellation4Y, CAP_999);

Report: => H_CntCOMPCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation4YHO := MIN(H_CntCOMPCancellation4YHO,CAP_9999);

Report: => H_CntCOMPCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation4YProptyP := MIN(H_CntCOMPCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntCPLCCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation4Y := MIN(H_CntCPLCCancellation4Y, CAP_999);

Report: => H_CntCPLCCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation4YHO := MIN(H_CntCPLCCancellation4YHO,CAP_9999);

Report: => H_CntCPLCCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation4YProptyP := MIN(H_CntCPLCCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntCUSTCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation4Y := MIN(H_CntCUSTCancellation4Y, CAP_999);

Report: => H_CntCUSTCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation4YHO := MIN(H_CntCUSTCancellation4YHO,CAP_9999);

Report: => H_CntCUSTCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation4YProptyP := MIN(H_CntCUSTCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntLAPSCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation4Y := MIN(H_CntLAPSCancellation4Y, CAP_999);

Report: => H_CntLAPSCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation4YHO := MIN(H_CntLAPSCancellation4YHO,CAP_9999);

Report: => H_CntLAPSCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation4YProptyP := MIN(H_CntLAPSCancellation4YProptyP,CAP_9999);


                                                                
Report: => H_CntMISRCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation4Y := MIN(H_CntMISRCancellation4Y, CAP_999);

Report: => H_CntMISRCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation4YHO := MIN(H_CntMISRCancellation4YHO,CAP_9999);

Report: => H_CntMISRCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation4YProptyP := MIN(H_CntMISRCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntNONPCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation4Y := MIN(H_CntNONPCancellation4Y, CAP_999);

Report: => H_CntNONPCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation4YHO := MIN(H_CntNONPCancellation4YHO,CAP_9999);

Report: => H_CntNONPCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation4YProptyP := MIN(H_CntNONPCancellation4YProptyP,CAP_9999);


                                                                
Report: => H_CntNYDICancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation4Y := MIN(H_CntNYDICancellation4Y, CAP_999);

Report: => H_CntNYDICancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation4YHO := MIN(H_CntNYDICancellation4YHO,CAP_9999);

Report: => H_CntNYDICancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation4YProptyP := MIN(H_CntNYDICancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntNYSICancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation4Y := MIN(H_CntNYSICancellation4Y, CAP_999);

Report: => H_CntNYSICancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation4YHO := MIN(H_CntNYSICancellation4YHO,CAP_9999);

Report: => H_CntNYSICancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation4YProptyP := MIN(H_CntNYSICancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntOTHRCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation4Y := MIN(H_CntOTHRCancellation4Y, CAP_999);

Report: => H_CntOTHRCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation4YHO := MIN(H_CntOTHRCancellation4YHO,CAP_9999);

Report: => H_CntOTHRCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation4YProptyP := MIN(H_CntOTHRCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntPROPCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation4Y := MIN(H_CntPROPCancellation4Y, CAP_999);

Report: => H_CntPROPCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation4YHO := MIN(H_CntPROPCancellation4YHO,CAP_9999);

Report: => H_CntPROPCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation4YProptyP := MIN(H_CntPROPCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntREWRCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation4Y := MIN(H_CntREWRCancellation4Y, CAP_999);

Report: => H_CntREWRCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation4YHO := MIN(H_CntREWRCancellation4YHO,CAP_9999);

Report: => H_CntREWRCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation4YProptyP := MIN(H_CntREWRCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntRTCKCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation4Y := MIN(H_CntRTCKCancellation4Y, CAP_999);

Report: => H_CntRTCKCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation4YHO := MIN(H_CntRTCKCancellation4YHO,CAP_9999);

Report: => H_CntRTCKCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation4YProptyP := MIN(H_CntRTCKCancellation4YProptyP,CAP_9999);

                                                                
Report: => H_CntSOLDCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation4Y := MIN(H_CntSOLDCancellation4Y, CAP_999);

Report: => H_CntSOLDCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation4YHO := MIN(H_CntSOLDCancellation4YHO,CAP_9999);

Report: => H_CntSOLDCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation4YProptyP := MIN(H_CntSOLDCancellation4YProptyP,CAP_9999);
                                                                
Report: => H_CntTRANCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation4Y := MIN(H_CntTRANCancellation4Y, CAP_999);

Report: => H_CntTRANCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation4YHO := MIN(H_CntTRANCancellation4YHO,CAP_9999);

Report: => H_CntTRANCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation4YProptyP := MIN(H_CntTRANCancellation4YProptyP,CAP_9999);

// I_CntProptyCancellation4Y
// I_CntProptyCancellation4YHO
Report: => H_CntProptyCancellation4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 48)));
Report: => I_CntProptyCancellation4Y := MIN(H_CntProptyCancellation4Y,CAP_999);

Report: => H_CntProptyCancellation4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2HO => DEFAULT_2,
																							G_SetDefault3HO => DEFAULT_3, 
																							COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 48)));
Report: => I_CntProptyCancellation4YHO := MIN(H_CntProptyCancellation4YHO,CAP_999);

Report: => H_CntProptyCancellation4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                   G_SetDefault2ProptyP => DEFAULT_2,
																									 G_SetDefault3ProptyP => DEFAULT_3,
																									 COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 48)));
Report: => I_CntProptyCancellation4YProptyP := MIN(H_CntProptyCancellation4YProptyP,CAP_999);

// I_CntProptyWithFinTypeFM4Y
// I_CntProptyWithFinTypeFM4YHO
// I_CntProptyWithFinTypeFM4YProptyP
Report: => H_CntProptyWithFinTypeFM4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM4Y := MIN(H_CntProptyWithFinTypeFM4Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM4YHO := MIN(H_CntProptyWithFinTypeFM4YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM4YProptyP := MIN(H_CntProptyWithFinTypeFM4YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM4Y
// I_CntProptyWithFinTypeSM4YHO
// I_CntProptyWithFinTypeSM4YProptyP

Report: => H_CntProptyWithFinTypeSM4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM4Y := MIN(H_CntProptyWithFinTypeSM4Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM4YHO := MIN(H_CntProptyWithFinTypeSM4YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM4YProptyP := MIN(H_CntProptyWithFinTypeSM4YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers4Y
// I_CntProptyWithFinTypeOthers4YHO
// I_CntProptyWithFinTypeOthers4YProptyP
// I_CntProptyWithFinTypeOthers4Y
// I_CntProptyWithFinTypeOthers4YHO
// I_CntProptyWithFinTypeOthers4YProptyP
Report: => H_CntProptyWithFinTypeOthers4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers4Y := MIN(H_CntProptyWithFinTypeOthers4Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers4YHO := MIN(H_CntProptyWithFinTypeOthers4YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers4YProptyP := MIN(H_CntProptyWithFinTypeOthers4YProptyP, CAP_999);

// I_CntDistFinType4Y
// I_CntDistFinType4YHO
// I_CntDistFinType4YProptyP
Report: => H_CntDistFinType4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType4Y := MIN(H_CntDistFinType4Y, CAP_999);    

Report: => H_CntDistFinType4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType4YHO := MIN(H_CntDistFinType4YHO, CAP_999);  

Report: => H_CntDistFinType4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType4YProptyP := MIN(H_CntDistFinType4YProptyP, CAP_999);

// I_CntFinCompany4Y
// I_CntFinCompany4YHO
// I_CntFinCompany4YProptyP

// Report: => H_CntFinCompany4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault3 => DEFAULT_3, 
                                  // COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany4Y := MIN(H_CntFinCompany4Y, CAP_999);            

// Report: => H_CntFinCompany4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault2HO => DEFAULT_2,
                                    // G_SetDefault3HO => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany4YHO := MIN(H_CntFinCompany4YHO, CAP_999);      

// Report: => H_CntFinCompany4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 // G_SetDefault2ProptyP => DEFAULT_2,
                                                 // G_SetDefault3ProptyP => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 48 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany4YProptyP := MIN(H_CntFinCompany4YProptyP, CAP_999);     

// I_CntPropty4Y
// I_CntPropty4YHO
Report: => H_CntPropty4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                G_SetDefault3 => DEFAULT_3,
																COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID{UID}));
Report: => I_CntPropty4Y := MIN(H_CntPropty4Y, CAP_999);

Report: => H_CntPropty4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
																	G_SetDefault3HO => DEFAULT_3, 
																	COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).PropertyID{UID}));
Report: => I_CntPropty4YHO := MIN(H_CntPropty4YHO, CAP_999);

// I_CntDistProptyType4Y
Report: => H_CntDistProptyType4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
																				COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType4Y := MIN(H_CntDistProptyType4Y, CAP_999);

// I_CntPolProptyTypeOther4Y
// I_CntPolProptyTypeOther4YHO
Report: => H_CntPolProptyTypeOther4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
																						COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypeOther4Y := MIN(H_CntPolProptyTypeOther4Y, CAP_999);

Report: => H_CntPolProptyTypeOther4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypeOther4YHO := MIN(H_CntPolProptyTypeOther4YHO, CAP_999);

// I_CntPolProptyTypePrim4Y
// I_CntPolProptyTypePrim4YHO
Report: => H_CntPolProptyTypePrim4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypePrim4Y := MIN(H_CntPolProptyTypePrim4Y, CAP_999);

Report: => H_CntPolProptyTypePrim4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypePrim4YHO := MIN(H_CntPolProptyTypePrim4YHO, CAP_999);

// I_CntPolProptyTypeSecond4Y
// I_CntPolProptyTypeSecond4YHO
Report: => H_CntPolProptyTypeSecond4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypeSecond4Y := MIN(H_CntPolProptyTypeSecond4Y, CAP_999);

Report: => H_CntPolProptyTypeSecond4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48)));
Report: => I_CntPolProptyTypeSecond4YHO := MIN(H_CntPolProptyTypeSecond4YHO, CAP_999);

Report: => H_CntDistPoltype4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype4Y := MIN(H_CntDistPoltype4Y,CAP_999);

Report: => H_CntDistPoltype4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
																						G_SetDefault3ProptyP => DEFAULT_3,
																						COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype4YProptyP := MIN(H_CntDistPoltype4YProptyP,CAP_999);

// I_CntPolOfHO4Y
// I_CntPolOfHO4YProptyP
Report: => H_CntPolOfHO4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO4Y := MIN(H_CntPolOfHO4Y,CAP_999);

Report: => H_CntPolOfHO4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO4YProptyP := MIN(H_CntPolOfHO4YProptyP,CAP_999);


// I_CntPolOfCO4Y
// I_CntPolOfCO4YProptyP
Report: => H_CntPolOfCO4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO4Y := MIN(H_CntPolOfCO4Y,CAP_999);

Report: => H_CntPolOfCO4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO4YProptyP := MIN(H_CntPolOfCO4YProptyP,CAP_999);

// I_CntPolOfFL4Y
// I_CntPolOfFL4YProptyP
Report: => H_CntPolOfFL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL4Y := MIN(H_CntPolOfFL4Y,CAP_999);

Report: => H_CntPolOfFL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL4YProptyP := MIN(H_CntPolOfFL4YProptyP,CAP_999);

// I_CntPolOfFR4Y
// I_CntPolOfFR4YProptyP
Report: => H_CntPolOfFR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR4Y := MIN(H_CntPolOfFR4Y,CAP_999);

Report: => H_CntPolOfFR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR4YProptyP := MIN(H_CntPolOfFR4YProptyP,CAP_999);

// I_CntPolOfHL4Y
// I_CntPolOfHL4YProptyP
Report: => H_CntPolOfHL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL4Y := MIN(H_CntPolOfHL4Y,CAP_999);

Report: => H_CntPolOfHL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL4YProptyP := MIN(H_CntPolOfHL4YProptyP,CAP_999);

// I_CntPolOfIM4Y
// I_CntPolOfIM4YProptyP
Report: => H_CntPolOfIM4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM4Y := MIN(H_CntPolOfIM4Y,CAP_999);

Report: => H_CntPolOfIM4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM4YProptyP := MIN(H_CntPolOfIM4YProptyP,CAP_999);

// I_CntPolOfMH4Y
// I_CntPolOfMH4YProptyP
Report: => H_CntPolOfMH4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH4Y := MIN(H_CntPolOfMH4Y,CAP_999);

Report: => H_CntPolOfMH4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH4YProptyP := MIN(H_CntPolOfMH4YProptyP,CAP_999);

// I_CntPolOfQK4Y
// I_CntPolOfQK4YProptyP
Report: => H_CntPolOfQK4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK4Y := MIN(H_CntPolOfQK4Y,CAP_999);

Report: => H_CntPolOfQK4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK4YProptyP := MIN(H_CntPolOfQK4YProptyP,CAP_999);

// I_CntPolOfRF4Y
// I_CntPolOfRF4YProptyP
Report: => H_CntPolOfRF4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF4Y := MIN(H_CntPolOfRF4Y,CAP_999);

Report: => H_CntPolOfRF4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF4YProptyP := MIN(H_CntPolOfRF4YProptyP,CAP_999);

// I_CntPolOfTN4Y
// I_CntPolOfTN4YProptyP
Report: => H_CntPolOfTN4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN4Y := MIN(H_CntPolOfTN4Y,CAP_999);

Report: => H_CntPolOfTN4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN4YProptyP := MIN(H_CntPolOfTN4YProptyP,CAP_999);

// I_CntPolOfUM4Y
// I_CntPolOfUM4YProptyP
Report: => H_CntPolOfUM4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM4Y := MIN(H_CntPolOfUM4Y,CAP_999);

Report: => H_CntPolOfUM4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM4YProptyP := MIN(H_CntPolOfUM4YProptyP,CAP_999);

// I_CntPolOfWC4Y
// I_CntPolOfWC4YProptyP
Report: => H_CntPolOfWC4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC4Y := MIN(H_CntPolOfWC4Y,CAP_999);

Report: => H_CntPolOfWC4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC4YProptyP := MIN(H_CntPolOfWC4YProptyP,CAP_999);

// I_CntPolOfXO4Y
// I_CntPolOfXO4YProptyP
Report: => H_CntPolOfXO4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO4Y := MIN(H_CntPolOfXO4Y,CAP_999);

Report: => H_CntPolOfXO4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO4YProptyP := MIN(H_CntPolOfXO4YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV4Y
// I_CntDistCOV4YHO
// I_CntDistCOV4YProptyP

Report: => H_CntDistCOV4Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV4Y := MIN(H_CntDistCOV4Y, CAP_999);    


Report: => H_CntDistCOV4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV4YHO := MIN(H_CntDistCOV4YHO, CAP_999);   
 
Report: => H_CntDistCOV4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV4YProptyP := MIN(H_CntDistCOV4YProptyP, CAP_999);    


//Coverage package:
// I_CntDistPackageType4Y
// I_CntDistPackageType4YHO
// I_CntDistPackageType4YProptyP
Report: => G_CoveragePackages4Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages4YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages4YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => H_CntDistPackageType4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages4Y));
Report: => I_CntDistPackageType4Y := MIN(H_CntDistPackageType4Y, CAP_999);

Report: => H_CntDistPackageType4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages4YHO));
Report: => I_CntDistPackageType4YHO := MIN(H_CntDistPackageType4YHO, CAP_999);

Report: => H_CntDistPackageType4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages4YProptyP));
Report: => I_CntDistPackageType4YProptyP := MIN(H_CntDistPackageType4YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk4Y := MIN(H_CntDistRisk4Y, CAP_999);

Report: => H_CntDistRisk4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk4YHO := MIN(H_CntDistRisk4YHO, CAP_999);

Report: => H_CntDistRisk4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk4YProptyP := MIN(H_CntDistRisk4YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard4Y := MIN(H_CntPolRiskStandard4Y, CAP_999);

Report: => H_CntPolRiskStandard4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard4YHO := MIN(H_CntPolRiskStandard4YHO, CAP_999);

Report: => H_CntPolRiskStandard4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard4YProptyP := MIN(H_CntPolRiskStandard4YProptyP, CAP_999);

//RiskTypePreferred
Report: => H_CntPolRiskPreferred4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred4Y := MIN(H_CntPolRiskPreferred4Y, CAP_999);

Report: => H_CntPolRiskPreferred4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred4YHO := MIN(H_CntPolRiskPreferred4YHO, CAP_999);

Report: => H_CntPolRiskPreferred4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred4YProptyP := MIN(H_CntPolRiskPreferred4YProptyP, CAP_999);

Report: => H_CntPolRiskOthers4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers4Y := MIN(H_CntPolRiskOthers4Y, CAP_999);

Report: => H_CntPolRiskOthers4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers4YHO := MIN(H_CntPolRiskOthers4YHO, CAP_999);

Report: => H_CntPolRiskOthers4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers4YProptyP := MIN(H_CntPolRiskOthers4YProptyP, CAP_999);


Report: => H_CntFloodZonePol4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol4Y := MIN(H_CntFloodZonePol4Y, CAP_999);

Report: => H_CntFloodZonePol4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 48 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol4YProptyP := MIN(H_CntFloodZonePol4YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType4Y
// I_CntFloodZoneType4YProptyP

Report: => H_CntFloodZoneType4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                        G_SetDefault3 => DEFAULT_3, 
                                                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType4Y := MIN(H_CntFloodZoneType4Y, CAP_999);


Report: => H_CntFloodZoneType4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType4YProptyP := MIN(H_CntFloodZoneType4YProptyP, CAP_999);

//Deduct
// R_AvgOverallDeduct4Y
// R_AvgOverallDeduct4YHO
// R_AvgOverallDeduct4YProptyP
// R_AvgTheftDeduct4Y
// R_AvgTheftDeduct4YHO
// R_AvgTheftDeduct4YProptyP
Report: => G_SetDefault4TheftDeduct4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4OverallDeduct4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4TheftDeduct4YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4OverallDeduct4YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4TheftDeduct4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4OverallDeduct4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgTheftDeduct4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4TheftDeduct4Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),TheftDeductible));
Report: => R_AvgTheftDeduct4Y := MIN(ROUND2(H_AvgTheftDeduct4Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  G_SetDefault4TheftDeduct4YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),TheftDeductible));
Report: => R_AvgTheftDeduct4YHO := MIN(ROUND2(H_AvgTheftDeduct4YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
                                  G_SetDefault4TheftDeduct4YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),TheftDeductible));
Report: => R_AvgTheftDeduct4YProptyP := MIN(ROUND2(H_AvgTheftDeduct4YProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),OverallDeductible));
Report: => R_AvgOverallDeduct4Y := MIN(ROUND2(H_AvgOverallDeduct4Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct4YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct4YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),OverallDeductible));
Report: => R_AvgOverallDeduct4YHO := MIN(ROUND2(H_AvgOverallDeduct4YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,
																	G_SetDefault4OverallDeduct4YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),OverallDeductible));
Report: => R_AvgOverallDeduct4YProptyP := MIN(ROUND2(H_AvgOverallDeduct4YProptyP), CAP_99999999_99);

// Report: => G_SetDefault4IndLimit4Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimit4YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
// Report: => G_SetDefault4IndLimit4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP4Y
// R_AvgIndivLimitBUSP4YProptyP
Report: => G_SetDefault4IndLimitBUSP4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitBUSP4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitBUSP4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
																		G_SetDefault4IndLimitBUSP4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP4Y := MIN(ROUND2(H_AvgIndivLimitBUSP4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																					G_SetDefault4IndLimitBUSP4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP4YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP4YProptyP), CAP_99999999_99);


// R_AvgIndivLimitCovA4Y
// R_AvgIndivLimitCovA4YHO
// R_AvgIndivLimitCovA4YProptyP
Report: => G_SetDefault4IndLimitCOVA4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitCOVA4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitCOVA4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA4Y := MIN(ROUND2(H_AvgIndivLimitCOVA4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB4Y
// R_AvgIndivLimitCovB4YHO
// R_AvgIndivLimitCovB4YProptyP
Report: => G_SetDefault4IndLimitCOVB4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitCOVB4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitCOVB4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB4Y := MIN(ROUND2(H_AvgIndivLimitCOVB4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovC4Y
// R_AvgIndivLimitCovC4YHO
// R_AvgIndivLimitCovC4YProptyP
Report: => G_SetDefault4IndLimitCOVC4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitCOVC4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => H_AvgIndivLimitCOVC4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC4Y := MIN(ROUND2(H_AvgIndivLimitCOVC4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD4Y
// R_AvgIndivLimitCovD4YHO
// R_AvgIndivLimitCovD4YProptyP
Report: => G_SetDefault4IndLimitCOVD4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => G_SetDefault4IndLimitCOVD4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitCOVD4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD4Y := MIN(ROUND2(H_AvgIndivLimitCOVD4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE4Y
// R_AvgIndivLimitCovE4YHO
// R_AvgIndivLimitCovE4YProptyP
Report: => G_SetDefault4IndLimitCOVE4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitCOVE4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitCOVE4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE4Y := MIN(ROUND2(H_AvgIndivLimitCOVE4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF4Y
// R_AvgIndivLimitCovF4YHO
// R_AvgIndivLimitCovF4YProptyP
Report: => G_SetDefault4IndLimitCOVF4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitCOVF4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitCOVF4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF4Y := MIN(ROUND2(H_AvgIndivLimitCOVF4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF4YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI4Y
// R_AvgIndivLimitEQKI4YProptyP
Report: => G_SetDefault4IndLimitEQKI4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => G_SetDefault4IndLimitEQKI4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitEQKI4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI4Y := MIN(ROUND2(H_AvgIndivLimitEQKI4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI4YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitERQK4Y
// R_AvgIndivLimitERQK4YProptyP
Report: => G_SetDefault4IndLimitERQK4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitERQK4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitERQK4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK4Y := MIN(ROUND2(H_AvgIndivLimitERQK4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK4YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFARM4Y
Report: => G_SetDefault4IndLimitFARM4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitFARM4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitFARM4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM4Y := MIN(ROUND2(H_AvgIndivLimitFARM4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM4YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFIRA4Y
// R_AvgIndivLimitFIRA4YProptyP
Report: => G_SetDefault4IndLimitFIRA4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitFIRA4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitFIRA4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA4Y := MIN(ROUND2(H_AvgIndivLimitFIRA4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA4YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFLOD4Y
// R_AvgIndivLimitFLOD4YProptyP
Report: => G_SetDefault4IndLimitFLOD4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitFLOD4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitFLOD4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD4Y := MIN(ROUND2(H_AvgIndivLimitFLOD4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD4YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitGRPL4Y
// R_AvgIndivLimitGRPL4YProptyP
Report: => G_SetDefault4IndLimitGRPL4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitGRPL4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitGRPL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL4Y := MIN(ROUND2(H_AvgIndivLimitGRPL4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL4YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHAIL4Y
// R_AvgIndivLimitHAIL4YProptyP
Report: => G_SetDefault4IndLimitHAIL4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitHAIL4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitHAIL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL4Y := MIN(ROUND2(H_AvgIndivLimitHAIL4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL4YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHDCR4Y
// R_AvgIndivLimitHDCR4YProptyP

Report: => G_SetDefault4IndLimitHDCR4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => G_SetDefault4IndLimitHDCR4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitHDCR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR4Y := MIN(ROUND2(H_AvgIndivLimitHDCR4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR4YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHULL4Y
// R_AvgIndivLimitHULL4YProptyP
Report: => G_SetDefault4IndLimitHULL4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitHULL4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitHULL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL4Y := MIN(ROUND2(H_AvgIndivLimitHULL4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL4YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHURR4Y
// R_AvgIndivLimitHURR4YProptyP
Report: => G_SetDefault4IndLimitHURR4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => G_SetDefault4IndLimitHURR4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitHURR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR4Y := MIN(ROUND2(H_AvgIndivLimitHURR4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR4YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitMOLD4Y
// R_AvgIndivLimitMOLD4YProptyP

Report: => G_SetDefault4IndLimitMOLD4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitMOLD4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitMOLD4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD4Y := MIN(ROUND2(H_AvgIndivLimitMOLD4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD4YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOTHR4Y
// R_AvgIndivLimitOTHR4YProptyP

Report: => G_SetDefault4IndLimitOTHR4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitOTHR4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitOTHR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR4Y := MIN(ROUND2(H_AvgIndivLimitOTHR4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR4YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOVRD4Y
// R_AvgIndivLimitOVRD4YProptyP
Report: => G_SetDefault4IndLimitOVRD4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitOVRD4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitOVRD4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD4Y := MIN(ROUND2(H_AvgIndivLimitOVRD4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD4YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD4YProptyP), CAP_99999999_99);


// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC4Y
// R_AvgIndivLimitPPRC4YProptyP

Report: => G_SetDefault4IndLimitPPRC4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitPPRC4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitPPRC4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC4Y := MIN(ROUND2(H_AvgIndivLimitPPRC4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC4YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC4YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP4Y
// R_AvgIndivLimitSCPP4YProptyP

Report: => G_SetDefault4IndLimitSCPP4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitSCPP4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));


Report: => H_AvgIndivLimitSCPP4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP4Y := MIN(ROUND2(H_AvgIndivLimitSCPP4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP4YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitSINK4Y
// R_AvgIndivLimitSINK4YProptyP

Report: => G_SetDefault4IndLimitSINK4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitSINK4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitSINK4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK4Y := MIN(ROUND2(H_AvgIndivLimitSINK4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK4YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD4Y
// R_AvgIndivLimitTHTD4YProptyP

Report: => G_SetDefault4IndLimitTHTD4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitTHTD4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitTHTD4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD4Y := MIN(ROUND2(H_AvgIndivLimitTHTD4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD4YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitUMBR4Y
// R_AvgIndivLimitUMBR4YProptyP

Report: => G_SetDefault4IndLimitUMBR4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitUMBR4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitUMBR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR4Y := MIN(ROUND2(H_AvgIndivLimitUMBR4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR4YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWDHL4Y
// R_AvgIndivLimitWDHL4YProptyP

Report: => G_SetDefault4IndLimitWDHL4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitWDHL4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitWDHL4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL4Y := MIN(ROUND2(H_AvgIndivLimitWDHL4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL4YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL4YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND4Y
// R_AvgIndivLimitWIND4YProptyP

Report: => G_SetDefault4IndLimitWIND4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitWIND4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitWIND4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND4Y := MIN(ROUND2(H_AvgIndivLimitWIND4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND4YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX4Y
// R_AvgIndivLimitWINX4YProptyP
Report: => G_SetDefault4IndLimitWINX4Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));
Report: => G_SetDefault4IndLimitWINX4YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48));

Report: => H_AvgIndivLimitWINX4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX4Y := MIN(ROUND2(H_AvgIndivLimitWINX4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX4YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX4YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWTCR4Y
// R_AvgIndivLimitWTCR4YProptyP


Report: => H_AvgIndivLimitWTCR4Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR4Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR4Y := MIN(ROUND2(H_AvgIndivLimitWTCR4Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR4YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR4YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 48),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR4YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR4YProptyP), CAP_99999999_99);


//5 year
//1 YEAR
Report: => H_CntCancelledPol5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                        G_SetDefault3 => DEFAULT_3, 
                                                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol5Y := MIN(H_CntCancelledPol5Y,CAP_999);     

Report: => H_CntCancelledPol5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                            G_SetDefault2HO => DEFAULT_2,
                                                                            G_SetDefault3HO => DEFAULT_3, 
                                                                            COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol5YHO := MIN(H_CntCancelledPol5YHO,CAP_999);     


Report: => H_CntCancelledPol5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2ProptyP => DEFAULT_2,
                                        G_SetDefault3ProptyP => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol5YProptyP := MIN(H_CntCancelledPol5YProptyP,CAP_999);       

Report: => H_CntCancelledPol5YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2RiskP => DEFAULT_2,
                                                                                G_SetDefault3RiskP => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol5YRiskP := MIN(H_CntCancelledPol5YRiskP,CAP_999);       

Report: => H_CntCancelledPol5YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2RiskS => DEFAULT_2,
                                                                                G_SetDefault3RiskS => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol5YRiskS := MIN(H_CntCancelledPol5YRiskS,CAP_999);

// I_CntDerogCancellation5Y
// I_CntDerogCancellation5YHO
// I_CntDerogCancellation5YProptyP                                                                           
Report: => H_CntDerogCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation5Y := MIN(H_CntDerogCancellation5Y, CAP_999);

Report: => H_CntDerogCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation5YHO := MIN(H_CntDerogCancellation5YHO,CAP_9999);

Report: => H_CntDerogCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation5YProptyP := MIN(H_CntDerogCancellation5YProptyP,CAP_9999);
                                                              
Report: => H_CntCOMPCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation5Y := MIN(H_CntCOMPCancellation5Y, CAP_999);

Report: => H_CntCOMPCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation5YHO := MIN(H_CntCOMPCancellation5YHO,CAP_9999);

Report: => H_CntCOMPCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation5YProptyP := MIN(H_CntCOMPCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntCPLCCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation5Y := MIN(H_CntCPLCCancellation5Y, CAP_999);

Report: => H_CntCPLCCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation5YHO := MIN(H_CntCPLCCancellation5YHO,CAP_9999);

Report: => H_CntCPLCCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation5YProptyP := MIN(H_CntCPLCCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntCUSTCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation5Y := MIN(H_CntCUSTCancellation5Y, CAP_999);

Report: => H_CntCUSTCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation5YHO := MIN(H_CntCUSTCancellation5YHO,CAP_9999);

Report: => H_CntCUSTCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation5YProptyP := MIN(H_CntCUSTCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntLAPSCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation5Y := MIN(H_CntLAPSCancellation5Y, CAP_999);

Report: => H_CntLAPSCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation5YHO := MIN(H_CntLAPSCancellation5YHO,CAP_9999);

Report: => H_CntLAPSCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation5YProptyP := MIN(H_CntLAPSCancellation5YProptyP,CAP_9999);


                                                                
Report: => H_CntMISRCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation5Y := MIN(H_CntMISRCancellation5Y, CAP_999);

Report: => H_CntMISRCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation5YHO := MIN(H_CntMISRCancellation5YHO,CAP_9999);

Report: => H_CntMISRCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation5YProptyP := MIN(H_CntMISRCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntNONPCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation5Y := MIN(H_CntNONPCancellation5Y, CAP_999);

Report: => H_CntNONPCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation5YHO := MIN(H_CntNONPCancellation5YHO,CAP_9999);

Report: => H_CntNONPCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation5YProptyP := MIN(H_CntNONPCancellation5YProptyP,CAP_9999);


                                                                
Report: => H_CntNYDICancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation5Y := MIN(H_CntNYDICancellation5Y, CAP_999);

Report: => H_CntNYDICancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation5YHO := MIN(H_CntNYDICancellation5YHO,CAP_9999);

Report: => H_CntNYDICancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation5YProptyP := MIN(H_CntNYDICancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntNYSICancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation5Y := MIN(H_CntNYSICancellation5Y, CAP_999);

Report: => H_CntNYSICancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation5YHO := MIN(H_CntNYSICancellation5YHO,CAP_9999);

Report: => H_CntNYSICancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation5YProptyP := MIN(H_CntNYSICancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntOTHRCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation5Y := MIN(H_CntOTHRCancellation5Y, CAP_999);

Report: => H_CntOTHRCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation5YHO := MIN(H_CntOTHRCancellation5YHO,CAP_9999);

Report: => H_CntOTHRCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation5YProptyP := MIN(H_CntOTHRCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntPROPCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation5Y := MIN(H_CntPROPCancellation5Y, CAP_999);

Report: => H_CntPROPCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation5YHO := MIN(H_CntPROPCancellation5YHO,CAP_9999);

Report: => H_CntPROPCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation5YProptyP := MIN(H_CntPROPCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntREWRCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation5Y := MIN(H_CntREWRCancellation5Y, CAP_999);

Report: => H_CntREWRCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation5YHO := MIN(H_CntREWRCancellation5YHO,CAP_9999);

Report: => H_CntREWRCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation5YProptyP := MIN(H_CntREWRCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntRTCKCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation5Y := MIN(H_CntRTCKCancellation5Y, CAP_999);

Report: => H_CntRTCKCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation5YHO := MIN(H_CntRTCKCancellation5YHO,CAP_9999);

Report: => H_CntRTCKCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation5YProptyP := MIN(H_CntRTCKCancellation5YProptyP,CAP_9999);

                                                                
Report: => H_CntSOLDCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation5Y := MIN(H_CntSOLDCancellation5Y, CAP_999);

Report: => H_CntSOLDCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation5YHO := MIN(H_CntSOLDCancellation5YHO,CAP_9999);

Report: => H_CntSOLDCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation5YProptyP := MIN(H_CntSOLDCancellation5YProptyP,CAP_9999);
                                                                
Report: => H_CntTRANCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation5Y := MIN(H_CntTRANCancellation5Y, CAP_999);

Report: => H_CntTRANCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation5YHO := MIN(H_CntTRANCancellation5YHO,CAP_9999);

Report: => H_CntTRANCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation5YProptyP := MIN(H_CntTRANCancellation5YProptyP,CAP_9999);

// I_CntProptyCancellation5Y
// I_CntProptyCancellation5YHO
Report: => H_CntProptyCancellation5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 60)));
Report: => I_CntProptyCancellation5Y := MIN(H_CntProptyCancellation5Y,CAP_999);

Report: => H_CntProptyCancellation5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2HO => DEFAULT_2,
                                                                                G_SetDefault3HO => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 60)));
Report: => I_CntProptyCancellation5YHO := MIN(H_CntProptyCancellation5YHO,CAP_999);

Report: => H_CntProptyCancellation5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 60)));
Report: => I_CntProptyCancellation5YProptyP := MIN(H_CntProptyCancellation5YProptyP,CAP_999);

// I_CntProptyWithFinTypeFM5Y
// I_CntProptyWithFinTypeFM5YHO
// I_CntProptyWithFinTypeFM5YProptyP
Report: => H_CntProptyWithFinTypeFM5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM5Y := MIN(H_CntProptyWithFinTypeFM5Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM5YHO := MIN(H_CntProptyWithFinTypeFM5YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM5YProptyP := MIN(H_CntProptyWithFinTypeFM5YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM5Y
// I_CntProptyWithFinTypeSM5YHO
// I_CntProptyWithFinTypeSM5YProptyP

Report: => H_CntProptyWithFinTypeSM5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM5Y := MIN(H_CntProptyWithFinTypeSM5Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM5YHO := MIN(H_CntProptyWithFinTypeSM5YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM5YProptyP := MIN(H_CntProptyWithFinTypeSM5YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers5Y
// I_CntProptyWithFinTypeOthers5YHO
// I_CntProptyWithFinTypeOthers5YProptyP
// I_CntProptyWithFinTypeOthers5Y
// I_CntProptyWithFinTypeOthers5YHO
// I_CntProptyWithFinTypeOthers5YProptyP
Report: => H_CntProptyWithFinTypeOthers5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers5Y := MIN(H_CntProptyWithFinTypeOthers5Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers5YHO := MIN(H_CntProptyWithFinTypeOthers5YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers5YProptyP := MIN(H_CntProptyWithFinTypeOthers5YProptyP, CAP_999);

// I_CntDistFinType5Y
// I_CntDistFinType5YHO
// I_CntDistFinType5YProptyP
Report: => H_CntDistFinType5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType5Y := MIN(H_CntDistFinType5Y, CAP_999);    

Report: => H_CntDistFinType5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType5YHO := MIN(H_CntDistFinType5YHO, CAP_999);  

Report: => H_CntDistFinType5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType5YProptyP := MIN(H_CntDistFinType5YProptyP, CAP_999);

// I_CntFinCompany5Y
// I_CntFinCompany5YHO
// I_CntFinCompany5YProptyP

// Report: => H_CntFinCompany5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault3 => DEFAULT_3, 
                                  // COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany5Y := MIN(H_CntFinCompany5Y, CAP_999);            

// Report: => H_CntFinCompany5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault2HO => DEFAULT_2,
                                    // G_SetDefault3HO => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany5YHO := MIN(H_CntFinCompany5YHO, CAP_999);      

// Report: => H_CntFinCompany5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 // G_SetDefault2ProptyP => DEFAULT_2,
                                                 // G_SetDefault3ProptyP => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 60 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany5YProptyP := MIN(H_CntFinCompany5YProptyP, CAP_999);     

// I_CntPropty5Y
// I_CntPropty5YHO
Report: => H_CntPropty5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID{UID}));
Report: => I_CntPropty5Y := MIN(H_CntPropty5Y, CAP_999);

Report: => H_CntPropty5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).PropertyID{UID}));
Report: => I_CntPropty5YHO := MIN(H_CntPropty5YHO, CAP_999);

// I_CntDistProptyType5Y
Report: => H_CntDistProptyType5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                        G_SetDefault3 => DEFAULT_3, 
                                                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType5Y := MIN(H_CntDistProptyType5Y, CAP_999);

// I_CntPolProptyTypeOther5Y
// I_CntPolProptyTypeOther5YHO
Report: => H_CntPolProptyTypeOther5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypeOther5Y := MIN(H_CntPolProptyTypeOther5Y, CAP_999);

Report: => H_CntPolProptyTypeOther5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypeOther5YHO := MIN(H_CntPolProptyTypeOther5YHO, CAP_999);

// I_CntPolProptyTypePrim5Y
// I_CntPolProptyTypePrim5YHO
Report: => H_CntPolProptyTypePrim5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypePrim5Y := MIN(H_CntPolProptyTypePrim5Y, CAP_999);

Report: => H_CntPolProptyTypePrim5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypePrim5YHO := MIN(H_CntPolProptyTypePrim5YHO, CAP_999);

// I_CntPolProptyTypeSecond5Y
// I_CntPolProptyTypeSecond5YHO
Report: => H_CntPolProptyTypeSecond5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypeSecond5Y := MIN(H_CntPolProptyTypeSecond5Y, CAP_999);

Report: => H_CntPolProptyTypeSecond5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60)));
Report: => I_CntPolProptyTypeSecond5YHO := MIN(H_CntPolProptyTypeSecond5YHO, CAP_999);

Report: => H_CntDistPoltype5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype5Y := MIN(H_CntDistPoltype5Y,CAP_999);

Report: => H_CntDistPoltype5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                    G_SetDefault2ProptyP => DEFAULT_2,
                                                                                    G_SetDefault3ProptyP => DEFAULT_3, 
                                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype5YProptyP := MIN(H_CntDistPoltype5YProptyP,CAP_999);

// I_CntPolOfHO5Y
// I_CntPolOfHO5YProptyP
Report: => H_CntPolOfHO5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO5Y := MIN(H_CntPolOfHO5Y,CAP_999);

Report: => H_CntPolOfHO5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO5YProptyP := MIN(H_CntPolOfHO5YProptyP,CAP_999);


// I_CntPolOfCO5Y
// I_CntPolOfCO5YProptyP
Report: => H_CntPolOfCO5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO5Y := MIN(H_CntPolOfCO5Y,CAP_999);

Report: => H_CntPolOfCO5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO5YProptyP := MIN(H_CntPolOfCO5YProptyP,CAP_999);

// I_CntPolOfFL5Y
// I_CntPolOfFL5YProptyP
Report: => H_CntPolOfFL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL5Y := MIN(H_CntPolOfFL5Y,CAP_999);

Report: => H_CntPolOfFL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL5YProptyP := MIN(H_CntPolOfFL5YProptyP,CAP_999);

// I_CntPolOfFR5Y
// I_CntPolOfFR5YProptyP
Report: => H_CntPolOfFR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR5Y := MIN(H_CntPolOfFR5Y,CAP_999);

Report: => H_CntPolOfFR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR5YProptyP := MIN(H_CntPolOfFR5YProptyP,CAP_999);

// I_CntPolOfHL5Y
// I_CntPolOfHL5YProptyP
Report: => H_CntPolOfHL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL5Y := MIN(H_CntPolOfHL5Y,CAP_999);

Report: => H_CntPolOfHL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL5YProptyP := MIN(H_CntPolOfHL5YProptyP,CAP_999);

// I_CntPolOfIM5Y
// I_CntPolOfIM5YProptyP
Report: => H_CntPolOfIM5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM5Y := MIN(H_CntPolOfIM5Y,CAP_999);

Report: => H_CntPolOfIM5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM5YProptyP := MIN(H_CntPolOfIM5YProptyP,CAP_999);

// I_CntPolOfMH5Y
// I_CntPolOfMH5YProptyP
Report: => H_CntPolOfMH5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH5Y := MIN(H_CntPolOfMH5Y,CAP_999);

Report: => H_CntPolOfMH5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH5YProptyP := MIN(H_CntPolOfMH5YProptyP,CAP_999);

// I_CntPolOfQK5Y
// I_CntPolOfQK5YProptyP
Report: => H_CntPolOfQK5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK5Y := MIN(H_CntPolOfQK5Y,CAP_999);

Report: => H_CntPolOfQK5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK5YProptyP := MIN(H_CntPolOfQK5YProptyP,CAP_999);

// I_CntPolOfRF5Y
// I_CntPolOfRF5YProptyP
Report: => H_CntPolOfRF5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF5Y := MIN(H_CntPolOfRF5Y,CAP_999);

Report: => H_CntPolOfRF5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF5YProptyP := MIN(H_CntPolOfRF5YProptyP,CAP_999);

// I_CntPolOfTN5Y
// I_CntPolOfTN5YProptyP
Report: => H_CntPolOfTN5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN5Y := MIN(H_CntPolOfTN5Y,CAP_999);

Report: => H_CntPolOfTN5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN5YProptyP := MIN(H_CntPolOfTN5YProptyP,CAP_999);

// I_CntPolOfUM5Y
// I_CntPolOfUM5YProptyP
Report: => H_CntPolOfUM5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM5Y := MIN(H_CntPolOfUM5Y,CAP_999);

Report: => H_CntPolOfUM5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM5YProptyP := MIN(H_CntPolOfUM5YProptyP,CAP_999);

// I_CntPolOfWC5Y
// I_CntPolOfWC5YProptyP
Report: => H_CntPolOfWC5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC5Y := MIN(H_CntPolOfWC5Y,CAP_999);

Report: => H_CntPolOfWC5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC5YProptyP := MIN(H_CntPolOfWC5YProptyP,CAP_999);

// I_CntPolOfXO5Y
// I_CntPolOfXO5YProptyP
Report: => H_CntPolOfXO5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO5Y := MIN(H_CntPolOfXO5Y,CAP_999);

Report: => H_CntPolOfXO5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO5YProptyP := MIN(H_CntPolOfXO5YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV5Y
// I_CntDistCOV5YHO
// I_CntDistCOV5YProptyP

Report: => H_CntDistCOV5Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV5Y := MIN(H_CntDistCOV5Y, CAP_999);    


Report: => H_CntDistCOV5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV5YHO := MIN(H_CntDistCOV5YHO, CAP_999);   
 
Report: => H_CntDistCOV5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV5YProptyP := MIN(H_CntDistCOV5YProptyP, CAP_999);    


//Coverage package:
// I_CntDistPackageType5Y
// I_CntDistPackageType5YHO
// I_CntDistPackageType5YProptyP
Report: => G_CoveragePackages5Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages5YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages5YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => H_CntDistPackageType5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages5Y));
Report: => I_CntDistPackageType5Y := MIN(H_CntDistPackageType5Y, CAP_999);

Report: => H_CntDistPackageType5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages5YHO));
Report: => I_CntDistPackageType5YHO := MIN(H_CntDistPackageType5YHO, CAP_999);

Report: => H_CntDistPackageType5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages5YProptyP));
Report: => I_CntDistPackageType5YProptyP := MIN(H_CntDistPackageType5YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk5Y := MIN(H_CntDistRisk5Y, CAP_999);

Report: => H_CntDistRisk5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk5YHO := MIN(H_CntDistRisk5YHO, CAP_999);

Report: => H_CntDistRisk5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk5YProptyP := MIN(H_CntDistRisk5YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard5Y := MIN(H_CntPolRiskStandard5Y, CAP_999);

Report: => H_CntPolRiskStandard5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard5YHO := MIN(H_CntPolRiskStandard5YHO, CAP_999);

Report: => H_CntPolRiskStandard5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard5YProptyP := MIN(H_CntPolRiskStandard5YProptyP, CAP_999);

//RiskTypePreferred
Report: => H_CntPolRiskPreferred5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred5Y := MIN(H_CntPolRiskPreferred5Y, CAP_999);

Report: => H_CntPolRiskPreferred5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred5YHO := MIN(H_CntPolRiskPreferred5YHO, CAP_999);

Report: => H_CntPolRiskPreferred5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred5YProptyP := MIN(H_CntPolRiskPreferred5YProptyP, CAP_999);

Report: => H_CntPolRiskOthers5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers5Y := MIN(H_CntPolRiskOthers5Y, CAP_999);

Report: => H_CntPolRiskOthers5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers5YHO := MIN(H_CntPolRiskOthers5YHO, CAP_999);

Report: => H_CntPolRiskOthers5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers5YProptyP := MIN(H_CntPolRiskOthers5YProptyP, CAP_999);


Report: => H_CntFloodZonePol5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol5Y := MIN(H_CntFloodZonePol5Y, CAP_999);

Report: => H_CntFloodZonePol5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 60 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol5YProptyP := MIN(H_CntFloodZonePol5YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType5Y
// I_CntFloodZoneType5YProptyP

Report: => H_CntFloodZoneType5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault3 => DEFAULT_3,
																			 COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType5Y := MIN(H_CntFloodZoneType5Y, CAP_999);


Report: => H_CntFloodZoneType5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3,
																					COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType5YProptyP := MIN(H_CntFloodZoneType5YProptyP, CAP_999);

//Deduct
// R_AvgOverallDeduct5Y
// R_AvgOverallDeduct5YHO
// R_AvgOverallDeduct5YProptyP
// R_AvgTheftDeduct5Y
// R_AvgTheftDeduct5YHO
// R_AvgTheftDeduct5YProptyP
Report: => G_SetDefault4TheftDeduct5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4OverallDeduct5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4TheftDeduct5YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4OverallDeduct5YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4TheftDeduct5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4OverallDeduct5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgTheftDeduct5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4TheftDeduct5Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),TheftDeductible));
Report: => R_AvgTheftDeduct5Y := MIN(ROUND2(H_AvgTheftDeduct5Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                                                    G_SetDefault4TheftDeduct5YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),TheftDeductible));
Report: => R_AvgTheftDeduct5YHO := MIN(ROUND2(H_AvgTheftDeduct5YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
																			G_SetDefault2ProptyP => DEFAULT_2,
																			G_SetDefault3ProptyP => DEFAULT_3, 
																			G_SetDefault4TheftDeduct5YProptyP => DEFAULT_4,
																				AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),TheftDeductible));
Report: => R_AvgTheftDeduct5YProptyP := MIN(ROUND2(H_AvgTheftDeduct5YProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                      G_SetDefault4OverallDeduct5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),OverallDeductible));
Report: => R_AvgOverallDeduct5Y := MIN(ROUND2(H_AvgOverallDeduct5Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct5YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct5YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),OverallDeductible));
Report: => R_AvgOverallDeduct5YHO := MIN(ROUND2(H_AvgOverallDeduct5YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,
																	G_SetDefault4OverallDeduct5YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),OverallDeductible));
Report: => R_AvgOverallDeduct5YProptyP := MIN(ROUND2(H_AvgOverallDeduct5YProptyP), CAP_99999999_99);

// Report: => G_SetDefault4IndLimit5Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimit5YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
// Report: => G_SetDefault4IndLimit5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP5Y
// R_AvgIndivLimitBUSP5YProptyP
Report: => G_SetDefault4IndLimitBUSP5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitBUSP5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitBUSP5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitBUSP5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP5Y := MIN(ROUND2(H_AvgIndivLimitBUSP5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
																					G_SetDefault4IndLimitBUSP5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP5YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovA5Y
// R_AvgIndivLimitCovA5YHO
// R_AvgIndivLimitCovA5YProptyP
Report: => G_SetDefault4IndLimitCOVA5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitCOVA5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitCOVA5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA5Y := MIN(ROUND2(H_AvgIndivLimitCOVA5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB5Y
// R_AvgIndivLimitCovB5YHO
// R_AvgIndivLimitCovB5YProptyP
Report: => G_SetDefault4IndLimitCOVB5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitCOVB5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitCOVB5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB5Y := MIN(ROUND2(H_AvgIndivLimitCOVB5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovC5Y
// R_AvgIndivLimitCovC5YHO
// R_AvgIndivLimitCovC5YProptyP
Report: => G_SetDefault4IndLimitCOVC5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitCOVC5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => H_AvgIndivLimitCOVC5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC5Y := MIN(ROUND2(H_AvgIndivLimitCOVC5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD5Y
// R_AvgIndivLimitCovD5YHO
// R_AvgIndivLimitCovD5YProptyP
Report: => G_SetDefault4IndLimitCOVD5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => G_SetDefault4IndLimitCOVD5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitCOVD5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD5Y := MIN(ROUND2(H_AvgIndivLimitCOVD5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE5Y
// R_AvgIndivLimitCovE5YHO
// R_AvgIndivLimitCovE5YProptyP
Report: => G_SetDefault4IndLimitCOVE5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitCOVE5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitCOVE5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE5Y := MIN(ROUND2(H_AvgIndivLimitCOVE5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF5Y
// R_AvgIndivLimitCovF5YHO
// R_AvgIndivLimitCovF5YProptyP
Report: => G_SetDefault4IndLimitCOVF5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitCOVF5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitCOVF5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF5Y := MIN(ROUND2(H_AvgIndivLimitCOVF5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF5YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI5Y
// R_AvgIndivLimitEQKI5YProptyP
Report: => G_SetDefault4IndLimitEQKI5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => G_SetDefault4IndLimitEQKI5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitEQKI5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI5Y := MIN(ROUND2(H_AvgIndivLimitEQKI5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI5YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitERQK5Y
// R_AvgIndivLimitERQK5YProptyP
Report: => G_SetDefault4IndLimitERQK5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitERQK5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitERQK5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK5Y := MIN(ROUND2(H_AvgIndivLimitERQK5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK5YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFARM5Y
Report: => G_SetDefault4IndLimitFARM5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitFARM5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitFARM5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM5Y := MIN(ROUND2(H_AvgIndivLimitFARM5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM5YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFIRA5Y
// R_AvgIndivLimitFIRA5YProptyP
Report: => G_SetDefault4IndLimitFIRA5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitFIRA5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitFIRA5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA5Y := MIN(ROUND2(H_AvgIndivLimitFIRA5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA5YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFLOD5Y
// R_AvgIndivLimitFLOD5YProptyP
Report: => G_SetDefault4IndLimitFLOD5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitFLOD5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitFLOD5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD5Y := MIN(ROUND2(H_AvgIndivLimitFLOD5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD5YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitGRPL5Y
// R_AvgIndivLimitGRPL5YProptyP
Report: => G_SetDefault4IndLimitGRPL5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitGRPL5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitGRPL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL5Y := MIN(ROUND2(H_AvgIndivLimitGRPL5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL5YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHAIL5Y
// R_AvgIndivLimitHAIL5YProptyP
Report: => G_SetDefault4IndLimitHAIL5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitHAIL5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitHAIL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL5Y := MIN(ROUND2(H_AvgIndivLimitHAIL5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL5YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHDCR5Y
// R_AvgIndivLimitHDCR5YProptyP

Report: => G_SetDefault4IndLimitHDCR5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => G_SetDefault4IndLimitHDCR5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitHDCR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR5Y := MIN(ROUND2(H_AvgIndivLimitHDCR5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR5YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHULL5Y
// R_AvgIndivLimitHULL5YProptyP
Report: => G_SetDefault4IndLimitHULL5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitHULL5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitHULL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL5Y := MIN(ROUND2(H_AvgIndivLimitHULL5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL5YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHURR5Y
// R_AvgIndivLimitHURR5YProptyP
Report: => G_SetDefault4IndLimitHURR5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => G_SetDefault4IndLimitHURR5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitHURR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR5Y := MIN(ROUND2(H_AvgIndivLimitHURR5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR5YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitMOLD5Y
// R_AvgIndivLimitMOLD5YProptyP

Report: => G_SetDefault4IndLimitMOLD5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitMOLD5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitMOLD5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD5Y := MIN(ROUND2(H_AvgIndivLimitMOLD5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD5YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOTHR5Y
// R_AvgIndivLimitOTHR5YProptyP

Report: => G_SetDefault4IndLimitOTHR5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitOTHR5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitOTHR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR5Y := MIN(ROUND2(H_AvgIndivLimitOTHR5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR5YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOVRD5Y
// R_AvgIndivLimitOVRD5YProptyP
Report: => G_SetDefault4IndLimitOVRD5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitOVRD5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitOVRD5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD5Y := MIN(ROUND2(H_AvgIndivLimitOVRD5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD5YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD5YProptyP), CAP_99999999_99);


// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC5Y
// R_AvgIndivLimitPPRC5YProptyP

Report: => G_SetDefault4IndLimitPPRC5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitPPRC5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitPPRC5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC5Y := MIN(ROUND2(H_AvgIndivLimitPPRC5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC5YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC5YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP5Y
// R_AvgIndivLimitSCPP5YProptyP

Report: => G_SetDefault4IndLimitSCPP5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitSCPP5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));


Report: => H_AvgIndivLimitSCPP5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP5Y := MIN(ROUND2(H_AvgIndivLimitSCPP5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP5YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitSINK5Y
// R_AvgIndivLimitSINK5YProptyP

Report: => G_SetDefault4IndLimitSINK5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitSINK5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitSINK5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK5Y := MIN(ROUND2(H_AvgIndivLimitSINK5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK5YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD5Y
// R_AvgIndivLimitTHTD5YProptyP

Report: => G_SetDefault4IndLimitTHTD5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitTHTD5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitTHTD5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD5Y := MIN(ROUND2(H_AvgIndivLimitTHTD5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD5YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitUMBR5Y
// R_AvgIndivLimitUMBR5YProptyP

Report: => G_SetDefault4IndLimitUMBR5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitUMBR5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitUMBR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR5Y := MIN(ROUND2(H_AvgIndivLimitUMBR5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR5YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWDHL5Y
// R_AvgIndivLimitWDHL5YProptyP

Report: => G_SetDefault4IndLimitWDHL5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitWDHL5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitWDHL5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL5Y := MIN(ROUND2(H_AvgIndivLimitWDHL5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL5YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL5YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND5Y
// R_AvgIndivLimitWIND5YProptyP

Report: => G_SetDefault4IndLimitWIND5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitWIND5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitWIND5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND5Y := MIN(ROUND2(H_AvgIndivLimitWIND5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND5YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX5Y
// R_AvgIndivLimitWINX5YProptyP
Report: => G_SetDefault4IndLimitWINX5Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));
Report: => G_SetDefault4IndLimitWINX5YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60));

Report: => H_AvgIndivLimitWINX5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX5Y := MIN(ROUND2(H_AvgIndivLimitWINX5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX5YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX5YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWTCR5Y
// R_AvgIndivLimitWTCR5YProptyP


Report: => H_AvgIndivLimitWTCR5Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR5Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR5Y := MIN(ROUND2(H_AvgIndivLimitWTCR5Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR5YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR5YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 60),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR5YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR5YProptyP), CAP_99999999_99);

//6 year
//1 YEAR
Report: => H_CntCancelledPol6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                      G_SetDefault3 => DEFAULT_3,
																			COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol6Y := MIN(H_CntCancelledPol6Y,CAP_999);     

Report: => H_CntCancelledPol6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
																				G_SetDefault3HO => DEFAULT_3,
																				COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol6YHO := MIN(H_CntCancelledPol6YHO,CAP_999);     


Report: => H_CntCancelledPol6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2ProptyP => DEFAULT_2,
                                        G_SetDefault3ProptyP => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol6YProptyP := MIN(H_CntCancelledPol6YProptyP,CAP_999);       

Report: => H_CntCancelledPol6YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskP => DEFAULT_2,
																					 G_SetDefault3RiskP => DEFAULT_3,
																					 COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol6YRiskP := MIN(H_CntCancelledPol6YRiskP,CAP_999);       

Report: => H_CntCancelledPol6YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskS => DEFAULT_2,
																					 G_SetDefault3RiskS => DEFAULT_3, 
																					 COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol6YRiskS := MIN(H_CntCancelledPol6YRiskS,CAP_999);

// I_CntDerogCancellation6Y
// I_CntDerogCancellation6YHO
// I_CntDerogCancellation6YProptyP                                                                           
Report: => H_CntDerogCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation6Y := MIN(H_CntDerogCancellation6Y, CAP_999);

Report: => H_CntDerogCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation6YHO := MIN(H_CntDerogCancellation6YHO,CAP_9999);

Report: => H_CntDerogCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation6YProptyP := MIN(H_CntDerogCancellation6YProptyP,CAP_9999);
                                                              
Report: => H_CntCOMPCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation6Y := MIN(H_CntCOMPCancellation6Y, CAP_999);

Report: => H_CntCOMPCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation6YHO := MIN(H_CntCOMPCancellation6YHO,CAP_9999);

Report: => H_CntCOMPCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation6YProptyP := MIN(H_CntCOMPCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntCPLCCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation6Y := MIN(H_CntCPLCCancellation6Y, CAP_999);

Report: => H_CntCPLCCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation6YHO := MIN(H_CntCPLCCancellation6YHO,CAP_9999);

Report: => H_CntCPLCCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation6YProptyP := MIN(H_CntCPLCCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntCUSTCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation6Y := MIN(H_CntCUSTCancellation6Y, CAP_999);

Report: => H_CntCUSTCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation6YHO := MIN(H_CntCUSTCancellation6YHO,CAP_9999);

Report: => H_CntCUSTCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation6YProptyP := MIN(H_CntCUSTCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntLAPSCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation6Y := MIN(H_CntLAPSCancellation6Y, CAP_999);

Report: => H_CntLAPSCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation6YHO := MIN(H_CntLAPSCancellation6YHO,CAP_9999);

Report: => H_CntLAPSCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation6YProptyP := MIN(H_CntLAPSCancellation6YProptyP,CAP_9999);


                                                                
Report: => H_CntMISRCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation6Y := MIN(H_CntMISRCancellation6Y, CAP_999);

Report: => H_CntMISRCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation6YHO := MIN(H_CntMISRCancellation6YHO,CAP_9999);

Report: => H_CntMISRCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation6YProptyP := MIN(H_CntMISRCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntNONPCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation6Y := MIN(H_CntNONPCancellation6Y, CAP_999);

Report: => H_CntNONPCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation6YHO := MIN(H_CntNONPCancellation6YHO,CAP_9999);

Report: => H_CntNONPCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation6YProptyP := MIN(H_CntNONPCancellation6YProptyP,CAP_9999);


                                                                
Report: => H_CntNYDICancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation6Y := MIN(H_CntNYDICancellation6Y, CAP_999);

Report: => H_CntNYDICancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation6YHO := MIN(H_CntNYDICancellation6YHO,CAP_9999);

Report: => H_CntNYDICancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation6YProptyP := MIN(H_CntNYDICancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntNYSICancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation6Y := MIN(H_CntNYSICancellation6Y, CAP_999);

Report: => H_CntNYSICancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation6YHO := MIN(H_CntNYSICancellation6YHO,CAP_9999);

Report: => H_CntNYSICancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation6YProptyP := MIN(H_CntNYSICancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntOTHRCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation6Y := MIN(H_CntOTHRCancellation6Y, CAP_999);

Report: => H_CntOTHRCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation6YHO := MIN(H_CntOTHRCancellation6YHO,CAP_9999);

Report: => H_CntOTHRCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation6YProptyP := MIN(H_CntOTHRCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntPROPCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation6Y := MIN(H_CntPROPCancellation6Y, CAP_999);

Report: => H_CntPROPCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation6YHO := MIN(H_CntPROPCancellation6YHO,CAP_9999);

Report: => H_CntPROPCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation6YProptyP := MIN(H_CntPROPCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntREWRCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation6Y := MIN(H_CntREWRCancellation6Y, CAP_999);

Report: => H_CntREWRCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation6YHO := MIN(H_CntREWRCancellation6YHO,CAP_9999);

Report: => H_CntREWRCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation6YProptyP := MIN(H_CntREWRCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntRTCKCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation6Y := MIN(H_CntRTCKCancellation6Y, CAP_999);

Report: => H_CntRTCKCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation6YHO := MIN(H_CntRTCKCancellation6YHO,CAP_9999);

Report: => H_CntRTCKCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation6YProptyP := MIN(H_CntRTCKCancellation6YProptyP,CAP_9999);

                                                                
Report: => H_CntSOLDCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation6Y := MIN(H_CntSOLDCancellation6Y, CAP_999);

Report: => H_CntSOLDCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation6YHO := MIN(H_CntSOLDCancellation6YHO,CAP_9999);

Report: => H_CntSOLDCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation6YProptyP := MIN(H_CntSOLDCancellation6YProptyP,CAP_9999);
                                                                
Report: => H_CntTRANCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation6Y := MIN(H_CntTRANCancellation6Y, CAP_999);

Report: => H_CntTRANCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation6YHO := MIN(H_CntTRANCancellation6YHO,CAP_9999);

Report: => H_CntTRANCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation6YProptyP := MIN(H_CntTRANCancellation6YProptyP,CAP_9999);

// I_CntProptyCancellation6Y
// I_CntProptyCancellation6YHO
Report: => H_CntProptyCancellation6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 72)));
Report: => I_CntProptyCancellation6Y := MIN(H_CntProptyCancellation6Y,CAP_999);

Report: => H_CntProptyCancellation6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2HO => DEFAULT_2,
                                                                                G_SetDefault3HO => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 72)));
Report: => I_CntProptyCancellation6YHO := MIN(H_CntProptyCancellation6YHO,CAP_999);

Report: => H_CntProptyCancellation6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                   G_SetDefault2ProptyP => DEFAULT_2,
																									 G_SetDefault3ProptyP => DEFAULT_3, 
																									 COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 72)));
Report: => I_CntProptyCancellation6YProptyP := MIN(H_CntProptyCancellation6YProptyP,CAP_999);

// I_CntProptyWithFinTypeFM6Y
// I_CntProptyWithFinTypeFM6YHO
// I_CntProptyWithFinTypeFM6YProptyP
Report: => H_CntProptyWithFinTypeFM6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM6Y := MIN(H_CntProptyWithFinTypeFM6Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM6YHO := MIN(H_CntProptyWithFinTypeFM6YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM6YProptyP := MIN(H_CntProptyWithFinTypeFM6YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM6Y
// I_CntProptyWithFinTypeSM6YHO
// I_CntProptyWithFinTypeSM6YProptyP

Report: => H_CntProptyWithFinTypeSM6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM6Y := MIN(H_CntProptyWithFinTypeSM6Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM6YHO := MIN(H_CntProptyWithFinTypeSM6YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM6YProptyP := MIN(H_CntProptyWithFinTypeSM6YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers6Y
// I_CntProptyWithFinTypeOthers6YHO
// I_CntProptyWithFinTypeOthers6YProptyP
// I_CntProptyWithFinTypeOthers6Y
// I_CntProptyWithFinTypeOthers6YHO
// I_CntProptyWithFinTypeOthers6YProptyP
Report: => H_CntProptyWithFinTypeOthers6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers6Y := MIN(H_CntProptyWithFinTypeOthers6Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers6YHO := MIN(H_CntProptyWithFinTypeOthers6YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers6YProptyP := MIN(H_CntProptyWithFinTypeOthers6YProptyP, CAP_999);

// I_CntDistFinType6Y
// I_CntDistFinType6YHO
// I_CntDistFinType6YProptyP
Report: => H_CntDistFinType6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType6Y := MIN(H_CntDistFinType6Y, CAP_999);    

Report: => H_CntDistFinType6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType6YHO := MIN(H_CntDistFinType6YHO, CAP_999);  

Report: => H_CntDistFinType6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType6YProptyP := MIN(H_CntDistFinType6YProptyP, CAP_999);

// I_CntFinCompany6Y
// I_CntFinCompany6YHO
// I_CntFinCompany6YProptyP

// Report: => H_CntFinCompany6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault3 => DEFAULT_3, 
                                  // COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany6Y := MIN(H_CntFinCompany6Y, CAP_999);            

// Report: => H_CntFinCompany6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault2HO => DEFAULT_2,
                                    // G_SetDefault3HO => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany6YHO := MIN(H_CntFinCompany6YHO, CAP_999);      

// Report: => H_CntFinCompany6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 // G_SetDefault2ProptyP => DEFAULT_2,
                                                 // G_SetDefault3ProptyP => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 72 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany6YProptyP := MIN(H_CntFinCompany6YProptyP, CAP_999);     

// I_CntPropty6Y
// I_CntPropty6YHO
Report: => H_CntPropty6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID{UID}));
Report: => I_CntPropty6Y := MIN(H_CntPropty6Y, CAP_999);

Report: => H_CntPropty6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).PropertyID{UID}));
Report: => I_CntPropty6YHO := MIN(H_CntPropty6YHO, CAP_999);

// I_CntDistProptyType6Y
Report: => H_CntDistProptyType6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                        G_SetDefault3 => DEFAULT_3, 
                                                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType6Y := MIN(H_CntDistProptyType6Y, CAP_999);

// I_CntPolProptyTypeOther6Y
// I_CntPolProptyTypeOther6YHO
Report: => H_CntPolProptyTypeOther6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypeOther6Y := MIN(H_CntPolProptyTypeOther6Y, CAP_999);

Report: => H_CntPolProptyTypeOther6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypeOther6YHO := MIN(H_CntPolProptyTypeOther6YHO, CAP_999);

// I_CntPolProptyTypePrim6Y
// I_CntPolProptyTypePrim6YHO
Report: => H_CntPolProptyTypePrim6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypePrim6Y := MIN(H_CntPolProptyTypePrim6Y, CAP_999);

Report: => H_CntPolProptyTypePrim6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypePrim6YHO := MIN(H_CntPolProptyTypePrim6YHO, CAP_999);

// I_CntPolProptyTypeSecond6Y
// I_CntPolProptyTypeSecond6YHO
Report: => H_CntPolProptyTypeSecond6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                G_SetDefault3 => DEFAULT_3, 
                                                                COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypeSecond6Y := MIN(H_CntPolProptyTypeSecond6Y, CAP_999);

Report: => H_CntPolProptyTypeSecond6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault2HO => DEFAULT_2,
                                                                    G_SetDefault3HO => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72)));
Report: => I_CntPolProptyTypeSecond6YHO := MIN(H_CntPolProptyTypeSecond6YHO, CAP_999);

Report: => H_CntDistPoltype6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                    G_SetDefault3 => DEFAULT_3, 
                                                                    COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype6Y := MIN(H_CntDistPoltype6Y,CAP_999);

Report: => H_CntDistPoltype6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                    G_SetDefault2ProptyP => DEFAULT_2,
                                                                                    G_SetDefault3ProptyP => DEFAULT_3, 
                                                                                    COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype6YProptyP := MIN(H_CntDistPoltype6YProptyP,CAP_999);

// I_CntPolOfHO6Y
// I_CntPolOfHO6YProptyP
Report: => H_CntPolOfHO6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO6Y := MIN(H_CntPolOfHO6Y,CAP_999);

Report: => H_CntPolOfHO6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO6YProptyP := MIN(H_CntPolOfHO6YProptyP,CAP_999);


// I_CntPolOfCO6Y
// I_CntPolOfCO6YProptyP
Report: => H_CntPolOfCO6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO6Y := MIN(H_CntPolOfCO6Y,CAP_999);

Report: => H_CntPolOfCO6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO6YProptyP := MIN(H_CntPolOfCO6YProptyP,CAP_999);

// I_CntPolOfFL6Y
// I_CntPolOfFL6YProptyP
Report: => H_CntPolOfFL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL6Y := MIN(H_CntPolOfFL6Y,CAP_999);

Report: => H_CntPolOfFL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL6YProptyP := MIN(H_CntPolOfFL6YProptyP,CAP_999);

// I_CntPolOfFR6Y
// I_CntPolOfFR6YProptyP
Report: => H_CntPolOfFR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR6Y := MIN(H_CntPolOfFR6Y,CAP_999);

Report: => H_CntPolOfFR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR6YProptyP := MIN(H_CntPolOfFR6YProptyP,CAP_999);

// I_CntPolOfHL6Y
// I_CntPolOfHL6YProptyP
Report: => H_CntPolOfHL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL6Y := MIN(H_CntPolOfHL6Y,CAP_999);

Report: => H_CntPolOfHL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL6YProptyP := MIN(H_CntPolOfHL6YProptyP,CAP_999);

// I_CntPolOfIM6Y
// I_CntPolOfIM6YProptyP
Report: => H_CntPolOfIM6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM6Y := MIN(H_CntPolOfIM6Y,CAP_999);

Report: => H_CntPolOfIM6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM6YProptyP := MIN(H_CntPolOfIM6YProptyP,CAP_999);

// I_CntPolOfMH6Y
// I_CntPolOfMH6YProptyP
Report: => H_CntPolOfMH6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH6Y := MIN(H_CntPolOfMH6Y,CAP_999);

Report: => H_CntPolOfMH6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH6YProptyP := MIN(H_CntPolOfMH6YProptyP,CAP_999);

// I_CntPolOfQK6Y
// I_CntPolOfQK6YProptyP
Report: => H_CntPolOfQK6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK6Y := MIN(H_CntPolOfQK6Y,CAP_999);

Report: => H_CntPolOfQK6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK6YProptyP := MIN(H_CntPolOfQK6YProptyP,CAP_999);

// I_CntPolOfRF6Y
// I_CntPolOfRF6YProptyP
Report: => H_CntPolOfRF6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF6Y := MIN(H_CntPolOfRF6Y,CAP_999);

Report: => H_CntPolOfRF6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF6YProptyP := MIN(H_CntPolOfRF6YProptyP,CAP_999);

// I_CntPolOfTN6Y
// I_CntPolOfTN6YProptyP
Report: => H_CntPolOfTN6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN6Y := MIN(H_CntPolOfTN6Y,CAP_999);

Report: => H_CntPolOfTN6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN6YProptyP := MIN(H_CntPolOfTN6YProptyP,CAP_999);

// I_CntPolOfUM6Y
// I_CntPolOfUM6YProptyP
Report: => H_CntPolOfUM6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM6Y := MIN(H_CntPolOfUM6Y,CAP_999);

Report: => H_CntPolOfUM6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM6YProptyP := MIN(H_CntPolOfUM6YProptyP,CAP_999);

// I_CntPolOfWC6Y
// I_CntPolOfWC6YProptyP
Report: => H_CntPolOfWC6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC6Y := MIN(H_CntPolOfWC6Y,CAP_999);

Report: => H_CntPolOfWC6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC6YProptyP := MIN(H_CntPolOfWC6YProptyP,CAP_999);

// I_CntPolOfXO6Y
// I_CntPolOfXO6YProptyP
Report: => H_CntPolOfXO6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO6Y := MIN(H_CntPolOfXO6Y,CAP_999);

Report: => H_CntPolOfXO6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO6YProptyP := MIN(H_CntPolOfXO6YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV6Y
// I_CntDistCOV6YHO
// I_CntDistCOV6YProptyP

Report: => H_CntDistCOV6Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV6Y := MIN(H_CntDistCOV6Y, CAP_999);    


Report: => H_CntDistCOV6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV6YHO := MIN(H_CntDistCOV6YHO, CAP_999);   
 
Report: => H_CntDistCOV6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV6YProptyP := MIN(H_CntDistCOV6YProptyP, CAP_999);    


//Coverage package:
// I_CntDistPackageType6Y
// I_CntDistPackageType6YHO
// I_CntDistPackageType6YProptyP
Report: => G_CoveragePackages6Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages6YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages6YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => H_CntDistPackageType6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages6Y));
Report: => I_CntDistPackageType6Y := MIN(H_CntDistPackageType6Y, CAP_999);

Report: => H_CntDistPackageType6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages6YHO));
Report: => I_CntDistPackageType6YHO := MIN(H_CntDistPackageType6YHO, CAP_999);

Report: => H_CntDistPackageType6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages6YProptyP));
Report: => I_CntDistPackageType6YProptyP := MIN(H_CntDistPackageType6YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk6Y := MIN(H_CntDistRisk6Y, CAP_999);

Report: => H_CntDistRisk6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk6YHO := MIN(H_CntDistRisk6YHO, CAP_999);

Report: => H_CntDistRisk6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk6YProptyP := MIN(H_CntDistRisk6YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard6Y := MIN(H_CntPolRiskStandard6Y, CAP_999);

Report: => H_CntPolRiskStandard6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard6YHO := MIN(H_CntPolRiskStandard6YHO, CAP_999);

Report: => H_CntPolRiskStandard6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard6YProptyP := MIN(H_CntPolRiskStandard6YProptyP, CAP_999);

//RiskTypePreferred
Report: => H_CntPolRiskPreferred6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred6Y := MIN(H_CntPolRiskPreferred6Y, CAP_999);

Report: => H_CntPolRiskPreferred6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred6YHO := MIN(H_CntPolRiskPreferred6YHO, CAP_999);

Report: => H_CntPolRiskPreferred6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred6YProptyP := MIN(H_CntPolRiskPreferred6YProptyP, CAP_999);

Report: => H_CntPolRiskOthers6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers6Y := MIN(H_CntPolRiskOthers6Y, CAP_999);

Report: => H_CntPolRiskOthers6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers6YHO := MIN(H_CntPolRiskOthers6YHO, CAP_999);

Report: => H_CntPolRiskOthers6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers6YProptyP := MIN(H_CntPolRiskOthers6YProptyP, CAP_999);


Report: => H_CntFloodZonePol6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol6Y := MIN(H_CntFloodZonePol6Y, CAP_999);

Report: => H_CntFloodZonePol6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 72 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol6YProptyP := MIN(H_CntFloodZonePol6YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType6Y
// I_CntFloodZoneType6YProptyP

Report: => H_CntFloodZoneType6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                                                        G_SetDefault3 => DEFAULT_3, 
                                                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType6Y := MIN(H_CntFloodZoneType6Y, CAP_999);


Report: => H_CntFloodZoneType6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType6YProptyP := MIN(H_CntFloodZoneType6YProptyP, CAP_999);

//Deduct
// R_AvgOverallDeduct6Y
// R_AvgOverallDeduct6YHO
// R_AvgOverallDeduct6YProptyP
// R_AvgTheftDeduct6Y
// R_AvgTheftDeduct6YHO
// R_AvgTheftDeduct6YProptyP
Report: => G_SetDefault4TheftDeduct6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4OverallDeduct6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4TheftDeduct6YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4OverallDeduct6YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4TheftDeduct6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4OverallDeduct6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgTheftDeduct6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                                                        G_SetDefault4TheftDeduct6Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),TheftDeductible));
Report: => R_AvgTheftDeduct6Y := MIN(ROUND2(H_AvgTheftDeduct6Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                                                    G_SetDefault4TheftDeduct6YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),TheftDeductible));
Report: => R_AvgTheftDeduct6YHO := MIN(ROUND2(H_AvgTheftDeduct6YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
                                                                        G_SetDefault4TheftDeduct6YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),TheftDeductible));
Report: => R_AvgTheftDeduct6YProptyP := MIN(ROUND2(H_AvgTheftDeduct6YProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),OverallDeductible));
Report: => R_AvgOverallDeduct6Y := MIN(ROUND2(H_AvgOverallDeduct6Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct6YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct6YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),OverallDeductible));
Report: => R_AvgOverallDeduct6YHO := MIN(ROUND2(H_AvgOverallDeduct6YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
                                                                        G_SetDefault4OverallDeduct6YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),OverallDeductible));
Report: => R_AvgOverallDeduct6YProptyP := MIN(ROUND2(H_AvgOverallDeduct6YProptyP), CAP_99999999_99);

// Report: => G_SetDefault4IndLimit6Y := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimit6YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
// Report: => G_SetDefault4IndLimit6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP6Y
// R_AvgIndivLimitBUSP6YProptyP
Report: => G_SetDefault4IndLimitBUSP6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitBUSP6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitBUSP6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitBUSP6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP6Y := MIN(ROUND2(H_AvgIndivLimitBUSP6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
										  G_SetDefault4IndLimitBUSP6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP6YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP6YProptyP), CAP_99999999_99);


// R_AvgIndivLimitCovA6Y
// R_AvgIndivLimitCovA6YHO
// R_AvgIndivLimitCovA6YProptyP
Report: => G_SetDefault4IndLimitCOVA6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitCOVA6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitCOVA6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA6Y := MIN(ROUND2(H_AvgIndivLimitCOVA6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB6Y
// R_AvgIndivLimitCovB6YHO
// R_AvgIndivLimitCovB6YProptyP
Report: => G_SetDefault4IndLimitCOVB6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitCOVB6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitCOVB6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB6Y := MIN(ROUND2(H_AvgIndivLimitCOVB6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovC6Y
// R_AvgIndivLimitCovC6YHO
// R_AvgIndivLimitCovC6YProptyP
Report: => G_SetDefault4IndLimitCOVC6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitCOVC6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => H_AvgIndivLimitCOVC6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC6Y := MIN(ROUND2(H_AvgIndivLimitCOVC6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD6Y
// R_AvgIndivLimitCovD6YHO
// R_AvgIndivLimitCovD6YProptyP
Report: => G_SetDefault4IndLimitCOVD6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => G_SetDefault4IndLimitCOVD6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitCOVD6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD6Y := MIN(ROUND2(H_AvgIndivLimitCOVD6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE6Y
// R_AvgIndivLimitCovE6YHO
// R_AvgIndivLimitCovE6YProptyP
Report: => G_SetDefault4IndLimitCOVE6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitCOVE6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitCOVE6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE6Y := MIN(ROUND2(H_AvgIndivLimitCOVE6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF6Y
// R_AvgIndivLimitCovF6YHO
// R_AvgIndivLimitCovF6YProptyP
Report: => G_SetDefault4IndLimitCOVF6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitCOVF6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitCOVF6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF6Y := MIN(ROUND2(H_AvgIndivLimitCOVF6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF6YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI6Y
// R_AvgIndivLimitEQKI6YProptyP
Report: => G_SetDefault4IndLimitEQKI6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => G_SetDefault4IndLimitEQKI6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitEQKI6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI6Y := MIN(ROUND2(H_AvgIndivLimitEQKI6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI6YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitERQK6Y
// R_AvgIndivLimitERQK6YProptyP
Report: => G_SetDefault4IndLimitERQK6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitERQK6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitERQK6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK6Y := MIN(ROUND2(H_AvgIndivLimitERQK6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK6YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFARM6Y
Report: => G_SetDefault4IndLimitFARM6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitFARM6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitFARM6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM6Y := MIN(ROUND2(H_AvgIndivLimitFARM6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM6YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFIRA6Y
// R_AvgIndivLimitFIRA6YProptyP
Report: => G_SetDefault4IndLimitFIRA6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitFIRA6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitFIRA6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA6Y := MIN(ROUND2(H_AvgIndivLimitFIRA6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA6YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFLOD6Y
// R_AvgIndivLimitFLOD6YProptyP
Report: => G_SetDefault4IndLimitFLOD6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitFLOD6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitFLOD6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD6Y := MIN(ROUND2(H_AvgIndivLimitFLOD6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD6YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitGRPL6Y
// R_AvgIndivLimitGRPL6YProptyP
Report: => G_SetDefault4IndLimitGRPL6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitGRPL6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitGRPL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL6Y := MIN(ROUND2(H_AvgIndivLimitGRPL6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL6YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHAIL6Y
// R_AvgIndivLimitHAIL6YProptyP
Report: => G_SetDefault4IndLimitHAIL6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitHAIL6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitHAIL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL6Y := MIN(ROUND2(H_AvgIndivLimitHAIL6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL6YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHDCR6Y
// R_AvgIndivLimitHDCR6YProptyP

Report: => G_SetDefault4IndLimitHDCR6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => G_SetDefault4IndLimitHDCR6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitHDCR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR6Y := MIN(ROUND2(H_AvgIndivLimitHDCR6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR6YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHULL6Y
// R_AvgIndivLimitHULL6YProptyP
Report: => G_SetDefault4IndLimitHULL6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitHULL6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitHULL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL6Y := MIN(ROUND2(H_AvgIndivLimitHULL6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL6YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHURR6Y
// R_AvgIndivLimitHURR6YProptyP
Report: => G_SetDefault4IndLimitHURR6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => G_SetDefault4IndLimitHURR6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitHURR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR6Y := MIN(ROUND2(H_AvgIndivLimitHURR6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR6YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitMOLD6Y
// R_AvgIndivLimitMOLD6YProptyP

Report: => G_SetDefault4IndLimitMOLD6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitMOLD6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitMOLD6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD6Y := MIN(ROUND2(H_AvgIndivLimitMOLD6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD6YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOTHR6Y
// R_AvgIndivLimitOTHR6YProptyP

Report: => G_SetDefault4IndLimitOTHR6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitOTHR6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitOTHR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR6Y := MIN(ROUND2(H_AvgIndivLimitOTHR6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR6YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOVRD6Y
// R_AvgIndivLimitOVRD6YProptyP
Report: => G_SetDefault4IndLimitOVRD6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitOVRD6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitOVRD6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD6Y := MIN(ROUND2(H_AvgIndivLimitOVRD6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD6YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD6YProptyP), CAP_99999999_99);


// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC6Y
// R_AvgIndivLimitPPRC6YProptyP

Report: => G_SetDefault4IndLimitPPRC6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitPPRC6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitPPRC6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC6Y := MIN(ROUND2(H_AvgIndivLimitPPRC6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC6YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC6YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP6Y
// R_AvgIndivLimitSCPP6YProptyP

Report: => G_SetDefault4IndLimitSCPP6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitSCPP6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));


Report: => H_AvgIndivLimitSCPP6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP6Y := MIN(ROUND2(H_AvgIndivLimitSCPP6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP6YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitSINK6Y
// R_AvgIndivLimitSINK6YProptyP

Report: => G_SetDefault4IndLimitSINK6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitSINK6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitSINK6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK6Y := MIN(ROUND2(H_AvgIndivLimitSINK6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK6YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD6Y
// R_AvgIndivLimitTHTD6YProptyP

Report: => G_SetDefault4IndLimitTHTD6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitTHTD6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitTHTD6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD6Y := MIN(ROUND2(H_AvgIndivLimitTHTD6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD6YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitUMBR6Y
// R_AvgIndivLimitUMBR6YProptyP

Report: => G_SetDefault4IndLimitUMBR6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitUMBR6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitUMBR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR6Y := MIN(ROUND2(H_AvgIndivLimitUMBR6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR6YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWDHL6Y
// R_AvgIndivLimitWDHL6YProptyP

Report: => G_SetDefault4IndLimitWDHL6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitWDHL6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitWDHL6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL6Y := MIN(ROUND2(H_AvgIndivLimitWDHL6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL6YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL6YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND6Y
// R_AvgIndivLimitWIND6YProptyP

Report: => G_SetDefault4IndLimitWIND6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitWIND6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitWIND6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND6Y := MIN(ROUND2(H_AvgIndivLimitWIND6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND6YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX6Y
// R_AvgIndivLimitWINX6YProptyP
Report: => G_SetDefault4IndLimitWINX6Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));
Report: => G_SetDefault4IndLimitWINX6YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72));

Report: => H_AvgIndivLimitWINX6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX6Y := MIN(ROUND2(H_AvgIndivLimitWINX6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX6YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX6YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWTCR6Y
// R_AvgIndivLimitWTCR6YProptyP


Report: => H_AvgIndivLimitWTCR6Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR6Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR6Y := MIN(ROUND2(H_AvgIndivLimitWTCR6Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR6YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR6YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 72),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR6YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR6YProptyP), CAP_99999999_99);

//7 year
//1 YEAR
Report: => H_CntCancelledPol7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                      G_SetDefault3 => DEFAULT_3, 
                                      COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol7Y := MIN(H_CntCancelledPol7Y,CAP_999);     

Report: => H_CntCancelledPol7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol7YHO := MIN(H_CntCancelledPol7YHO,CAP_999);     


Report: => H_CntCancelledPol7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2ProptyP => DEFAULT_2,
                                        G_SetDefault3ProptyP => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol7YProptyP := MIN(H_CntCancelledPol7YProptyP,CAP_999);       

Report: => H_CntCancelledPol7YRiskP := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskP => DEFAULT_2,
                                           G_SetDefault3RiskP => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypePreferred AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol7YRiskP := MIN(H_CntCancelledPol7YRiskP,CAP_999);       

Report: => H_CntCancelledPol7YRiskS := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2RiskS => DEFAULT_2,
                                           G_SetDefault3RiskS => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND NOT CancellationDate:Null AND G_RiskTypeStandard AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCancelledPol7YRiskS := MIN(H_CntCancelledPol7YRiskS,CAP_999);

// I_CntDerogCancellation7Y
// I_CntDerogCancellation7YHO
// I_CntDerogCancellation7YProptyP                                                                           
Report: => H_CntDerogCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                         G_SetDefault3 => DEFAULT_3, 
                                         G_SetDefault4_Derog => DEFAULT_4,
                                         COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0))));
Report: => I_CntDerogCancellation7Y := MIN(H_CntDerogCancellation7Y, CAP_999);

Report: => H_CntDerogCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault2HO => DEFAULT_2,
                                           G_SetDefault3HO => DEFAULT_3, 
                                           G_SetDefault4_DerogHO => DEFAULT_4,
                                          COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0) AND G_HOPolicy)));
Report: => I_CntDerogCancellation7YHO := MIN(H_CntDerogCancellation7YHO,CAP_9999);

Report: => H_CntDerogCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 G_SetDefault2ProptyP => DEFAULT_2,
                                                 G_SetDefault3ProptyP => DEFAULT_3, 
                                                 G_SetDefault4_DerogProptyP => DEFAULT_4,
                                                 COUNT(Policy(G_CountablePolicy AND (G_DerogPolicy OR G_ExpiredPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0) AND G_PrimaryProperty)));
Report: => I_CntDerogCancellation7YProptyP := MIN(H_CntDerogCancellation7YProptyP,CAP_9999);
                                                              
Report: => H_CntCOMPCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation7Y := MIN(H_CntCOMPCancellation7Y, CAP_999);

Report: => H_CntCOMPCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation7YHO := MIN(H_CntCOMPCancellation7YHO,CAP_9999);

Report: => H_CntCOMPCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_COMPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCOMPCancellation7YProptyP := MIN(H_CntCOMPCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntCPLCCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation7Y := MIN(H_CntCPLCCancellation7Y, CAP_999);

Report: => H_CntCPLCCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation7YHO := MIN(H_CntCPLCCancellation7YHO,CAP_9999);

Report: => H_CntCPLCCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CPLCPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCPLCCancellation7YProptyP := MIN(H_CntCPLCCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntCUSTCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation7Y := MIN(H_CntCUSTCancellation7Y, CAP_999);

Report: => H_CntCUSTCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation7YHO := MIN(H_CntCUSTCancellation7YHO,CAP_9999);

Report: => H_CntCUSTCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_CUSTPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntCUSTCancellation7YProptyP := MIN(H_CntCUSTCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntLAPSCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation7Y := MIN(H_CntLAPSCancellation7Y, CAP_999);

Report: => H_CntLAPSCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation7YHO := MIN(H_CntLAPSCancellation7YHO,CAP_9999);

Report: => H_CntLAPSCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_LAPSPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntLAPSCancellation7YProptyP := MIN(H_CntLAPSCancellation7YProptyP,CAP_9999);


                                                                
Report: => H_CntMISRCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation7Y := MIN(H_CntMISRCancellation7Y, CAP_999);

Report: => H_CntMISRCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation7YHO := MIN(H_CntMISRCancellation7YHO,CAP_9999);

Report: => H_CntMISRCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_MISRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntMISRCancellation7YProptyP := MIN(H_CntMISRCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntNONPCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation7Y := MIN(H_CntNONPCancellation7Y, CAP_999);

Report: => H_CntNONPCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation7YHO := MIN(H_CntNONPCancellation7YHO,CAP_9999);

Report: => H_CntNONPCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NONPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNONPCancellation7YProptyP := MIN(H_CntNONPCancellation7YProptyP,CAP_9999);


                                                                
Report: => H_CntNYDICancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation7Y := MIN(H_CntNYDICancellation7Y, CAP_999);

Report: => H_CntNYDICancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation7YHO := MIN(H_CntNYDICancellation7YHO,CAP_9999);

Report: => H_CntNYDICancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYDIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYDICancellation7YProptyP := MIN(H_CntNYDICancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntNYSICancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation7Y := MIN(H_CntNYSICancellation7Y, CAP_999);

Report: => H_CntNYSICancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation7YHO := MIN(H_CntNYSICancellation7YHO,CAP_9999);

Report: => H_CntNYSICancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_NYSIPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntNYSICancellation7YProptyP := MIN(H_CntNYSICancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntOTHRCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation7Y := MIN(H_CntOTHRCancellation7Y, CAP_999);

Report: => H_CntOTHRCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation7YHO := MIN(H_CntOTHRCancellation7YHO,CAP_9999);

Report: => H_CntOTHRCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_OTHRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntOTHRCancellation7YProptyP := MIN(H_CntOTHRCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntPROPCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation7Y := MIN(H_CntPROPCancellation7Y, CAP_999);

Report: => H_CntPROPCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation7YHO := MIN(H_CntPROPCancellation7YHO,CAP_9999);

Report: => H_CntPROPCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_PROPPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntPROPCancellation7YProptyP := MIN(H_CntPROPCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntREWRCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation7Y := MIN(H_CntREWRCancellation7Y, CAP_999);

Report: => H_CntREWRCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation7YHO := MIN(H_CntREWRCancellation7YHO,CAP_9999);

Report: => H_CntREWRCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_REWRPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntREWRCancellation7YProptyP := MIN(H_CntREWRCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntRTCKCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation7Y := MIN(H_CntRTCKCancellation7Y, CAP_999);

Report: => H_CntRTCKCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation7YHO := MIN(H_CntRTCKCancellation7YHO,CAP_9999);

Report: => H_CntRTCKCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_RTCKPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntRTCKCancellation7YProptyP := MIN(H_CntRTCKCancellation7YProptyP,CAP_9999);

                                                                
Report: => H_CntSOLDCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation7Y := MIN(H_CntSOLDCancellation7Y, CAP_999);

Report: => H_CntSOLDCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation7YHO := MIN(H_CntSOLDCancellation7YHO,CAP_9999);

Report: => H_CntSOLDCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_SOLDPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntSOLDCancellation7YProptyP := MIN(H_CntSOLDCancellation7YProptyP,CAP_9999);
                                                                
Report: => H_CntTRANCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        G_SetDefault4_CancelReason  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation7Y := MIN(H_CntTRANCancellation7Y, CAP_999);

Report: => H_CntTRANCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault2HO => DEFAULT_2,
                                        G_SetDefault3HO => DEFAULT_3, 
                                        G_SetDefault4_CancelReasonHO  => DEFAULT_4,
                                        COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation7YHO := MIN(H_CntTRANCancellation7YHO,CAP_9999);

Report: => H_CntTRANCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                G_SetDefault4_CancelReasonProptyP  => DEFAULT_4,
                                                COUNT(Policy(G_CountablePolicy AND G_TRANPolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0)));
Report: => I_CntTRANCancellation7YProptyP := MIN(H_CntTRANCancellation7YProptyP,CAP_9999);

// I_CntProptyCancellation7Y
// I_CntProptyCancellation7YHO
Report: => H_CntProptyCancellation7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 84)));
Report: => I_CntProptyCancellation7Y := MIN(H_CntProptyCancellation7Y,CAP_999);

Report: => H_CntProptyCancellation7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2HO => DEFAULT_2,
                                              G_SetDefault3HO => DEFAULT_3, 
                                              COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_HOPolicy AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 84)));
Report: => I_CntProptyCancellation7YHO := MIN(H_CntProptyCancellation7YHO,CAP_999);

Report: => H_CntProptyCancellation7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                                                G_SetDefault2ProptyP => DEFAULT_2,
                                                                                G_SetDefault3ProptyP => DEFAULT_3, 
                                                                                COUNT(Policy(G_CountablePolicy AND PropertyCanlletion AND G_PrimaryProperty AND G_MOSPropertyCancellation >= 0 AND G_MOSPropertyCancellation < 84)));
Report: => I_CntProptyCancellation7YProptyP := MIN(H_CntProptyCancellation7YProptyP,CAP_999);

// I_CntProptyWithFinTypeFM7Y
// I_CntProptyWithFinTypeFM7YHO
// I_CntProptyWithFinTypeFM7YProptyP
Report: => H_CntProptyWithFinTypeFM7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM7Y := MIN(H_CntProptyWithFinTypeFM7Y, CAP_999);

Report: => H_CntProptyWithFinTypeFM7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM7YHO := MIN(H_CntProptyWithFinTypeFM7YHO, CAP_999);

Report: => H_CntProptyWithFinTypeFM7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_FM{UID}));
Report: => I_CntProptyWithFinTypeFM7YProptyP := MIN(H_CntProptyWithFinTypeFM7YProptyP, CAP_999);

// I_CntProptyWithFinTypeSM7Y
// I_CntProptyWithFinTypeSM7YHO
// I_CntProptyWithFinTypeSM7YProptyP

Report: => H_CntProptyWithFinTypeSM7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM7Y := MIN(H_CntProptyWithFinTypeSM7Y, CAP_999);

Report: => H_CntProptyWithFinTypeSM7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM7YHO := MIN(H_CntProptyWithFinTypeSM7YHO, CAP_999);

Report: => H_CntProptyWithFinTypeSM7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_SM{UID}));
Report: => I_CntProptyWithFinTypeSM7YProptyP := MIN(H_CntProptyWithFinTypeSM7YProptyP, CAP_999);

// I_CntProptyWithFinTypeOthers7Y
// I_CntProptyWithFinTypeOthers7YHO
// I_CntProptyWithFinTypeOthers7YProptyP
// I_CntProptyWithFinTypeOthers7Y
// I_CntProptyWithFinTypeOthers7YHO
// I_CntProptyWithFinTypeOthers7YProptyP
Report: => H_CntProptyWithFinTypeOthers7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers7Y := MIN(H_CntProptyWithFinTypeOthers7Y, CAP_999);

Report: => H_CntProptyWithFinTypeOthers7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers7YHO := MIN(H_CntProptyWithFinTypeOthers7YHO, CAP_999);

Report: => H_CntProptyWithFinTypeOthers7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2ProptyP => DEFAULT_2,
                                              G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID_Others{UID}));
Report: => I_CntProptyWithFinTypeOthers7YProptyP := MIN(H_CntProptyWithFinTypeOthers7YProptyP, CAP_999);

// I_CntDistFinType7Y
// I_CntDistFinType7YHO
// I_CntDistFinType7YProptyP
Report: => H_CntDistFinType7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType7Y := MIN(H_CntDistFinType7Y, CAP_999);    

Report: => H_CntDistFinType7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2HO => DEFAULT_2,
                                            G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType7YHO := MIN(H_CntDistFinType7YHO, CAP_999);  

Report: => H_CntDistFinType7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_FinanceTypes{FinanceType}));
Report: => I_CntDistFinType7YProptyP := MIN(H_CntDistFinType7YProptyP, CAP_999);

// I_CntFinCompany7Y
// I_CntFinCompany7YHO
// I_CntFinCompany7YProptyP

// Report: => H_CntFinCompany7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault3 => DEFAULT_3, 
                                  // COUNT(Policy(G_CountablePolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany7Y := MIN(H_CntFinCompany7Y, CAP_999);            

// Report: => H_CntFinCompany7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                    // G_SetDefault2HO => DEFAULT_2,
                                    // G_SetDefault3HO => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany7YHO := MIN(H_CntFinCompany7YHO, CAP_999);      

// Report: => H_CntFinCompany7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                                 // G_SetDefault2ProptyP => DEFAULT_2,
                                                 // G_SetDefault3ProptyP => DEFAULT_3, 
                              // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSPolicyCancelled < 84 AND G_MOSPolicyCancelled >= 0).H_FinanceTypes{FinanceType}));
// Report: => I_CntFinCompany7YProptyP := MIN(H_CntFinCompany7YProptyP, CAP_999);     

// I_CntPropty7Y
// I_CntPropty7YHO
Report: => H_CntPropty7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                G_SetDefault3 => DEFAULT_3, 
                                COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID{UID}));
Report: => I_CntPropty7Y := MIN(H_CntPropty7Y, CAP_999);

Report: => H_CntPropty7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).PropertyID{UID}));
Report: => I_CntPropty7YHO := MIN(H_CntPropty7YHO, CAP_999);

// I_CntDistProptyType7Y
Report: => H_CntDistProptyType7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_PropertyType{PropertyType}));
Report: => I_CntDistProptyType7Y := MIN(H_CntDistProptyType7Y, CAP_999);

// I_CntPolProptyTypeOther7Y
// I_CntPolProptyTypeOther7YHO
Report: => H_CntPolProptyTypeOther7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault3 => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypeOther7Y := MIN(H_CntPolProptyTypeOther7Y, CAP_999);

Report: => H_CntPolProptyTypeOther7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                              G_SetDefault2HO => DEFAULT_2,
                                              G_SetDefault3HO => DEFAULT_3, 
                                              COUNT(Policy(G_CountablePolicy AND G_OthersProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypeOther7YHO := MIN(H_CntPolProptyTypeOther7YHO, CAP_999);

// I_CntPolProptyTypePrim7Y
// I_CntPolProptyTypePrim7YHO
Report: => H_CntPolProptyTypePrim7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                           G_SetDefault3 => DEFAULT_3, 
                                           COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypePrim7Y := MIN(H_CntPolProptyTypePrim7Y, CAP_999);

Report: => H_CntPolProptyTypePrim7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault2HO => DEFAULT_2,
                                             G_SetDefault3HO => DEFAULT_3, 
                                             COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypePrim7YHO := MIN(H_CntPolProptyTypePrim7YHO, CAP_999);

// I_CntPolProptyTypeSecond7Y
// I_CntPolProptyTypeSecond7YHO
Report: => H_CntPolProptyTypeSecond7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                             G_SetDefault3 => DEFAULT_3, 
                                             COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypeSecond7Y := MIN(H_CntPolProptyTypeSecond7Y, CAP_999);

Report: => H_CntPolProptyTypeSecond7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                               G_SetDefault2HO => DEFAULT_2,
                                               G_SetDefault3HO => DEFAULT_3, 
                                               COUNT(Policy(G_CountablePolicy AND G_SecondaryProperty AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84)));
Report: => I_CntPolProptyTypeSecond7YHO := MIN(H_CntPolProptyTypeSecond7YHO, CAP_999);

Report: => H_CntDistPoltype7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                     G_SetDefault3 => DEFAULT_3, 
                                     COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype7Y := MIN(H_CntDistPoltype7Y,CAP_999);

Report: => H_CntDistPoltype7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                            G_SetDefault2ProptyP => DEFAULT_2,
                                            G_SetDefault3ProptyP => DEFAULT_3, 
                                            COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0){PolicyType}));
Report: => I_CntDistPoltype7YProptyP := MIN(H_CntDistPoltype7YProptyP,CAP_999);

// I_CntPolOfHO7Y
// I_CntPolOfHO7YProptyP
Report: => H_CntPolOfHO7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO7Y := MIN(H_CntPolOfHO7Y,CAP_999);

Report: => H_CntPolOfHO7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HO)));
Report: => I_CntPolOfHO7YProptyP := MIN(H_CntPolOfHO7YProptyP,CAP_999);


// I_CntPolOfCO7Y
// I_CntPolOfCO7YProptyP
Report: => H_CntPolOfCO7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO7Y := MIN(H_CntPolOfCO7Y,CAP_999);

Report: => H_CntPolOfCO7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_CO)));
Report: => I_CntPolOfCO7YProptyP := MIN(H_CntPolOfCO7YProptyP,CAP_999);

// I_CntPolOfFL7Y
// I_CntPolOfFL7YProptyP
Report: => H_CntPolOfFL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL7Y := MIN(H_CntPolOfFL7Y,CAP_999);

Report: => H_CntPolOfFL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FL)));
Report: => I_CntPolOfFL7YProptyP := MIN(H_CntPolOfFL7YProptyP,CAP_999);

// I_CntPolOfFR7Y
// I_CntPolOfFR7YProptyP
Report: => H_CntPolOfFR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR7Y := MIN(H_CntPolOfFR7Y,CAP_999);

Report: => H_CntPolOfFR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_FR)));
Report: => I_CntPolOfFR7YProptyP := MIN(H_CntPolOfFR7YProptyP,CAP_999);

// I_CntPolOfHL7Y
// I_CntPolOfHL7YProptyP
Report: => H_CntPolOfHL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL7Y := MIN(H_CntPolOfHL7Y,CAP_999);

Report: => H_CntPolOfHL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_HL)));
Report: => I_CntPolOfHL7YProptyP := MIN(H_CntPolOfHL7YProptyP,CAP_999);

// I_CntPolOfIM7Y
// I_CntPolOfIM7YProptyP
Report: => H_CntPolOfIM7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM7Y := MIN(H_CntPolOfIM7Y,CAP_999);

Report: => H_CntPolOfIM7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_IM)));
Report: => I_CntPolOfIM7YProptyP := MIN(H_CntPolOfIM7YProptyP,CAP_999);

// I_CntPolOfMH7Y
// I_CntPolOfMH7YProptyP
Report: => H_CntPolOfMH7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH7Y := MIN(H_CntPolOfMH7Y,CAP_999);

Report: => H_CntPolOfMH7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_MH)));
Report: => I_CntPolOfMH7YProptyP := MIN(H_CntPolOfMH7YProptyP,CAP_999);

// I_CntPolOfQK7Y
// I_CntPolOfQK7YProptyP
Report: => H_CntPolOfQK7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK7Y := MIN(H_CntPolOfQK7Y,CAP_999);

Report: => H_CntPolOfQK7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_QK)));
Report: => I_CntPolOfQK7YProptyP := MIN(H_CntPolOfQK7YProptyP,CAP_999);

// I_CntPolOfRF7Y
// I_CntPolOfRF7YProptyP
Report: => H_CntPolOfRF7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF7Y := MIN(H_CntPolOfRF7Y,CAP_999);

Report: => H_CntPolOfRF7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_RF)));
Report: => I_CntPolOfRF7YProptyP := MIN(H_CntPolOfRF7YProptyP,CAP_999);

// I_CntPolOfTN7Y
// I_CntPolOfTN7YProptyP
Report: => H_CntPolOfTN7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN7Y := MIN(H_CntPolOfTN7Y,CAP_999);

Report: => H_CntPolOfTN7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_TN)));
Report: => I_CntPolOfTN7YProptyP := MIN(H_CntPolOfTN7YProptyP,CAP_999);

// I_CntPolOfUM7Y
// I_CntPolOfUM7YProptyP
Report: => H_CntPolOfUM7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM7Y := MIN(H_CntPolOfUM7Y,CAP_999);

Report: => H_CntPolOfUM7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_UM)));
Report: => I_CntPolOfUM7YProptyP := MIN(H_CntPolOfUM7YProptyP,CAP_999);

// I_CntPolOfWC7Y
// I_CntPolOfWC7YProptyP
Report: => H_CntPolOfWC7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC7Y := MIN(H_CntPolOfWC7Y,CAP_999);

Report: => H_CntPolOfWC7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND (PolicyType IN C_POLICYTYPE_WC OR PolicyType IN C_POLICYTYPE_BO))));
Report: => I_CntPolOfWC7YProptyP := MIN(H_CntPolOfWC7YProptyP,CAP_999);

// I_CntPolOfXO7Y
// I_CntPolOfXO7YProptyP
Report: => H_CntPolOfXO7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO7Y := MIN(H_CntPolOfXO7Y,CAP_999);

Report: => H_CntPolOfXO7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND PolicyType IN C_POLICYTYPE_XO)));
Report: => I_CntPolOfXO7YProptyP := MIN(H_CntPolOfXO7YProptyP,CAP_999);

//Distinct Coverage type
// I_CntDistCOV
// I_CntDistCOV7Y
// I_CntDistCOV7YHO
// I_CntDistCOV7YProptyP

Report: => H_CntDistCOV7Y := MAP(G_SetDefault1  => DEFAULT_1,
                              G_SetDefault3 => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV7Y := MIN(H_CntDistCOV7Y, CAP_999);    


Report: => H_CntDistCOV7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV7YHO := MIN(H_CntDistCOV7YHO, CAP_999);   
 
Report: => H_CntDistCOV7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                              COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CovrageTypes{CoverageType}));
Report: => I_CntDistCOV7YProptyP := MIN(H_CntDistCOV7YProptyP, CAP_999);    


//Coverage package:
// I_CntDistPackageType7Y
// I_CntDistPackageType7YHO
// I_CntDistPackageType7YProptyP
Report: => G_CoveragePackages7Y := TOPN(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages7YHO := TOPN(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);
Report: => G_CoveragePackages7YProptyP := TOPN(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_CoverageTypesDelimited{CoverageTypesDelimited},100,CoverageTypesDelimited);

Report: => H_CntDistPackageType7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages7Y));
Report: => I_CntDistPackageType7Y := MIN(H_CntDistPackageType7Y, CAP_999);

Report: => H_CntDistPackageType7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages7YHO));
Report: => I_CntDistPackageType7YHO := MIN(H_CntDistPackageType7YHO, CAP_999);

Report: => H_CntDistPackageType7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                        // COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84){CoveragePackageDelimited}));
                                        COUNT(G_CoveragePackages7YProptyP));
Report: => I_CntDistPackageType7YProptyP := MIN(H_CntDistPackageType7YProptyP, CAP_999);

//Risk type
Report: => H_CntDistRisk7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk7Y := MIN(H_CntDistRisk7Y, CAP_999);

Report: => H_CntDistRisk7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk7YHO := MIN(H_CntDistRisk7YHO, CAP_999);

Report: => H_CntDistRisk7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0){RiskType}));
Report: => I_CntDistRisk7YProptyP := MIN(H_CntDistRisk7YProptyP, CAP_999);

//RiskTypeStandard
Report: => H_CntPolRiskStandard7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard7Y := MIN(H_CntPolRiskStandard7Y, CAP_999);

Report: => H_CntPolRiskStandard7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard7YHO := MIN(H_CntPolRiskStandard7YHO, CAP_999);

Report: => H_CntPolRiskStandard7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeStandard)));
Report: => I_CntPolRiskStandard7YProptyP := MIN(H_CntPolRiskStandard7YProptyP, CAP_999);

//RiskTypePreferred
Report: => H_CntPolRiskPreferred7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred7Y := MIN(H_CntPolRiskPreferred7Y, CAP_999);

Report: => H_CntPolRiskPreferred7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred7YHO := MIN(H_CntPolRiskPreferred7YHO, CAP_999);

Report: => H_CntPolRiskPreferred7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypePreferred)));
Report: => I_CntPolRiskPreferred7YProptyP := MIN(H_CntPolRiskPreferred7YProptyP, CAP_999);

Report: => H_CntPolRiskOthers7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault3 => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers7Y := MIN(H_CntPolRiskOthers7Y, CAP_999);

Report: => H_CntPolRiskOthers7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers7YHO := MIN(H_CntPolRiskOthers7YHO, CAP_999);

Report: => H_CntPolRiskOthers7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                       G_SetDefault2ProptyP => DEFAULT_2,
                                       G_SetDefault3ProptyP => DEFAULT_3, 
                                  COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0 AND G_RiskTypeOthers)));
Report: => I_CntPolRiskOthers7YProptyP := MIN(H_CntPolRiskOthers7YProptyP, CAP_999);


Report: => H_CntFloodZonePol7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol7Y := MIN(H_CntFloodZonePol7Y, CAP_999);

Report: => H_CntFloodZonePol7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_ExistFLZone AND G_PrimaryProperty AND G_MOSSubjectEndDate < 84 AND G_MOSSubjectEndDate >= 0)));
Report: => I_CntFloodZonePol7YProptyP := MIN(H_CntFloodZonePol7YProptyP, CAP_999);

//distinct flood zone
// I_CntFloodZoneType
// I_CntFloodZoneType7Y
// I_CntFloodZoneType7YProptyP

Report: => H_CntFloodZoneType7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                        G_SetDefault3 => DEFAULT_3, 
                                        COUNT(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType7Y := MIN(H_CntFloodZoneType7Y, CAP_999);


Report: => H_CntFloodZoneType7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          COUNT(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84).H_FloodZone{FloodZone}));
Report: => I_CntFloodZoneType7YProptyP := MIN(H_CntFloodZoneType7YProptyP, CAP_999);

//Deduct
// R_AvgOverallDeduct7Y
// R_AvgOverallDeduct7YHO
// R_AvgOverallDeduct7YProptyP
// R_AvgTheftDeduct7Y
// R_AvgTheftDeduct7YHO
// R_AvgTheftDeduct7YProptyP
Report: => G_SetDefault4TheftDeduct7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4OverallDeduct7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4TheftDeduct7YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4OverallDeduct7YHO := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4TheftDeduct7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT TheftDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4OverallDeduct7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT OverallDeductible:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgTheftDeduct7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3, 
                                    G_SetDefault4TheftDeduct7Y => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),TheftDeductible));
Report: => R_AvgTheftDeduct7Y := MIN(ROUND2(H_AvgTheftDeduct7Y), CAP_99999999_99);

Report: => H_AvgTheftDeduct7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3, 
                                  G_SetDefault4TheftDeduct7YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),TheftDeductible));
Report: => R_AvgTheftDeduct7YHO := MIN(ROUND2(H_AvgTheftDeduct7YHO), CAP_99999999_99);

Report: => H_AvgTheftDeduct7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3, 
                                  G_SetDefault4TheftDeduct7YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),TheftDeductible));
Report: => R_AvgTheftDeduct7YProptyP := MIN(ROUND2(H_AvgTheftDeduct7YProptyP), CAP_99999999_99);

Report: => H_AvgOverallDeduct7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4OverallDeduct7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),OverallDeductible));
Report: => R_AvgOverallDeduct7Y := MIN(ROUND2(H_AvgOverallDeduct7Y), CAP_99999999_99);

Report: => H_AvgOverallDeduct7YHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2HO => DEFAULT_2,
                                  G_SetDefault3HO => DEFAULT_3,  
                                  G_SetDefault4OverallDeduct7YHO => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),OverallDeductible));
Report: => R_AvgOverallDeduct7YHO := MIN(ROUND2(H_AvgOverallDeduct7YHO), CAP_99999999_99);

Report: => H_AvgOverallDeduct7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                  G_SetDefault2ProptyP => DEFAULT_2,
                                  G_SetDefault3ProptyP => DEFAULT_3,  
                                  G_SetDefault4OverallDeduct7YProptyP => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),OverallDeductible));
Report: => R_AvgOverallDeduct7YProptyP := MIN(ROUND2(H_AvgOverallDeduct7YProptyP), CAP_99999999_99);

Report: => G_SetDefault4IndLimit7YHO := NOT EXISTS(Policy(G_CountablePolicy AND G_FLPolicy AND NOT AvgIndividualLimit:Null AND G_HOPolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

//Coverage limit for each coverage type
// R_AvgIndivLimitBUSPProptyP
// R_AvgIndivLimitBUSP7Y
// R_AvgIndivLimitBUSP7YProptyP
Report: => G_SetDefault4IndLimitBUSP7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitBUSP7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitBUSP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitBUSP7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitBUSP7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP7Y := MIN(ROUND2(H_AvgIndivLimitBUSP7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitBUSP7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
										  G_SetDefault4IndLimitBUSP7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitBUSP));
Report: => R_AvgIndivLimitBUSP7YProptyP := MIN(ROUND2(H_AvgIndivLimitBUSP7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovA7Y
// R_AvgIndivLimitCovA7YHO
// R_AvgIndivLimitCovA7YProptyP
Report: => G_SetDefault4IndLimitCOVA7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitCOVA7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitCOVA7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVA7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA7Y := MIN(ROUND2(H_AvgIndivLimitCOVA7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVA7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVA7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVA));
Report: => R_AvgIndivLimitCOVA7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVA7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovB7Y
// R_AvgIndivLimitCovB7YHO
// R_AvgIndivLimitCovB7YProptyP
Report: => G_SetDefault4IndLimitCOVB7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitCOVB7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVB:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitCOVB7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVB7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB7Y := MIN(ROUND2(H_AvgIndivLimitCOVB7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVB7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVB7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVB));
Report: => R_AvgIndivLimitCOVB7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVB7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovC7Y
// R_AvgIndivLimitCovC7YHO
// R_AvgIndivLimitCovC7YProptyP
Report: => G_SetDefault4IndLimitCOVC7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitCOVC7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => H_AvgIndivLimitCOVC7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVC7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC7Y := MIN(ROUND2(H_AvgIndivLimitCOVC7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVC7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVC7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVC));
Report: => R_AvgIndivLimitCOVC7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVC7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovD7Y
// R_AvgIndivLimitCovD7YHO
// R_AvgIndivLimitCovD7YProptyP
Report: => G_SetDefault4IndLimitCOVD7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => G_SetDefault4IndLimitCOVD7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitCOVD7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVD7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD7Y := MIN(ROUND2(H_AvgIndivLimitCOVD7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVD7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVD7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVD));
Report: => R_AvgIndivLimitCOVD7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVD7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovE7Y
// R_AvgIndivLimitCovE7YHO
// R_AvgIndivLimitCovE7YProptyP
Report: => G_SetDefault4IndLimitCOVE7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitCOVE7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVE:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitCOVE7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVE7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE7Y := MIN(ROUND2(H_AvgIndivLimitCOVE7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVE7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVE7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVE));
Report: => R_AvgIndivLimitCOVE7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVE7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitCovF7Y
// R_AvgIndivLimitCovF7YHO
// R_AvgIndivLimitCovF7YProptyP
Report: => G_SetDefault4IndLimitCOVF7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitCOVF7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitCOVF:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitCOVF7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitCOVF7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF7Y := MIN(ROUND2(H_AvgIndivLimitCOVF7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitCOVF7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitCOVF7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitCOVF));
Report: => R_AvgIndivLimitCOVF7YProptyP := MIN(ROUND2(H_AvgIndivLimitCOVF7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitEQKI7Y
// R_AvgIndivLimitEQKI7YProptyP
Report: => G_SetDefault4IndLimitEQKI7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => G_SetDefault4IndLimitEQKI7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitEQKI:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitEQKI7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitEQKI7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI7Y := MIN(ROUND2(H_AvgIndivLimitEQKI7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitEQKI7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitEQKI7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitEQKI));
Report: => R_AvgIndivLimitEQKI7YProptyP := MIN(ROUND2(H_AvgIndivLimitEQKI7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitERQK7Y
// R_AvgIndivLimitERQK7YProptyP
Report: => G_SetDefault4IndLimitERQK7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitERQK7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitERQK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitERQK7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitERQK7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK7Y := MIN(ROUND2(H_AvgIndivLimitERQK7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitERQK7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitERQK7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitERQK));
Report: => R_AvgIndivLimitERQK7YProptyP := MIN(ROUND2(H_AvgIndivLimitERQK7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFARM7Y
Report: => G_SetDefault4IndLimitFARM7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitFARM7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFARM:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitFARM7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFARM7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM7Y := MIN(ROUND2(H_AvgIndivLimitFARM7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFARM7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFARM7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFARM));
Report: => R_AvgIndivLimitFARM7YProptyP := MIN(ROUND2(H_AvgIndivLimitFARM7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFIRA7Y
// R_AvgIndivLimitFIRA7YProptyP
Report: => G_SetDefault4IndLimitFIRA7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitFIRA7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFIRA:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitFIRA7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFIRA7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA7Y := MIN(ROUND2(H_AvgIndivLimitFIRA7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFIRA7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFIRA7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFIRA));
Report: => R_AvgIndivLimitFIRA7YProptyP := MIN(ROUND2(H_AvgIndivLimitFIRA7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitFLOD7Y
// R_AvgIndivLimitFLOD7YProptyP
Report: => G_SetDefault4IndLimitFLOD7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitFLOD7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitFLOD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitFLOD7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitFLOD7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD7Y := MIN(ROUND2(H_AvgIndivLimitFLOD7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitFLOD7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitFLOD7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitFLOD));
Report: => R_AvgIndivLimitFLOD7YProptyP := MIN(ROUND2(H_AvgIndivLimitFLOD7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitGRPL7Y
// R_AvgIndivLimitGRPL7YProptyP
Report: => G_SetDefault4IndLimitGRPL7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitGRPL7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitGRPL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitGRPL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitGRPL7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL7Y := MIN(ROUND2(H_AvgIndivLimitGRPL7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitGRPL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitGRPL7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitGRPL));
Report: => R_AvgIndivLimitGRPL7YProptyP := MIN(ROUND2(H_AvgIndivLimitGRPL7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHAIL7Y
// R_AvgIndivLimitHAIL7YProptyP
Report: => G_SetDefault4IndLimitHAIL7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitHAIL7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHAIL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitHAIL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHAIL7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL7Y := MIN(ROUND2(H_AvgIndivLimitHAIL7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHAIL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHAIL7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHAIL));
Report: => R_AvgIndivLimitHAIL7YProptyP := MIN(ROUND2(H_AvgIndivLimitHAIL7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHDCR7Y
// R_AvgIndivLimitHDCR7YProptyP

Report: => G_SetDefault4IndLimitHDCR7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => G_SetDefault4IndLimitHDCR7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHDCR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitHDCR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHDCR7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR7Y := MIN(ROUND2(H_AvgIndivLimitHDCR7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHDCR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHDCR7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHDCR));
Report: => R_AvgIndivLimitHDCR7YProptyP := MIN(ROUND2(H_AvgIndivLimitHDCR7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHULL7Y
// R_AvgIndivLimitHULL7YProptyP
Report: => G_SetDefault4IndLimitHULL7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitHULL7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHULL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitHULL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHULL7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL7Y := MIN(ROUND2(H_AvgIndivLimitHULL7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHULL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHULL7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHULL));
Report: => R_AvgIndivLimitHULL7YProptyP := MIN(ROUND2(H_AvgIndivLimitHULL7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitHURR7Y
// R_AvgIndivLimitHURR7YProptyP
Report: => G_SetDefault4IndLimitHURR7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => G_SetDefault4IndLimitHURR7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitHURR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitHURR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitHURR7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR7Y := MIN(ROUND2(H_AvgIndivLimitHURR7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitHURR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitHURR7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitHURR));
Report: => R_AvgIndivLimitHURR7YProptyP := MIN(ROUND2(H_AvgIndivLimitHURR7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitMOLD7Y
// R_AvgIndivLimitMOLD7YProptyP

Report: => G_SetDefault4IndLimitMOLD7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitMOLD7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitMOLD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitMOLD7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitMOLD7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD7Y := MIN(ROUND2(H_AvgIndivLimitMOLD7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitMOLD7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitMOLD7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitMOLD));
Report: => R_AvgIndivLimitMOLD7YProptyP := MIN(ROUND2(H_AvgIndivLimitMOLD7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOTHR7Y
// R_AvgIndivLimitOTHR7YProptyP

Report: => G_SetDefault4IndLimitOTHR7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitOTHR7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOTHR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitOTHR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOTHR7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR7Y := MIN(ROUND2(H_AvgIndivLimitOTHR7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOTHR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOTHR7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitOTHR));
Report: => R_AvgIndivLimitOTHR7YProptyP := MIN(ROUND2(H_AvgIndivLimitOTHR7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitOVRD7Y
// R_AvgIndivLimitOVRD7YProptyP
Report: => G_SetDefault4IndLimitOVRD7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitOVRD7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitOVRD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitOVRD7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitOVRD7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD7Y := MIN(ROUND2(H_AvgIndivLimitOVRD7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitOVRD7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitOVRD7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitOVRD));
Report: => R_AvgIndivLimitOVRD7YProptyP := MIN(ROUND2(H_AvgIndivLimitOVRD7YProptyP), CAP_99999999_99);


// R_AvgIndivLimitPPRC
// R_AvgIndivLimitPPRC7Y
// R_AvgIndivLimitPPRC7YProptyP

Report: => G_SetDefault4IndLimitPPRC7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitPPRC7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitPPRC:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitPPRC7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitPPRC7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC7Y := MIN(ROUND2(H_AvgIndivLimitPPRC7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitPPRC7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitPPRC7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitPPRC));
Report: => R_AvgIndivLimitPPRC7YProptyP := MIN(ROUND2(H_AvgIndivLimitPPRC7YProptyP), CAP_99999999_99);


// R_AvgIndivLimitSCPP
// R_AvgIndivLimitSCPP7Y
// R_AvgIndivLimitSCPP7YProptyP

Report: => G_SetDefault4IndLimitSCPP7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitSCPP7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSCPP:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));


Report: => H_AvgIndivLimitSCPP7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSCPP7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP7Y := MIN(ROUND2(H_AvgIndivLimitSCPP7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSCPP7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSCPP7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitSCPP));
Report: => R_AvgIndivLimitSCPP7YProptyP := MIN(ROUND2(H_AvgIndivLimitSCPP7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitSINK7Y
// R_AvgIndivLimitSINK7YProptyP

Report: => G_SetDefault4IndLimitSINK7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitSINK7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitSINK:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitSINK7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitSINK7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK7Y := MIN(ROUND2(H_AvgIndivLimitSINK7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitSINK7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitSINK7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitSINK));
Report: => R_AvgIndivLimitSINK7YProptyP := MIN(ROUND2(H_AvgIndivLimitSINK7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitTHTD7Y
// R_AvgIndivLimitTHTD7YProptyP

Report: => G_SetDefault4IndLimitTHTD7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitTHTD7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitTHTD:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitTHTD7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitTHTD7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD7Y := MIN(ROUND2(H_AvgIndivLimitTHTD7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitTHTD7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitTHTD7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitTHTD));
Report: => R_AvgIndivLimitTHTD7YProptyP := MIN(ROUND2(H_AvgIndivLimitTHTD7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitUMBR7Y
// R_AvgIndivLimitUMBR7YProptyP

Report: => G_SetDefault4IndLimitUMBR7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitUMBR7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitUMBR:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitUMBR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitUMBR7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR7Y := MIN(ROUND2(H_AvgIndivLimitUMBR7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitUMBR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitUMBR7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitUMBR));
Report: => R_AvgIndivLimitUMBR7YProptyP := MIN(ROUND2(H_AvgIndivLimitUMBR7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWDHL7Y
// R_AvgIndivLimitWDHL7YProptyP

Report: => G_SetDefault4IndLimitWDHL7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitWDHL7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWDHL:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitWDHL7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWDHL7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL7Y := MIN(ROUND2(H_AvgIndivLimitWDHL7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWDHL7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWDHL7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWDHL));
Report: => R_AvgIndivLimitWDHL7YProptyP := MIN(ROUND2(H_AvgIndivLimitWDHL7YProptyP), CAP_99999999_99);


// R_AvgIndivLimitWIND7Y
// R_AvgIndivLimitWIND7YProptyP

Report: => G_SetDefault4IndLimitWIND7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitWIND7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWIND:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitWIND7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWIND7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND7Y := MIN(ROUND2(H_AvgIndivLimitWIND7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWIND7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWIND7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWIND));
Report: => R_AvgIndivLimitWIND7YProptyP := MIN(ROUND2(H_AvgIndivLimitWIND7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWINX7Y
// R_AvgIndivLimitWINX7YProptyP
Report: => G_SetDefault4IndLimitWINX7Y := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));
Report: => G_SetDefault4IndLimitWINX7YProptyP := NOT EXISTS(Policy(G_CountablePolicy AND NOT AvgIndividualLimitWINX:Null AND G_PrimaryProperty AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84));

Report: => H_AvgIndivLimitWINX7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWINX7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX7Y := MIN(ROUND2(H_AvgIndivLimitWINX7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWINX7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWINX7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWINX));
Report: => R_AvgIndivLimitWINX7YProptyP := MIN(ROUND2(H_AvgIndivLimitWINX7YProptyP), CAP_99999999_99);

// R_AvgIndivLimitWTCR7Y
// R_AvgIndivLimitWTCR7YProptyP
Report: => H_AvgIndivLimitWTCR7Y := MAP(G_SetDefault1  => DEFAULT_1,
                                    G_SetDefault3 => DEFAULT_3,  
                                    G_SetDefault4IndLimitWTCR7Y => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR7Y := MIN(ROUND2(H_AvgIndivLimitWTCR7Y), CAP_99999999_99);

Report: => H_AvgIndivLimitWTCR7YProptyP := MAP(G_SetDefault1  => DEFAULT_1,
                                          G_SetDefault2ProptyP => DEFAULT_2,
                                          G_SetDefault3ProptyP => DEFAULT_3, 
                                          G_SetDefault4IndLimitWTCR7YProptyP => DEFAULT_4, 
                                    AVE(Policy(G_CountablePolicy AND G_MOSSubjectEndDate >= 0 AND G_MOSSubjectEndDate < 84),AvgIndividualLimitWTCR));
Report: => R_AvgIndivLimitWTCR7YProptyP := MIN(ROUND2(H_AvgIndivLimitWTCR7YProptyP), CAP_99999999_99);


//Risk search attribute set 
Policy: => InquiryHitFlag := EXISTS(PolicyProperty(InquiryHitFlag));//one policy multiple addresses
// Report: => CntCarriername_Risk := COUNT(Policy(InquiryHitFlag){CarrierName});// this attribute was aggregated to subject and addresss
Report: => flagsub := {Policy.InquiryHitFlag};
// PolicyProperty: => TransactionID := Transaction.TransactionID;
// Policy: => DateOfReport := rReport.DateOfReport;
PolicyProperty: => G_CountablePolicy_Risk := InquiryHitFlag OR DataSource = 'RiskAddressBatch'; //Either policy saved in subject report of risk report was generated
Policy: => G_CountablePolicy_Risk := EXISTS(PolicyProperty(G_CountablePolicy_Risk)); //Either policy saved in subject report of risk report was generated

//Defaut
//default -1, not hit 
Report: => G_SetDefault1_Risk := COUNT(Policy(G_CountablePolicy_Risk)) = 0;
Report: => G_SetDefault2HO_Risk := COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST))) = 0;

//Cancelled policy count
//Risk set can only use G_MOSPolicyInceptaion to limit the policy in certain wtime window
Policy: => G_MOSPolicyInceptaion := MAP(DataSource = 'SubjectSearchBatch' AND NOT InceptionDate:Null =>  MONTHSBETWEEN(InceptionDate, DateOfReport),
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '< 6 MONTHS'=> 5,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '> 6<12MTHS'=> 11,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '>12<18MTHS'=> 17,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '>18<24MTHS'=> 23,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '>24<30MTHS'=> 29,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '>30<36MTHS'=> 35,
																				DataSource = 'RiskAddressBatch' AND InceptionDateBatch = '>36 MONTHS'=> 36, -9999);//map to -9999 if not covered here

//Cancelled
Policy: => CancelledPolicy := NOT CancellationDate:Null OR PolicyStatus = 'CANCELLED';//for both subject(CancellationDate and PolicyStatus) and risk (PolicyStatus)

Report: => I_CntCancelledPol_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy)),CAP_999));

Report: => I_CntCancelledPolWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND G_MOSPolicyInceptaion < 12  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntCancelledPolWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND G_MOSPolicyInceptaion < 24  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntCancelledPolWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND G_MOSPolicyInceptaion < 36  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntCancelledPolHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2, 
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND (PolicyType IN POLICY_TYPE_LIST))),CAP_999));

Report: => I_CntCancelledPolWrittenIn1YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 12  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntCancelledPolWrittenIn2YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 24  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntCancelledPolWrittenIn3YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND CancelledPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 36  AND G_MOSPolicyInceptaion >= 0)),CAP_999));


//Expired policy count
Policy: => ExpiredPolicy := PolicyStatus = 'EXPIRED';//for both subject and risk

Report: => I_CntExpiredPol_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy)),CAP_999));

Report: => I_CntExpiredPolWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND G_MOSPolicyInceptaion < 12  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntExpiredPolWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND G_MOSPolicyInceptaion < 24  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntExpiredPolWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND G_MOSPolicyInceptaion < 36  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntExpiredPolHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2, 
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND (PolicyType IN POLICY_TYPE_LIST))),CAP_999));

Report: => I_CntExpiredPolWrittenIn1YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 12  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntExpiredPolWrittenIn2YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 24  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

Report: => I_CntExpiredPolWrittenIn3YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND ExpiredPolicy AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 36  AND G_MOSPolicyInceptaion >= 0)),CAP_999));

//Count CarrierName 
Report: => I_CntDistCarrier_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,//true 0 is the case that no carriers name was reported. 
																			MIN(COUNT(Policy(G_CountablePolicy_Risk){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 12  AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 24  AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 36  AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));

Report: => I_CntDistCarrierHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																					G_SetDefault2HO_Risk => DEFAULT_2, 
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST)){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn1YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,//true 0, none policy in 1 year
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn2YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));

Report: => I_CntDistCarrierWrittenIn3YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
																			MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0){CarrierName}),CAP_999));


//Coverage 
// PolicyProperty: => CoverageTypes := Coverages{CoverageType};
Policy: => H_CovrageTypes_Risk := TOPN(PolicyProperty(G_CountablePolicy_Risk).CoverageTypes(NOT CoverageType:Null){CoverageType},1000,CoverageType);

Report: => I_CntDistCOV_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,//true 0, no coverage type were reported  
                              MIN(COUNT(Policy(G_CountablePolicy_Risk).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 

Report: => I_CntDistCOVHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																			G_SetDefault2HO_Risk => DEFAULT_2,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST)).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn1YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn2YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 
Report: => I_CntDistCOVWrittenIn3YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																						G_SetDefault2HO_Risk => DEFAULT_2,
                              MIN(COUNT(Policy(G_CountablePolicy_Risk AND (PolicyType IN POLICY_TYPE_LIST) AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0).H_CovrageTypes_Risk{CoverageType}),CAP_999)); 

// I_CntDistPackageType_Risk
// I_CntDistPackageTypeWrittenIn1Y_Risk
// I_CntDistPackageTypeWrittenIn1YHO_Risk
// I_CntDistPackageTypeWrittenIn2Y_Risk
// I_CntDistPackageTypeWrittenIn2YHO_Risk
// I_CntDistPackageTypeWrittenIn3Y_Risk
// I_CntDistPackageTypeWrittenIn3YHO_Risk
// I_CntDistPackageTypeHO_Risk

PolicyProperty: => CoverageTypesDelimited_Risk := CONCAT(TOPN(CoverageTypes(NOT CoverageType:Null){CoverageType}, 1000, CoverageType), ','); 
Policy: => H_CoverageTypesDelimited_Risk := PolicyProperty(G_CountablePolicy_Risk){CoverageTypesDelimited_Risk};

Report: => G_CoveragePackages_Risk := TOPN(Policy(G_CountablePolicy_Risk).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages1Y_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages2Y_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages3Y_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);

Report: => G_CoveragePackagesHO_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_HOPolicy).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages1YHO_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_HOPolicy AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages2YHO_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_HOPolicy AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);
Report: => G_CoveragePackages3YHO_Risk := TOPN(Policy(G_CountablePolicy_Risk AND G_HOPolicy AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0).H_CoverageTypesDelimited_Risk{CoverageTypesDelimited_Risk},1000,CoverageTypesDelimited_Risk);


Report: => I_CntDistPackageType_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																				MIN(COUNT(G_CoveragePackages_Risk), CAP_999));
																				
Report: => I_CntDistPackageTypeWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																				MIN(COUNT(G_CoveragePackages1Y_Risk), CAP_999));
Report: => I_CntDistPackageTypeWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																				MIN(COUNT(G_CoveragePackages2Y_Risk), CAP_999));
Report: => I_CntDistPackageTypeWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																				MIN(COUNT(G_CoveragePackages3Y_Risk), CAP_999));
																				
Report: => I_CntDistPackageTypeHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																							G_SetDefault2HO_Risk => DEFAULT_2,
																				MIN(COUNT(G_CoveragePackagesHO_Risk), CAP_999));


Report: => I_CntDistPackageTypeWrittenIn1YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																												G_SetDefault2HO_Risk => DEFAULT_2,
																				MIN(COUNT(G_CoveragePackages1YHO_Risk), CAP_999));
Report: => I_CntDistPackageTypeWrittenIn2YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																												G_SetDefault2HO_Risk => DEFAULT_2,
																				MIN(COUNT(G_CoveragePackages2YHO_Risk), CAP_999));																				
Report: => I_CntDistPackageTypeWrittenIn3YHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																												G_SetDefault2HO_Risk => DEFAULT_2,
																				MIN(COUNT(G_CoveragePackages3YHO_Risk), CAP_999));
																				
// Report: => I_CntDistPackageType_Risk := MIN(H_CntDistPackageType, CAP_999);

// Report: => H_CntDistPackageTypeHO := MAP(G_SetDefault1  => DEFAULT_1,
                                  // G_SetDefault2HO => DEFAULT_2,
                                  // G_SetDefault3HO => DEFAULT_3,
																				// COUNT(G_CoveragePackagesHO));
// Report: => I_CntDistPackageTypeHO := MIN(H_CntDistPackageTypeHO, CAP_999);

// I_CntDistPoltype_Risk
// I_CntDistPoltypeWrittenIn1Y_Risk
// I_CntDistPoltypeWrittenIn2Y_Risk
// I_CntDistPoltypeWrittenIn3Y_Risk
Report: => I_CntDistPoltype_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,//true 0 if no policy type was reported
																	MIN(COUNT(Policy(G_CountablePolicy_Risk){PolicyType}),CAP_999));
Report: => I_CntDistPoltypeWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0){PolicyType}),CAP_999));
Report: => I_CntDistPoltypeWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0){PolicyType}),CAP_999));
Report: => I_CntDistPoltypeWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0){PolicyType}),CAP_999));





// I_CntPolOfOT_Risk
// I_CntPolOfOTWrittenIn1Y_Risk
// I_CntPolOfOTWrittenIn2Y_Risk
// I_CntPolOfOTWrittenIn3Y_Risk
Policy: => OTPolicyType := PolicyType IN ['BO','FL','HL','IM','MH','QK','RF','UM','WC','XO'];
Report: => I_CntPolOfOT_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND OTPolicyType)),CAP_999));
Report: => I_CntPolOfOTWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND OTPolicyType AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfOTWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND OTPolicyType AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfOTWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND OTPolicyType AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0)),CAP_999));



// I_CntPolOfCO_Risk
// I_CntPolOfCOWrittenIn1Y_Risk
// I_CntPolOfCOWrittenIn2Y_Risk
// I_CntPolOfCOWrittenIn3Y_Risk
Policy: => COPolicyType := PolicyType IN ['CO'];
Report: => I_CntPolOfCO_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND COPolicyType)),CAP_999));
Report: => I_CntPolOfCOWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND COPolicyType AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfCOWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND COPolicyType AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfCOWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND COPolicyType AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0)),CAP_999));

// I_CntPolOfFR_Risk
// I_CntPolOfFRWrittenIn1Y_Risk
// I_CntPolOfFRWrittenIn2Y_Risk
// I_CntPolOfFRWrittenIn3Y_Risk
Policy: => FRPolicyType := PolicyType IN ['FR'];
Report: => I_CntPolOfFR_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND FRPolicyType)),CAP_999));
Report: => I_CntPolOfFRWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND FRPolicyType AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfFRWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND FRPolicyType AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfFRWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND FRPolicyType AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0)),CAP_999));

// I_CntPolOfHO_Risk
// I_CntPolOfHOWrittenIn1Y_Risk
// I_CntPolOfHOWrittenIn2Y_Risk
// I_CntPolOfHOWrittenIn3Y_Risk
Policy: => HOPolicyType := PolicyType IN ['HO'];
Report: => I_CntPolOfHO_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND HOPolicyType)),CAP_999));

Report: => I_CntPolOfHOWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND HOPolicyType AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfHOWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND HOPolicyType AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfHOWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND HOPolicyType AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0)),CAP_999));

// I_CntPolOfTN_Risk
// I_CntPolOfTNWrittenIn1Y_Risk
// I_CntPolOfTNWrittenIn2Y_Risk
// I_CntPolOfTNWrittenIn3Y_Risk
Policy: => TNPolicyType := PolicyType IN ['TN'];
Report: => I_CntPolOfTN_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND TNPolicyType)),CAP_999));
Report: => I_CntPolOfTNWrittenIn1Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND TNPolicyType AND G_MOSPolicyInceptaion < 12 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfTNWrittenIn2Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND TNPolicyType AND G_MOSPolicyInceptaion < 24 AND G_MOSPolicyInceptaion >= 0)),CAP_999));
Report: => I_CntPolOfTNWrittenIn3Y_Risk := MAP(G_SetDefault1_Risk => DEFAULT_1,
																	MIN(COUNT(Policy(G_CountablePolicy_Risk AND TNPolicyType AND G_MOSPolicyInceptaion < 36 AND G_MOSPolicyInceptaion >= 0)),CAP_999));																	

// R_AvgIndivLimitCOVA_Risk
// Policy: => AvgIndividualLimitCOVA_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVA);// Null if no COVA or no limit for cova for matched address
// Policy: => ExistCOVA_Risk := EXISTS(PolicyProperty(G_CountablePolicy_Risk AND ExistCOVA));// Null if no COVA or no limit for cova

// Report: => G_SetDefault4IndLimitCOVA_Risk := EXISTS(Policy(G_CountablePolicy_Risk AND ExistCOVA_Risk)) AND NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVA_Risk:Null));
Report: => G_SetDefault4IndLimitCOVA_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVA_Risk:Null));
Report: => G_SetDefault4IndLimitCOVB_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVB_Risk:Null));
Report: => G_SetDefault4IndLimitCOVC_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVC_Risk:Null));
Report: => G_SetDefault4IndLimitCOVD_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVD_Risk:Null));
Report: => G_SetDefault4IndLimitCOVE_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVE_Risk:Null));
Report: => G_SetDefault4IndLimitCOVF_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitCOVF_Risk:Null));
Report: => G_SetDefault4IndLimitPPRC_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitPPRC_Risk:Null));
Report: => G_SetDefault4IndLimitOTHER_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT AvgIndividualLimitOTHER_Risk:Null));


Policy: => AvgIndividualLimitCOVA_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVA);
Report: => H_AvgIndivLimitCOVA_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVA_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVA_Risk));
Report: => R_AvgIndivLimitCOVA_Risk := MIN(ROUND2(H_AvgIndivLimitCOVA_Risk), CAP_99999999_99);

// R_AvgIndivLimitCOVB_Risk
Policy: => AvgIndividualLimitCOVB_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVB);
Report: => H_AvgIndivLimitCOVB_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVB_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVB_Risk));
Report: => R_AvgIndivLimitCOVB_Risk := MIN(ROUND2(H_AvgIndivLimitCOVB_Risk), CAP_99999999_99);
// R_AvgIndivLimitCOVC_Risk
Policy: => AvgIndividualLimitCOVC_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVC);
Report: => H_AvgIndivLimitCOVC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVC_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVC_Risk));
Report: => R_AvgIndivLimitCOVC_Risk := MIN(ROUND2(H_AvgIndivLimitCOVC_Risk), CAP_99999999_99);
// R_AvgIndivLimitCOVD_Risk
Policy: => AvgIndividualLimitCOVD_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVD);
Report: => H_AvgIndivLimitCOVD_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVD_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVD_Risk));
Report: => R_AvgIndivLimitCOVD_Risk := MIN(ROUND2(H_AvgIndivLimitCOVD_Risk), CAP_99999999_99);
// R_AvgIndivLimitCOVE_Risk
Policy: => AvgIndividualLimitCOVE_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVE);
Report: => H_AvgIndivLimitCOVE_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVE_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVE_Risk));
Report: => R_AvgIndivLimitCOVE_Risk := MIN(ROUND2(H_AvgIndivLimitCOVE_Risk), CAP_99999999_99);
// R_AvgIndivLimitCOVF_Risk
Policy: => AvgIndividualLimitCOVF_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVF);
Report: => H_AvgIndivLimitCOVF_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVF_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitCOVF_Risk));
Report: => R_AvgIndivLimitCOVF_Risk := MIN(ROUND2(H_AvgIndivLimitCOVF_Risk), CAP_99999999_99);
//R_AvgIndivLimitPPRC_Risk
Policy: => AvgIndividualLimitPPRC_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitPPRC);
Report: => H_AvgIndivLimitPPRC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitPPRC_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitPPRC_Risk));
Report: => R_AvgIndivLimitPPRC_Risk := MIN(ROUND2(H_AvgIndivLimitPPRC_Risk), CAP_99999999_99);

//R_AvgIndivLimitOTHER_Risk
PolicyProperty: => AvgIndividualLimitOTHER := AVE(Coverages((NOT CoverageType IN ['COVA','COVB','COVC','COVD','COVE','COVF','PPRC']) AND NOT CoverageType:Null AND (IndividualLimit > 0)),IndividualLimit);

Policy: => AvgIndividualLimitOTHER_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitOTHER);
Report: => H_AvgIndivLimitOTHER_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitOTHER_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),AvgIndividualLimitOTHER_Risk));
Report: => R_AvgIndivLimitOTHER_Risk := MIN(ROUND2(H_AvgIndivLimitOTHER_Risk), CAP_99999999_99);


// R_AvgOverallDeduct_Risk
// R_AvgOverallDeductHO_Risk
// R_AvgTheftDeduct_Risk
// R_AvgTheftDeductHO_Risk
Policy: => TheftDeductible_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk), TheftDeductible);
Policy: => OverallDeductible_Risk := AVE(PolicyProperty(G_CountablePolicy_Risk), OverallDeductible);

Report: => G_SetDefault4TheftDeduct_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT TheftDeductible_Risk:Null));
Report: => G_SetDefault4OverallDeduct_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND NOT OverallDeductible_Risk:Null));
Report: => G_SetDefault4TheftDeductHO_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND G_HOPolicy AND NOT TheftDeductible_Risk:Null));
Report: => G_SetDefault4OverallDeductHO_Risk := NOT EXISTS(Policy(G_CountablePolicy_Risk AND G_HOPolicy AND NOT OverallDeductible_Risk:Null));

Report: => H_AvgOverallDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4OverallDeduct_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk),OverallDeductible_Risk));
Report: => R_AvgOverallDeduct_Risk := MIN(ROUND2(H_AvgOverallDeduct_Risk), CAP_99999999_99);

Report: => H_AvgOverallDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																		G_SetDefault4OverallDeductHO_Risk => DEFAULT_4,
                                    AVE(Policy(G_CountablePolicy_Risk AND G_HOPolicy),OverallDeductible_Risk));
Report: => R_AvgOverallDeductHO_Risk := MIN(ROUND2(H_AvgOverallDeductHO_Risk), CAP_99999999_99);


Report: => H_AvgTheftDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4TheftDeduct_Risk => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy_Risk),TheftDeductible_Risk));
Report: => R_AvgTheftDeduct_Risk := MIN(ROUND2(H_AvgTheftDeduct_Risk), CAP_99999999_99);

Report: => H_AvgTheftDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																	G_SetDefault4TheftDeductHO_Risk => DEFAULT_4,
																		AVE(Policy(G_CountablePolicy_Risk AND G_HOPolicy),TheftDeductible_Risk));
Report: => R_AvgTheftDeductHO_Risk := MIN(ROUND2(H_AvgTheftDeductHO_Risk), CAP_99999999_99);

// R_MaxIndivLimitCOVA_Risk
Policy: => MaxIndividualLimitCOVA_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVA);
Report: => H_MaxIndivLimitCOVA_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVA_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVA_Risk));
Report: => R_MaxIndivLimitCOVA_Risk := MIN(ROUND2(H_MaxIndivLimitCOVA_Risk), CAP_99999999_99);

// R_MaxIndivLimitCOVB_Risk
Policy: => MaxIndividualLimitCOVB_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVB);
Report: => H_MaxIndivLimitCOVB_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVB_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVB_Risk));
Report: => R_MaxIndivLimitCOVB_Risk := MIN(ROUND2(H_MaxIndivLimitCOVB_Risk), CAP_99999999_99);
// R_MaxIndivLimitCOVC_Risk
Policy: => MaxIndividualLimitCOVC_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVC);
Report: => H_MaxIndivLimitCOVC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVC_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVC_Risk));
Report: => R_MaxIndivLimitCOVC_Risk := MIN(ROUND2(H_MaxIndivLimitCOVC_Risk), CAP_99999999_99);
// R_MaxIndivLimitCOVD_Risk
Policy: => MaxIndividualLimitCOVD_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVD);
Report: => H_MaxIndivLimitCOVD_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVD_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVD_Risk));
Report: => R_MaxIndivLimitCOVD_Risk := MIN(ROUND2(H_MaxIndivLimitCOVD_Risk), CAP_99999999_99);
// R_MaxIndivLimitCOVE_Risk
Policy: => MaxIndividualLimitCOVE_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVE);
Report: => H_MaxIndivLimitCOVE_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVE_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVE_Risk));
Report: => R_MaxIndivLimitCOVE_Risk := MIN(ROUND2(H_MaxIndivLimitCOVE_Risk), CAP_99999999_99);
// R_MaxIndivLimitCOVF_Risk
Policy: => MaxIndividualLimitCOVF_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVF);
Report: => H_MaxIndivLimitCOVF_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVF_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitCOVF_Risk));
Report: => R_MaxIndivLimitCOVF_Risk := MIN(ROUND2(H_MaxIndivLimitCOVF_Risk), CAP_99999999_99);
//R_MaxIndivLimitPPRC_Risk
Policy: => MaxIndividualLimitPPRC_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitPPRC);
Report: => H_MaxIndivLimitPPRC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitPPRC_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitPPRC_Risk));
Report: => R_MaxIndivLimitPPRC_Risk := MIN(ROUND2(H_MaxIndivLimitPPRC_Risk), CAP_99999999_99);
//R_MaxIndivLimitOTHER_Risk
Policy: => MaxIndividualLimitOTHER_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitOTHER);
Report: => H_MaxIndivLimitOTHER_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitOTHER_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxIndividualLimitOTHER_Risk));
Report: => R_MaxIndivLimitOTHER_Risk := MIN(ROUND2(H_MaxIndivLimitOTHER_Risk), CAP_99999999_99);



// R_MinIndivLimitCOVA_Risk
Policy: => MinIndividualLimitCOVA_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVA);
Report: => H_MinIndivLimitCOVA_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVA_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVA_Risk));
Report: => R_MinIndivLimitCOVA_Risk := MIN(ROUND2(H_MinIndivLimitCOVA_Risk), CAP_99999999_99);

// R_MinIndivLimitCOVB_Risk
Policy: => MinIndividualLimitCOVB_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVB);
Report: => H_MinIndivLimitCOVB_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVB_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVB_Risk));
Report: => R_MinIndivLimitCOVB_Risk := MIN(ROUND2(H_MinIndivLimitCOVB_Risk), CAP_99999999_99);
// R_MinIndivLimitCOVC_Risk
Policy: => MinIndividualLimitCOVC_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVC);
Report: => H_MinIndivLimitCOVC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVC_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVC_Risk));
Report: => R_MinIndivLimitCOVC_Risk := MIN(ROUND2(H_MinIndivLimitCOVC_Risk), CAP_99999999_99);
// R_MinIndivLimitCOVD_Risk
Policy: => MinIndividualLimitCOVD_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVD);
Report: => H_MinIndivLimitCOVD_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVD_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVD_Risk));
Report: => R_MinIndivLimitCOVD_Risk := MIN(ROUND2(H_MinIndivLimitCOVD_Risk), CAP_99999999_99);
// R_MinIndivLimitCOVE_Risk
Policy: => MinIndividualLimitCOVE_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVE);
Report: => H_MinIndivLimitCOVE_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVE_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVE_Risk));
Report: => R_MinIndivLimitCOVE_Risk := MIN(ROUND2(H_MinIndivLimitCOVE_Risk), CAP_99999999_99);
// R_MinIndivLimitCOVF_Risk
Policy: => MinIndividualLimitCOVF_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitCOVF);
Report: => H_MinIndivLimitCOVF_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitCOVF_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitCOVF_Risk));
Report: => R_MinIndivLimitCOVF_Risk := MIN(ROUND2(H_MinIndivLimitCOVF_Risk), CAP_99999999_99);
// R_MinIndivLimitPPRC_Risk
Policy: => MinIndividualLimitPPRC_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitPPRC);
Report: => H_MinIndivLimitPPRC_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitPPRC_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitPPRC_Risk));
Report: => R_MinIndivLimitPPRC_Risk := MIN(ROUND2(H_MinIndivLimitPPRC_Risk), CAP_99999999_99);
//R_MinIndivLimitOTHER_Risk
Policy: => MinIndividualLimitOTHER_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk),AvgIndividualLimitOTHER);
Report: => H_MinIndivLimitOTHER_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
                                    G_SetDefault4IndLimitOTHER_Risk => DEFAULT_4,
                                    MIN(Policy(G_CountablePolicy_Risk),MinIndividualLimitOTHER_Risk));
Report: => R_MinIndivLimitOTHER_Risk := MIN(ROUND2(H_MinIndivLimitOTHER_Risk), CAP_99999999_99);




// R_MaxOverallDeduct_Risk
// R_MaxOverallDeductHO_Risk
// R_MaxTheftDeduct_Risk
// R_MaxTheftDeductHO_Risk
Policy: => MaxTheftDeductible_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk), TheftDeductible);
Policy: => MaxOverallDeductible_Risk := MAX(PolicyProperty(G_CountablePolicy_Risk), OverallDeductible);

Report: => H_MaxOverallDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4OverallDeduct_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MaxOverallDeductible_Risk));
Report: => R_MaxOverallDeduct_Risk := MIN(ROUND2(H_MaxOverallDeduct_Risk), CAP_99999999_99);

Report: => H_MaxOverallDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																		G_SetDefault4OverallDeductHO_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk AND G_HOPolicy),MaxOverallDeductible_Risk));
Report: => R_MaxOverallDeductHO_Risk := MIN(ROUND2(H_MaxOverallDeductHO_Risk), CAP_99999999_99);


Report: => H_MaxTheftDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4TheftDeduct => DEFAULT_4,
																		MAX(Policy(G_CountablePolicy_Risk),MaxTheftDeductible_Risk));
Report: => R_MaxTheftDeduct_Risk := MIN(ROUND2(H_MaxTheftDeduct_Risk), CAP_99999999_99);

Report: => H_MaxTheftDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																	G_SetDefault4TheftDeductHO_Risk => DEFAULT_4,
																		MAX(Policy(G_CountablePolicy_Risk AND G_HOPolicy),MaxTheftDeductible_Risk));
Report: => R_MaxTheftDeductHO_Risk := MIN(ROUND2(H_MaxTheftDeductHO_Risk), CAP_99999999_99);

// R_MinOverallDeduct_Risk
// R_MinOverallDeductHO_Risk
// R_MinTheftDeduct_Risk
// R_MinTheftDeductHO_Risk
Policy: => MinTheftDeductible_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk), TheftDeductible);
Policy: => MinOverallDeductible_Risk := MIN(PolicyProperty(G_CountablePolicy_Risk), OverallDeductible);

Report: => H_MinOverallDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4OverallDeduct_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk),MinOverallDeductible_Risk));
Report: => R_MinOverallDeduct_Risk := MIN(ROUND2(H_MinOverallDeduct_Risk), CAP_99999999_99);

Report: => H_MinOverallDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																		G_SetDefault4OverallDeductHO_Risk => DEFAULT_4,
                                    MAX(Policy(G_CountablePolicy_Risk AND G_HOPolicy),MinOverallDeductible_Risk));
Report: => R_MinOverallDeductHO_Risk := MIN(ROUND2(H_MinOverallDeductHO_Risk), CAP_99999999_99);

Report: => H_MinTheftDeduct_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1,
																		G_SetDefault4TheftDeduct => DEFAULT_4,
																		MIN(Policy(G_CountablePolicy_Risk),MinTheftDeductible_Risk));
Report: => R_MinTheftDeduct_Risk := MIN(ROUND2(H_MinTheftDeduct_Risk), CAP_99999999_99);

Report: => H_MinTheftDeductHO_Risk := MAP(G_SetDefault1_Risk  => DEFAULT_1, 
																	G_SetDefault4TheftDeductHO_Risk => DEFAULT_4,
																		MIN(Policy(G_CountablePolicy_Risk AND G_HOPolicy),MinTheftDeductible_Risk));
Report: => R_MinTheftDeductHO_Risk := MIN(ROUND2(H_MinTheftDeductHO_Risk), CAP_99999999_99);

//audit purpose intermeditae attributes
Report: => CountReport := COUNT(Policy{DataSource});
Report: => SubjectPolicy := COUNT(Policy(DataSource = 'SubjectSearchBatch'));
Report: => RiskPolicy := COUNT(Policy(DataSource = 'RiskAddressBatch'));
PolicyHolder: => indicator := NOT EndDate:Null AND SubjectNumber > 0;