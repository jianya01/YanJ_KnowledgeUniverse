﻿﻿// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));

Report := ENTITY(FLAT(UID(TransactionID),
		DATE DateOfReport,
		STRING TransactionID),
    MODEL(UID, 
		DateOfReport,
		TransactionID));

Policy := ENTITY(FLAT(UID(TransactionID, Ambest, PolicyNumber),
		Report rReport = UID(TransactionID), 
		STRING TransactionID,
		INTEGER Ambest,
		STRING PolicyNumber,
		STRING InsuranceType,
		STRING PolicyType,
		INTEGER PolicyEndorsementDate,
		INTEGER PolicyEndorsementNumber, 
		STRING State,
		DATE PeriodStartDate,
		DATE PeriodEndDate,
		DATE InceptionDate,
		DATE CancellationDate,
		DATE ReinstatementDate,
		STRING CancelReason,
		DATE ChangeEffectDate,
		STRING CarrierName,
		STRING RiskType,
		INTEGER NAICSCode, 
		INTEGER Premium,
		STRING PaymentPlan,
		STRING PaymentMethod,
		STRING OrginalPolicyNumber,
		STRING PolicyStatus,
		STRING ConsumerStatementIndicator,
		DATE FirstLoadDate,
		STRING AgentID, 
		STRING AgentFirstName,
		STRING AgentLastName,
		STRING AgentHouseNumber,
		STRING AgentStreetName,
		STRING AgentCity,
		STRING AgentState,
		INTEGER AgentZip5, 
		INTEGER AgentZip4,
		INTEGER AgentAreaCode,
		INTEGER AgentPhoneNumber,
		INTEGER PropertyReportPolicyRank, 
		DATE StatusEndDate,
		STRING StatusReport,
		STRING StatusCurrent,
		INTEGER RealAmbest,
		INTEGER RealCustomer,
		STRING DateOfBirthFlag, 
		STRING SSNFlag, 
		STRING GenderFlag, 
		STRING DriversLicenseFlag), 
	MODEL(UID, rReport, TransactionID, Ambest, PolicyNumber,
		InsuranceType,
		PolicyType,
		PolicyEndorsementDate, 
		PolicyEndorsementNumber,
		State,
		PeriodStartDate,
		PeriodEndDate,
		InceptionDate,
		CancellationDate,
		ReinstatementDate,
		CancelReason,
		ChangeEffectDate,
		CarrierName,
		RiskType,
		NAICSCode,
		Premium,
		PaymentPlan,
		PaymentMethod,
		OrginalPolicyNumber,
		PolicyStatus,
		ConsumerStatementIndicator,
		FirstLoadDate,
		PropertyReportPolicyRank,
		StatusEndDate,
		StatusReport,
		StatusCurrent,
		RealAmbest,
		RealCustomer,
		DateOfBirthFlag,
		SSNFlag,
		GenderFlag,
		DriversLicenseFlag,
		Agent{AgentID, AgentFirstName, AgentLastName, AgentHouseNumber, 
			AgentStreetName, AgentCity, AgentState, AgentZip5, 
			AgentZip4,AgentPhoneNumber, AgentAreaCode}));

Property := ENTITY(FLAT(UID(TransactionID, HouseNumber, StreetName, SecondaryRange, State, Zip5),
		STRING TransactionID,
		STRING HouseNumber,
		STRING StreetName,
		INTEGER SecondaryRange, 
		STRING City,
		STRING State,
		INTEGER Zip5, 
		INTEGER Zip4,
		INTEGER PropertyNumber,
		DATE CoverageStartDate,
		DATE CoverageEndDate,
		DATE PropertyCancellationDate,
		STRING BusinessUseIndicator,
		INTEGER OverallDeductible, 
		INTEGER TheftDeductible, 
		STRING PropertyType,
		STRING PropertyLegalDescription, 
		STRING FloodZone,
		STRING CoverageType,
		STRING IndividualLimit,
		STRING OccurrenceLimit,
		STRING CombinedSingleLimit, 
		STRING LoanNumber,
		STRING FinanceType,
		STRING FinanceCompanyName,
		STRING FinanceHouseNumber,
		STRING FinanceStreetName,
		STRING FinanceSecondaryRange, 
		STRING FinanceCityName,
		STRING FinanceState,
		INTEGER FinanceZip5, 
		INTEGER FinanceZip4, 
		STRING PremiumDueAmount,
		STRING SuppressIndicator),
	MODEL(UID, TransactionID, HouseNumber, StreetName, SecondaryRange, City, State, Zip5, Zip4, PropertyNumber,
		PropertyCancellationDate, BusinessUseIndicator, OverallDeductible, TheftDeductible, PropertyType, PropertyLegalDescription, FloodZone, CoverageStartDate, CoverageEndDate,
		Coverages{CoverageType, IndividualLimit, OccurrenceLimit, CombinedSingleLimit},
		FinanceInfo{LoanNumber, FinanceType, FinanceCompanyName, FinanceHouseNumber, FinanceStreetName, FinanceSecondaryRange, FinanceCityName, FinanceState, FinanceZip5, FinanceZip4},
		PremiumDueAmount, 
		SuppressIndicator)); 

Vehicle := ENTITY(FLAT(UID(TransactionID, VIN), 
		STRING TransactionID,
		STRING VIN,
		DATE VehicleCancellationDate,
		STRING CancelReason,
		DATE NotificationDate,
		DATE FirstLoadDate,
		STRING CoverageDateUseFlag,
		STRING VehicleMake,
		STRING VehicleModel,
		INTEGER VehicleModelYear,
		STRING BusinessUseIndicator,
		INTEGER CoDeduct,
		INTEGER CpDeduct,
		STRING RegistrationState,
		STRING LicensePlate,
		STRING LiabilityIndicator,
		STRING LeaseIndicator,
		STRING CoverageType,
		STRING IndividualLimit,
		STRING OccurrenceLimit,
		STRING CombinedSingleLimit,
		DATE CoverageStartDate,
		DATE CoverageEndDate,
		STRING LoanNumber,
		STRING FinanceType,
		STRING FinanceCompanyName,
		STRING FinanceHouseNumber,
		STRING FinanceStreetName,
		STRING FinanceSecondaryRange, 
		STRING FinanceCityName,
		STRING FinanceState,
		INTEGER FinanceZip5, 
		INTEGER FinanceZip4, 
		STRING PremiumDueAmount,
		BOOLEAN UseVehicle,
		DATE VehicleTermDate,
		STRING SuppressIndicator,
		INTEGER GroupId,
		DATE PolicyInceptionDate,
		DATE PolicyBeginDate,
		DATE PolicyEndDate,
		DATE PolicyCanDate,
		DATE PolicyStatusEndDate),		 
	MODEL(UID, TransactionID, VIN,
		VehicleCancellationDate, CancelReason, NotificationDate, FirstLoadDate, CoverageDateUseFlag, VehicleMake, VehicleModel,
		VehicleModelYear, BusinessUseIndicator, CoDeduct, CpDeduct, RegistrationState, LicensePlate, LiabilityIndicator, LeaseIndicator, PremiumDueAmount,
		UseVehicle, VehicleTermDate, SuppressIndicator, GroupId, 
		PolicyInceptionDate, PolicyBeginDate, PolicyEndDate, PolicyCanDate, PolicyStatusEndDate,
		Coverages{CoverageType, IndividualLimit, OccurrenceLimit, CombinedSingleLimit, CoverageStartDate, CoverageEndDate},
		FinanceInfo{LoanNumber, FinanceType, FinanceCompanyName, FinanceHouseNumber, FinanceStreetName, FinanceSecondaryRange, FinanceCityName, FinanceState, FinanceZip5, FinanceZip4}));

Holder := ENTITY(FLAT(UID=IDL, // Maps to IDL
		DATE OrigDate,
		DATE HolderCancelDate,
		DATE ChangeEffectDate,
		STRING Gender,
		DATE DateOfBirth,
		STRING DLNumber,
		STRING DLState,
		INTEGER SSN,
		INTEGER AreaCode,
		INTEGER PhoneNumber,
		STRING FraudAlertIndicator,
		INTEGER CarrierOrderSequenceNumber, 
		STRING ClientIdentifier,
		DATE LapseStartDate,
		INTEGER LapseCounter,
		DATE LapseLastCancelDate,
		STRING FirstName,
		STRING MiddleName,
		STRING LastName,	
		STRING NameSuffix, 
		STRING PrimRange,
		STRING Predir,
		STRING PrimName,
		STRING AddressSuffix,
		STRING PostDir,
		STRING UnitDesig,
		STRING SecondaryRange,
		STRING City,
		STRING State,
		INTEGER Zip5, 
		INTEGER Zip4,
		STRING LastCancelDate,
		STRING InputFlag,
		STRING CountLapseIndicator,
		DATE LoadDate,
		DATE DateOfDeath,
		INTEGER Score,
		STRING InquiryState),
	MODEL(UID, OrigDate, HolderCancelDate, ChangeEffectDate, Gender, DateOfBirth,
		SSN, FraudAlertIndicator, CarrierOrderSequenceNumber, ClientIdentifier, DateOfDeath, Score, InquiryState,
		Lapses{LapseStartDate, LapseCounter, LapseLastCancelDate, LastCancelDate, InputFlag, CountLapseIndicator, LoadDate},
		DrivingLicenseInfo{DLNumber, DLState},
		FullNames{FirstName, MiddleName, LastName, NameSuffix},
		PhoneNumbers{AreaCode, PhoneNumber},
		Addresses{PrimRange, Predir, PrimName, SecondaryRange, AddressSuffix, PostDir, UnitDesig, City, State, Zip4, Zip5}));

PolicyProperty := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, Ambest, PolicyNumber), 
		Property Location = UID(TransactionID, HouseNumber, StreetName, SecondaryRange, State, Zip5)));
	
PolicyHolder := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, Ambest, PolicyNumber), 
		Holder Holder, 
		INTEGER SubjectNumber,
		DATE StartDate, 
		DATE EndDate));
	
VehiclePolicy := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, Ambest, PolicyNumber), 
		Vehicle Auto = UID(VIN, TransactionID)));