﻿﻿// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));

Report := ENTITY(FLAT(UID(TransactionID, DataSource),
		DATE DateOfReport,
		STRING TransactionID,
		STRING DataSource),
    MODEL(UID, 
		DateOfReport,
		TransactionID,
		DataSource));

Policy := ENTITY(FLAT(UID(TransactionID, InsuranceType, Ambest, PolicyNumber, DataSource),
		Report rReport = UID(TransactionID, DataSource), 
		STRING TransactionID,
		INTEGER Ambest,
		STRING PolicyNumber,
		STRING DataSource,
		STRING InsuranceType,
		STRING PolicyType,
		INTEGER PolicyEndorsementDate,
		INTEGER PolicyEndorsementNumber, 
		STRING State,
		DATE PeriodStartDate,
		DATE PeriodEndDate,
		DATE InceptionDate,
		DATE CancellationDate,
		DATE ReinstatementDate,
		STRING CancelReason,
		DATE ChangeEffectDate,
		STRING CarrierName,
		STRING RiskType,
		INTEGER NAICSCode, 
		INTEGER Premium,
		STRING PaymentPlan,
		STRING PaymentMethod,
		STRING OrginalPolicyNumber,
		STRING PolicyStatus,
		STRING ConsumerStatementIndicator,
		DATE FirstLoadDate,
		STRING AgentID, 
		STRING AgentFirstName,
		STRING AgentLastName,
		STRING AgentHouseNumber,
		STRING AgentStreetName,
		STRING AgentCity,
		STRING AgentState,
		INTEGER AgentZip5, 
		INTEGER AgentZip4,
		INTEGER AgentAreaCode,
		INTEGER AgentPhoneNumber,
		INTEGER PropertyReportPolicyRank, 
		DATE StatusEndDate,
		STRING StatusReport,
		STRING StatusCurrent,
		INTEGER RealAmbest,
		INTEGER RealCustomer,
		STRING DateOfBirthFlag, 
		STRING SSNFlag, 
		STRING GenderFlag, 
		STRING DriversLicenseFlag), 
	MODEL(UID, rReport, TransactionID, Ambest, PolicyNumber, DataSource,
		InsuranceType, PolicyType, PolicyEndorsementDate, PolicyEndorsementNumber, State,
		PeriodStartDate, PeriodEndDate, InceptionDate, CancellationDate, ReinstatementDate,
		CancelReason, ChangeEffectDate, CarrierName, RiskType, NAICSCode,
		Premium, PaymentPlan, PaymentMethod, OrginalPolicyNumber, PolicyStatus,
		ConsumerStatementIndicator, FirstLoadDate, PropertyReportPolicyRank,
		StatusEndDate, StatusReport, StatusCurrent, RealAmbest, RealCustomer,
		DateOfBirthFlag, SSNFlag, GenderFlag, DriversLicenseFlag,
		Agent{AgentID, AgentFirstName, AgentLastName, AgentHouseNumber, 
			AgentStreetName, AgentCity, AgentState, AgentZip5, 
			AgentZip4,AgentPhoneNumber, AgentAreaCode}));

Property := ENTITY(FLAT(UID(TransactionID, HouseNumber, StreetName, SecondaryRange, State, Zip5, DataSource),
		STRING TransactionID,
		STRING HouseNumber,
		STRING StreetName,
		INTEGER SecondaryRange, 
		STRING City,
		STRING State,
		INTEGER Zip5, 
		INTEGER Zip4,
		STRING PropertyLegalDescription,  
		STRING SuppressIndicator),
	MODEL(UID, TransactionID, HouseNumber, StreetName, SecondaryRange, City, State, Zip5, Zip4,
		PropertyLegalDescription, 
		SuppressIndicator)); 

Vehicle := ENTITY(FLAT(UID(TransactionID, VIN, DataSource), 
		STRING TransactionID,
		STRING VIN,
		STRING CoverageDateUseFlag,
		STRING VehicleMake,
		STRING VehicleModel,
		INTEGER VehicleModelYear,
		STRING LicensePlate,
		STRING LiabilityIndicator,
		STRING LeaseIndicator,
		BOOLEAN UseVehicle,
		DATE VehicleTermDate,
		STRING SuppressIndicator,
		INTEGER GroupId,
		DATE PolicyInceptionDate,
		DATE PolicyBeginDate,
		DATE PolicyEndDate,
		DATE PolicyCanDate,
		DATE PolicyStatusEndDate),		 
	MODEL(UID, TransactionID, VIN,
		CoverageDateUseFlag, VehicleMake, VehicleModel,
		VehicleModelYear, LicensePlate, LiabilityIndicator, LeaseIndicator, 
		UseVehicle, VehicleTermDate, SuppressIndicator, GroupId, 
		PolicyInceptionDate, PolicyBeginDate, PolicyEndDate, PolicyCanDate, PolicyStatusEndDate));

Holder := ENTITY(FLAT(UID(LexID, TransactionID, InsuranceType, Ambest, PolicyNumber, LastName, FirstName, MiddleName, NameSuffix, DateOfBirth, PrimRange, Predir, PrimName, AddressSuffix, PostDir, UnitDesig, SecondaryRange, City, Zip5, DataSource),
		DATE OrigDate,
		STRING Gender,
		DATE DateOfBirth,
		STRING DLNumber,
		STRING DLState,
		INTEGER SSN,
		INTEGER AreaCode,
		INTEGER PhoneNumber,
		STRING FraudAlertIndicator,
		STRING FirstName,
		STRING MiddleName,
		STRING LastName,	
		STRING NameSuffix, 
		STRING PrimRange,
		STRING Predir,
		STRING PrimName,
		STRING AddressSuffix,
		STRING PostDir,
		STRING UnitDesig,
		STRING SecondaryRange,
		STRING City,
		STRING State,
		INTEGER Zip5, 
		INTEGER Zip4,
		DATE DateOfDeath,
		INTEGER Score,
		STRING InquiryState),
	MODEL(UID, OrigDate, Gender, DateOfBirth,
		SSN, FraudAlertIndicator, DateOfDeath, InquiryState,
		FirstName, MiddleName, LastName, NameSuffix,
		PrimRange, Predir, PrimName, SecondaryRange, AddressSuffix, PostDir, UnitDesig, City, State, Zip4, Zip5,
		Scores{Score},
		DrivingLicenseInfo{DLNumber, DLState},
		PhoneNumbers{AreaCode, PhoneNumber}
		));

PolicyProperty := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, InsuranceType, Ambest, PolicyNumber, DataSource), 
		Property Location = UID(TransactionID, HouseNumber, StreetName, SecondaryRange, State, Zip5, DataSource),
		DATE CoverageStartDate,
		DATE CoverageEndDate,
		DATE PropertyCancellationDate,
		INTEGER OverallDeductible=NULL(), 
		INTEGER TheftDeductible=NULL(), 
		STRING CoverageType,
		REAL IndividualLimit=NULL(),
		REAL OccurrenceLimit=NULL(),
		REAL CombinedSingleLimit=NULL(),
		INTEGER PropertyNumber=NULL(),
		STRING FloodZone,
		STRING PropertyType,
		STRING LoanNumber,
		STRING FinanceType,
		STRING FinanceCompanyName,
		STRING FinanceHouseNumber,
		STRING FinanceStreetName,
		STRING FinanceSecondaryRange, 
		STRING FinanceCityName,
		STRING FinanceState,
		INTEGER FinanceZip5, 
		INTEGER FinanceZip4,
		STRING BusinessUseIndicator,
		REAL PremiumDueAmount=NULL()),
	MODEL(Transaction, Location,
		Coverages{CoverageType, IndividualLimit, OccurrenceLimit, CombinedSingleLimit, CoverageStartDate, CoverageEndDate,PropertyNumber,
		PropertyCancellationDate, OverallDeductible, TheftDeductible,FloodZone,PropertyType,BusinessUseIndicator},
		FinanceInfo{LoanNumber, FinanceType, FinanceCompanyName, FinanceHouseNumber, FinanceStreetName, FinanceSecondaryRange, FinanceCityName, FinanceState, FinanceZip5, FinanceZip4,PremiumDueAmount}
		));
	
PolicyHolder := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, InsuranceType, Ambest, PolicyNumber, DataSource), 
		Holder Holder = UID(LexID, TransactionID, InsuranceType, Ambest, PolicyNumber, LastName, FirstName, MiddleName, NameSuffix, DateOfBirth, PrimRange, Predir, PrimName, AddressSuffix, PostDir, UnitDesig, SecondaryRange, City, Zip5, DataSource), 
		INTEGER SubjectNumber,
		STRING Relation,
		DATE HolderCancelDate,
		DATE ChangeEffectDate,
		DATE LapseStartDate,
		INTEGER LapseCounter,
		DATE LapseLastCancelDate,
		STRING CountLapseIndicator,
		STRING LastCancelDate,
		STRING InputFlag,
		DATE LoadDate,
		DATE StartDate, 
		DATE EndDate),
	MODEL(Transaction, Holder,
		SubjectNumber, Relation, HolderCancelDate, ChangeEffectDate, StartDate, EndDate,
		Lapses{LapseStartDate, LapseCounter, LapseLastCancelDate, LastCancelDate, InputFlag, CountLapseIndicator, LoadDate}
		));
	
VehiclePolicy := ASSOCIATION(FLAT(
		Policy Transaction = UID(TransactionID, InsuranceType, Ambest, PolicyNumber, DataSource), 
		Vehicle Auto = UID(VIN, TransactionID, DataSource),
		DATE CoverageStartDate,
		DATE CoverageEndDate,
		DATE VehicleCancellationDate,
		STRING CancelReason,
		DATE NotificationDate,
		DATE FirstLoadDate,
		INTEGER CoDeduct=NULL(),
		INTEGER CpDeduct=NULL(),
		STRING RegistrationState,
		STRING CoverageType,
		REAL IndividualLimit=NULL(),
		REAL OccurrenceLimit=NULL(),
		REAL CombinedSingleLimit=NULL(),
		STRING LoanNumber,
		STRING FinanceType,
		STRING FinanceCompanyName,
		STRING FinanceHouseNumber,
		STRING FinanceStreetName,
		STRING FinanceSecondaryRange, 
		STRING FinanceCityName,
		STRING FinanceState,
		INTEGER FinanceZip5, 
		INTEGER FinanceZip4,
		REAL PremiumDueAmount=NULL(),
		STRING BusinessUseIndicator),
	MODEL(Transaction, Auto,
		VehicleCancellationDate, CancelReason, NotificationDate, FirstLoadDate, CoDeduct, CpDeduct, RegistrationState,
		Coverages{CoverageType, IndividualLimit, OccurrenceLimit, CombinedSingleLimit, CoverageStartDate, CoverageEndDate,BusinessUseIndicator},
		FinanceInfo{LoanNumber, FinanceType, FinanceCompanyName, FinanceHouseNumber, FinanceStreetName, FinanceSecondaryRange, FinanceCityName, FinanceState, FinanceZip5, FinanceZip4,PremiumDueAmount}
		));