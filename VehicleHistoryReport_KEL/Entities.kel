ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));
 
Vehicle := ENTITY(FLAT(UID(TransactionID, Vin),
		STRING Vin,
		STRING TransactionID,
		INTEGER YearMake,
		STRING VehicleMake,
		STRING VehicleModel,
		STRING Body,
		STRING Engine,
		STRING CountryOfAssembly,
		STRING Class,
		INTEGER ResultCode,	// result from vin decoding software to report errors
		STRING ResultMessage,
		INTEGER HistoricalEventsCount,
		BOOLEAN IsOdometerReading,
		BOOLEAN IsMixedOdometerReading,	// readings in KMs and Miles
		BOOLEAN IsPossibleRollback,
		BOOLEAN IsAutoCheckAssured,
		INTEGER BBP,
		REAL LastOdometer,
		INTEGER AccidentCount,
		INTEGER RecallCount,
		BOOLEAN IsConditionReport,
		BOOLEAN IsRecallDataAvailable,
		REAL EstimatedAverageMiles,
		INTEGER ReportedOwnerCount,
		INTEGER ReportedAge,
		INTEGER ReportedScore,
		INTEGER ReportedCompareScoreRangeHigh,
		INTEGER ReportedCompareScoreRangeLow,
		STRING ReportedPositiveScoreFactor1,
		STRING ReportedPositiveScoreFactor2,
		STRING ReportedPositiveScoreFactor3,
		STRING ReportedNegativeScoreFactor1,
		STRING ReportedNegativeScoreFactor2,
		STRING ReportedNegativeScoreFactor3),
	MODEL(UID,
		Vin, TransactionID, YearMake, VehicleMake, VehicleModel, Body, Engine, CountryOfAssembly, Class, ResultCode, ResultMessage, HistoricalEventsCount, IsOdometerReading,
		IsMixedOdometerReading, IsPossibleRollback, IsAutoCheckAssured, BBP, LastOdometer, AccidentCount, RecallCount, IsConditionReport,	IsRecallDataAvailable, EstimatedAverageMiles,
		ReportedOwnerCount, ReportedAge, ReportedScore, ReportedCompareScoreRangeHigh, ReportedCompareScoreRangeLow, ReportedPositiveScoreFactor1, ReportedPositiveScoreFactor2,
		ReportedPositiveScoreFactor3, ReportedNegativeScoreFactor1, ReportedNegativeScoreFactor2, ReportedNegativeScoreFactor3));
		
Events := ENTITY(FLAT(UID(TransactionID, Vin, EventCounter),
		Vehicle rVehicle = UID(TransactionID, Vin),
		STRING TransactionID,
		STRING Vin,
		INTEGER EventCounter,
		INTEGER AccidentSequenceNumber,
		INTEGER ExperianType,	//Experian's internal code
		STRING Case,
		STRING EventType,
		DATE EventDate = FORMAT('YYYYMMDD'),
		STRING Category,
		INTEGER Odometer,
		DATE OriginalIncidentReportedDate = FORMAT('YYYYMMDD'),
		STRING OdometerRollbackUseIndicator,
		STRING UnitOfMeasurement,
		STRING City,
		STRING State,
		STRING Title,	//Title number (for title transactions) or document number (for emissions transactions).
		BOOLEAN IsLease,
		BOOLEAN IsLien,
		BOOLEAN TitleRegistrationStorm,
		STRING Color,
		STRING RecallCode,
		STRING RecallText,
		STRING RecallLinkText,
		STRING RecallUrl,
		STRING DealerOrganizationName,
		STRING DealerPhone,
		STRING Url,
		BOOLEAN UrlLink,
		STRING ChecklistGrp,
		STRING FileSource,
		INTEGER FileType),
	MODEL(*));

Owners := ENTITY(FLAT(UID(TransactionID, Vin, OwnerCounter),
		Vehicle rVehicle = UID(TransactionID, Vin),
		STRING TransactionID,
		STRING Vin,
		INTEGER OwnerCounter,
		INTEGER SequenceNumber,
		INTEGER YearPurchased,
		DATE StartDate = FORMAT('YYYYMMDD'),
		DATE EndDate = FORMAT('YYYYMMDD'),
		STRING OwnershipDuration,
		STRING State,
		BOOLEAN AccidentEvent),
	MODEL(*));

Inquiry := ENTITY(FLAT(UID(TransactionID),
		STRING TransactionID,
		INTEGER Sequence,
		INTEGER ProductID,
		DATE DateAdded = FORMAT('YYYY.MM.DD...'),
		STRING LoginID,
		STRING BillingCode,
		STRING FunctionName,
		STRING ReportCode,
		STRING AccountBase,
		STRING AccountSuffix,
		INTEGER AccountID,
		INTEGER CustomerNumber,
		STRING CustomerReferenceNumber,
		DATE DateOrdered = FORMAT('YYYY.MM.DD'),
		STRING ReferenceNumber,
		INTEGER ProcessType,
		REAL ProcessingTime,
		STRING ProcessingStatus,
		INTEGER BillingTypeID,
		REAL Price=NULL(R'0.0'),
		INTEGER RecordCount1,
		INTEGER RecordCount1Type,
		INTEGER RecordCount2,
		INTEGER RecordCount2Type,
		STRING ResultFormat,
		STRING ReportOptions,
		STRING TransactionCode,
		STRING ReturnNodeID,
		STRING RequestType,
		INTEGER OrderStatusCode,
		STRING ProductLine,
		STRING ProductVersion,
		STRING IpAddress,
		STRING ResponseTime,
		STRING VendorCode,
		STRING EspMethod,
		INTEGER BatchJobID,
		INTEGER BatchSeqNumber,
		STRING UserAdded,
		STRING UserChanged,
		DATE DateChanged = FORMAT('YYYY.MM.DD...')),
	MODEL(UID,
		TransactionID, Sequence, ProductID, DateAdded, LoginID, BillingCode, FunctionName, ReportCode, AccountBase, AccountSuffix, AccountID,
		CustomerNumber, CustomerReferenceNumber, DateOrdered, ReferenceNumber, ProcessType, ProcessingTime, ProcessingStatus, BillingTypeID, Price, RecordCount1,
		RecordCount1Type, RecordCount2, RecordCount2Type, ResultFormat, ReportOptions, TransactionCode, ReturnNodeID, RequestType,
		OrderStatusCode, ProductVersion, ProductLine, IpAddress, ResponseTime, VendorCode, EspMethod, BatchJobID, BatchSeqNumber, UserAdded, UserChanged, DateChanged));
 		
VehicleReportInquiry := ASSOCIATION(FLAT(Inquiry Transaction=UID(TransactionID), Vehicle VehicleReport=UID(TransactionID, Vin)));