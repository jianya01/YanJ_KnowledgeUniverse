IMPORT NCF_KEL.Entities;

// NCF v2.0 USE Statements
USE Consumer_Credit.FilesCleaned_NCF2_0.CreditReportSummary_Data(FLAT,
	Person,
	CreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = TRUE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateCreditFileEstbed = DateCreditFileEstbed,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool),
	CreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = FALSE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateCreditFileEstbed = DateCreditFileEstbed,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool),
	PersonCreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		Subject = LexID,
		TransactionID = Transaction_ID),
	JointCreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported), // Contains information for ASOF
	JointCreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported)  // Contains information for ASOF
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.ReportRequest_Data(FLAT,
	CreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateOfOrder = DateOfOrder,
		DateOfReceipt = DateOfReceipt,
		DateOfCompletion = DateOfCompletion,
		TimeOfReport = TimeOfReport,
		Quoteback = Quoteback,
		ReportCode = ReportCode,
		ReportCodeDescription = ReportCodeDesc,
		ReportType = ReportType,
		AccountNumber = AccountNumber,
		ProcessingCompletionStatus = ProcessingCompletionStatus,
		ReportUsage = ReportUsage,
		ReferenceNumber = ReferenceNumber,
		LienJudgementSource = Attach2ProcessStatus)
	);
 
USE Consumer_Credit.FilesCleaned_NCF2_0.Bankruptcy_Data(FLAT,
	CreditReportBankruptcy(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		PRDateFiled = DateFiled,
		BureauCode = BureauCode,
		PRStatusCode = BankStatusCode,
		PRConsumerDisputeFlag = ConsumerDisputeFlag,
		PRSatisfiedDischargeDate = SatisfiedDischargeDate,
		PRCourtNumber = CourtNumber,
		PRCaseNumber = CaseNumber,
		PRFilingType = FilingType)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.Collection_Data(FLAT,
	CreditReportCollection(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		CODateAssigned = DateAssigned,
		BureauCode = BureauCode,
		COKOB = KOB,
		COPastDueAmount = PastDueAmount,
		COClassificationCode = Classification,
		COConsumerDisputeFlag = ConsumerDisputeFlag,
		COAccountPurposeType = AccountPurposeType,
		COConsumerInfoIndicator = ConsumerInformationIndicator,
		CODateOfFirstDelinquency = FirstDelinquencyDate,
		COReportingMemberNumber = ReportingMemberAgencyNumber,
		COClientNameOrNumber = ClientNameOrNumber,
		COECOACode = ECOACode,
		COLastPaymentDate = LastPaymentDate,
		COOriginalAmount = OriginalAmount,
		COBalanceAmount = BalanceAmount,
		COCollectionItemStatus = CollectionItemStatus)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.InquiryHistory_Data(FLAT,
	CreditReportInquiry(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		BureauCode = BureauCode, 
		IQKOB = KOB,
		IQAmount = Amount,
		IQType = IQType,
		IQTerms = Terms,
		IQDateOfInquiry = DateOfInquiry,
		IQInquirerName = InquirerName,
		IQInquirerID = InquirerID)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.Judgement_Data(FLAT,
	CreditReportJudgment(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		BureauCode = BureauCode,
		PRDateFiled = DateFiled,
		PRReportingCourtNumber = ReportingCourtNumber,
		PRCaseNumber = CaseNumber,
		PRAmountInvolved = AmountInvolved,
		//PRType = TypeOfRecordItem,
		PRJudgmentType = JudgementType,
		PRDateSatisfied = DateSatisfied,
		//PRStatus = StatusOfRecorditem,
		PRDefendant = Defendant,
		PRPlaintiff = Plaintiff
//		, PRState = PRState?
		)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.TaxLien_Data(FLAT,
	CreditReportLien(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		PRDateFiled = DateFiled,
		BureauCode = BureauCode,
		PRConsumerDisputeFlag = ConsumerDisputeFlag,
		PRReportingCourtNumber = ReportingCourtNumber,
		PRCaseNumber = CaseNumber,
		PRAmountOfLien = AmountOfLien,
		PRACBCreditorClass = ACBCreditorClass,
		PRDateReleased = DateReleased
//		, PRState = PRState?
		)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.TradeLine_Data(FLAT,
	CreditReportTradeline(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		BureauCode = BureauCode,
		TradeKey = TradeKey,
		TRKOB = KOB,
		TRDateAccountOpened = DateAccountOpened,
		TRDateLastActivity = DateOfLastActivity,
		TRReportingMemberNumber = ReportingMemberNumber,
		TRMemberName = MemberName,
		TRHighestCreditAmount = HighestCreditAmount,
		TRCreditLimit = CreditLimit,
		TRChargeOffAmount = ChargeOffAmount,
		TRTerms = Terms,
		TRAccountNumber = AccountNumber,
		TRAccountBalance = AccountBalance,
		TRScheduledPaymentAmount = ScheduledPaymentAmount,
		TRActualPaymentAmount = ActualPaymentAmount,
		TRActualPaymentNullInd = ActualPaymentNullInd,
		TRMonthlyPaymentType = MonthlyPaymentType,
		TRPastDueAmount = PastDueAmount,
		TRAccountType = AccountTypeCode,
		TRAccountPurposeType = AccountPurposeType,
		TRCurrentRateCode = CurrentRateCode,
		TRStatusCode = StatusCode,
		TRAccountConditionCode = AccountConditionCode,
		TRMonthsReviewed = MonthsReviewed,
		TRAccountDesignatorCode = AccountDesignatorCode,
		TRClosedDate = ClosedDate,
		TRThirtyDayCounter = ThirtyDayCounter,
		TRSixtyDayCounter = SixtyDayCounter,
		TRNinetyDayCounter = NinetyDayCounter,
		TRDerogCounter = DerogCounter,
		TROldHistoricalWorstRatingCode = OldHistoricalWorstRatingCode,
		TROldHistoricalWorstRatingDate = OldHistoricalWorstRatingDate,
		TRStatusDate = StatusDate,
		TRLastPaymentDate = LastPaymentDate,
		TR48MonthsPaymentHistory = PaymentHistory48Months,
		TRMonthsPaymentHistory = PaymentHistory84Months,
		TRConsumerDisputeFlag = ConsumerDisputeFlag,
		TRConsumerInfoIndicator = ConsumerInformationIndicator,
		TRPaymentFrequency = PaymentFrequency,
		TRActivityDesignatorCode = ActivityDesignatorCode,
		TRMortgageID = MortgageID,
		TRDeferredPaymentStartDate = DeferredPaymentStartDate,
		TRDeferredPaymentAmount = DeferredPaymentAmount,
		TRBalloonPaymentAmount = BalloonPaymentAmount,
		TRBalloonPaymentDueDate = BalloonPaymentDueDate,
		TRPaymentPatternStartDate = PaymentPatternStartDate,
		TDActualPaymentNullInd = ActualPaymentNullInd,
		TRMaximumDelinquencyCode = MaximumDelinquencyCode,
		TRMaximumDelinquencyDate = MaximumDelinquencyDate)
	);
	
USE Consumer_Credit.FilesCleaned_NCF2_0.Tradeline_History_Data(FLAT,
	CreditReportTradeline(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		PaymentMonth = RecordCounter,
		PaymentCode = RecordValue)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.TradeLine_Trended_Data(FLAT,
	CreditReportTradeline(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		HDDateOfReport = Date_Reported,
		MonthCounter = MonthCounter,
		TDTrendedDataDate = TrendedDataDate,
		TDBalanceAmount = BalanceAmount,
		TDLoanAmountCreditLimit = LoanAmountCreditLimit,
		TDScheduledPayment = ScheduledPayment,
		TDActualPayment = ActualPayment,
		TRLastPaymentDate = LastPaymentDate)
	);

USE Consumer_Credit.FilesCleaned_NCF2_0.NarrativeA_Data(FLAT,
	CreditReportNarrativeRemarks(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		BureauCode = BureauCode,
		NarrativeCode = RemarksCode1),
	CreditReportNarrativeRemarks(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		BureauCode = BureauCode,
		NarrativeCode = RemarksCode2),
	CreditReportNarrativeRemarks(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		BureauCode = BureauCode,
		NarrativeCode = RemarksCode3),
	CreditReportNarrativeRemarks(
		TransactionID = Transaction_ID,
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		BureauCode = BureauCode,
		NarrativeCode = RemarksCode4)
	);