IMPORT KnowledgeUniverse.NCF_KEL.Entities;
IMPORT KnowledgeUniverse.NCF_KEL.Constants;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesGlobal;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesTradeline;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesAccountBalance;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesAccountCondition;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesCrossSegment;
IMPORT KnowledgeUniverse.NCF_KEL.AttributesTrended;
IMPORT NCF_KEL.Uses;

/*************************************************************************/
/*************************************************************************/
/*                                                                       */
/*                                                                       */
/*                             Helper Functions                          */
/*                                                                       */
/*                                                                       */
/*************************************************************************/
/*************************************************************************/

FUNCTION: GetMos(DATE fromDate, DATE toDate) <= IF(YEAR(fromDate) > 1900 AND YEAR(toDate) > 1900,
													BOUNDSFOLD((YEAR(toDate) - YEAR(fromDate))*12 + MONTH(toDate) - MONTH(fromDate), -9992, 9992),
												-9999);

FUNCTION: GetDays(DATE fromDate, DATE toDate) <= IF(YEAR(fromDate) > 1900 AND YEAR(toDate) > 1900,
													DAYSBETWEEN(fromDate, toDate),
												-9999);

//FUNCTION: ROUND2(REAL inreal) <= ECL(ROUND(inreal, 2))  RETURNS REAL;// round to 2 decimals

FUNCTION: ROUND2(REAL inreal) <= ECL(ROUND(inreal + 0.00000000001, 2))  RETURNS REAL;// round to 2 decimals
// FUNCTION: ROUND2(REAL inreal) <= ECL(ROUND(inreal, 2))  RETURNS REAL;// round to 2 decimals

FUNCTION: CastBL2Int(BOOLEAN statement) <= IF(statement, 1, 0);

FUNCTION: MIN13W0(REAL a1, REAL a2, REAL a3,REAL a4,REAL a5,REAL a6,REAL a7,REAL a8,REAL a9,REAL a10,REAL a11,REAL a12,REAL a13) <= 
                MIN(IF(a1 < 0, 9999999999, a1), IF(a2  < 0, 9999999999, a2),
                IF(a3  < 0, 9999999999, a3), IF(a4  < 0, 9999999999, a4),
                IF(a5  < 0, 9999999999, a5), IF(a6  < 0, 9999999999, a6),
                IF(a7  < 0, 9999999999, a7), IF(a8  < 0, 9999999999, a8),
                IF(a9  < 0, 9999999999, a9), IF(a10  < 0, 9999999999, a10),
                IF(a11  < 0, 9999999999, a11), IF(a12  < 0, 9999999999, a12),
                IF(a13  < 0, 9999999999, a13));

FUNCTION: MIN25W0(REAL a1, REAL a2, REAL a3,REAL a4,REAL a5,REAL a6,REAL a7,REAL a8,REAL a9,REAL a10,REAL a11,REAL a12,REAL a13,REAL a14,REAL a15,REAL a16,REAL a17,REAL a18,REAL a19,REAL a20,REAL a21,REAL a22,REAL a23,REAL a24,REAL a25) <= 
                MIN(IF(a1  < 0, 9999999999, a1), IF(a2  < 0, 9999999999,a2),
                IF(a3  < 0, 9999999999, a3), IF(a4  < 0, 9999999999,a4),
                IF(a5  < 0, 9999999999, a5), IF(a6  < 0, 9999999999,a6),
                IF(a7  < 0, 9999999999, a7), IF(a8  < 0, 9999999999,a8),
                IF(a9  < 0, 9999999999, a9), IF(a10  < 0, 9999999999, a10),
                IF(a11  < 0, 9999999999, a11), IF(a12  < 0, 9999999999, a12),
                IF(a13  < 0, 9999999999, a13), IF(a14  < 0, 9999999999, a14),
                IF(a15  < 0, 9999999999, a15), IF(a16  < 0, 9999999999, a16),
                IF(a17  < 0, 9999999999, a17), IF(a18  < 0, 9999999999, a18),
                IF(a19  < 0, 9999999999, a19), IF(a20  < 0, 9999999999, a20),
                IF(a21  < 0, 9999999999, a21), IF(a22  < 0, 9999999999, a22),
                IF(a23  < 0, 9999999999, a23), IF(a24  < 0, 9999999999, a24),
                IF(a25  < 0, 9999999999, a25)); 



/***********************************************************************************************************************/
/***********************************************************************************************************************/
/*********                                                                                                   ***********/
/*********                                        Attributes Section                                         ***********/
/*********                                                                                                   ***********/
/***********************************************************************************************************************/
/***********************************************************************************************************************/ 

/*************************************************************************/
/*                                                                       */
/*                       Attributes for Bankruptcy                       */
/*                                                                       */
/*************************************************************************/

// SAS temperary 
// Group 1 is not used in KEL
//CreditReportBankruptcy: => u_BKP_group1 := 1;
CreditReportBankruptcy: => u_BKP_group2 := GPRBankruptcy7;
CreditReportBankruptcy: => u_BKP_group3 := GPRBankruptcy13;

CreditReport: => u_BKP_CntrlLevel1 := COUNT(CreditReportBankruptcy);

CreditReport: => u_BKP_CntrlLevel2_01 := COUNT(CreditReportBankruptcy);
CreditReport: => u_BKP_CntrlLevel2_02 := COUNT(CreditReportBankruptcy(u_BKP_group2));
CreditReport: => u_BKP_CntrlLevel2_03 := COUNT(CreditReportBankruptcy(u_BKP_group3));

CreditReport: => u_BKP_CntrlLevel31_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded)); 	
CreditReport: => u_BKP_CntrlLevel31_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded));
CreditReport: => u_BKP_CntrlLevel31_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded));

CreditReport: => u_BKP_CntrlLevel32_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDischargedBKP));
CreditReport: => u_BKP_CntrlLevel32_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDischargedBKP));
CreditReport: => u_BKP_CntrlLevel32_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDischargedBKP));

CreditReport: => u_BKP_CntrlLevel33_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDismissedBKP));
CreditReport: => u_BKP_CntrlLevel33_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDismissedBKP));
CreditReport: => u_BKP_CntrlLevel33_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDismissedBKP));

CreditReport: => u_BKP_CntrlLevel34_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));
CreditReport: => u_BKP_CntrlLevel34_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));
CreditReport: => u_BKP_CntrlLevel34_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));

CreditReport: => u_BKP_CntrlLevel42d_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));
CreditReport: => u_BKP_CntrlLevel42d_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));
CreditReport: => u_BKP_CntrlLevel42d_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));

CreditReport: => u_BKP_CntrlLevel43d_01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));
CreditReport: => u_BKP_CntrlLevel43d_02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));
CreditReport: => u_BKP_CntrlLevel43d_03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)));


//Total_Bankruptcy:
CreditReport: => tmp_CTotalBankruptcy01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded));
CreditReport: => tmp_CTotalBankruptcy02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded));
CreditReport: => tmp_CTotalBankruptcy03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded));

CreditReport: => CTotalBankruptcy01 := IF(tmp_CTotalBankruptcy01 = 0, 
											MAP(u_BKP_CntrlLevel1 = 0 => 0,
												u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalBankruptcy01, CAP_92));
CreditReport: => CTotalBankruptcy02 := IF(tmp_CTotalBankruptcy02 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_02 = 0 => 0,
												u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalBankruptcy02, CAP_92));
CreditReport: => CTotalBankruptcy03 := IF(tmp_CTotalBankruptcy03 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_03 = 0 => 0,
												u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalBankruptcy03, CAP_92));

//Total_OpenBankruptcy:
CreditReport: => tmp_CTotalOpnBankruptcy01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));
CreditReport: => tmp_CTotalOpnBankruptcy02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));
CreditReport: => tmp_CTotalOpnBankruptcy03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND NOT GPRDischargedBKP AND NOT GPRDismissedBKP));

CreditReport: => CTotalOpnBankruptcy01 := IF(tmp_CTotalOpnBankruptcy01 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalOpnBankruptcy01, CAP_92));
CreditReport: => CTotalOpnBankruptcy02 := IF(tmp_CTotalOpnBankruptcy02 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalOpnBankruptcy02, CAP_92));
CreditReport: => CTotalOpnBankruptcy03 := IF(tmp_CTotalOpnBankruptcy03 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalOpnBankruptcy03, CAP_92));

//Total_DischargedBankruptcy:
CreditReport: => tmp_CTotalDischargedBKPT01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDischargedBKP));
CreditReport: => tmp_CTotalDischargedBKPT02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDischargedBKP));
CreditReport: => tmp_CTotalDischargedBKPT03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDischargedBKP));

CreditReport: => CTotalDischargedBKPT01 := IF(tmp_CTotalDischargedBKPT01 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDischargedBKPT01, CAP_92));
CreditReport: => CTotalDischargedBKPT02 := IF(tmp_CTotalDischargedBKPT02 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDischargedBKPT02, CAP_92));
CreditReport: => CTotalDischargedBKPT03 := IF(tmp_CTotalDischargedBKPT03 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDischargedBKPT03, CAP_92));

//Total_DismissedBankruptcy:
CreditReport: => tmp_CTotalDismissedBKPT01 := COUNT(CreditReportBankruptcy(NOT G3BKPExcluded AND GPRDismissedBKP));
CreditReport: => tmp_CTotalDismissedBKPT02 := COUNT(CreditReportBankruptcy(u_BKP_group2 AND NOT G3BKPExcluded AND GPRDismissedBKP));
CreditReport: => tmp_CTotalDismissedBKPT03 := COUNT(CreditReportBankruptcy(u_BKP_group3 AND NOT G3BKPExcluded AND GPRDismissedBKP));

CreditReport: => CTotalDismissedBKPT01 := IF(tmp_CTotalDismissedBKPT01 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDismissedBKPT01, CAP_92));
CreditReport: => CTotalDismissedBKPT02 := IF(tmp_CTotalDismissedBKPT02 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDismissedBKPT02, CAP_92));
CreditReport: => CTotalDismissedBKPT03 := IF(tmp_CTotalDismissedBKPT03 = 0,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3),
											MIN(tmp_CTotalDismissedBKPT03, CAP_92));

//Age_MostRecentBKP:
CreditReport: => tmp_MAgeMostRecentBKP01 := MIN(CreditReportBankruptcy(NOT G3BKPExcluded), GMOSPRDateFiled);
CreditReport: => tmp_MAgeMostRecentBKP02 := MIN(CreditReportBankruptcy(u_BKP_group2 AND (NOT G3BKPExcluded)), GMOSPRDateFiled);
CreditReport: => tmp_MAgeMostRecentBKP03 := MIN(CreditReportBankruptcy(u_BKP_group3 AND (NOT G3BKPExcluded)), GMOSPRDateFiled);

CreditReport: => MAgeMostRecentBKP01 := IF(tmp_MAgeMostRecentBKP01:Null,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeMostRecentBKP01, CAP_9992));
CreditReport: => MAgeMostRecentBKP02 := IF(tmp_MAgeMostRecentBKP02:Null,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeMostRecentBKP02, CAP_9992));
CreditReport: => MAgeMostRecentBKP03 := IF(tmp_MAgeMostRecentBKP03:Null,
											MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
												u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeMostRecentBKP03, CAP_9992));

//Months_MostRecentDischarge:
CreditReport: => tmp_MMostRecentBKPDischarge01 := MIN(CreditReportBankruptcy((NOT G3BKPExcluded) AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);
CreditReport: => tmp_MMostRecentBKPDischarge02 := MIN(CreditReportBankruptcy(u_BKP_group2 AND (NOT G3BKPExcluded) AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);
CreditReport: => tmp_MMostRecentBKPDischarge03 := MIN(CreditReportBankruptcy(u_BKP_group3 AND (NOT G3BKPExcluded) AND GPRDischargedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);

CreditReport: => MMostRecentBKPDischarge01 := IF(tmp_MMostRecentBKPDischarge01:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel32_01 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel42d_01 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDischarge01, CAP_9992));
CreditReport: => MMostRecentBKPDischarge02 := IF(tmp_MMostRecentBKPDischarge02:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel32_02 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel42d_02 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDischarge02, CAP_9992));
CreditReport: => MMostRecentBKPDischarge03 := IF(tmp_MMostRecentBKPDischarge03:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel32_03 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel42d_03 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDischarge03, CAP_9992));

//Age_MostRecentOpnBKP:
CreditReport: => tmp_MAgeMostRecentOpnBKP01 := MIN(CreditReportBankruptcy((NOT G3BKPExcluded) AND (NOT GPRDischargedBKP) AND (NOT GPRDismissedBKP)), GMOSPRDateFiled);
CreditReport: => tmp_MAgeMostRecentOpnBKP02 := MIN(CreditReportBankruptcy(u_BKP_group2 AND (NOT G3BKPExcluded) AND (NOT GPRDischargedBKP) AND (NOT GPRDismissedBKP)), GMOSPRDateFiled);
CreditReport: => tmp_MAgeMostRecentOpnBKP03 := MIN(CreditReportBankruptcy(u_BKP_group3 AND (NOT G3BKPExcluded) AND (NOT GPRDischargedBKP) AND (NOT GPRDismissedBKP)), GMOSPRDateFiled);

CreditReport: => MAgeMostRecentOpnBKP01 := IF(tmp_MAgeMostRecentOpnBKP01:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel34_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeMostRecentOpnBKP01, CAP_9992));
CreditReport: => MAgeMostRecentOpnBKP02 := IF(tmp_MAgeMostRecentOpnBKP02:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel34_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeMostRecentOpnBKP02, CAP_9992));
CreditReport: => MAgeMostRecentOpnBKP03 := IF(tmp_MAgeMostRecentOpnBKP03:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel34_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeMostRecentOpnBKP03, CAP_9992));

//Months_MostRecentDismissed:
CreditReport: => tmp_MMostRecentBKPDismiss01 := MIN(CreditReportBankruptcy((NOT G3BKPExcluded) AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);
CreditReport: => tmp_MMostRecentBKPDismiss02 := MIN(CreditReportBankruptcy(u_BKP_group2 AND (NOT G3BKPExcluded) AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);
CreditReport: => tmp_MMostRecentBKPDismiss03 := MIN(CreditReportBankruptcy(u_BKP_group3 AND (NOT G3BKPExcluded) AND GPRDismissedBKP AND (GMOSPRSatisfiedDischargeDate >= 0)), GMOSPRSatisfiedDischargeDate);
CreditReport: => MMostRecentBKPDismiss01 := IF(tmp_MMostRecentBKPDismiss01:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel33_01 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel43d_01 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDismiss01, CAP_9992));
CreditReport: => MMostRecentBKPDismiss02 := IF(tmp_MMostRecentBKPDismiss02:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel33_02 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel43d_02 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDismiss02, CAP_9992));
CreditReport: => MMostRecentBKPDismiss03 := IF(tmp_MMostRecentBKPDismiss03:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel33_03 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel43d_03 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMostRecentBKPDismiss03, CAP_9992));

//Months_MaxLifeToDischargeChp13:
CreditReport: => tmp_MMaxLifeChp13Discharge := MAX(CreditReportBankruptcy(u_BKP_group3 AND (NOT G3BKPExcluded) AND GPRDischargedBKP AND (GMOSFiledToDischargeDate >= 0)), GMOSFiledToDischargeDate);
CreditReport: => MMaxLifeChp13Discharge := IF(tmp_MMaxLifeChp13Discharge:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel32_03 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel42d_03 = 0 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMaxLifeChp13Discharge, CAP_9992));

//Months_MINBtwnBKPFiled:
CreditReportBankruptcy: => ReportLexID := IF(rCreditReport.LexID:Null, 0, rCreditReport.LexID);

CreditReportBankruptcy: NOT G3BKPExcluded => u_prevMMinMosBetweenBKPFile01:= Sequence.PreviousWhere(NOT G3BKPExcluded AND TransactionID = CreditReportBankruptcy.TransactionID AND ReportLexID = CreditReportBankruptcy.ReportLexID, GMOSPRDateFiled).GMOSPRDateFiled;
CreditReportBankruptcy: u_BKP_group2 AND NOT G3BKPExcluded => u_prevMMinMosBetweenBKPFile02:= Sequence.PreviousWhere(u_BKP_group2 AND NOT G3BKPExcluded AND u_BKP_group2 = CreditReportBankruptcy.u_BKP_group2 AND TransactionID = CreditReportBankruptcy.TransactionID AND ReportLexID = CreditReportBankruptcy.ReportLexID, GMOSPRDateFiled).GMOSPRDateFiled;
CreditReportBankruptcy: u_BKP_group3 AND NOT G3BKPExcluded => u_prevMMinMosBetweenBKPFile03:= Sequence.PreviousWhere(u_BKP_group3 AND NOT G3BKPExcluded AND u_BKP_group3 = CreditReportBankruptcy.u_BKP_group3 AND TransactionID = CreditReportBankruptcy.TransactionID AND ReportLexID = CreditReportBankruptcy.ReportLexID, GMOSPRDateFiled).GMOSPRDateFiled;

CreditReport: => tmp_MMinMosBetweenBKPFile01 := MIN(CreditReportBankruptcy, GMOSPRDateFiled - u_prevMMinMosBetweenBKPFile01);
CreditReport: => tmp_MMinMosBetweenBKPFile02 := MIN(CreditReportBankruptcy, GMOSPRDateFiled - u_prevMMinMosBetweenBKPFile02);
CreditReport: => tmp_MMinMosBetweenBKPFile03 := MIN(CreditReportBankruptcy, GMOSPRDateFiled - u_prevMMinMosBetweenBKPFile03);


CreditReport: => MMinMosBetweenBKPFile01 := IF(tmp_MMinMosBetweenBKPFile01:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel31_01 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel31_01 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMinMosBetweenBKPFile01, CAP_9992));
CreditReport: => MMinMosBetweenBKPFile02 := IF(tmp_MMinMosBetweenBKPFile02:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel31_02 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel31_02 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMinMosBetweenBKPFile02, CAP_9992));
CreditReport: => MMinMosBetweenBKPFile03 := IF(tmp_MMinMosBetweenBKPFile03:Null,
												MAP(u_BKP_CntrlLevel1 = 0 => DEFAULT_L1,
													u_BKP_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_BKP_CntrlLevel31_03 = 0 => DEFAULT_L3,
													u_BKP_CntrlLevel31_03 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_MMinMosBetweenBKPFile03, CAP_9992));


/*************************************************************************/
/*                                                                       */
/*                       Attributes for Collection                       */
/*                                                                       */
/*************************************************************************/

// P03 attributes
CreditReportCollection: => u_CO_group1 := TRUE;
CreditReportCollection: => u_CO_group2 := G2CORetail;
CreditReportCollection: => u_CO_group3 := G2COCableCellular;
CreditReportCollection: => u_CO_group4 := G2COUtilityNotCableCellular;

CreditReport: => u_CO_CntrlLevel1 := COUNT(CreditReportCollection);
CreditReport: => u_CO_CntrlLevel1exBKP := COUNT(CreditReportCollection(NOT G2Bankruptcy));
CreditReport: => u_CO_CntrlLevel34_01 := COUNT(CreditReportCollection(NOT G2Bankruptcy AND NOT G3COExcluded));
CreditReport: => u_CO_CntrlLevel35_01 := COUNT(CreditReportCollection(NOT G2Bankruptcy AND NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => u_CO_CntrlLevel45r_01 := COUNT(CreditReportCollection(NOT G2Bankruptcy AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0));

CreditReport: => u_CO_CntrlLevel2_01 := COUNT(CreditReportCollection);
CreditReport: => u_CO_CntrlLevel2_02 := COUNT(CreditReportCollection(u_CO_group2));
CreditReport: => u_CO_CntrlLevel2_03 := COUNT(CreditReportCollection(u_CO_group3));
CreditReport: => u_CO_CntrlLevel2_04 := COUNT(CreditReportCollection(u_CO_group4));

CreditReport: => u_CO_CntrlLevel31_01 := COUNT(CreditReportCollection(NOT G3COExcluded));
CreditReport: => u_CO_CntrlLevel31_02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded));
CreditReport: => u_CO_CntrlLevel31_03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded));
CreditReport: => u_CO_CntrlLevel31_04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded));

CreditReport: => u_CO_CntrlLevel32_01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => u_CO_CntrlLevel32_02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => u_CO_CntrlLevel32_03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => u_CO_CntrlLevel32_04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid));

CreditReport: => u_CO_CntrlLevel33_01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => u_CO_CntrlLevel33_02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => u_CO_CntrlLevel33_03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => u_CO_CntrlLevel33_04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));

CreditReport: => u_CO_CntrlLevel42r_01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0));
CreditReport: => u_CO_CntrlLevel42r_02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0));
CreditReport: => u_CO_CntrlLevel42r_03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0));
CreditReport: => u_CO_CntrlLevel42r_04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0));

// ****** Level 1 Attributes ********
// Total_Collection:
CreditReport: => tmp_CTotalCollection01 := COUNT(CreditReportCollection(NOT G3COExcluded));
CreditReport: => tmp_CTotalCollection02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded));
CreditReport: => tmp_CTotalCollection03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded));
CreditReport: => tmp_CTotalCollection04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded));

CreditReport: => CTotalCollection01 := IF(tmp_CTotalCollection01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => 0,
												u_CO_CntrlLevel2_01 = 0 => 0,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3,0),
											MIN(tmp_CTotalCollection01, CAP_92));
CreditReport: => CTotalCollection02 := IF(tmp_CTotalCollection02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => 0,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3,0),
											MIN(tmp_CTotalCollection02, CAP_92));
CreditReport: => CTotalCollection03 := IF(tmp_CTotalCollection03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => 0,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3,0),
											MIN(tmp_CTotalCollection03, CAP_92));
CreditReport: => CTotalCollection04 := IF(tmp_CTotalCollection04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => 0,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3,0),
											MIN(tmp_CTotalCollection04, CAP_92));

// Total_UnpaidCollection:
CreditReport: => tmp_CTotalUnpaidCollection01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => tmp_CTotalUnpaidCollection02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => tmp_CTotalUnpaidCollection03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid));
CreditReport: => tmp_CTotalUnpaidCollection04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid));

CreditReport: => CTotalUnpaidCollection01 := IF(tmp_CTotalUnpaidCollection01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3,0),
												MIN(tmp_CTotalUnpaidCollection01, CAP_92));
CreditReport: => CTotalUnpaidCollection02 := IF(tmp_CTotalUnpaidCollection02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3,0),
												MIN(tmp_CTotalUnpaidCollection02, CAP_92));
CreditReport: => CTotalUnpaidCollection03 := IF(tmp_CTotalUnpaidCollection03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3,0),
												MIN(tmp_CTotalUnpaidCollection03, CAP_92));
CreditReport: => CTotalUnpaidCollection04 := IF(tmp_CTotalUnpaidCollection04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3,0),
												MIN(tmp_CTotalUnpaidCollection04, CAP_92));

// Total_Active06MCollection:
CreditReport: => tmp_CTotalActive06MCollection01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => tmp_CTotalActive06MCollection02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => tmp_CTotalActive06MCollection03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));
CreditReport: => tmp_CTotalActive06MCollection04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6));

CreditReport: => CTotalActive06MCollection01 := IF(tmp_CTotalActive06MCollection01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3,
														u_CO_CntrlLevel42r_01 = 0 => DEFAULT_L4,0),
													MIN(tmp_CTotalActive06MCollection01, CAP_92));
CreditReport: => CTotalActive06MCollection02 := IF(tmp_CTotalActive06MCollection02 = 0,
												 MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3,
														u_CO_CntrlLevel42r_02 = 0 => DEFAULT_L4,0),
												 MIN(tmp_CTotalActive06MCollection02, CAP_92));
CreditReport: => CTotalActive06MCollection03 := IF(tmp_CTotalActive06MCollection03 = 0,
												 MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3,
														u_CO_CntrlLevel42r_03 = 0 => DEFAULT_L4,0),
												 MIN(tmp_CTotalActive06MCollection03, CAP_92));
CreditReport: => CTotalActive06MCollection04 := IF(tmp_CTotalActive06MCollection04 = 0,
												 MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3,
														u_CO_CntrlLevel42r_04 = 0 => DEFAULT_L4,0),
												 MIN(tmp_CTotalActive06MCollection04, CAP_92));

// Total_PartialPayColls:
CreditReport: => tmp_CTotalPartialPayColls01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND COBalanceAmount < COOriginalAmount));
CreditReport: => tmp_CTotalPartialPayColls02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND COBalanceAmount < COOriginalAmount));
CreditReport: => tmp_CTotalPartialPayColls03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND COBalanceAmount < COOriginalAmount));
CreditReport: => tmp_CTotalPartialPayColls04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND COBalanceAmount < COOriginalAmount));

CreditReport: => CTotalPartialPayColls01 := IF(tmp_CTotalPartialPayColls01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalPartialPayColls01, CAP_92));
CreditReport: => CTotalPartialPayColls02 := IF(tmp_CTotalPartialPayColls02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalPartialPayColls02, CAP_92));
CreditReport: => CTotalPartialPayColls03 := IF(tmp_CTotalPartialPayColls03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalPartialPayColls03, CAP_92));
CreditReport: => CTotalPartialPayColls04 := IF(tmp_CTotalPartialPayColls04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalPartialPayColls04, CAP_92));

// Total_Collection12M:
CreditReport: => tmp_CTotalCollection12M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalCollection12M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalCollection12M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalCollection12M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));

CreditReport: => CTotalCollection12M01 := IF(tmp_CTotalCollection12M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection12M01, CAP_92));
CreditReport: => CTotalCollection12M02 := IF(tmp_CTotalCollection12M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection12M02, CAP_92));
CreditReport: => CTotalCollection12M03 := IF(tmp_CTotalCollection12M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection12M03, CAP_92));
CreditReport: => CTotalCollection12M04 := IF(tmp_CTotalCollection12M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection12M04, CAP_92));


// Total_Collection24M:
CreditReport: => tmp_CTotalCollection24M01 := COUNT(CreditReportCollection(NOT G3COExcluded  AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalCollection24M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalCollection24M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalCollection24M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));

CreditReport: => CTotalCollection24M01 := IF(tmp_CTotalCollection24M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection24M01, CAP_92));
CreditReport: => CTotalCollection24M02 := IF(tmp_CTotalCollection24M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection24M02, CAP_92));
CreditReport: => CTotalCollection24M03 := IF(tmp_CTotalCollection24M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection24M03, CAP_92));
CreditReport: => CTotalCollection24M04 := IF(tmp_CTotalCollection24M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection24M04, CAP_92));


// Total_Collection36M:
CreditReport: => tmp_CTotalCollection36M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalCollection36M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalCollection36M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalCollection36M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));

CreditReport: => CTotalCollection36M01 := IF(tmp_CTotalCollection36M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection36M01, CAP_92));
CreditReport: => CTotalCollection36M02 := IF(tmp_CTotalCollection36M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection36M02, CAP_92));
CreditReport: => CTotalCollection36M03 := IF(tmp_CTotalCollection36M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection36M03, CAP_92));
CreditReport: => CTotalCollection36M04 := IF(tmp_CTotalCollection36M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection36M04, CAP_92));


// Total_Collection48M:
CreditReport: => tmp_CTotalCollection48M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalCollection48M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalCollection48M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalCollection48M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));

CreditReport: => CTotalCollection48M01 := IF(tmp_CTotalCollection48M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection48M01, CAP_92));
CreditReport: => CTotalCollection48M02 := IF(tmp_CTotalCollection48M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection48M02, CAP_92));
CreditReport: => CTotalCollection48M03 := IF(tmp_CTotalCollection48M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection48M03, CAP_92));
CreditReport: => CTotalCollection48M04 := IF(tmp_CTotalCollection48M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection48M04, CAP_92));

// Total_Collection60M:
CreditReport: => tmp_CTotalCollection60M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 60));
CreditReport: => tmp_CTotalCollection60M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 60));
CreditReport: => tmp_CTotalCollection60M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 60));
CreditReport: => tmp_CTotalCollection60M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 60));

CreditReport: => CTotalCollection60M01 := IF(tmp_CTotalCollection60M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection60M01, CAP_92));
CreditReport: => CTotalCollection60M02 := IF(tmp_CTotalCollection60M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection60M02, CAP_92));
CreditReport: => CTotalCollection60M03 := IF(tmp_CTotalCollection60M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection60M03, CAP_92));
CreditReport: => CTotalCollection60M04 := IF(tmp_CTotalCollection60M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollection60M04, CAP_92));

// Total_UnpaidCollection12M
CreditReport: => tmp_CTotalUnpaidCollection12M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalUnpaidCollection12M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalUnpaidCollection12M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalUnpaidCollection12M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));

CreditReport: => CTotalUnpaidCollection12M01 := IF(tmp_CTotalUnpaidCollection12M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection12M01, CAP_92));
CreditReport: => CTotalUnpaidCollection12M02 := IF(tmp_CTotalUnpaidCollection12M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection12M02, CAP_92));
CreditReport: => CTotalUnpaidCollection12M03 := IF(tmp_CTotalUnpaidCollection12M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection12M03, CAP_92));
CreditReport: => CTotalUnpaidCollection12M04 := IF(tmp_CTotalUnpaidCollection12M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection12M04, CAP_92));

// Total_UnpaidCollection24M
CreditReport: => tmp_CTotalUnpaidCollection24M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalUnpaidCollection24M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalUnpaidCollection24M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalUnpaidCollection24M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));

CreditReport: => CTotalUnpaidCollection24M01 := IF(tmp_CTotalUnpaidCollection24M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection24M01, CAP_92));
CreditReport: => CTotalUnpaidCollection24M02 := IF(tmp_CTotalUnpaidCollection24M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection24M02, CAP_92));
CreditReport: => CTotalUnpaidCollection24M03 := IF(tmp_CTotalUnpaidCollection24M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection24M03, CAP_92));
CreditReport: => CTotalUnpaidCollection24M04 := IF(tmp_CTotalUnpaidCollection24M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection24M04, CAP_92));

// Total_UnpaidCollection36M
CreditReport: => tmp_CTotalUnpaidCollection36M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalUnpaidCollection36M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalUnpaidCollection36M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalUnpaidCollection36M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));

CreditReport: => CTotalUnpaidCollection36M01 := IF(tmp_CTotalUnpaidCollection36M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection36M01, CAP_92));
CreditReport: => CTotalUnpaidCollection36M02 := IF(tmp_CTotalUnpaidCollection36M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection36M02, CAP_92));
CreditReport: => CTotalUnpaidCollection36M03 := IF(tmp_CTotalUnpaidCollection36M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection36M03, CAP_92));
CreditReport: => CTotalUnpaidCollection36M04 := IF(tmp_CTotalUnpaidCollection36M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection36M04, CAP_92));

// Total_UnpaidCollection48M
CreditReport: => tmp_CTotalUnpaidCollection48M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalUnpaidCollection48M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalUnpaidCollection48M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalUnpaidCollection48M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));

CreditReport: => CTotalUnpaidCollection48M01 := IF(tmp_CTotalUnpaidCollection48M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection48M01, CAP_92));
CreditReport: => CTotalUnpaidCollection48M02 := IF(tmp_CTotalUnpaidCollection48M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 =0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection48M02, CAP_92));
CreditReport: => CTotalUnpaidCollection48M03 := IF(tmp_CTotalUnpaidCollection48M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection48M03, CAP_92));
CreditReport: => CTotalUnpaidCollection48M04 := IF(tmp_CTotalUnpaidCollection48M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalUnpaidCollection48M04, CAP_92));

// Total_Active06MCollection12M:
CreditReport: => tmp_CTotalActive06MCollection12M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalActive06MCollection12M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalActive06MCollection12M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));
CreditReport: => tmp_CTotalActive06MCollection12M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12));

CreditReport: => CTotalActive06MCollection12M01 := IF(tmp_CTotalActive06MCollection12M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection12M01, CAP_92));
CreditReport: => CTotalActive06MCollection12M02 := IF(tmp_CTotalActive06MCollection12M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection12M02, CAP_92));
CreditReport: => CTotalActive06MCollection12M03 := IF(tmp_CTotalActive06MCollection12M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection12M03, CAP_92));
CreditReport: => CTotalActive06MCollection12M04 := IF(tmp_CTotalActive06MCollection12M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection12M04, CAP_92));

// Total_Active06MCollection24M:
CreditReport: => tmp_CTotalActive06MCollection24M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalActive06MCollection24M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalActive06MCollection24M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));
CreditReport: => tmp_CTotalActive06MCollection24M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24));

CreditReport: => CTotalActive06MCollection24M01 := IF(tmp_CTotalActive06MCollection24M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection24M01, CAP_92));
CreditReport: => CTotalActive06MCollection24M02 := IF(tmp_CTotalActive06MCollection24M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection24M02, CAP_92));
CreditReport: => CTotalActive06MCollection24M03 := IF(tmp_CTotalActive06MCollection24M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection24M03, CAP_92));
CreditReport: => CTotalActive06MCollection24M04 := IF(tmp_CTotalActive06MCollection24M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection24M04, CAP_92));

// Total_Active06MCollection36M:
CreditReport: => tmp_CTotalActive06MCollection36M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalActive06MCollection36M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalActive06MCollection36M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));
CreditReport: => tmp_CTotalActive06MCollection36M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36));

CreditReport: => CTotalActive06MCollection36M01 := IF(tmp_CTotalActive06MCollection36M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection36M01, CAP_92));
CreditReport: => CTotalActive06MCollection36M02 := IF(tmp_CTotalActive06MCollection36M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection36M02, CAP_92));
CreditReport: => CTotalActive06MCollection36M03 := IF(tmp_CTotalActive06MCollection36M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection36M03, CAP_92));
CreditReport: => CTotalActive06MCollection36M04 := IF(tmp_CTotalActive06MCollection36M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection36M04, CAP_92));

// Total_Active06MCollection48M:
CreditReport: => tmp_CTotalActive06MCollection48M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalActive06MCollection48M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalActive06MCollection48M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));
CreditReport: => tmp_CTotalActive06MCollection48M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48));

CreditReport: => CTotalActive06MCollection48M01 := IF(tmp_CTotalActive06MCollection48M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection48M01, CAP_92));
CreditReport: => CTotalActive06MCollection48M02 := IF(tmp_CTotalActive06MCollection48M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection48M02, CAP_92));
CreditReport: => CTotalActive06MCollection48M03 := IF(tmp_CTotalActive06MCollection48M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection48M03, CAP_92));
CreditReport: => CTotalActive06MCollection48M04 := IF(tmp_CTotalActive06MCollection48M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalActive06MCollection48M04, CAP_92));

// Total_CollPayment12M:
CreditReport: => tmp_CTotalCollPayment12M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 12));
CreditReport: => tmp_CTotalCollPayment12M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 12));
CreditReport: => tmp_CTotalCollPayment12M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 12));
CreditReport: => tmp_CTotalCollPayment12M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 12));

CreditReport: => CTotalCollPayment12M01 := IF(tmp_CTotalCollPayment12M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment12M01, CAP_92));
CreditReport: => CTotalCollPayment12M02 := IF(tmp_CTotalCollPayment12M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment12M02, CAP_92));
CreditReport: => CTotalCollPayment12M03 := IF(tmp_CTotalCollPayment12M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment12M03, CAP_92));
CreditReport: => CTotalCollPayment12M04 := IF(tmp_CTotalCollPayment12M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_04 =0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment12M04, CAP_92));

// Total_CollPayment24M:
CreditReport: => tmp_CTotalCollPayment24M01 := COUNT(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 24));
CreditReport: => tmp_CTotalCollPayment24M02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 24));
CreditReport: => tmp_CTotalCollPayment24M03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 24));
CreditReport: => tmp_CTotalCollPayment24M04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCOLastPaymentDate >= 0 AND GMOSCOLastPaymentDate <= 24));

CreditReport: => CTotalCollPayment24M01 := IF(tmp_CTotalCollPayment24M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment24M01, CAP_92));
CreditReport: => CTotalCollPayment24M02 := IF(tmp_CTotalCollPayment24M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment24M02, CAP_92));
CreditReport: => CTotalCollPayment24M03 := IF(tmp_CTotalCollPayment24M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment24M03, CAP_92));
CreditReport: => CTotalCollPayment24M04 := IF(tmp_CTotalCollPayment24M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel32_04 =0 => DEFAULT_L3, 0),
											MIN(tmp_CTotalCollPayment24M04, CAP_92));

// _Total_CollPartialPayOrPaid:
CreditReport: => tmp_CTotalPartialPayOrPaidColl01 := COUNT(CreditReportCollection(NOT G3COExcluded AND (COBalanceAmount < COOriginalAmount OR G2COPaid)));
CreditReport: => tmp_CTotalPartialPayOrPaidColl02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND (COBalanceAmount < COOriginalAmount OR G2COPaid)));
CreditReport: => tmp_CTotalPartialPayOrPaidColl03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND (COBalanceAmount < COOriginalAmount OR G2COPaid)));
CreditReport: => tmp_CTotalPartialPayOrPaidColl04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND (COBalanceAmount < COOriginalAmount OR G2COPaid)));

CreditReport: => u_CTotalPartialPayOrPaidColl01 := IF(tmp_CTotalPartialPayOrPaidColl01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalPartialPayOrPaidColl01, CAP_92));
CreditReport: => u_CTotalPartialPayOrPaidColl02 := IF(tmp_CTotalPartialPayOrPaidColl02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalPartialPayOrPaidColl02, CAP_92));
CreditReport: => u_CTotalPartialPayOrPaidColl03 := IF(tmp_CTotalPartialPayOrPaidColl03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalPartialPayOrPaidColl03, CAP_92));
CreditReport: => u_CTotalPartialPayOrPaidColl04 := IF(tmp_CTotalPartialPayOrPaidColl04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_CTotalPartialPayOrPaidColl04, CAP_92));

// _TotalAge_Collection:
CreditReport: => tmp_MTotalAgeAllCollection01 := SUM(CreditReportCollection(NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeAllCollection02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeAllCollection03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeAllCollection04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded), GMOSCODateAssigned);

CreditReport: => u_MTotalAgeAllCollection01 := IF(tmp_MTotalAgeAllCollection01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MTotalAgeAllCollection01, CAP_99992));
CreditReport: => u_MTotalAgeAllCollection02 := IF(tmp_MTotalAgeAllCollection02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MTotalAgeAllCollection02, CAP_99992));
CreditReport: => u_MTotalAgeAllCollection03 := IF(tmp_MTotalAgeAllCollection03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MTotalAgeAllCollection03, CAP_99992));
CreditReport: => u_MTotalAgeAllCollection04 := IF(tmp_MTotalAgeAllCollection04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MTotalAgeAllCollection04, CAP_99992));

// _TotalAge_UnpaidCollection
CreditReport: => tmp_MTotalAgeUnpaidCollection01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeUnpaidCollection02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeUnpaidCollection03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeUnpaidCollection04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);

CreditReport: => u_MTotalAgeUnpaidCollection01 := IF(tmp_MTotalAgeUnpaidCollection01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_MTotalAgeUnpaidCollection01, CAP_99992));
CreditReport: => u_MTotalAgeUnpaidCollection02 := IF(tmp_MTotalAgeUnpaidCollection02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_MTotalAgeUnpaidCollection02, CAP_99992));
CreditReport: => u_MTotalAgeUnpaidCollection03 := IF(tmp_MTotalAgeUnpaidCollection03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_MTotalAgeUnpaidCollection03, CAP_99992));
CreditReport: => u_MTotalAgeUnpaidCollection04 := IF(tmp_MTotalAgeUnpaidCollection04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_MTotalAgeUnpaidCollection04, CAP_99992));

// _TotalAge_Active06MCollection:
CreditReport: => tmp_MTotalAgeActive06MCollection01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeActive06MCollection02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeActive06MCollection03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MTotalAgeActive06MCollection04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);

CreditReport: => u_MTotalAgeActive06MCollection01 := IF(tmp_MTotalAgeActive06MCollection01 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
														MIN(tmp_MTotalAgeActive06MCollection01, CAP_99992));
CreditReport: => u_MTotalAgeActive06MCollection02 := IF(tmp_MTotalAgeActive06MCollection02 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
														MIN(tmp_MTotalAgeActive06MCollection02, CAP_99992));
CreditReport: => u_MTotalAgeActive06MCollection03 := IF(tmp_MTotalAgeActive06MCollection03 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
														MIN(tmp_MTotalAgeActive06MCollection03, CAP_99992));
CreditReport: => u_MTotalAgeActive06MCollection04 := IF(tmp_MTotalAgeActive06MCollection04 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
														MIN(tmp_MTotalAgeActive06MCollection04, CAP_99992));

// Age_OldestCollection:
CreditReport: => tmp_MAgeOldestCollection01 := MAX(CreditReportCollection(NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestCollection02 := MAX(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestCollection03 := MAX(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestCollection04 := MAX(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded), GMOSCODateAssigned);

CreditReport: => MAgeOldestCollection01 := IF(tmp_MAgeOldestCollection01:Null,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeOldestCollection01, CAP_9992));
CreditReport: => MAgeOldestCollection02 := IF(tmp_MAgeOldestCollection02:Null,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeOldestCollection02, CAP_9992));
CreditReport: => MAgeOldestCollection03 := IF(tmp_MAgeOldestCollection03:Null,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeOldestCollection03, CAP_9992));
CreditReport: => MAgeOldestCollection04 := IF(tmp_MAgeOldestCollection04:Null,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
											MIN(tmp_MAgeOldestCollection04, CAP_9992));

// Age_OldestUnpaidCollection:
CreditReport: => tmp_MAgeOldestUnpaidCollection01 := MAX(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestUnpaidCollection02 := MAX(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestUnpaidCollection03 := MAX(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestUnpaidCollection04 := MAX(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);

CreditReport: => MAgeOldestUnpaidCollection01 := IF(tmp_MAgeOldestUnpaidCollection01:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestUnpaidCollection01, CAP_9992));
CreditReport: => MAgeOldestUnpaidCollection02 := IF(tmp_MAgeOldestUnpaidCollection02:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestUnpaidCollection02, CAP_9992));
CreditReport: => MAgeOldestUnpaidCollection03 := IF(tmp_MAgeOldestUnpaidCollection03:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestUnpaidCollection03, CAP_9992));
CreditReport: => MAgeOldestUnpaidCollection04 := IF(tmp_MAgeOldestUnpaidCollection04:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestUnpaidCollection04, CAP_9992));

// Age_OldestActive06MCollection:
CreditReport: => tmp_MAgeOldestActive06MCollection01 := MAX(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestActive06MCollection02 := MAX(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestActive06MCollection03 := MAX(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeOldestActive06MCollection04 := MAX(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);

CreditReport: => MAgeOldestActive06MCollection01 := IF(tmp_MAgeOldestActive06MCollection01:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestActive06MCollection01, CAP_9992));
CreditReport: => MAgeOldestActive06MCollection02 := IF(tmp_MAgeOldestActive06MCollection02:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestActive06MCollection02, CAP_9992));
CreditReport: => MAgeOldestActive06MCollection03 := IF(tmp_MAgeOldestActive06MCollection03:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestActive06MCollection03, CAP_9992));
CreditReport: => MAgeOldestActive06MCollection04 := IF(tmp_MAgeOldestActive06MCollection04:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeOldestActive06MCollection04, CAP_9992));

// Age_YoungestCollection:
CreditReport: => tmp_MAgeYoungestCollection01 := MIN(CreditReportCollection(NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestCollection02 := MIN(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestCollection03 := MIN(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestCollection04 := MIN(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded), GMOSCODateAssigned);

CreditReport: => MAgeYoungestCollection01 := IF(tmp_MAgeYoungestCollection01:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeYoungestCollection01, CAP_9992));
CreditReport: => MAgeYoungestCollection02 := IF(tmp_MAgeYoungestCollection02:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeYoungestCollection02, CAP_9992));
CreditReport: => MAgeYoungestCollection03 := IF(tmp_MAgeYoungestCollection03:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeYoungestCollection03, CAP_9992));
CreditReport: => MAgeYoungestCollection04 := IF(tmp_MAgeYoungestCollection04:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_MAgeYoungestCollection04, CAP_9992));

// Age_YoungestUnpaidCollection:
CreditReport: => tmp_MAgeYoungestUnpaidCollection01 :=MIN(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestUnpaidCollection02 :=MIN(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestUnpaidCollection03 :=MIN(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYoungestUnpaidCollection04 :=MIN(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid), GMOSCODateAssigned);

CreditReport: => MAgeYoungestUnpaidCollection01 := IF(tmp_MAgeYoungestUnpaidCollection01:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYoungestUnpaidCollection01, CAP_9992));
CreditReport: => MAgeYoungestUnpaidCollection02 := IF(tmp_MAgeYoungestUnpaidCollection02:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYoungestUnpaidCollection02, CAP_9992));
CreditReport: => MAgeYoungestUnpaidCollection03 := IF(tmp_MAgeYoungestUnpaidCollection03:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYoungestUnpaidCollection03, CAP_9992));
CreditReport: => MAgeYoungestUnpaidCollection04 := IF(tmp_MAgeYoungestUnpaidCollection04:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYoungestUnpaidCollection04, CAP_9992));

// Age_YngestActive06MCollection:
CreditReport: => tmp_MAgeYngestActive06MCollection01 := MIN(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYngestActive06MCollection02 := MIN(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYngestActive06MCollection03 := MIN(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);
CreditReport: => tmp_MAgeYngestActive06MCollection04 := MIN(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >=0 AND GMOSCODateReported <= 6), GMOSCODateAssigned);

CreditReport: => MAgeYngestActive06MCollection01 := IF(tmp_MAgeYngestActive06MCollection01:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYngestActive06MCollection01, CAP_9992));
CreditReport: => MAgeYngestActive06MCollection02 := IF(tmp_MAgeYngestActive06MCollection02:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYngestActive06MCollection02, CAP_9992));
CreditReport: => MAgeYngestActive06MCollection03 := IF(tmp_MAgeYngestActive06MCollection03:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYngestActive06MCollection03, CAP_9992));
CreditReport: => MAgeYngestActive06MCollection04 := IF(tmp_MAgeYngestActive06MCollection04:Null,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_MAgeYngestActive06MCollection04, CAP_9992));

// AVG_MonthsBetweenColls:
CreditReport: => u_dMAVGMonthsBtwCollections01 := COUNT(CreditReportCollection(NOT G3COExcluded));
CreditReport: => u_dMAVGMonthsBtwCollections02 := COUNT(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded));
CreditReport: => u_dMAVGMonthsBtwCollections03 := COUNT(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded));
CreditReport: => u_dMAVGMonthsBtwCollections04 := COUNT(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded));


CreditReportCollection: NOT G3COExcluded => u_prevMonthsCollections01 :=  Sequence.PreviousWhere(NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;
CreditReportCollection: u_CO_group2 AND NOT G3COExcluded => u_prevMonthsCollections02 :=  Sequence.PreviousWhere(u_CO_group2 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;
CreditReportCollection: u_CO_group3 AND NOT G3COExcluded => u_prevMonthsCollections03 :=  Sequence.PreviousWhere(u_CO_group3 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;
CreditReportCollection: u_CO_group4 AND NOT G3COExcluded => u_prevMonthsCollections04 :=  Sequence.PreviousWhere(u_CO_group4 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;

CreditReport: => u_nMAVGMonthsBtwCollections01 := IF(u_dMAVGMonthsBtwCollections01 > 1, SUM(CreditReportCollection, GMOSCODateAssigned - u_prevMonthsCollections01), 0);
CreditReport: => u_nMAVGMonthsBtwCollections02 := IF(u_dMAVGMonthsBtwCollections02 > 1, SUM(CreditReportCollection, GMOSCODateAssigned - u_prevMonthsCollections02), 0);
CreditReport: => u_nMAVGMonthsBtwCollections03 := IF(u_dMAVGMonthsBtwCollections03 > 1, SUM(CreditReportCollection, GMOSCODateAssigned - u_prevMonthsCollections03), 0);
CreditReport: => u_nMAVGMonthsBtwCollections04 := IF(u_dMAVGMonthsBtwCollections04 > 1, SUM(CreditReportCollection, GMOSCODateAssigned - u_prevMonthsCollections04), 0);

CreditReport: => tmp_MAVGMthsBtwCollections01 := MIN(ROUND(u_nMAVGMonthsBtwCollections01 / (u_dMAVGMonthsBtwCollections01 - 1)), CAP_9992);
CreditReport: => tmp_MAVGMthsBtwCollections02 := MIN(ROUND(u_nMAVGMonthsBtwCollections02 / (u_dMAVGMonthsBtwCollections02 - 1)), CAP_9992);
CreditReport: => tmp_MAVGMthsBtwCollections03 := MIN(ROUND(u_nMAVGMonthsBtwCollections03 / (u_dMAVGMonthsBtwCollections03 - 1)), CAP_9992);
CreditReport: => tmp_MAVGMthsBtwCollections04 := MIN(ROUND(u_nMAVGMonthsBtwCollections04 / (u_dMAVGMonthsBtwCollections04 - 1)), CAP_9992);

CreditReport: => MAVGMthsBtwCollections01 := IF(u_dMAVGMonthsBtwCollections01 > 1,
												tmp_MAVGMthsBtwCollections01,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3,
													u_dMAVGMonthsBtwCollections01 = 1 => DEFAULT_L4, DEFAULT_TEST));
CreditReport: => MAVGMthsBtwCollections02 := IF(u_dMAVGMonthsBtwCollections02 > 1,
												tmp_MAVGMthsBtwCollections02,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3,
													u_dMAVGMonthsBtwCollections02 = 1 => DEFAULT_L4, DEFAULT_TEST));
CreditReport: => MAVGMthsBtwCollections03 := IF(u_dMAVGMonthsBtwCollections03 > 1,
												tmp_MAVGMthsBtwCollections03,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3,
													u_dMAVGMonthsBtwCollections03 = 1 => DEFAULT_L4, DEFAULT_TEST));
CreditReport: => MAVGMthsBtwCollections04 := IF(u_dMAVGMonthsBtwCollections04 > 1,
												tmp_MAVGMthsBtwCollections04,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3,
													u_dMAVGMonthsBtwCollections04 = 1 => DEFAULT_L4, DEFAULT_TEST));

// Min_MonthsBetweenColls:
CreditReportCollection: => ReportLexID := rCreditReport.LexID;
//CreditReportCollection: NOT G3COExcluded => tmp_rank := RANK(GROUP{TransactionID, LexID}, GMOSCODateAssigned);




CreditReportCollection: NOT G3COExcluded => u_prevMMinMthsBtwCollections01:= Sequence.PreviousWhere(NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;

CreditReportCollection: NOT G3COExcluded AND u_CO_group2 => u_prevMMinMthsBtwCollections02:= Sequence.PreviousWhere(u_CO_group2 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;

CreditReportCollection: NOT G3COExcluded AND u_CO_group3 => u_prevMMinMthsBtwCollections03:= Sequence.PreviousWhere(u_CO_group3 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;

CreditReportCollection: NOT G3COExcluded AND u_CO_group4 => u_prevMMinMthsBtwCollections04:= Sequence.PreviousWhere(u_CO_group4 AND NOT G3COExcluded AND TransactionID = CreditReportCollection.TransactionID AND ReportLexID = CreditReportCollection.ReportLexID, GMOSCODateAssigned).GMOSCODateAssigned;

CreditReport: => tmp_prevMMinMthsBtwCollections01 := MIN(CreditReportCollection, GMOSCODateAssigned - u_prevMMinMthsBtwCollections01);
CreditReport: => tmp_prevMMinMthsBtwCollections02 := MIN(CreditReportCollection, GMOSCODateAssigned - u_prevMMinMthsBtwCollections02);
CreditReport: => tmp_prevMMinMthsBtwCollections03 := MIN(CreditReportCollection, GMOSCODateAssigned - u_prevMMinMthsBtwCollections03);
CreditReport: => tmp_prevMMinMthsBtwCollections04 := MIN(CreditReportCollection, GMOSCODateAssigned - u_prevMMinMthsBtwCollections04);

CreditReport: => MMinMthsBtwCollections01 := IF(tmp_prevMMinMthsBtwCollections01:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3,
													u_CO_CntrlLevel31_01 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_prevMMinMthsBtwCollections01, CAP_99992));
CreditReport: => MMinMthsBtwCollections02 := IF(tmp_prevMMinMthsBtwCollections02:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3,
													u_CO_CntrlLevel31_02 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_prevMMinMthsBtwCollections02, CAP_99992));
CreditReport: => MMinMthsBtwCollections03 := IF(tmp_prevMMinMthsBtwCollections03:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3,
													u_CO_CntrlLevel31_03 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_prevMMinMthsBtwCollections03, CAP_99992));
CreditReport: => MMinMthsBtwCollections04 := IF(tmp_prevMMinMthsBtwCollections04:Null,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3,
													u_CO_CntrlLevel31_04 = 1 => DEFAULT_L4, DEFAULT_TEST),
												MIN(tmp_prevMMinMthsBtwCollections04, CAP_99992));

// Total_CollectionAmount:
CreditReport: => tmp_ATotalCollectionAmount01 := SUM(CreditReportCollection(NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_ATotalCollectionAmount02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_ATotalCollectionAmount03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_ATotalCollectionAmount04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded), COOriginalAmount);

CreditReport: => ATotalCollectionAmount01 := IF(tmp_ATotalCollectionAmount01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalCollectionAmount01, CAP_9999999992));
CreditReport: => ATotalCollectionAmount02 := IF(tmp_ATotalCollectionAmount02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalCollectionAmount02, CAP_9999999992));
CreditReport: => ATotalCollectionAmount03 := IF(tmp_ATotalCollectionAmount03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalCollectionAmount03, CAP_9999999992));
CreditReport: => ATotalCollectionAmount04 := IF(tmp_ATotalCollectionAmount04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalCollectionAmount04, CAP_9999999992));

// Total_UnpaidCollAmount:
CreditReport: => tmp_ATotalUnpaidCollAmount01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid), COOriginalAmount);

CreditReport: => ATotalUnpaidCollAmount01 := IF(tmp_ATotalUnpaidCollAmount01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollAmount01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount02 := IF(tmp_ATotalUnpaidCollAmount02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollAmount02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount03 := IF(tmp_ATotalUnpaidCollAmount03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollAmount03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount04 := IF(tmp_ATotalUnpaidCollAmount04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollAmount04, CAP_9999999992));

// Total_Active06MCollAmount:
CreditReport: => tmp_ATotalActive06MCollAmount01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COOriginalAmount);

CreditReport: => ATotalActive06MCollAmount01 := IF(tmp_ATotalActive06MCollAmount01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalActive06MCollAmount01, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount02 := IF(tmp_ATotalActive06MCollAmount02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalActive06MCollAmount02, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount03 := IF(tmp_ATotalActive06MCollAmount03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalActive06MCollAmount03, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount04 := IF(tmp_ATotalActive06MCollAmount04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalActive06MCollAmount04, CAP_9999999992));

// Total_CollAmount12M:
CreditReport: => tmp_ATotalCollAmount12M01 := SUM(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount12M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount12M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount12M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);

CreditReport: => ATotalCollAmount12M01 := IF(tmp_ATotalCollAmount12M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount12M01, CAP_9999999992));
CreditReport: => ATotalCollAmount12M02 := IF(tmp_ATotalCollAmount12M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount12M02, CAP_9999999992));
CreditReport: => ATotalCollAmount12M03 := IF(tmp_ATotalCollAmount12M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount12M03, CAP_9999999992));
CreditReport: => ATotalCollAmount12M04 := IF(tmp_ATotalCollAmount12M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount12M04, CAP_9999999992));

// Total_CollAmount24M:
CreditReport: => tmp_ATotalCollAmount24M01 := SUM(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount24M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount24M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount24M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);

CreditReport: => ATotalCollAmount24M01 := IF(tmp_ATotalCollAmount24M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount24M01, CAP_9999999992));
CreditReport: => ATotalCollAmount24M02 := IF(tmp_ATotalCollAmount24M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount24M02, CAP_9999999992));
CreditReport: => ATotalCollAmount24M03 := IF(tmp_ATotalCollAmount24M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount24M03, CAP_9999999992));
CreditReport: => ATotalCollAmount24M04 := IF(tmp_ATotalCollAmount24M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount24M04, CAP_9999999992));

// Total_CollAmount36M:
CreditReport: => tmp_ATotalCollAmount36M01 := SUM(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount36M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount36M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount36M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);

CreditReport: => ATotalCollAmount36M01 := IF(tmp_ATotalCollAmount36M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount36M01, CAP_9999999992));
CreditReport: => ATotalCollAmount36M02 := IF(tmp_ATotalCollAmount36M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount36M02, CAP_9999999992));
CreditReport: => ATotalCollAmount36M03 := IF(tmp_ATotalCollAmount36M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount36M03, CAP_9999999992));
CreditReport: => ATotalCollAmount36M04 := IF(tmp_ATotalCollAmount36M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount36M04, CAP_9999999992));

// Total_CollAmount48M:
CreditReport: => tmp_ATotalCollAmount48M01 := SUM(CreditReportCollection(NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount48M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount48M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalCollAmount48M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);

CreditReport: => ATotalCollAmount48M01 := IF(tmp_ATotalCollAmount48M01 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount48M01, CAP_9999999992));
CreditReport: => ATotalCollAmount48M02 := IF(tmp_ATotalCollAmount48M02 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount48M02, CAP_9999999992));
CreditReport: => ATotalCollAmount48M03 := IF(tmp_ATotalCollAmount48M03 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount48M03, CAP_9999999992));
CreditReport: => ATotalCollAmount48M04 := IF(tmp_ATotalCollAmount48M04 = 0,
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_ATotalCollAmount48M04, CAP_9999999992));

// Total_UnpaidCollAmount12M:
CreditReport: => tmp_ATotalUnpaidCollAmount12M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount12M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount12M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount12M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);

CreditReport: => ATotalUnpaidCollAmount12M01 := IF(tmp_ATotalUnpaidCollAmount12M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount12M01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount12M02 := IF(tmp_ATotalUnpaidCollAmount12M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount12M02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount12M03 := IF(tmp_ATotalUnpaidCollAmount12M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount12M03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount12M04 := IF(tmp_ATotalUnpaidCollAmount12M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount12M04, CAP_9999999992));

// Total_UnpaidCollAmount24M:
CreditReport: => tmp_ATotalUnpaidCollAmount24M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount24M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount24M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount24M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);

CreditReport: => ATotalUnpaidCollAmount24M01 := IF(tmp_ATotalUnpaidCollAmount24M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount24M01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount24M02 := IF(tmp_ATotalUnpaidCollAmount24M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount24M02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount24M03 := IF(tmp_ATotalUnpaidCollAmount24M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount24M03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount24M04 := IF(tmp_ATotalUnpaidCollAmount24M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount24M04, CAP_9999999992));

// Total_UnpaidCollAmount36M:
CreditReport: => tmp_ATotalUnpaidCollAmount36M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount36M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount36M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount36M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);

CreditReport: => ATotalUnpaidCollAmount36M01 := IF(tmp_ATotalUnpaidCollAmount36M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount36M01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount36M02 := IF(tmp_ATotalUnpaidCollAmount36M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount36M02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount36M03 := IF(tmp_ATotalUnpaidCollAmount36M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount36M03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount36M04 := IF(tmp_ATotalUnpaidCollAmount36M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount36M04, CAP_9999999992));

// Total_UnpaidCollAmount48M:
CreditReport: => tmp_ATotalUnpaidCollAmount48M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount48M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount48M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalUnpaidCollAmount48M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);

CreditReport: => ATotalUnpaidCollAmount48M01 := IF(tmp_ATotalUnpaidCollAmount48M01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount48M01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount48M02 := IF(tmp_ATotalUnpaidCollAmount48M02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount48M02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount48M03 := IF(tmp_ATotalUnpaidCollAmount48M03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount48M03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollAmount48M04 := IF(tmp_ATotalUnpaidCollAmount48M04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, 0),
													MIN(tmp_ATotalUnpaidCollAmount48M04, CAP_9999999992));

// Total_Active06MCollAmount12M:
CreditReport: => tmp_ATotalActive06MCollAmount12M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount12M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount12M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount12M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 12), COOriginalAmount);

CreditReport: => ATotalActive06MCollAmount12M01 := IF(tmp_ATotalActive06MCollAmount12M01 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount12M01, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount12M02 := IF(tmp_ATotalActive06MCollAmount12M02 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount12M02, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount12M03 := IF(tmp_ATotalActive06MCollAmount12M03 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount12M03, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount12M04 := IF(tmp_ATotalActive06MCollAmount12M04 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount12M04, CAP_9999999992));

// Total_Active06MCollAmount24M:
CreditReport: => tmp_ATotalActive06MCollAmount24M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount24M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount24M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount24M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 24), COOriginalAmount);

CreditReport: => ATotalActive06MCollAmount24M01 := IF(tmp_ATotalActive06MCollAmount24M01 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount24M01, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount24M02 := IF(tmp_ATotalActive06MCollAmount24M02 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount24M02, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount24M03 := IF(tmp_ATotalActive06MCollAmount24M03 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount24M03, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount24M04 := IF(tmp_ATotalActive06MCollAmount24M04 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount24M04, CAP_9999999992));

// Total_Active06MCollAmount36M:
CreditReport: => tmp_ATotalActive06MCollAmount36M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount36M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount36M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount36M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 36), COOriginalAmount);

CreditReport: => ATotalActive06MCollAmount36M01 := IF(tmp_ATotalActive06MCollAmount36M01 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount36M01, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount36M02 := IF(tmp_ATotalActive06MCollAmount36M02 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount36M02, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount36M03 := IF(tmp_ATotalActive06MCollAmount36M03 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount36M03, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount36M04 := IF(tmp_ATotalActive06MCollAmount36M04 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount36M04, CAP_9999999992));

// Total_Active06MCollAmount48M:
CreditReport: => tmp_ATotalActive06MCollAmount48M01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount48M02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount48M03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);
CreditReport: => tmp_ATotalActive06MCollAmount48M04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6 AND GMOSCODateAssigned >= 0 AND GMOSCODateAssigned <= 48), COOriginalAmount);

CreditReport: => ATotalActive06MCollAmount48M01 := IF(tmp_ATotalActive06MCollAmount48M01 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount48M01, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount48M02 := IF(tmp_ATotalActive06MCollAmount48M02 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount48M02, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount48M03 := IF(tmp_ATotalActive06MCollAmount48M03 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount48M03, CAP_9999999992));
CreditReport: => ATotalActive06MCollAmount48M04 := IF(tmp_ATotalActive06MCollAmount48M04 = 0,
														MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
															u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
															u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, 0),
														MIN(tmp_ATotalActive06MCollAmount48M04, CAP_9999999992));

// Maximum_CollAmount:
CreditReport: => tmp_AMaxCollAmount01 := MAX(CreditReportCollection(NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_AMaxCollAmount02 := MAX(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_AMaxCollAmount03 := MAX(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded), COOriginalAmount);
CreditReport: => tmp_AMaxCollAmount04 := MAX(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded), COOriginalAmount);

CreditReport: => AMaxCollAmount01 := IF(tmp_AMaxCollAmount01:Null,
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
											u_CO_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
										MIN(tmp_AMaxCollAmount01, CAP_9999999992));
CreditReport: => AMaxCollAmount02 := IF(tmp_AMaxCollAmount02:Null,
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
											u_CO_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
										MIN(tmp_AMaxCollAmount02, CAP_9999999992));
CreditReport: => AMaxCollAmount03 := IF(tmp_AMaxCollAmount03:Null,
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
											u_CO_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
										MIN(tmp_AMaxCollAmount03, CAP_9999999992));
CreditReport: => AMaxCollAmount04 := IF(tmp_AMaxCollAmount04:Null,
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
											u_CO_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
										MIN(tmp_AMaxCollAmount04, CAP_9999999992));

// Total_UnpaidCollBalance:
CreditReport: => tmp_ATotalUnpaidCollBalance01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid), COBalanceAmount);
CreditReport: => tmp_ATotalUnpaidCollBalance02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid), COBalanceAmount);
CreditReport: => tmp_ATotalUnpaidCollBalance03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid), COBalanceAmount);
CreditReport: => tmp_ATotalUnpaidCollBalance04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid), COBalanceAmount);

CreditReport: => ATotalUnpaidCollBalance01 := IF(tmp_ATotalUnpaidCollBalance01 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollBalance01, CAP_9999999992));
CreditReport: => ATotalUnpaidCollBalance02 := IF(tmp_ATotalUnpaidCollBalance02 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollBalance02, CAP_9999999992));
CreditReport: => ATotalUnpaidCollBalance03 := IF(tmp_ATotalUnpaidCollBalance03 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollBalance03, CAP_9999999992));
CreditReport: => ATotalUnpaidCollBalance04 := IF(tmp_ATotalUnpaidCollBalance04 = 0,
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_CO_CntrlLevel32_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
												MIN(tmp_ATotalUnpaidCollBalance04, CAP_9999999992));

// Total_Active06MCollBalance:
CreditReport: => tmp_ATotalActive06MCollBalance01 := SUM(CreditReportCollection(NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COBalanceAmount);
CreditReport: => tmp_ATotalActive06MCollBalance02 := SUM(CreditReportCollection(u_CO_group2 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COBalanceAmount);
CreditReport: => tmp_ATotalActive06MCollBalance03 := SUM(CreditReportCollection(u_CO_group3 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COBalanceAmount);
CreditReport: => tmp_ATotalActive06MCollBalance04 := SUM(CreditReportCollection(u_CO_group4 AND NOT G3COExcluded AND NOT G2COPaid AND GMOSCODateReported >= 0 AND GMOSCODateReported <= 6), COBalanceAmount);

CreditReport: => ATotalActive06MCollBalance01 := IF(tmp_ATotalActive06MCollBalance01 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_01 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_ATotalActive06MCollBalance01, CAP_9999999992));
CreditReport: => ATotalActive06MCollBalance02 := IF(tmp_ATotalActive06MCollBalance02 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_ATotalActive06MCollBalance02, CAP_9999999992));
CreditReport: => ATotalActive06MCollBalance03 := IF(tmp_ATotalActive06MCollBalance03 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_ATotalActive06MCollBalance03, CAP_9999999992));
CreditReport: => ATotalActive06MCollBalance04 := IF(tmp_ATotalActive06MCollBalance04 = 0,
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														u_CO_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_CO_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_TEST),
													MIN(tmp_ATotalActive06MCollBalance04, CAP_9999999992));

// ****** Level 2 Attributes ********
// AVG_AgeAllCollection:
CreditReport: => MAVGAgeAllCollection01 := IF((CTotalCollection01 > 0) AND (u_MTotalAgeAllCollection01 >= 0),
													MIN(ROUND(u_MTotalAgeAllCollection01 / CTotalCollection01), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalCollection01 = 0 => DEFAULT_L2,
														CTotalCollection01 < 0 => CTotalCollection01,
														u_MTotalAgeAllCollection01 < 0 => u_MTotalAgeAllCollection01,
														DEFAULT_TEST));
CreditReport: => MAVGAgeAllCollection02 := IF((CTotalCollection02 > 0) AND (u_MTotalAgeAllCollection02 >= 0),
													MIN(ROUND(u_MTotalAgeAllCollection02 / CTotalCollection02), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalCollection02 = 0 => DEFAULT_L2,
														CTotalCollection02 < 0 => CTotalCollection02,
														u_MTotalAgeAllCollection02 < 0 => u_MTotalAgeAllCollection02,
														DEFAULT_TEST));
CreditReport: => MAVGAgeAllCollection03 := IF((CTotalCollection03 > 0) AND (u_MTotalAgeAllCollection03 >= 0),
													MIN(ROUND(u_MTotalAgeAllCollection03 / CTotalCollection03), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalCollection03 = 0 => DEFAULT_L2,
														CTotalCollection03 < 0 => CTotalCollection03,
														u_MTotalAgeAllCollection03 < 0 => u_MTotalAgeAllCollection03,
														DEFAULT_TEST));
CreditReport: => MAVGAgeAllCollection04 := IF((CTotalCollection04 > 0) AND (u_MTotalAgeAllCollection04 >= 0),
													MIN(ROUND(u_MTotalAgeAllCollection04 / CTotalCollection04), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalCollection04 = 0 => DEFAULT_L2,
														CTotalCollection04 < 0 => CTotalCollection04,
														u_MTotalAgeAllCollection04 < 0 => u_MTotalAgeAllCollection04,
														DEFAULT_TEST));

// AVG_AgeUnpaidCollection:
CreditReport: => MAVGAgeUnpaidCollection01 := IF((CTotalUnpaidCollection01 > 0) AND (u_MTotalAgeUnpaidCollection01 >= 0),
													MIN(ROUND(u_MTotalAgeUnpaidCollection01 / CTotalUnpaidCollection01), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalUnpaidCollection01 = 0 => DEFAULT_L3,
														CTotalUnpaidCollection01 < 0 =>CTotalUnpaidCollection01,
														u_MTotalAgeUnpaidCollection01 < 0 => u_MTotalAgeUnpaidCollection01,
														DEFAULT_TEST));
CreditReport: => MAVGAgeUnpaidCollection02 := IF((CTotalUnpaidCollection02 > 0) AND (u_MTotalAgeUnpaidCollection02 >= 0),
													MIN(ROUND(u_MTotalAgeUnpaidCollection02 / CTotalUnpaidCollection02), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalUnpaidCollection02 = 0 => DEFAULT_L3,
														CTotalUnpaidCollection02 < 0 =>CTotalUnpaidCollection02,
														u_MTotalAgeUnpaidCollection02 < 0 => u_MTotalAgeUnpaidCollection02,
														DEFAULT_TEST));
CreditReport: => MAVGAgeUnpaidCollection03 := IF((CTotalUnpaidCollection03 > 0) AND (u_MTotalAgeUnpaidCollection03 >= 0),
													MIN(ROUND(u_MTotalAgeUnpaidCollection03 / CTotalUnpaidCollection03), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalUnpaidCollection03 = 0 => DEFAULT_L3,
														CTotalUnpaidCollection03 < 0 =>CTotalUnpaidCollection03,
														u_MTotalAgeUnpaidCollection03 < 0 => u_MTotalAgeUnpaidCollection03,
														DEFAULT_TEST));
CreditReport: => MAVGAgeUnpaidCollection04 := IF((CTotalUnpaidCollection04 > 0) AND (u_MTotalAgeUnpaidCollection04 >= 0),
													MIN(ROUND(u_MTotalAgeUnpaidCollection04 / CTotalUnpaidCollection04), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalUnpaidCollection04 = 0 => DEFAULT_L3,
														CTotalUnpaidCollection04 < 0 =>CTotalUnpaidCollection04,
														u_MTotalAgeUnpaidCollection04 < 0 => u_MTotalAgeUnpaidCollection04,
														DEFAULT_TEST));

// AVG_AgeActive06MCollection:
CreditReport: => MAVGAgeActive06MCollection01 := IF((CTotalActive06MCollection01 > 0) AND (u_MTotalAgeActive06MCollection01 >= 0),
													MIN(ROUND(u_MTotalAgeActive06MCollection01 / CTotalActive06MCollection01), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalActive06MCollection01 = 0 => DEFAULT_L3,
														CTotalActive06MCollection01 < 0 =>CTotalActive06MCollection01,
														u_MTotalAgeActive06MCollection01 < 0 => u_MTotalAgeActive06MCollection01,
														DEFAULT_TEST));
CreditReport: => MAVGAgeActive06MCollection02 := IF((CTotalActive06MCollection02 > 0) AND (u_MTotalAgeActive06MCollection02 >= 0),
													MIN(ROUND(u_MTotalAgeActive06MCollection02 / CTotalActive06MCollection02), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalActive06MCollection02 = 0 => DEFAULT_L3,
														CTotalActive06MCollection02 < 0 =>CTotalActive06MCollection02,
														u_MTotalAgeActive06MCollection02 < 0 => u_MTotalAgeActive06MCollection02,
														DEFAULT_TEST));
CreditReport: => MAVGAgeActive06MCollection03 := IF((CTotalActive06MCollection03 > 0) AND (u_MTotalAgeActive06MCollection03 >= 0),
													MIN(ROUND(u_MTotalAgeActive06MCollection03 / CTotalActive06MCollection03), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalActive06MCollection03 = 0 => DEFAULT_L3,
														CTotalActive06MCollection03 < 0 =>CTotalActive06MCollection03,
														u_MTotalAgeActive06MCollection03 < 0 => u_MTotalAgeActive06MCollection03,
														DEFAULT_TEST));
CreditReport: => MAVGAgeActive06MCollection04 := IF((CTotalActive06MCollection04 > 0) AND (u_MTotalAgeActive06MCollection04 >= 0),
													MIN(ROUND(u_MTotalAgeActive06MCollection04 / CTotalActive06MCollection04), CAP_9992),
													MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalActive06MCollection04 = 0 => DEFAULT_L3,
														CTotalActive06MCollection04 < 0 =>CTotalActive06MCollection04,
														u_MTotalAgeActive06MCollection04 < 0 => u_MTotalAgeActive06MCollection04,
														DEFAULT_TEST));

// P_UnpaidCollection:
CreditReport: => PUnpaidCollections01 := MAP(CTotalCollection01 > 0 AND CTotalUnpaidCollection01 >= 0 => MIN(ROUND2(CTotalUnpaidCollection01 * 100 / CTotalCollection01), CAP_100),
											u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection01 < 0 => CTotalCollection01,
											CTotalUnpaidCollection01 < 0 => CTotalUnpaidCollection01,
											DEFAULT_TEST);


CreditReport: => PUnpaidCollections02 := IF((CTotalCollection02 > 0) AND (CTotalUnpaidCollection02 >= 0),
											MIN(ROUND2(CTotalUnpaidCollection02 * 100 / CTotalCollection02), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalCollection02 < 0 => CTotalCollection02,
												CTotalUnpaidCollection02 < 0 => CTotalUnpaidCollection02,
												DEFAULT_TEST));
CreditReport: => PUnpaidCollections03 := IF((CTotalCollection03 > 0) AND (CTotalUnpaidCollection03 >= 0),
											MIN(ROUND2(CTotalUnpaidCollection03 * 100 / CTotalCollection03), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalCollection03 < 0 => CTotalCollection03,
												CTotalUnpaidCollection03 < 0 => CTotalUnpaidCollection03,
												DEFAULT_TEST));
CreditReport: => PUnpaidCollections04 := IF((CTotalCollection04 > 0) AND (CTotalUnpaidCollection04 >= 0),
											MIN(ROUND2(CTotalUnpaidCollection04 * 100 / CTotalCollection04), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalCollection04 < 0 => CTotalCollection04,
												CTotalUnpaidCollection04 < 0 => CTotalUnpaidCollection04,
												DEFAULT_TEST));

// P_Collection12M: //delete  the second time to define -1 
CreditReport: => PCollection12M01 := IF((CTotalCollection01 > 0) AND (CTotalCollection12M01 >= 0),
										MIN(ROUND2(CTotalCollection12M01 * 100 / CTotalCollection01), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection01 < 0 => CTotalCollection01,
											CTotalCollection12M01 < 0 => CTotalCollection12M01,
											DEFAULT_TEST));
CreditReport: => PCollection12M02 := IF((CTotalCollection02 > 0) AND (CTotalCollection12M02 >= 0),
										MIN(ROUND2(CTotalCollection12M02 * 100 / CTotalCollection02), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection02 < 0 => CTotalCollection02,
											CTotalCollection12M02 < 0 => CTotalCollection12M02,
											DEFAULT_TEST));
CreditReport: => PCollection12M03 := IF((CTotalCollection03 > 0) AND (CTotalCollection12M03 >= 0),
										MIN(ROUND2(CTotalCollection12M03 * 100 / CTotalCollection03), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection03 < 0 => CTotalCollection03,
											CTotalCollection12M03 < 0 => CTotalCollection12M03,
											DEFAULT_TEST));
CreditReport: => PCollection12M04 := IF((CTotalCollection04 > 0) AND (CTotalCollection12M04 >= 0),
										MIN(ROUND2(CTotalCollection12M04 * 100 / CTotalCollection04), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection04 < 0 => CTotalCollection04,
											CTotalCollection12M04 < 0 => CTotalCollection12M04,
											DEFAULT_TEST));

// P_Collection24M:
CreditReport: => PCollection24M01 := IF((CTotalCollection01 > 0) AND (CTotalCollection24M01 >= 0),
										MIN(ROUND2(CTotalCollection24M01 * 100 / CTotalCollection01), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection01 < 0 => CTotalCollection01,
											CTotalCollection24M01 < 0 => CTotalCollection24M01,
											DEFAULT_TEST));
CreditReport: => PCollection24M02 := IF((CTotalCollection02 > 0) AND (CTotalCollection24M02 >= 0),
										MIN(ROUND2(CTotalCollection24M02 * 100 / CTotalCollection02), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection02 < 0 => CTotalCollection02,
											CTotalCollection24M02 < 0 => CTotalCollection24M02,
											DEFAULT_TEST));
CreditReport: => PCollection24M03 := IF((CTotalCollection03 > 0) AND (CTotalCollection24M03 >= 0),
										MIN(ROUND2(CTotalCollection24M03 * 100 / CTotalCollection03), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection03 < 0 => CTotalCollection03,
											CTotalCollection24M03 < 0 => CTotalCollection24M03,
											DEFAULT_TEST));
CreditReport: => PCollection24M04 := IF((CTotalCollection04 > 0) AND (CTotalCollection24M04 >= 0),
										MIN(ROUND2(CTotalCollection24M04 * 100 / CTotalCollection04), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalCollection04 < 0 => CTotalCollection04,
											CTotalCollection24M04 < 0 => CTotalCollection24M04,
											DEFAULT_TEST));

// P_UnpaidBalToCollAmt:
CreditReport: => PUnpaidBalToCollAmt01 := IF((ATotalCollectionAmount01 > 0) AND (ATotalUnpaidCollBalance01 >= 0),
											MIN(ROUND2(ATotalUnpaidCollBalance01 * 100 / ATotalCollectionAmount01), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												ATotalCollectionAmount01 < 0 => ATotalCollectionAmount01,
												ATotalCollectionAmount01 = 0 => DEFAULT_L3,
												ATotalUnpaidCollBalance01 < 0 => ATotalUnpaidCollBalance01,
												DEFAULT_TEST));
CreditReport: => PUnpaidBalToCollAmt02 := IF((ATotalCollectionAmount02 > 0) AND (ATotalUnpaidCollBalance02 >= 0),
											MIN(ROUND2(ATotalUnpaidCollBalance02 * 100 / ATotalCollectionAmount02), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												ATotalCollectionAmount02 < 0 => ATotalCollectionAmount02,
												ATotalCollectionAmount02 = 0 => DEFAULT_L3,
												ATotalUnpaidCollBalance02 < 0 => ATotalUnpaidCollBalance02,
												DEFAULT_TEST));
CreditReport: => PUnpaidBalToCollAmt03 := IF((ATotalCollectionAmount03 > 0) AND (ATotalUnpaidCollBalance03 >= 0),
											MIN(ROUND2(ATotalUnpaidCollBalance03 * 100 / ATotalCollectionAmount03), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												ATotalCollectionAmount03 < 0 => ATotalCollectionAmount03,
												ATotalCollectionAmount03 = 0 => DEFAULT_L3,
												ATotalUnpaidCollBalance03 < 0 => ATotalUnpaidCollBalance03,
												DEFAULT_TEST));
CreditReport: => PUnpaidBalToCollAmt04 := IF((ATotalCollectionAmount04 > 0) AND (ATotalUnpaidCollBalance04 >= 0),
											MIN(ROUND2(ATotalUnpaidCollBalance04 * 100 / ATotalCollectionAmount04), CAP_100),
											MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
												ATotalCollectionAmount04 < 0 => ATotalCollectionAmount04,
												ATotalCollectionAmount04 = 0 => DEFAULT_L3,
												ATotalUnpaidCollBalance04 < 0 => ATotalUnpaidCollBalance04,
												DEFAULT_TEST));

// P_COPayment12M:
CreditReport: => PCOPayment12M01 := IF((CTotalUnpaidCollection01 > 0) AND (CTotalCollPayment12M01 >= 0),
										MIN(ROUND2(CTotalCollPayment12M01 * 100 / CTotalUnpaidCollection01), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection01 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection01 < 0 => CTotalUnpaidCollection01,
											CTotalCollPayment12M01 < 0 => CTotalCollPayment12M01,
											DEFAULT_TEST));
CreditReport: => PCOPayment12M02 := IF((CTotalUnpaidCollection02 > 0) AND (CTotalCollPayment12M02 >= 0),
										MIN(ROUND2(CTotalCollPayment12M02 * 100 / CTotalUnpaidCollection02), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection02 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection02 < 0 => CTotalUnpaidCollection02,
											CTotalCollPayment12M02 < 0 => CTotalCollPayment12M02,
											DEFAULT_TEST));
CreditReport: => PCOPayment12M03 := IF((CTotalUnpaidCollection03 > 0) AND (CTotalCollPayment12M03 >= 0),
										MIN(ROUND2(CTotalCollPayment12M03 * 100 / CTotalUnpaidCollection03), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection03 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection03 < 0 => CTotalUnpaidCollection03,
											CTotalCollPayment12M03 < 0 => CTotalCollPayment12M03,
											DEFAULT_TEST));
CreditReport: => PCOPayment12M04 := IF((CTotalUnpaidCollection04 > 0) AND (CTotalCollPayment12M04 >= 0),
										MIN(ROUND2(CTotalCollPayment12M04 * 100 / CTotalUnpaidCollection04), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection04 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection04 < 0 => CTotalUnpaidCollection04,
											CTotalCollPayment12M04 < 0 => CTotalCollPayment12M04,
											DEFAULT_TEST));
// P_COPayment24M:
CreditReport: => PCOPayment24M01 := IF((CTotalUnpaidCollection01 > 0) AND (CTotalCollPayment24M01 >= 0),
										MIN(ROUND2(CTotalCollPayment24M01 * 100 / CTotalCollection01), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection01 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection01 < 0 => CTotalUnpaidCollection01,
											CTotalCollPayment24M01 < 0 => CTotalCollPayment24M01,
											DEFAULT_TEST));
CreditReport: => PCOPayment24M02 := IF((CTotalUnpaidCollection02 > 0) AND (CTotalCollPayment24M02 >= 0),
										MIN(ROUND2(CTotalCollPayment24M02 * 100 / CTotalCollection02), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection02 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection02 < 0 => CTotalUnpaidCollection02,
											CTotalCollPayment24M02 < 0 => CTotalCollPayment24M02,
											DEFAULT_TEST));
CreditReport: => PCOPayment24M03 := IF((CTotalUnpaidCollection03 > 0) AND (CTotalCollPayment24M03 >= 0),
										MIN(ROUND2(CTotalCollPayment24M03 * 100 / CTotalCollection03), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection03 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection03 < 0 => CTotalUnpaidCollection03,
											CTotalCollPayment24M03 < 0 => CTotalCollPayment24M03,
											DEFAULT_TEST));
CreditReport: => PCOPayment24M04 := IF((CTotalUnpaidCollection04 > 0) AND (CTotalCollPayment24M04 >= 0),
										MIN(ROUND2(CTotalCollPayment24M04 * 100 / CTotalCollection04), CAP_100),
										MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalUnpaidCollection04 = 0 => DEFAULT_L3,
											CTotalUnpaidCollection04 < 0 => CTotalUnpaidCollection04,
											CTotalCollPayment24M04 < 0 => CTotalCollPayment24M04,
											DEFAULT_TEST));
											
// P_PartialPayOfUnpaidColls:
CreditReport: => PPartialPayOfUnpaidColls01 := IF((CTotalUnpaidCollection01 > 0) AND (CTotalPartialPayColls01 >= 0),
												MIN(ROUND2(CTotalPartialPayColls01 * 100 / CTotalUnpaidCollection01), CAP_100),
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalUnpaidCollection01 < 0 => CTotalUnpaidCollection01,
													CTotalUnpaidCollection01 = 0 => DEFAULT_L3,
													CTotalPartialPayColls01 < 0 => CTotalPartialPayColls01,
													DEFAULT_TEST));
CreditReport: => PPartialPayOfUnpaidColls02 := IF((CTotalUnpaidCollection02 > 0) AND (CTotalPartialPayColls02 >= 0),
												MIN(ROUND2(CTotalPartialPayColls02 * 100 / CTotalUnpaidCollection02), CAP_100),
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalUnpaidCollection02 < 0 => CTotalUnpaidCollection02,
													CTotalUnpaidCollection02 = 0 => DEFAULT_L3,
													CTotalPartialPayColls02 < 0 => CTotalPartialPayColls02,
													DEFAULT_TEST));
CreditReport: => PPartialPayOfUnpaidColls03 := IF((CTotalUnpaidCollection03 > 0) AND (CTotalPartialPayColls03 >= 0),
												MIN(ROUND2(CTotalPartialPayColls03 * 100 / CTotalUnpaidCollection03), CAP_100),
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalUnpaidCollection03 < 0 => CTotalUnpaidCollection03,
													CTotalUnpaidCollection03 = 0 => DEFAULT_L3,
													CTotalPartialPayColls03 < 0 => CTotalPartialPayColls03,
													DEFAULT_TEST));
CreditReport: => PPartialPayOfUnpaidColls04 := IF((CTotalUnpaidCollection04 > 0) AND (CTotalPartialPayColls04 >= 0),
												MIN(ROUND2(CTotalPartialPayColls04 * 100 / CTotalUnpaidCollection04), CAP_100),
												MAP(u_CO_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalUnpaidCollection04 < 0 => CTotalUnpaidCollection04,
													CTotalUnpaidCollection04 = 0 => DEFAULT_L3,
													CTotalPartialPayColls04 < 0 => CTotalPartialPayColls04,
													DEFAULT_TEST));



/*************************************************************************/
/*                                                                       */
/*                       Attributes for Inquiry                          */
/*                                                                       */
/*************************************************************************/
  

//Inquriy attributes
//Group definition
CreditReportInquiry: => u_IQ_Group02 := NOT GUtilityInquiry;
CreditReportInquiry: => u_IQ_Group03 := NOT GUtilityInquiry AND GAutoInquiry;
CreditReportInquiry: => u_IQ_Group04 := NOT GUtilityInquiry AND NOT GAutoInquiry AND GMortgageInquiry;
CreditReportInquiry: => u_IQ_Group05 := NOT GUtilityInquiry AND NOT GAutoInquiry AND NOT GMortgageInquiry AND GRetailInquiry;
CreditReportInquiry: => u_IQ_Group06 := NOT GUtilityInquiry AND NOT GAutoInquiry AND NOT GMortgageInquiry AND NOT GRetailInquiry AND GBankcardInquiry;
CreditReportInquiry: => u_IQ_Group07 := NOT GUtilityInquiry AND NOT GAutoInquiry AND NOT GMortgageInquiry AND NOT GRetailInquiry AND NOT GBankcardInquiry AND GAllOtherInquiry;

//control level definition
CreditReport: => u_IQ_CntlLevel1 := COUNT(CreditReportInquiry);
CreditReport: => u_IQ_CntrlLevel2_02 := COUNT(CreditReportInquiry(u_IQ_Group02));
CreditReport: => u_IQ_CntrlLevel2_03 := COUNT(CreditReportInquiry(u_IQ_Group03));
CreditReport: => u_IQ_CntrlLevel2_04 := COUNT(CreditReportInquiry(u_IQ_Group04));
CreditReport: => u_IQ_CntrlLevel2_05 := COUNT(CreditReportInquiry(u_IQ_Group05));
CreditReport: => u_IQ_CntrlLevel2_06 := COUNT(CreditReportInquiry(u_IQ_Group06));
CreditReport: => u_IQ_CntrlLevel2_07 := COUNT(CreditReportInquiry(u_IQ_Group07));
   
CreditReport: => u_IQ_CntrlLevel3_01 := COUNT(CreditReportInquiry(NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_02 := COUNT(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_03 := COUNT(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_04 := COUNT(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_05 := COUNT(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_06 := COUNT(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded));
CreditReport: => u_IQ_CntrlLevel3_07 := COUNT(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded));

CreditReport: => u_IQ_CntrlLevel4_01 := COUNT(CreditReportInquiry(NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_02 := COUNT(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_03 := COUNT(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_04 := COUNT(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_05 := COUNT(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_06 := COUNT(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));
CreditReport: => u_IQ_CntrlLevel4_07 := COUNT(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded AND GDaysSinceInquiry > 30));

//CTotalInquiries_

CreditReport: => CTotalInquiries01 := MAP(u_IQ_CntlLevel1 =0 => 0,  //there is no inquiry at all
                                        u_IQ_CntrlLevel3_01=0 => DEFAULT_L3, //inquiries were excluded
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded)), CAP_992)); 

CreditReport: => CTotalInquiries02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => 0, // if true then stop
                                        u_IQ_CntrlLevel3_02=0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02)), CAP_992));

CreditReport: => CTotalInquiries03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => 0, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03)), CAP_992));

CreditReport: => CTotalInquiries04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => 0, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04)), CAP_992));

CreditReport: => CTotalInquiries05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => 0, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05)), CAP_992));

CreditReport: => CTotalInquiries06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => 0, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06)), CAP_992));
																				
CreditReport: => CTotalInquiries07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => 0, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07)), CAP_992));


//CTotalInquiries30Dcount1, this is a single attribute
// CreditReportInquiry: NOT GIQExcluded => u_dLastInquiry := Sequence.PreviousWhere(NOT GIQExcluded AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, TransactionID, GDaysSinceInquiry, u_iqsortorder, u_koborder, IQKOB, u_typeorder, IQType).GDaysSinceInquiry; //Count the number of months with inquiry. inquiries in 30 days count as one
// CreditReport: => tmp_CTotalInquiries30Dcount1 := COUNT(CreditReportInquiry(NOT GIQExcluded AND (u_dLastInquiry:Null OR (GDaysSinceInquiry - u_dLastInquiry) > 30)));
// CreditReport: => CTotalInquiries30Dcount1 := IF(tmp_CTotalInquiries30Dcount1 = 0,
// 												MAP(u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3, 0),
// 												MIN(tmp_CTotalInquiries30Dcount1, CAP_992));

CreditReportInquiry: => tmp_inquiry30Ddedup := EXISTS(Sequence.Dedup(CreditReportInquiry(NOT GIQExcluded), LEFT.TransactionID = RIGHT.TransactionID AND LEFT.ReportLexID = RIGHT.ReportLexID AND (RIGHT.GDaysSinceInquiry - LEFT.GDaysSinceInquiry) <= 30,TransactionID, GDaysSinceInquiry)(UID = CreditReportInquiry.UID)); // need add the LexID

CreditReport: => tmp_CTotalInquiries30Dcount1 := COUNT(CreditReportInquiry(tmp_inquiry30Ddedup));
CreditReport: => CTotalInquiries30Dcount1 := IF(tmp_CTotalInquiries30Dcount1 = 0,
												MAP(u_IQ_CntlLevel1 =0 => 0,
													u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalInquiries30Dcount1, CAP_992));


//CTotalInquiries03M##
CreditReport: => CTotalInquiries03M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));

CreditReport: => CTotalInquiries03M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 3))), CAP_992));


//CTotalInquiries06M##
CreditReport: => CTotalInquiries06M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries06M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 6))), CAP_992));

//CTotalInquiries09M##
CreditReport: => CTotalInquiries09M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries09M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 9))), CAP_992));

//CTotalInquiries12M##
CreditReport: => CTotalInquiries12M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries12M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 12))), CAP_992));

//CTotalInquiries15M##
CreditReport: => CTotalInquiries15M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

CreditReport: => CTotalInquiries15M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 15))), CAP_992));

//CTotalInquiries18M##
CreditReport: => CTotalInquiries18M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries18M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 0 AND GMOSInquiryDate <= 18))), CAP_992));

//CTotalInquiries30D##
CreditReport: => CTotalInquiries30D01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

CreditReport: => CTotalInquiries30D07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 30))), CAP_992));

//CTotalInquiries60D##
CreditReport: => CTotalInquiries60D01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

CreditReport: => CTotalInquiries60D07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 60))), CAP_992));

// CTotalInquiries90D_
CreditReport: => CTotalInquiries90D01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));

CreditReport: => CTotalInquiries90D07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GDaysSinceInquiry >= 0 AND GDaysSinceInquiry <= 90))), CAP_992));


//CTotalInquiries4to6M_
CreditReport: => CTotalInquiries4to6M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));

CreditReport: => CTotalInquiries4to6M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 4 AND GMOSInquiryDate <= 6))), CAP_992));


//CTotalInquiries7to9M_
CreditReport: => CTotalInquiries7to9M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));

CreditReport: => CTotalInquiries7to9M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 7 AND GMOSInquiryDate <= 9))), CAP_992));


//CTotalInquiries10to12M_
CreditReport: => CTotalInquiries10to12M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

CreditReport: => CTotalInquiries10to12M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 10 AND GMOSInquiryDate <= 12))), CAP_992));

//CTotalInquiries13to18M_
CreditReport: => CTotalInquiries13to18M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

CreditReport: => CTotalInquiries13to18M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 13 AND GMOSInquiryDate <= 18))), CAP_992));

//CTotalInquiries19to24M_
CreditReport: => CTotalInquiries19to24M01 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel3_01 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M02 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_02 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_02 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M05 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_05 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_05 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M06 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_06 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_06 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));

CreditReport: => CTotalInquiries19to24M07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => DEFAULT_L2, 
                                        u_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07 AND (GMOSInquiryDate >= 19 AND GMOSInquiryDate <= 24))), CAP_992));
//MTotalAgeInquiries_
CreditReport:  => tmp_MTotalAgeInquiries01 := SUM(CreditReportInquiry(NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries02 := SUM(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries03 := SUM(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries04 := SUM(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries05 := SUM(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries06 := SUM(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport:  => tmp_MTotalAgeInquiries07 := SUM(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded), GMOSInquiryDate);

CreditReport: => MTotalAgeInquiries01 := IF(tmp_MTotalAgeInquiries01=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries01, CAP_9992));

CreditReport: => MTotalAgeInquiries02 := IF(tmp_MTotalAgeInquiries02=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries02, CAP_9992));

CreditReport: => MTotalAgeInquiries03 := IF(tmp_MTotalAgeInquiries03=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries03, CAP_9992));

CreditReport: => MTotalAgeInquiries04 := IF(tmp_MTotalAgeInquiries04=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries04, CAP_9992));

CreditReport: => MTotalAgeInquiries05 := IF(tmp_MTotalAgeInquiries05=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries05, CAP_9992));

CreditReport: => MTotalAgeInquiries06 := IF(tmp_MTotalAgeInquiries06=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries06, CAP_9992));

CreditReport: => MTotalAgeInquiries07 := IF(tmp_MTotalAgeInquiries07=0,
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3, 0),
											MIN(tmp_MTotalAgeInquiries07, CAP_9992));

//MAgeOldestInquiry_
CreditReport: => tmp_MAgeOldestInquiry01 := MAX(CreditReportInquiry(NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry02 := MAX(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry03 := MAX(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry04 := MAX(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry05 := MAX(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry06 := MAX(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeOldestInquiry07 := MAX(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded), GMOSInquiryDate);

CreditReport: => MAgeOldestInquiry01 := IF(tmp_MAgeOldestInquiry01:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry01, CAP_9992));
												
CreditReport: => MAgeOldestInquiry02 := IF(tmp_MAgeOldestInquiry02:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry02, CAP_9992));
												
CreditReport: => MAgeOldestInquiry03 := IF(tmp_MAgeOldestInquiry03:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry03, CAP_9992));

CreditReport: => MAgeOldestInquiry04 := IF(tmp_MAgeOldestInquiry04:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry04, CAP_9992));

CreditReport: => MAgeOldestInquiry05 := IF(tmp_MAgeOldestInquiry05:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry05, CAP_9992));

CreditReport: => MAgeOldestInquiry06 := IF(tmp_MAgeOldestInquiry06:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry06, CAP_9992));

CreditReport: => MAgeOldestInquiry07 := IF(tmp_MAgeOldestInquiry07:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeOldestInquiry07, CAP_9992));

//MAgeYoungestInquiry_
CreditReport: => tmp_MAgeYoungestInquiry01 := MIN(CreditReportInquiry(NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry02 := MIN(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry03 := MIN(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry04 := MIN(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry05 := MIN(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry06 := MIN(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded), GMOSInquiryDate);
CreditReport: => tmp_MAgeYoungestInquiry07 := MIN(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded), GMOSInquiryDate);

CreditReport: => MAgeYoungestInquiry01 := IF(tmp_MAgeYoungestInquiry01:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry01, CAP_9992));
												
CreditReport: => MAgeYoungestInquiry02 := IF(tmp_MAgeYoungestInquiry02:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry02, CAP_9992));
												
CreditReport: => MAgeYoungestInquiry03 := IF(tmp_MAgeYoungestInquiry03:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry03, CAP_9992));

CreditReport: => MAgeYoungestInquiry04 := IF(tmp_MAgeYoungestInquiry04:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry04, CAP_9992));

CreditReport: => MAgeYoungestInquiry05 := IF(tmp_MAgeYoungestInquiry05:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry05, CAP_9992));

CreditReport: => MAgeYoungestInquiry06 := IF(tmp_MAgeYoungestInquiry06:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry06, CAP_9992));

CreditReport: => MAgeYoungestInquiry07 := IF(tmp_MAgeYoungestInquiry07:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3),
												MIN(tmp_MAgeYoungestInquiry07, CAP_9992));

//DAgeYoungestInquiry_
CreditReport: => tmp_DAgeYoungestInquiry01 := MIN(CreditReportInquiry(NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry02 := MIN(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry03 := MIN(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry04 := MIN(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry05 := MIN(CreditReportInquiry(u_IQ_Group05 AND NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry06 := MIN(CreditReportInquiry(u_IQ_Group06 AND NOT GIQExcluded), GDaysSinceInquiry);
CreditReport: => tmp_DAgeYoungestInquiry07 := MIN(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcluded), GDaysSinceInquiry);

CreditReport: => DAgeYoungestInquiry01 := IF(tmp_DAgeYoungestInquiry01:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry01, CAP_9992));
												
CreditReport: => DAgeYoungestInquiry02 := IF(tmp_DAgeYoungestInquiry02:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry02, CAP_9992));
												
CreditReport: => DAgeYoungestInquiry03 := IF(tmp_DAgeYoungestInquiry03:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry03, CAP_9992));

CreditReport: => DAgeYoungestInquiry04 := IF(tmp_DAgeYoungestInquiry04:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry04, CAP_9992));

CreditReport: => DAgeYoungestInquiry05 := IF(tmp_DAgeYoungestInquiry05:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry05, CAP_9992));

CreditReport: => DAgeYoungestInquiry06 := IF(tmp_DAgeYoungestInquiry06:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry06, CAP_9992));

CreditReport: => DAgeYoungestInquiry07 := IF(tmp_DAgeYoungestInquiry07:Null,
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3),
												MIN(tmp_DAgeYoungestInquiry07, CAP_9992));



//DAVGDaysBetweenInquiries_

// CreditReportInquiry:NOT GIQExcluded => IQOrder := GDaysSinceInquiry$GROUP{TransactionID,LexID}:Rank;

CreditReportInquiry: NOT GIQExcluded => u_prevDAVGDaysBetweenInquiries01:= Sequence.PreviousWhere(NOT GIQExcluded AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries01:= COUNT(CreditReportInquiry(NOT GIQExcluded));
CreditReport: => u_nDAVGDaysBetweenInquiries01:= IF(u_dDAVGDaysBetweenInquiries01 > 1, SUM(CreditReportInquiry(NOT GIQExcluded), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries01), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries01 := MIN(ROUND(u_nDAVGDaysBetweenInquiries01 / (u_dDAVGDaysBetweenInquiries01 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries01 := IF(u_dDAVGDaysBetweenInquiries01 > 1,
													tmp_DAVGDaysBetweenInquiries01,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries01 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group02 => u_prevDAVGDaysBetweenInquiries02:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group02 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries02:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02));
CreditReport: => u_nDAVGDaysBetweenInquiries02:= IF(u_dDAVGDaysBetweenInquiries02 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group02), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries02), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries02 := MIN(ROUND(u_nDAVGDaysBetweenInquiries02 / (u_dDAVGDaysBetweenInquiries02 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries02 := IF(u_dDAVGDaysBetweenInquiries02 > 1,
													tmp_DAVGDaysBetweenInquiries02,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries02 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group03 => u_prevDAVGDaysBetweenInquiries03:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group03 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries03:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03));
CreditReport: => u_nDAVGDaysBetweenInquiries03:= IF(u_dDAVGDaysBetweenInquiries03 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group03), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries03), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries03 := MIN(ROUND(u_nDAVGDaysBetweenInquiries03 / (u_dDAVGDaysBetweenInquiries03 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries03 := IF(u_dDAVGDaysBetweenInquiries03 > 1,
													tmp_DAVGDaysBetweenInquiries03,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries03 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group04 => u_prevDAVGDaysBetweenInquiries04:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group04 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries04:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04));
CreditReport: => u_nDAVGDaysBetweenInquiries04:= IF(u_dDAVGDaysBetweenInquiries04 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group04), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries04), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries04 := MIN(ROUND(u_nDAVGDaysBetweenInquiries04 / (u_dDAVGDaysBetweenInquiries04 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries04 := IF(u_dDAVGDaysBetweenInquiries04 > 1,
													tmp_DAVGDaysBetweenInquiries04,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries04 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group05 => u_prevDAVGDaysBetweenInquiries05:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group05 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries05:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05));
CreditReport: => u_nDAVGDaysBetweenInquiries05:= IF(u_dDAVGDaysBetweenInquiries05 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group05), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries05), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries05 := MIN(ROUND(u_nDAVGDaysBetweenInquiries05 / (u_dDAVGDaysBetweenInquiries05 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries05 := IF(u_dDAVGDaysBetweenInquiries05 > 1,
													tmp_DAVGDaysBetweenInquiries05,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries05 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group06 => u_prevDAVGDaysBetweenInquiries06:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group06 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries06:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06));
CreditReport: => u_nDAVGDaysBetweenInquiries06:= IF(u_dDAVGDaysBetweenInquiries06 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group06), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries06), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries06 := MIN(ROUND(u_nDAVGDaysBetweenInquiries06 / (u_dDAVGDaysBetweenInquiries06 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries06 := IF(u_dDAVGDaysBetweenInquiries06 > 1,
													tmp_DAVGDaysBetweenInquiries06,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries06 = 1 => DEFAULT_L4));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group07 => u_prevDAVGDaysBetweenInquiries07:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group07 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => u_dDAVGDaysBetweenInquiries07:= COUNT(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07));
CreditReport: => u_nDAVGDaysBetweenInquiries07:= IF(u_dDAVGDaysBetweenInquiries07 > 1, SUM(CreditReportInquiry(NOT GIQExcluded AND u_IQ_Group07), GDaysSinceInquiry - u_prevDAVGDaysBetweenInquiries07), 0);
CreditReport: => tmp_DAVGDaysBetweenInquiries07 := MIN(ROUND(u_nDAVGDaysBetweenInquiries07 / (u_dDAVGDaysBetweenInquiries07 - 1)), CAP_9992);
CreditReport: => DAVGDaysBetweenInquiries07 := IF(u_dDAVGDaysBetweenInquiries07 > 1,
													tmp_DAVGDaysBetweenInquiries07,
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3,
														u_dDAVGDaysBetweenInquiries07 = 1 => DEFAULT_L4));


CreditReportInquiry: NOT GIQExcluded => u_prevDMINDaysBetweenInquiries01:= Sequence.PreviousWhere(NOT GIQExcluded AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries01 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries01);
CreditReport: => DMINDaysBetweenInquiries01 := IF(NOT tmp_DMINDaysBetweenInquiries01:Null,
													MIN(tmp_DMINDaysBetweenInquiries01, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries01:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group02 => u_prevDMINDaysBetweenInquiries02:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group02 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries02 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries02);
CreditReport: => DMINDaysBetweenInquiries02 := IF(NOT tmp_DMINDaysBetweenInquiries02:Null,
													MIN(tmp_DMINDaysBetweenInquiries02, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries02:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group03 => u_prevDMINDaysBetweenInquiries03:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group03 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries03 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries03);
CreditReport: => DMINDaysBetweenInquiries03 := IF(NOT tmp_DMINDaysBetweenInquiries03:Null,
													MIN(tmp_DMINDaysBetweenInquiries03, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries03:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group04 => u_prevDMINDaysBetweenInquiries04:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group04 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries04 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries04);
CreditReport: => DMINDaysBetweenInquiries04 := IF(NOT tmp_DMINDaysBetweenInquiries04:Null,
													MIN(tmp_DMINDaysBetweenInquiries04, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries04:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group05 => u_prevDMINDaysBetweenInquiries05:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group05 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries05 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries05);
CreditReport: => DMINDaysBetweenInquiries05 := IF(NOT tmp_DMINDaysBetweenInquiries05:Null,
													MIN(tmp_DMINDaysBetweenInquiries05, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries05:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group06 => u_prevDMINDaysBetweenInquiries06:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group06 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries06 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries06);
CreditReport: => DMINDaysBetweenInquiries06 := IF(NOT tmp_DMINDaysBetweenInquiries06:Null,
													MIN(tmp_DMINDaysBetweenInquiries06, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries06:Null => DEFAULT_L4, DEFAULT_TEST));

CreditReportInquiry: NOT GIQExcluded AND u_IQ_Group07 => u_prevDMINDaysBetweenInquiries07:= Sequence.PreviousWhere(NOT GIQExcluded AND u_IQ_Group07 AND TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID, GDaysSinceInquiry).GDaysSinceInquiry;
CreditReport: => tmp_DMINDaysBetweenInquiries07 := MIN(CreditReportInquiry, GDaysSinceInquiry - u_prevDMINDaysBetweenInquiries07);
CreditReport: => DMINDaysBetweenInquiries07 := IF(NOT tmp_DMINDaysBetweenInquiries07:Null,
													MIN(tmp_DMINDaysBetweenInquiries07, CAP_9992),
													MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
														u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
														u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3,
														tmp_DMINDaysBetweenInquiries07:Null => DEFAULT_L4, DEFAULT_TEST));

/**************************************************/
/* Level 2 attributes                             */
/**************************************************/

// MAgeBetweenOldnYoung_
CreditReport: => MAgeBetweenOldnYoung01 := IF(CTotalInquiries01 > 1,
												MIN(MAgeOldestInquiry01 - MAgeYoungestInquiry01,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3,
													CTotalInquiries01 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung02 := IF(CTotalInquiries02 > 1,
												MIN(MAgeOldestInquiry02 - MAgeYoungestInquiry02,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
													CTotalInquiries02 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung03 := IF(CTotalInquiries03 > 1,
												MIN(MAgeOldestInquiry03 - MAgeYoungestInquiry03,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3,
													CTotalInquiries03 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung04 := IF(CTotalInquiries04 > 1,
												MIN(MAgeOldestInquiry04 - MAgeYoungestInquiry04,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3,
													CTotalInquiries04 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung05 := IF(CTotalInquiries05 > 1,
												MIN(MAgeOldestInquiry05 - MAgeYoungestInquiry05,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3,
													CTotalInquiries05 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung06 := IF(CTotalInquiries06 > 1,
												MIN(MAgeOldestInquiry06 - MAgeYoungestInquiry06,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3,
													CTotalInquiries06 = 1 => DEFAULT_L4,DEFAULT_TEST));

CreditReport: => MAgeBetweenOldnYoung07 := IF(CTotalInquiries07 > 1,
												MIN(MAgeOldestInquiry07 - MAgeYoungestInquiry07,9992), 
												MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
													u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
													u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3,
													CTotalInquiries07 = 1 => DEFAULT_L4,DEFAULT_TEST));

// MAVGAgeInquiries_
CreditReport: => MAVGAgeInquiries01 := IF(CTotalInquiries01 > 0 AND MTotalAgeInquiries01 >= 0,
											MIN(ROUND(MTotalAgeInquiries01 / CTotalInquiries01),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel3_01 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries02 := IF(CTotalInquiries02 > 0 AND MTotalAgeInquiries02 >= 0,
											MIN(ROUND(MTotalAgeInquiries02 / CTotalInquiries02),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries03 := IF(CTotalInquiries03 > 0 AND MTotalAgeInquiries03 >= 0,
											MIN(ROUND(MTotalAgeInquiries03 / CTotalInquiries03),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_03 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries04 := IF(CTotalInquiries04 > 0 AND MTotalAgeInquiries04 >= 0,
											MIN(ROUND(MTotalAgeInquiries04 / CTotalInquiries04),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_04 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries05 := IF(CTotalInquiries05 > 0 AND MTotalAgeInquiries05 >= 0,
											MIN(ROUND(MTotalAgeInquiries05 / CTotalInquiries05),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_05 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_05 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries06 := IF(CTotalInquiries06 > 0 AND MTotalAgeInquiries06 >= 0,
											MIN(ROUND(MTotalAgeInquiries06 / CTotalInquiries06),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_06 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_06 = 0 => DEFAULT_L3,DEFAULT_TEST));

CreditReport: => MAVGAgeInquiries07 := IF(CTotalInquiries07 > 0 AND MTotalAgeInquiries07 >= 0,
											MIN(ROUND(MTotalAgeInquiries07 / CTotalInquiries07),9992),
											MAP(u_IQ_CntlLevel1 = 0 => DEFAULT_L1,
												u_IQ_CntrlLevel2_07 = 0 => DEFAULT_L2,
												u_IQ_CntrlLevel3_07 = 0 => DEFAULT_L3,DEFAULT_TEST));
//CTotalTypesInquiry_
// CreditReport: => helper03 := IF(CTotalInquiries03 > 0, CTotalInquiries03, 0);
// CreditReport: => helper04 := IF(CTotalInquiries04 > 0, CTotalInquiries04, 0);
// CreditReport: => helper05 := IF(CTotalInquiries05 > 0, CTotalInquiries05, 0);
// CreditReport: => helper06 := IF(CTotalInquiries06 > 0, CTotalInquiries06, 0);
// CreditReport: => helper07 := IF(CTotalInquiries07 > 0, CTotalInquiries07, 0);
CreditReport: =>  CTotalTypesInquiry := IF(CTotalInquiries02 > 0, CastBL2Int(CTotalInquiries03 > 0) + CastBL2Int(CTotalInquiries04 > 0) + CastBL2Int(CTotalInquiries05 > 0) + CastBL2Int(CTotalInquiries06 > 0) + CastBL2Int(CTotalInquiries07 > 0), CTotalInquiries02);

/**************************************************/
/* CROSS-SEGMENT ATTRIBUTES                       */
/**************************************************/

//CTotalInqPostedAftBKPFilednOpn02
CreditReportInquiry: =>  tmp_iq_MAgeMostRecentOpnBKP01 := rCreditReport.MAgeMostRecentOpnBKP01;
CreditReport: =>  tmp_CTotalInqPostedAftBKPFilednOpn02 := COUNT(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded AND GMOSInquiryDate >= 0 AND tmp_iq_MAgeMostRecentOpnBKP01 > 0 AND GMOSInquiryDate < tmp_iq_MAgeMostRecentOpnBKP01));
CreditReport: =>  CTotalInqPostedAftBKPFilednOpn02 := IF(tmp_CTotalInqPostedAftBKPFilednOpn02 = 0, 
														MAP(MAgeMostRecentOpnBKP01 < 0 => DEFAULT_L1,
															u_IQ_CntlLevel1 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
															MAgeMostRecentOpnBKP01 = 0 => DEFAULT_L4),
														MIN(tmp_CTotalInqPostedAftBKPFilednOpn02, 992));



//C_TotInqPostedAftBKPDisch02
CreditReportInquiry: =>  tmp_iq_MMostRecentBKPDischarge01 := rCreditReport.MMostRecentBKPDischarge01;
CreditReport: =>  tmp_CTotalInqPostedAftBKPDisch02 := COUNT(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded AND GMOSInquiryDate >= 0 AND tmp_iq_MMostRecentBKPDischarge01 > 0 AND GMOSInquiryDate < tmp_iq_MMostRecentBKPDischarge01));
CreditReport: =>  CTotalInqPostedAftBKPDisch02 := IF(tmp_CTotalInqPostedAftBKPDisch02 = 0, 
														MAP(MMostRecentBKPDischarge01 < 0 => DEFAULT_L1,
															u_IQ_CntlLevel1 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
															MMostRecentBKPDischarge01 = 0 => DEFAULT_L4),
														MIN(tmp_CTotalInqPostedAftBKPDisch02, 992));

//C_TotInqPostedAftBKPDismis02
CreditReportInquiry: =>  tmp_iq_MMostRecentBKPDismiss01 := rCreditReport.MMostRecentBKPDismiss01;
CreditReport: =>  tmp_CTotalInqPostedAftBKPDismis02 := COUNT(CreditReportInquiry(u_IQ_Group02 AND NOT GIQExcluded AND GMOSInquiryDate >= 0 AND tmp_iq_MMostRecentBKPDismiss01 > 0 AND GMOSInquiryDate < tmp_iq_MMostRecentBKPDismiss01));
CreditReport: =>  CTotalInqPostedAftBKPDismis02 := IF(tmp_CTotalInqPostedAftBKPDismis02 = 0, 
														MAP(MMostRecentBKPDismiss01 < 0 => DEFAULT_L1,
															u_IQ_CntlLevel1 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel2_02 = 0 => DEFAULT_L2,
															u_IQ_CntrlLevel3_02 = 0 => DEFAULT_L3,
															MMostRecentBKPDismiss01 = 0 => DEFAULT_L4),
														MIN(tmp_CTotalInqPostedAftBKPDismis02, 992));


/*************************************************************************/
/*                                                                       */
/*                       Attributes for Judgment                         */
/*                                                                       */
/*************************************************************************/
CreditReportJudgment: => u_inJudgment := NOT G3Drop;

CreditReportJudgment: => u_group01 := u_inJudgment;
CreditReportJudgment: => u_group02 := u_inJudgment AND GCivilJudgment;
CreditReportJudgment: => u_group03 := u_inJudgment AND GSpecialJudgment;
CreditReportJudgment: => u_group04 := u_inJudgment AND GSmallClaimJudgment;

CreditReportJudgment: => u_GJudgmentLife := MAP(G2Satisfied AND GMOSPRDateSatisfied >= 0 => GMOSPRDateFiled - GMOSPRDateSatisfied,
												G2Satisfied AND GMOSPRDateSatisfied < 0 => -9999, GMOSPRDateFiled);

CreditReport: => u_JU_CntrlLevel1 := COUNT(CreditReportJudgment(u_group01));

CreditReport: => u_JU_CntrlLevel2_01 := COUNT(CreditReportJudgment(u_group01));
CreditReport: => u_JU_CntrlLevel2_02 := COUNT(CreditReportJudgment(u_group02));
CreditReport: => u_JU_CntrlLevel2_03 := COUNT(CreditReportJudgment(u_group03));
CreditReport: => u_JU_CntrlLevel2_04 := COUNT(CreditReportJudgment(u_group04));

CreditReport: => u_JU_CntrlLevel41_01 := COUNT(CreditReportJudgment(u_group01 AND u_GJudgmentLife >= 0));
CreditReport: => u_JU_CntrlLevel41_02 := COUNT(CreditReportJudgment(u_group02 AND u_GJudgmentLife >= 0));
CreditReport: => u_JU_CntrlLevel41_03 := COUNT(CreditReportJudgment(u_group03 AND u_GJudgmentLife >= 0));
CreditReport: => u_JU_CntrlLevel41_04 := COUNT(CreditReportJudgment(u_group04 AND u_GJudgmentLife >= 0));


// ****** Level 1 Attributes ********

// Total_Judgment:
CreditReport: => tmp_CTotalJudgments01 := COUNT(CreditReportJudgment(u_group01));
CreditReport: => tmp_CTotalJudgments02 := COUNT(CreditReportJudgment(u_group02));
CreditReport: => tmp_CTotalJudgments03 := COUNT(CreditReportJudgment(u_group03));
CreditReport: => tmp_CTotalJudgments04 := COUNT(CreditReportJudgment(u_group04));

CreditReport: => CTotalJudgments01 := IF(tmp_CTotalJudgments01 = 0,
										MAP(u_JU_CntrlLevel1 = 0 => 0,
											u_JU_CntrlLevel2_01 = 0 => 0,0),
										MIN(tmp_CTotalJudgments01, CAP_92));
CreditReport: => CTotalJudgments02 := IF(tmp_CTotalJudgments02 = 0,
										MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
											u_JU_CntrlLevel2_02 = 0 => 0,0),
										MIN(tmp_CTotalJudgments02, CAP_92));
CreditReport: => CTotalJudgments03 := IF(tmp_CTotalJudgments03 = 0,
										MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
											u_JU_CntrlLevel2_03 = 0 => 0,0),
										MIN(tmp_CTotalJudgments03, CAP_92));
CreditReport: => CTotalJudgments04 := IF(tmp_CTotalJudgments04 = 0,
										MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
											u_JU_CntrlLevel2_04 = 0 => 0,0),
										MIN(tmp_CTotalJudgments04, CAP_92));

// Total_UnsatisfiedJudgment:
CreditReport: => tmp_CTotalUnsatisfiedJudgments01 := COUNT(CreditReportJudgment(u_group01 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments02 := COUNT(CreditReportJudgment(u_group02 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments03 := COUNT(CreditReportJudgment(u_group03 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments04 := COUNT(CreditReportJudgment(u_group04 AND NOT G2Satisfied));

CreditReport: => CTotalUnsatisfiedJudgments01 := IF(tmp_CTotalUnsatisfiedJudgments01 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, 0),
													MIN(tmp_CTotalUnsatisfiedJudgments01, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments02 := IF(tmp_CTotalUnsatisfiedJudgments02 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, 0),
													MIN(tmp_CTotalUnsatisfiedJudgments02, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments03 := IF(tmp_CTotalUnsatisfiedJudgments03 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, 0),
													MIN(tmp_CTotalUnsatisfiedJudgments03, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments04 := IF(tmp_CTotalUnsatisfiedJudgments04 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, 0),
													MIN(tmp_CTotalUnsatisfiedJudgments04, CAP_92));

// Total_JudgmentPlaced60M:
CreditReport: => tmp_CTotalJudgmentsPlaced60M01 := COUNT(CreditReportJudgment(u_group01 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60));
CreditReport: => tmp_CTotalJudgmentsPlaced60M02 := COUNT(CreditReportJudgment(u_group02 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60));
CreditReport: => tmp_CTotalJudgmentsPlaced60M03 := COUNT(CreditReportJudgment(u_group03 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60));
CreditReport: => tmp_CTotalJudgmentsPlaced60M04 := COUNT(CreditReportJudgment(u_group04 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60));

CreditReport: => CTotalJudgmentsPlaced60M01 := IF(tmp_CTotalJudgmentsPlaced60M01 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2,0),
													MIN(tmp_CTotalJudgmentsPlaced60M01, CAP_92));
CreditReport: => CTotalJudgmentsPlaced60M02 := IF(tmp_CTotalJudgmentsPlaced60M02 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2,0),
													MIN(tmp_CTotalJudgmentsPlaced60M02, CAP_92));
CreditReport: => CTotalJudgmentsPlaced60M03 := IF(tmp_CTotalJudgmentsPlaced60M03 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2,0),
													MIN(tmp_CTotalJudgmentsPlaced60M03, CAP_92));
CreditReport: => CTotalJudgmentsPlaced60M04 := IF(tmp_CTotalJudgmentsPlaced60M04 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2,0),
													MIN(tmp_CTotalJudgmentsPlaced60M04, CAP_92));

// Total_UnsatisfiedJudgment60M:
CreditReport: => tmp_CTotalUnsatisfiedJudgments60M01 := COUNT(CreditReportJudgment(u_group01 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments60M02 := COUNT(CreditReportJudgment(u_group02 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments60M03 := COUNT(CreditReportJudgment(u_group03 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60 AND NOT G2Satisfied));
CreditReport: => tmp_CTotalUnsatisfiedJudgments60M04 := COUNT(CreditReportJudgment(u_group04 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60 AND NOT G2Satisfied));

CreditReport: => CTotalUnsatisfiedJudgments60M01 := IF(tmp_CTotalUnsatisfiedJudgments60M01 = 0,
														MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
															u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, 0),
														MIN(tmp_CTotalUnsatisfiedJudgments60M01, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments60M02 := IF(tmp_CTotalUnsatisfiedJudgments60M02 = 0,
														MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
															u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, 0),
														MIN(tmp_CTotalUnsatisfiedJudgments60M02, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments60M03 := IF(tmp_CTotalUnsatisfiedJudgments60M03 = 0,
														MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
															u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, 0),
														MIN(tmp_CTotalUnsatisfiedJudgments60M03, CAP_92));
CreditReport: => CTotalUnsatisfiedJudgments60M04 := IF(tmp_CTotalUnsatisfiedJudgments60M04 = 0,
														MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
															u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, 0),
														MIN(tmp_CTotalUnsatisfiedJudgments60M04, CAP_92));

// Age_YoungestJudgment:
CreditReport: => tmp_MAgeYoungestJudgment01 := MIN(CreditReportJudgment(u_group01), GMOSPRDateFiled);
CreditReport: => tmp_MAgeYoungestJudgment02 := MIN(CreditReportJudgment(u_group02), GMOSPRDateFiled);
CreditReport: => tmp_MAgeYoungestJudgment03 := MIN(CreditReportJudgment(u_group03), GMOSPRDateFiled);
CreditReport: => tmp_MAgeYoungestJudgment04 := MIN(CreditReportJudgment(u_group04), GMOSPRDateFiled);

CreditReport: => MAgeYoungestJudgment01 := IF(tmp_MAgeYoungestJudgment01:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeYoungestJudgment01, CAP_9992));
CreditReport: => MAgeYoungestJudgment02 := IF(tmp_MAgeYoungestJudgment02:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeYoungestJudgment02, CAP_9992));
CreditReport: => MAgeYoungestJudgment03 := IF(tmp_MAgeYoungestJudgment03:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeYoungestJudgment03, CAP_9992));
CreditReport: => MAgeYoungestJudgment04 := IF(tmp_MAgeYoungestJudgment04:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeYoungestJudgment04, CAP_9992));

// Age_OldestJudgment:
CreditReport: => tmp_MAgeOldestJudgment01 := MAX(CreditReportJudgment(u_group01), GMOSPRDateFiled);
CreditReport: => tmp_MAgeOldestJudgment02 := MAX(CreditReportJudgment(u_group02), GMOSPRDateFiled);
CreditReport: => tmp_MAgeOldestJudgment03 := MAX(CreditReportJudgment(u_group03), GMOSPRDateFiled);
CreditReport: => tmp_MAgeOldestJudgment04 := MAX(CreditReportJudgment(u_group04), GMOSPRDateFiled);

CreditReport: => MAgeOldestJudgment01 := IF(tmp_MAgeOldestJudgment01:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeOldestJudgment01, CAP_9992));
CreditReport: => MAgeOldestJudgment02 := IF(tmp_MAgeOldestJudgment02:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeOldestJudgment02, CAP_9992));
CreditReport: => MAgeOldestJudgment03 := IF(tmp_MAgeOldestJudgment03:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeOldestJudgment03, CAP_9992));
CreditReport: => MAgeOldestJudgment04 := IF(tmp_MAgeOldestJudgment04:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_MAgeOldestJudgment04, CAP_9992));

// Age_TotalJudgmentLife;
CreditReport: => tmp_MAgeTotalJudgmentLife01 := SUM(CreditReportJudgment(u_group01 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeTotalJudgmentLife02 := SUM(CreditReportJudgment(u_group02 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeTotalJudgmentLife03 := SUM(CreditReportJudgment(u_group03 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeTotalJudgmentLife04 := SUM(CreditReportJudgment(u_group04 AND u_GJudgmentLife >= 0), u_GJudgmentLife);

CreditReport: => MAgeTotalJudgmentLife01 := IF(tmp_MAgeTotalJudgmentLife01 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_JU_CntrlLevel41_01 = 0 => DEFAULT_L4, 0),
												MIN(tmp_MAgeTotalJudgmentLife01, CAP_9992));
CreditReport: => MAgeTotalJudgmentLife02 := IF(tmp_MAgeTotalJudgmentLife02 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2,
													u_JU_CntrlLevel41_02 = 0 => DEFAULT_L4, 0),
												MIN(tmp_MAgeTotalJudgmentLife02, CAP_9992));
CreditReport: => MAgeTotalJudgmentLife03 := IF(tmp_MAgeTotalJudgmentLife03 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2,
													u_JU_CntrlLevel41_03 = 0 => DEFAULT_L4, 0),
												MIN(tmp_MAgeTotalJudgmentLife03, CAP_9992));
CreditReport: => MAgeTotalJudgmentLife04 := IF(tmp_MAgeTotalJudgmentLife04 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2,
													u_JU_CntrlLevel41_04 = 0 => DEFAULT_L4, 0),
												MIN(tmp_MAgeTotalJudgmentLife04, CAP_9992));

// Age_MaxJudgmentLife:
CreditReport: => tmp_MAgeMaxJudgmentLife01 := MAX(CreditReportJudgment(u_group01 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeMaxJudgmentLife02 := MAX(CreditReportJudgment(u_group02 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeMaxJudgmentLife03 := MAX(CreditReportJudgment(u_group03 AND u_GJudgmentLife >= 0), u_GJudgmentLife);
CreditReport: => tmp_MAgeMaxJudgmentLife04 := MAX(CreditReportJudgment(u_group04 AND u_GJudgmentLife >= 0), u_GJudgmentLife);

CreditReport: => MAgeMaxJudgmentLife01 := IF(tmp_MAgeMaxJudgmentLife01:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2,
												u_JU_CntrlLevel41_01 = 0 => DEFAULT_L4, DEFAULT_TEST),
											MIN(tmp_MAgeMaxJudgmentLife01, CAP_9992));
CreditReport: => MAgeMaxJudgmentLife02 := IF(tmp_MAgeMaxJudgmentLife02:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2,
												u_JU_CntrlLevel41_02 = 0 => DEFAULT_L4, DEFAULT_TEST),
											MIN(tmp_MAgeMaxJudgmentLife02, CAP_9992));
CreditReport: => MAgeMaxJudgmentLife03 := IF(tmp_MAgeMaxJudgmentLife03:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2,
												u_JU_CntrlLevel41_03 = 0 => DEFAULT_L4, DEFAULT_TEST),
											MIN(tmp_MAgeMaxJudgmentLife03, CAP_9992));
CreditReport: => MAgeMaxJudgmentLife04 := IF(tmp_MAgeMaxJudgmentLife04:Null,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2,
												u_JU_CntrlLevel41_04 = 0 => DEFAULT_L4, DEFAULT_TEST),
											MIN(tmp_MAgeMaxJudgmentLife04, CAP_9992));

// Total_JudgmentAmount:
CreditReport: => tmp_ATotalJudgmentAmount01 := SUM(CreditReportJudgment(u_group01), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount02 := SUM(CreditReportJudgment(u_group02), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount03 := SUM(CreditReportJudgment(u_group03), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount04 := SUM(CreditReportJudgment(u_group04), PRAmountInvolved);

CreditReport: => ATotalJudgmentAmount01 := IF(tmp_ATotalJudgmentAmount01 = 0,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_ATotalJudgmentAmount01, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount02 := IF(tmp_ATotalJudgmentAmount02 = 0,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_ATotalJudgmentAmount02, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount03 := IF(tmp_ATotalJudgmentAmount03 = 0,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_ATotalJudgmentAmount03, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount04 := IF(tmp_ATotalJudgmentAmount04 = 0,
											MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
												u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, DEFAULT_TEST),
											MIN(tmp_ATotalJudgmentAmount04, CAP_9999999992));

// Total_UnsatisfiedJudgmentAmount:
CreditReport: => tmp_ATotalUnsatisfiedJudgAmount01 := SUM(CreditReportJudgment(u_group01 AND NOT G2Satisfied), PRAmountInvolved);
CreditReport: => tmp_ATotalUnsatisfiedJudgAmount02 := SUM(CreditReportJudgment(u_group02 AND NOT G2Satisfied), PRAmountInvolved);
CreditReport: => tmp_ATotalUnsatisfiedJudgAmount03 := SUM(CreditReportJudgment(u_group03 AND NOT G2Satisfied), PRAmountInvolved);
CreditReport: => tmp_ATotalUnsatisfiedJudgAmount04 := SUM(CreditReportJudgment(u_group04 AND NOT G2Satisfied), PRAmountInvolved);

CreditReport: => ATotalUnsatisfiedJudgAmount01 := IF(tmp_ATotalUnsatisfiedJudgAmount01 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, 0),
													MIN(tmp_ATotalUnsatisfiedJudgAmount01, CAP_9999999992));
CreditReport: => ATotalUnsatisfiedJudgAmount02 := IF(tmp_ATotalUnsatisfiedJudgAmount02 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, 0),
													MIN(tmp_ATotalUnsatisfiedJudgAmount02, CAP_9999999992));
CreditReport: => ATotalUnsatisfiedJudgAmount03 := IF(tmp_ATotalUnsatisfiedJudgAmount03 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, 0),
													MIN(tmp_ATotalUnsatisfiedJudgAmount03, CAP_9999999992));
CreditReport: => ATotalUnsatisfiedJudgAmount04 := IF(tmp_ATotalUnsatisfiedJudgAmount04 = 0,
													MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
														u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, 0),
													MIN(tmp_ATotalUnsatisfiedJudgAmount04, CAP_9999999992));

// Total_JudgmentAmount60M:
CreditReport: => tmp_ATotalJudgmentAmount60M01 := SUM(CreditReportJudgment(u_group01 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount60M02 := SUM(CreditReportJudgment(u_group02 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount60M03 := SUM(CreditReportJudgment(u_group03 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60), PRAmountInvolved);
CreditReport: => tmp_ATotalJudgmentAmount60M04 := SUM(CreditReportJudgment(u_group04 AND GMOSPRDateFiled >= 0 AND GMOSPRDateFiled <= 60), PRAmountInvolved);

CreditReport: => ATotalJudgmentAmount60M01 := IF(tmp_ATotalJudgmentAmount60M01 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_01 = 0 => DEFAULT_L2, 0),
												MIN(tmp_ATotalJudgmentAmount60M01, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount60M02 := IF(tmp_ATotalJudgmentAmount60M02 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_02 = 0 => DEFAULT_L2, 0),
												MIN(tmp_ATotalJudgmentAmount60M02, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount60M03 := IF(tmp_ATotalJudgmentAmount60M03 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_03 = 0 => DEFAULT_L2, 0),
												MIN(tmp_ATotalJudgmentAmount60M03, CAP_9999999992));
CreditReport: => ATotalJudgmentAmount60M04 := IF(tmp_ATotalJudgmentAmount60M04 = 0,
												MAP(u_JU_CntrlLevel1 = 0 => DEFAULT_L1,
													u_JU_CntrlLevel2_04 = 0 => DEFAULT_L2, 0),
												MIN(tmp_ATotalJudgmentAmount60M04, CAP_9999999992));

// ****** Level 2 Attributes ********

// PUnsatisfied_Judgment:
CreditReport: => PUnsatisfiedJudgment01 := MAP(CTotalJudgments01 > 0 AND CTotalUnsatisfiedJudgments01 >= 0 => MIN(ROUND2(CTotalUnsatisfiedJudgments01 * 100 / CTotalJudgments01), CAP_999_DOT_92),
												CTotalJudgments01 < 0 => CTotalJudgments01,
												CTotalJudgments01 = 0 => DEFAULT_L1, DEFAULT_TEST);
CreditReport: => PUnsatisfiedJudgment02 := MAP(CTotalJudgments02 > 0 AND CTotalUnsatisfiedJudgments02 >= 0 => MIN(ROUND2(CTotalUnsatisfiedJudgments02 * 100 / CTotalJudgments02), CAP_999_DOT_92),
												CTotalJudgments02 < 0 => CTotalJudgments02,
												CTotalJudgments02 = 0 => DEFAULT_L2, DEFAULT_TEST);
CreditReport: => PUnsatisfiedJudgment03 := MAP(CTotalJudgments03 > 0 AND CTotalUnsatisfiedJudgments03 >= 0 => MIN(ROUND2(CTotalUnsatisfiedJudgments03 * 100 / CTotalJudgments03), CAP_999_DOT_92),
												CTotalJudgments03 < 0 => CTotalJudgments03,
												CTotalJudgments03 = 0 => DEFAULT_L2, DEFAULT_TEST);
CreditReport: => PUnsatisfiedJudgment04 := MAP(CTotalJudgments04 > 0 AND CTotalUnsatisfiedJudgments04 >= 0 => MIN(ROUND2(CTotalUnsatisfiedJudgments04 * 100 / CTotalJudgments04), CAP_999_DOT_92),
												CTotalJudgments04 < 0 => CTotalJudgments04,
												CTotalJudgments04 = 0 => DEFAULT_L2, DEFAULT_TEST);





/*************************************************************************/
/*                                                                       */
/*                       Attributes for TaxLien                          */
/*                                                                       */
/*************************************************************************/
////////////////////////////////////////////////////////////////////////////////////
//CreditReportLien: => Group01 := ; // do not need this step 
CreditReportLien: => u_TL_Group02 := GFederalTaxLien; // add TL for 
CreditReportLien: => u_TL_Group03 := GStateTaxLien;
CreditReportLien: => u_GLienLife := IF(G2ReleasedLien,
                                      MAP(GMOSPRDateReleasedTL >= 0 => (GMOSPRDateFiled - GMOSPRDateReleasedTL),-99999),
                                      GMOSPRDateFiled); // LN data should not have the case with missing dates




CreditReport: => u_TL_CntrlLevel1 := COUNT(CreditReportLien); //
CreditReport: => u_TL_CntrlLevel2_02 := COUNT(CreditReportLien(u_TL_Group02)); //control level 2 for GROUP02, to set DEFAULT_L2
CreditReport: => u_TL_CntrlLevel2_03 := COUNT(CreditReportLien(u_TL_Group03)); // control level 3 for group3, to set DEFAULT_L2

CreditReport: => u_TL_CntrlLevel31_01 := COUNT(CreditReportLien(NOT G3TLExcluded)); //control level 3 for group01, to set DEFAULT_L3
CreditReport: => u_TL_CntrlLevel31_02 := COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group02)); //control level 3 for group02, to set DEFAULT_L3
CreditReport: => u_TL_CntrlLevel31_03 := COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group03)); //control level 3 for group03, to set DEFAULT_L3

//calculate the count, then check the 0 scenarios, for the count, there is only one possibility, control level did not cover all 0 case, but sas did not set the possible scenarios either.
CreditReport: => CTotalTaxLien01 := MAP(u_TL_CntrlLevel1 =0 => 0,  //there is no taxlien at all
                                        u_TL_CntrlLevel31_01=0 => DEFAULT_L3, //taxlien were excluded
                                        MIN(COUNT(CreditReportLien(NOT G3TLExcluded)), CAP_92)); 

CreditReport: => CTotalTaxLien02 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                        u_TL_CntrlLevel2_02 =0 => 0, // if true then stop, there is no Federal taxlien
                                        u_TL_CntrlLevel31_02=0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group02)), CAP_92));

CreditReport: => CTotalTaxLien03 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                        u_TL_CntrlLevel2_03 =0 => 0, // no state taxlien
                                        u_TL_CntrlLevel31_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group03)), CAP_92));

CreditReport: => CTotalUnreleasedTaxLien01 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1, //no taxlien = no DEFAULT_L2
                                                  u_TL_CntrlLevel31_01 =0 => DEFAULT_L3,
                                                  MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND NOT G2ReleasedLien)), CAP_92));

CreditReport: => CTotalUnreleasedTaxLien02 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_02 =0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_02 =0 => DEFAULT_L3,
                                                  MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND NOT G2ReleasedLien AND u_TL_Group02)), CAP_92));

CreditReport: => CTotalUnreleasedTaxLien03 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_03 =0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_03 =0 => DEFAULT_L3,
                                                  MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND NOT G2ReleasedLien AND u_TL_Group03)), CAP_92));
CreditReport: => CTotalTaxLienPlaced60M01 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel31_01 =0 => DEFAULT_L3,
                                                 MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND GMOSPRDateFiled <= 60)), CAP_92));

CreditReport: => CTotalTaxLienPlaced60M02 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel2_02 =0 => DEFAULT_L2,
                                                 u_TL_CntrlLevel31_02 =0 => DEFAULT_L3,
                                                 MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group02 AND GMOSPRDateFiled <= 60)), CAP_92));

CreditReport: => CTotalTaxLienPlaced60M03 := MAP(u_TL_CntrlLevel1 =0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel2_03 =0 => DEFAULT_L2,
                                                 u_TL_CntrlLevel31_03 =0 => DEFAULT_L3,
                                                 MIN(COUNT(CreditReportLien(NOT G3TLExcluded AND u_TL_Group03 AND GMOSPRDateFiled <= 60)), CAP_92));

CreditReport: => tmp_MAgeYoungestTaxLien01 := MIN(CreditReportLien(NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeYoungestTaxLien01 := IF(tmp_MAgeYoungestTaxLien01:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeYoungestTaxLien01, CAP_9992));

CreditReport: => tmp_MAgeYoungestTaxLien02 := MIN(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeYoungestTaxLien02 := IF(tmp_MAgeYoungestTaxLien02:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeYoungestTaxLien02, CAP_9992));

CreditReport: => tmp_MAgeYoungestTaxLien03 := MIN(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeYoungestTaxLien03 := IF(tmp_MAgeYoungestTaxLien03:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeYoungestTaxLien03, CAP_9992));

CreditReport: => tmp_MAgeOldestTaxLien01 := MAX(CreditReportLien(NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeOldestTaxLien01 := IF(tmp_MAgeOldestTaxLien01:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeOldestTaxLien01, CAP_9992));

CreditReport: => tmp_MAgeOldestTaxLien02 := MAX(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeOldestTaxLien02 := IF(tmp_MAgeOldestTaxLien02:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeOldestTaxLien02, CAP_9992));

CreditReport: => tmp_MAgeOldestTaxLien03 := MAX(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded), GMOSPRDateFiled);
CreditReport: => MAgeOldestTaxLien03 := IF(tmp_MAgeOldestTaxLien03:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                              MIN(tmp_MAgeOldestTaxLien03, CAP_9992));

CreditReport: => u_TL_CntrlLevel41_01 := COUNT(CreditReportLien(NOT G3TLExcluded AND u_GLienLife >= 0));
CreditReport: => u_TL_CntrlLevel41_02 := COUNT(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND u_GLienLife >= 0));
CreditReport: => u_TL_CntrlLevel41_03 := COUNT(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND u_GLienLife >= 0));

CreditReport: => tmp_MAgeTotalTaxLienLife01 := SUM(CreditReportLien(NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); //no Null issue
CreditReport: => MAgeTotalTaxLienLife01 := IF(tmp_MAgeTotalTaxLienLife01 = 0,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_01 = 0 => DEFAULT_L4, 0),
                                              MIN(tmp_MAgeTotalTaxLienLife01, CAP_99992));

CreditReport: => tmp_MAgeTotalTaxLienLife02 := SUM(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); 
CreditReport: => MAgeTotalTaxLienLife02 := IF(tmp_MAgeTotalTaxLienLife02 = 0,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_02 = 0 => DEFAULT_L4, 0),
                                              MIN(tmp_MAgeTotalTaxLienLife02, CAP_99992));

CreditReport: => tmp_MAgeTotalTaxLienLife03 := SUM(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); 
CreditReport: => MAgeTotalTaxLienLife03 := IF(tmp_MAgeTotalTaxLienLife03 = 0,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_03 = 0 => DEFAULT_L4, 0),
                                              MIN(tmp_MAgeTotalTaxLienLife03, CAP_99992));

//as Shewjen said before, DEFAULT_TEST cannot happen here, she coded in sas just for coding purpose, KEL does not have DEFAULT_TEST in code
CreditReport: => tmp_MAgeMaxTaxLienLife01 := MAX(CreditReportLien(NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); 
CreditReport: => MAgeMaxTaxLienLife01 := IF(tmp_MAgeMaxTaxLienLife01:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_01 = 0 => DEFAULT_L4, DEFAULT_TEST),
                                              MIN(tmp_MAgeMaxTaxLienLife01, CAP_9992));

CreditReport: => tmp_MAgeMaxTaxLienLife02 := MAX(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); 
CreditReport: => MAgeMaxTaxLienLife02 := IF(tmp_MAgeMaxTaxLienLife02:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_02 = 0 => DEFAULT_L4, DEFAULT_TEST),
                                              MIN(tmp_MAgeMaxTaxLienLife02, CAP_9992));

CreditReport: => tmp_MAgeMaxTaxLienLife03 := MAX(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND u_GLienLife >= 0), u_GLienLife); 
CreditReport: => MAgeMaxTaxLienLife03 := IF(tmp_MAgeMaxTaxLienLife03:Null,
                                              MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                  u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                  u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3,
                                                  u_TL_CntrlLevel41_03 = 0 => DEFAULT_L4, DEFAULT_TEST),
                                              MIN(tmp_MAgeMaxTaxLienLife03, CAP_9992));

CreditReport: => tmp_ATotalTaxLienAmount01 := SUM(CreditReportLien(NOT G3TLExcluded AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalTaxLienAmount01 := IF(tmp_ATotalTaxLienAmount01 = 0,
                                             MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                             MIN(tmp_ATotalTaxLienAmount01, CAP_9999999992));

CreditReport: => tmp_ATotalTaxLienAmount02 := SUM(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalTaxLienAmount02 := IF(tmp_ATotalTaxLienAmount02 = 0,
                                             MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                 u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                             MIN(tmp_ATotalTaxLienAmount02, CAP_9999999992));

CreditReport: => tmp_ATotalTaxLienAmount03 := SUM(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalTaxLienAmount03 := IF(tmp_ATotalTaxLienAmount03 = 0,
                                             MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                 u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                 u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                             MIN(tmp_ATotalTaxLienAmount03, CAP_9999999992));

CreditReport: => u_TL_CntrlLevel32_01 := COUNT(CreditReportLien(NOT G3TLExcluded AND NOT G2ReleasedLien));
CreditReport: => u_TL_CntrlLevel32_02 := COUNT(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND NOT G2ReleasedLien));
CreditReport: => u_TL_CntrlLevel32_03 := COUNT(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND NOT G2ReleasedLien));

CreditReport: => tmp_ATotalUnreleasedTaxLienAmount01 := SUM(CreditReportLien(NOT G3TLExcluded AND NOT G2ReleasedLien AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalUnreleasedTaxLienAmount01 := IF(tmp_ATotalUnreleasedTaxLienAmount01 = 0,
                                                       MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                           u_TL_CntrlLevel32_01 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                                       MIN(tmp_ATotalUnreleasedTaxLienAmount01, CAP_9999999992));

CreditReport: => tmp_ATotalUnreleasedTaxLienAmount02 := SUM(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND NOT G2ReleasedLien AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalUnreleasedTaxLienAmount02 := IF(tmp_ATotalUnreleasedTaxLienAmount02 = 0,
                                                       MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                           u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                           u_TL_CntrlLevel32_02 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                                       MIN(tmp_ATotalUnreleasedTaxLienAmount02, CAP_9999999992));

CreditReport: => tmp_ATotalUnreleasedTaxLienAmount03 := SUM(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND NOT G2ReleasedLien AND GvalidAmountTL), PRAmountOfLien); // result is NULL if PRAmountOfLien is missing, this case cannot happen for LN data
CreditReport: => ATotalUnreleasedTaxLienAmount03 := IF(tmp_ATotalUnreleasedTaxLienAmount03 = 0,
                                                       MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                           u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                           u_TL_CntrlLevel32_03 = 0 => DEFAULT_L3, DEFAULT_TEST),
                                                       MIN(tmp_ATotalUnreleasedTaxLienAmount03, CAP_9999999992));

CreditReport: => tmp_ATotalTaxLienAmount60M01 := SUM(CreditReportLien(NOT G3TLExcluded AND GMOSPRDateFiled <= 60 AND GvalidAmountTL), PRAmountOfLien);
CreditReport: => ATotalTaxLienAmount60M01 := MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                    u_TL_CntrlLevel31_01 = 0 => DEFAULT_L3, 
                                                MIN(tmp_ATotalTaxLienAmount60M01, CAP_9999999992));

CreditReport: => tmp_ATotalTaxLienAmount60M02 := SUM(CreditReportLien(u_TL_Group02 AND NOT G3TLExcluded AND GMOSPRDateFiled <= 60 AND GvalidAmountTL), PRAmountOfLien);
CreditReport: => ATotalTaxLienAmount60M02 := MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                    u_TL_CntrlLevel2_02 = 0 => DEFAULT_L2,
                                                    u_TL_CntrlLevel31_02 = 0 => DEFAULT_L3,
                                                MIN(tmp_ATotalTaxLienAmount60M02, CAP_9999999992));

CreditReport: => tmp_ATotalTaxLienAmount60M03 := SUM(CreditReportLien(u_TL_Group03 AND NOT G3TLExcluded AND GMOSPRDateFiled <= 60 AND GvalidAmountTL), PRAmountOfLien);
CreditReport: => ATotalTaxLienAmount60M03 := MAP(u_TL_CntrlLevel1 = 0 => DEFAULT_L1,
                                                    u_TL_CntrlLevel2_03 = 0 => DEFAULT_L2,
                                                    u_TL_CntrlLevel31_03 = 0 => DEFAULT_L3,
                                                MIN(tmp_ATotalTaxLienAmount60M03, CAP_9999999992));


//Level2 ATTRIBUTES
CreditReport: => PUnreleasedTaxLien01 := IF((CTotalTaxLien01 > 0 AND CTotalUnreleasedTaxLien01 >= 0), MIN(ROUND2(CTotalUnreleasedTaxLien01 * 100 / CTotalTaxLien01), CAP_999_DOT_92),
                                             MAP(CTotalTaxLien01 < 0 => REAL(CTotalTaxLien01),
                                                 CTotalTaxLien01 = 0 => REAL(DEFAULT_L1), REAL(DEFAULT_TEST)));// No Null issue

CreditReport: => PUnreleasedTaxLien02 := IF((CTotalTaxLien02 > 0 AND CTotalUnreleasedTaxLien02 >= 0), MIN(ROUND2(CTotalUnreleasedTaxLien02 * 100 / CTotalTaxLien02), CAP_999_DOT_92),
                                             MAP(CTotalTaxLien02 < 0 => REAL(CTotalTaxLien02),
                                                 CTotalTaxLien02 = 0 => REAL(DEFAULT_L2), REAL(DEFAULT_TEST)));// No Null issue

CreditReport: => PUnreleasedTaxLien03 := IF((CTotalTaxLien03 > 0 AND CTotalUnreleasedTaxLien03 >= 0), MIN(ROUND2(CTotalUnreleasedTaxLien03 * 100 / CTotalTaxLien03), CAP_999_DOT_92),
                                             MAP(CTotalTaxLien03 < 0 => REAL(CTotalTaxLien03),
                                                 CTotalTaxLien03 = 0 => REAL(DEFAULT_L2), REAL(DEFAULT_TEST)));// No Null issue






/*************************************************************************************************/
/* START OF BANKRUPTCY/TRADE ATTRIBUTES - all group01 no -2 vals                                 */
/*************************************************************************************************/
// Total_TradeInBkp:
CreditReport: => tmp_CTotalBkpTrades:= COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G2Bankruptcy));
CreditReport: => CTotalBkpTrades := IF(tmp_CTotalBkpTrades = 0,
										MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
										MIN(tmp_CTotalBkpTrades, CAP_992));

// Total_BkpTradeNotInChp13:
CreditReport: => tmp_CTotalBkpTradeNotChp13:= COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G2Bankruptcy AND NOT G2Bankruptcy13));
CreditReport: => CTotalBkpTradeNotChp13 := IF(tmp_CTotalBkpTradeNotChp13 = 0,
												MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													u_TR_CntrlLevel32_01 = 0 => DEFAULT_L3, 0),
												MIN(tmp_CTotalBkpTradeNotChp13, CAP_992));

// Total_BkpTradeOpned60M:
CreditReport: => tmp_CTotalBkpTradesOpned60M:= COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G2Bankruptcy AND GMOSDateAccountOpened >= 0 AND GMOSDateAccountOpened <= 60));
CreditReport: => CTotalBkpTradesOpned60M := IF(tmp_CTotalBkpTradesOpned60M = 0,
												MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													u_TR_CntrlLevel319_01 = 0 => DEFAULT_L3,
													u_TR_CntrlLevel419G0_01 > 0 => DEFAULT_L4, 0),
												MIN(tmp_CTotalBkpTradesOpned60M, CAP_992));

// Total_BkpTradeNOT13Opned60M:
CreditReport: => tmp_CTotalBkpTrdNot13Opned60M:= COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G2Bankruptcy AND NOT G2Bankruptcy13 AND GMOSDateAccountOpened >= 0 AND GMOSDateAccountOpened <= 60));
CreditReport: => CTotalBkpTrdNot13Opned60M := IF(tmp_CTotalBkpTrdNot13Opned60M = 0,
												MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													u_TR_CntrlLevel320_01 = 0 => DEFAULT_L3,
													u_TR_CntrlLevel420G0_01 > 0 => DEFAULT_L4, 0),
												MIN(tmp_CTotalBkpTrdNot13Opned60M, CAP_992));


/**************************************************/
/* Level 2 attributes                             */
/**************************************************/

// P_OpnTrades:
CreditReport: => POpnTrades01 := MAP(CTotalTrades01 > 0 AND CTotalOpnTrades01 >= 0 => MIN(ROUND2(CTotalOpnTrades01 * 100 / CTotalTrades01), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades01 = 0 => DEFAULT_L2,
									CTotalTrades01 < 0 => CTotalTrades01, 
									CTotalOpnTrades01 < 0 => CTotalOpnTrades01,DEFAULT_TEST);
CreditReport: => POpnTrades02 := MAP(CTotalTrades02 > 0 AND CTotalOpnTrades02 >= 0 => MIN(ROUND2(CTotalOpnTrades02 * 100 / CTotalTrades02), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades02 = 0 => DEFAULT_L2,
									CTotalTrades02 < 0 => CTotalTrades02, 
									CTotalOpnTrades02 < 0 => CTotalOpnTrades02,DEFAULT_TEST);
CreditReport: => POpnTrades03 := MAP(CTotalTrades03 > 0 AND CTotalOpnTrades03 >= 0 => MIN(ROUND2(CTotalOpnTrades03 * 100 / CTotalTrades03), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades03 = 0 => DEFAULT_L2,
									CTotalTrades03 < 0 => CTotalTrades03, 
									CTotalOpnTrades03 < 0 => CTotalOpnTrades03,DEFAULT_TEST);
CreditReport: => POpnTrades04 := MAP(CTotalTrades04 > 0 AND CTotalOpnTrades04 >= 0 => MIN(ROUND2(CTotalOpnTrades04 * 100 / CTotalTrades04), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades04 = 0 => DEFAULT_L2,
									CTotalTrades04 < 0 => CTotalTrades04, 
									CTotalOpnTrades04 < 0 => CTotalOpnTrades04,DEFAULT_TEST);
CreditReport: => POpnTrades05 := MAP(CTotalTrades05 > 0 AND CTotalOpnTrades05 >= 0 => MIN(ROUND2(CTotalOpnTrades05 * 100 / CTotalTrades05), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades05 = 0 => DEFAULT_L2,
									CTotalTrades05 < 0 => CTotalTrades05, 
									CTotalOpnTrades05 < 0 => CTotalOpnTrades05,DEFAULT_TEST);
CreditReport: => POpnTrades06 := MAP(CTotalTrades06 > 0 AND CTotalOpnTrades06 >= 0 => MIN(ROUND2(CTotalOpnTrades06 * 100 / CTotalTrades06), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades06 = 0 => DEFAULT_L2,
									CTotalTrades06 < 0 => CTotalTrades06, 
									CTotalOpnTrades06 < 0 => CTotalOpnTrades06,DEFAULT_TEST);
CreditReport: => POpnTrades07 := MAP(CTotalTrades07 > 0 AND CTotalOpnTrades07 >= 0 => MIN(ROUND2(CTotalOpnTrades07 * 100 / CTotalTrades07), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades07 = 0 => DEFAULT_L2,
									CTotalTrades07 < 0 => CTotalTrades07, 
									CTotalOpnTrades07 < 0 => CTotalOpnTrades07,DEFAULT_TEST);
CreditReport: => POpnTrades08 := MAP(CTotalTrades08 > 0 AND CTotalOpnTrades08 >= 0 => MIN(ROUND2(CTotalOpnTrades08 * 100 / CTotalTrades08), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades08 = 0 => DEFAULT_L2,
									CTotalTrades08 < 0 => CTotalTrades08, 
									CTotalOpnTrades08 < 0 => CTotalOpnTrades08,DEFAULT_TEST);
CreditReport: => POpnTrades09 := MAP(CTotalTrades09 > 0 AND CTotalOpnTrades09 >= 0 => MIN(ROUND2(CTotalOpnTrades09 * 100 / CTotalTrades09), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades09 = 0 => DEFAULT_L2,
									CTotalTrades09 < 0 => CTotalTrades09, 
									CTotalOpnTrades09 < 0 => CTotalOpnTrades09,DEFAULT_TEST);
CreditReport: => POpnTrades10 := MAP(CTotalTrades10 > 0 AND CTotalOpnTrades10 >= 0 => MIN(ROUND2(CTotalOpnTrades10 * 100 / CTotalTrades10), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades10 = 0 => DEFAULT_L2,
									CTotalTrades10 < 0 => CTotalTrades10, 
									CTotalOpnTrades10 < 0 => CTotalOpnTrades10,DEFAULT_TEST);
CreditReport: => POpnTrades11 := MAP(CTotalTrades11 > 0 AND CTotalOpnTrades11 >= 0 => MIN(ROUND2(CTotalOpnTrades11 * 100 / CTotalTrades11), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades11 = 0 => DEFAULT_L2,
									CTotalTrades11 < 0 => CTotalTrades11, 
									CTotalOpnTrades11 < 0 => CTotalOpnTrades11,DEFAULT_TEST);
CreditReport: => POpnTrades12 := MAP(CTotalTrades12 > 0 AND CTotalOpnTrades12 >= 0 => MIN(ROUND2(CTotalOpnTrades12 * 100 / CTotalTrades12), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades12 = 0 => DEFAULT_L2,
									CTotalTrades12 < 0 => CTotalTrades12, 
									CTotalOpnTrades12 < 0 => CTotalOpnTrades12,DEFAULT_TEST);
CreditReport: => POpnTrades13 := MAP(CTotalTrades13 > 0 AND CTotalOpnTrades13 >= 0 => MIN(ROUND2(CTotalOpnTrades13 * 100 / CTotalTrades13), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades13 = 0 => DEFAULT_L2,
									CTotalTrades13 < 0 => CTotalTrades13, 
									CTotalOpnTrades13 < 0 => CTotalOpnTrades13,DEFAULT_TEST);
CreditReport: => POpnTrades14 := MAP(CTotalTrades14 > 0 AND CTotalOpnTrades14 >= 0 => MIN(ROUND2(CTotalOpnTrades14 * 100 / CTotalTrades14), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades14 = 0 => DEFAULT_L2,
									CTotalTrades14 < 0 => CTotalTrades14, 
									CTotalOpnTrades14 < 0 => CTotalOpnTrades14,DEFAULT_TEST);
CreditReport: => POpnTrades15 := MAP(CTotalTrades15 > 0 AND CTotalOpnTrades15 >= 0 => MIN(ROUND2(CTotalOpnTrades15 * 100 / CTotalTrades15), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades15 = 0 => DEFAULT_L2,
									CTotalTrades15 < 0 => CTotalTrades15, 
									CTotalOpnTrades15 < 0 => CTotalOpnTrades15,DEFAULT_TEST);
CreditReport: => POpnTrades16 := MAP(CTotalTrades16 > 0 AND CTotalOpnTrades16 >= 0 => MIN(ROUND2(CTotalOpnTrades16 * 100 / CTotalTrades16), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades16 = 0 => DEFAULT_L2,
									CTotalTrades16 < 0 => CTotalTrades16, 
									CTotalOpnTrades16 < 0 => CTotalOpnTrades16,DEFAULT_TEST);
CreditReport: => POpnTrades17 := MAP(CTotalTrades17 > 0 AND CTotalOpnTrades17 >= 0 => MIN(ROUND2(CTotalOpnTrades17 * 100 / CTotalTrades17), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades17 = 0 => DEFAULT_L2,
									CTotalTrades17 < 0 => CTotalTrades17, 
									CTotalOpnTrades17 < 0 => CTotalOpnTrades17,DEFAULT_TEST);
CreditReport: => POpnTrades18 := MAP(CTotalTrades18 > 0 AND CTotalOpnTrades18 >= 0 => MIN(ROUND2(CTotalOpnTrades18 * 100 / CTotalTrades18), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades18 = 0 => DEFAULT_L2,
									CTotalTrades18 < 0 => CTotalTrades18, 
									CTotalOpnTrades18 < 0 => CTotalOpnTrades18,DEFAULT_TEST);
CreditReport: => POpnTrades19 := MAP(CTotalTrades19 > 0 AND CTotalOpnTrades19 >= 0 => MIN(ROUND2(CTotalOpnTrades19 * 100 / CTotalTrades19), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades19 = 0 => DEFAULT_L2,
									CTotalTrades19 < 0 => CTotalTrades19, 
									CTotalOpnTrades19 < 0 => CTotalOpnTrades19,DEFAULT_TEST);
CreditReport: => POpnTrades20 := MAP(CTotalTrades20 > 0 AND CTotalOpnTrades20 >= 0 => MIN(ROUND2(CTotalOpnTrades20 * 100 / CTotalTrades20), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades20 = 0 => DEFAULT_L2,
									CTotalTrades20 < 0 => CTotalTrades20, 
									CTotalOpnTrades20 < 0 => CTotalOpnTrades20,DEFAULT_TEST);
CreditReport: => POpnTrades21 := MAP(CTotalTrades21 > 0 AND CTotalOpnTrades21 >= 0 => MIN(ROUND2(CTotalOpnTrades21 * 100 / CTotalTrades21), CAP_100),
									u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
									CTotalTrades21 = 0 => DEFAULT_L2,
									CTotalTrades21 < 0 => CTotalTrades21, 
									CTotalOpnTrades21 < 0 => CTotalOpnTrades21,DEFAULT_TEST);

// P_OpnToAllOpnTrades:
CreditReport: => POpnToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades01 >= 0 => MIN(ROUND2(CTotalOpnTrades01 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades02 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades02 >= 0 => MIN(ROUND2(CTotalOpnTrades02 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades02 < 0 => CTotalOpnTrades02, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades03 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades03 >= 0 => MIN(ROUND2(CTotalOpnTrades03 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades03 < 0 => CTotalOpnTrades03, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades04 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades04 >= 0 => MIN(ROUND2(CTotalOpnTrades04 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades04 < 0 => CTotalOpnTrades04, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades05 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades05 >= 0 => MIN(ROUND2(CTotalOpnTrades05 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades05 < 0 => CTotalOpnTrades05, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades06 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades06 >= 0 => MIN(ROUND2(CTotalOpnTrades06 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades06 < 0 => CTotalOpnTrades06, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades07 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades07 >= 0 => MIN(ROUND2(CTotalOpnTrades07 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades07 < 0 => CTotalOpnTrades07, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades08 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades08 >= 0 => MIN(ROUND2(CTotalOpnTrades08 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades08 < 0 => CTotalOpnTrades08, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades09 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades09 >= 0 => MIN(ROUND2(CTotalOpnTrades09 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades09 < 0 => CTotalOpnTrades09, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades10 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades10 >= 0 => MIN(ROUND2(CTotalOpnTrades10 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades10 < 0 => CTotalOpnTrades10, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades11 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades11 >= 0 => MIN(ROUND2(CTotalOpnTrades11 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades11 < 0 => CTotalOpnTrades11, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades12 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades12 >= 0 => MIN(ROUND2(CTotalOpnTrades12 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades12 < 0 => CTotalOpnTrades12, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades13 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades13 >= 0 => MIN(ROUND2(CTotalOpnTrades13 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades13 < 0 => CTotalOpnTrades13, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades14 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades14 >= 0 => MIN(ROUND2(CTotalOpnTrades14 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades14 < 0 => CTotalOpnTrades14, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades15 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades15 >= 0 => MIN(ROUND2(CTotalOpnTrades15 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades15 < 0 => CTotalOpnTrades15, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades16 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades16 >= 0 => MIN(ROUND2(CTotalOpnTrades16 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades16 < 0 => CTotalOpnTrades16, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades17 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades17 >= 0 => MIN(ROUND2(CTotalOpnTrades17 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades17 < 0 => CTotalOpnTrades17, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades18 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades18 >= 0 => MIN(ROUND2(CTotalOpnTrades18 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades18 < 0 => CTotalOpnTrades18, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades19 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades19 >= 0 => MIN(ROUND2(CTotalOpnTrades19 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades19 < 0 => CTotalOpnTrades19, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades20 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades20 >= 0 => MIN(ROUND2(CTotalOpnTrades20 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades20 < 0 => CTotalOpnTrades20, DEFAULT_TEST);
CreditReport: => POpnToAllOpnTrades21 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnTrades21 >= 0 => MIN(ROUND2(CTotalOpnTrades21 * 100 / CTotalOpnTrades01), CAP_100),
											CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
											CTotalOpnTrades01 = 0 => DEFAULT_L4,
											CTotalOpnTrades21 < 0 => CTotalOpnTrades21, DEFAULT_TEST);
// P_Opned12MToAllTrades:
CreditReport: => POpned12MToAllTrades01 := MAP(CTotalTrades01 > 0 AND CTotalTradesOpned12M01 >= 0 => MIN(ROUND2(CTotalTradesOpned12M01 * 100 / CTotalTrades01), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades01 = 0 => DEFAULT_L2,
												CTotalTrades01 < 0 => CTotalTrades01,
												CTotalTradesOpned12M01 < 0 => CTotalTradesOpned12M01, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades02 := MAP(CTotalTrades02 > 0 AND CTotalTradesOpned12M02 >= 0 => MIN(ROUND2(CTotalTradesOpned12M02 * 100 / CTotalTrades02), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades02 = 0 => DEFAULT_L2,
												CTotalTrades02 < 0 => CTotalTrades02,
												CTotalTradesOpned12M02 < 0 => CTotalTradesOpned12M02, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades03 := MAP(CTotalTrades03 > 0 AND CTotalTradesOpned12M03 >= 0 => MIN(ROUND2(CTotalTradesOpned12M03 * 100 / CTotalTrades03), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades03 = 0 => DEFAULT_L2,
												CTotalTrades03 < 0 => CTotalTrades03,
												CTotalTradesOpned12M03 < 0 => CTotalTradesOpned12M03, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades04 := MAP(CTotalTrades04 > 0 AND CTotalTradesOpned12M04 >= 0 => MIN(ROUND2(CTotalTradesOpned12M04 * 100 / CTotalTrades04), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades04 = 0 => DEFAULT_L2,
												CTotalTrades04 < 0 => CTotalTrades04,
												CTotalTradesOpned12M04 < 0 => CTotalTradesOpned12M04, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades05 := MAP(CTotalTrades05 > 0 AND CTotalTradesOpned12M05 >= 0 => MIN(ROUND2(CTotalTradesOpned12M05 * 100 / CTotalTrades05), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades05 = 0 => DEFAULT_L2,
												CTotalTrades05 < 0 => CTotalTrades05,
												CTotalTradesOpned12M05 < 0 => CTotalTradesOpned12M05, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades06 := MAP(CTotalTrades06 > 0 AND CTotalTradesOpned12M06 >= 0 => MIN(ROUND2(CTotalTradesOpned12M06 * 100 / CTotalTrades06), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades06 = 0 => DEFAULT_L2,
												CTotalTrades06 < 0 => CTotalTrades06,
												CTotalTradesOpned12M06 < 0 => CTotalTradesOpned12M06, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades07 := MAP(CTotalTrades07 > 0 AND CTotalTradesOpned12M07 >= 0 => MIN(ROUND2(CTotalTradesOpned12M07 * 100 / CTotalTrades07), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades07 = 0 => DEFAULT_L2,
												CTotalTrades07 < 0 => CTotalTrades07,
												CTotalTradesOpned12M07 < 0 => CTotalTradesOpned12M07, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades08 := MAP(CTotalTrades08 > 0 AND CTotalTradesOpned12M08 >= 0 => MIN(ROUND2(CTotalTradesOpned12M08 * 100 / CTotalTrades08), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades08 = 0 => DEFAULT_L2,
												CTotalTrades08 < 0 => CTotalTrades08,
												CTotalTradesOpned12M08 < 0 => CTotalTradesOpned12M08, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades09 := MAP(CTotalTrades09 > 0 AND CTotalTradesOpned12M09 >= 0 => MIN(ROUND2(CTotalTradesOpned12M09 * 100 / CTotalTrades09), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades09 = 0 => DEFAULT_L2,
												CTotalTrades09 < 0 => CTotalTrades09,
												CTotalTradesOpned12M09 < 0 => CTotalTradesOpned12M09, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades10 := MAP(CTotalTrades10 > 0 AND CTotalTradesOpned12M10 >= 0 => MIN(ROUND2(CTotalTradesOpned12M10 * 100 / CTotalTrades10), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades10 = 0 => DEFAULT_L2,
												CTotalTrades10 < 0 => CTotalTrades10,
												CTotalTradesOpned12M10 < 0 => CTotalTradesOpned12M10, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades11 := MAP(CTotalTrades11 > 0 AND CTotalTradesOpned12M11 >= 0 => MIN(ROUND2(CTotalTradesOpned12M11 * 100 / CTotalTrades11), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades11 = 0 => DEFAULT_L2,
												CTotalTrades11 < 0 => CTotalTrades11,
												CTotalTradesOpned12M11 < 0 => CTotalTradesOpned12M11, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades12 := MAP(CTotalTrades12 > 0 AND CTotalTradesOpned12M12 >= 0 => MIN(ROUND2(CTotalTradesOpned12M12 * 100 / CTotalTrades12), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades12 = 0 => DEFAULT_L2,
												CTotalTrades12 < 0 => CTotalTrades12,
												CTotalTradesOpned12M12 < 0 => CTotalTradesOpned12M12, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades13 := MAP(CTotalTrades13 > 0 AND CTotalTradesOpned12M13 >= 0 => MIN(ROUND2(CTotalTradesOpned12M13 * 100 / CTotalTrades13), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades13 = 0 => DEFAULT_L2,
												CTotalTrades13 < 0 => CTotalTrades13,
												CTotalTradesOpned12M13 < 0 => CTotalTradesOpned12M13, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades14 := MAP(CTotalTrades14 > 0 AND CTotalTradesOpned12M14 >= 0 => MIN(ROUND2(CTotalTradesOpned12M14 * 100 / CTotalTrades14), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades14 = 0 => DEFAULT_L2,
												CTotalTrades14 < 0 => CTotalTrades14,
												CTotalTradesOpned12M14 < 0 => CTotalTradesOpned12M14, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades15 := MAP(CTotalTrades15 > 0 AND CTotalTradesOpned12M15 >= 0 => MIN(ROUND2(CTotalTradesOpned12M15 * 100 / CTotalTrades15), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades15 = 0 => DEFAULT_L2,
												CTotalTrades15 < 0 => CTotalTrades15,
												CTotalTradesOpned12M15 < 0 => CTotalTradesOpned12M15, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades16 := MAP(CTotalTrades16 > 0 AND CTotalTradesOpned12M16 >= 0 => MIN(ROUND2(CTotalTradesOpned12M16 * 100 / CTotalTrades16), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades16 = 0 => DEFAULT_L2,
												CTotalTrades16 < 0 => CTotalTrades16,
												CTotalTradesOpned12M16 < 0 => CTotalTradesOpned12M16, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades17 := MAP(CTotalTrades17 > 0 AND CTotalTradesOpned12M17 >= 0 => MIN(ROUND2(CTotalTradesOpned12M17 * 100 / CTotalTrades17), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades17 = 0 => DEFAULT_L2,
												CTotalTrades17 < 0 => CTotalTrades17,
												CTotalTradesOpned12M17 < 0 => CTotalTradesOpned12M17, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades18 := MAP(CTotalTrades18 > 0 AND CTotalTradesOpned12M18 >= 0 => MIN(ROUND2(CTotalTradesOpned12M18 * 100 / CTotalTrades18), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades18 = 0 => DEFAULT_L2,
												CTotalTrades18 < 0 => CTotalTrades18,
												CTotalTradesOpned12M18 < 0 => CTotalTradesOpned12M18, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades19 := MAP(CTotalTrades19 > 0 AND CTotalTradesOpned12M19 >= 0 => MIN(ROUND2(CTotalTradesOpned12M19 * 100 / CTotalTrades19), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades19 = 0 => DEFAULT_L2,
												CTotalTrades19 < 0 => CTotalTrades19,
												CTotalTradesOpned12M19 < 0 => CTotalTradesOpned12M19, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades20 := MAP(CTotalTrades20 > 0 AND CTotalTradesOpned12M20 >= 0 => MIN(ROUND2(CTotalTradesOpned12M20 * 100 / CTotalTrades20), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades20 = 0 => DEFAULT_L2,
												CTotalTrades20 < 0 => CTotalTrades20,
												CTotalTradesOpned12M20 < 0 => CTotalTradesOpned12M20, DEFAULT_TEST);
CreditReport: => POpned12MToAllTrades21 := MAP(CTotalTrades21 > 0 AND CTotalTradesOpned12M21 >= 0 => MIN(ROUND2(CTotalTradesOpned12M21 * 100 / CTotalTrades21), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades21 = 0 => DEFAULT_L2,
												CTotalTrades21 < 0 => CTotalTrades21,
												CTotalTradesOpned12M21 < 0 => CTotalTradesOpned12M21, DEFAULT_TEST);

// P_Opned24MToAllTrades:
CreditReport: => POpned24MToAllTrades01 := MAP(CTotalTrades01 > 0 AND CTotalTradesOpned24M01 >= 0 => MIN(ROUND2(CTotalTradesOpned24M01 * 100 / CTotalTrades01), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades01 = 0 => DEFAULT_L2,
												CTotalTrades01 < 0 => CTotalTrades01,
												CTotalTradesOpned24M01 < 0 => CTotalTradesOpned24M01, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades02 := MAP(CTotalTrades02 > 0 AND CTotalTradesOpned24M02 >= 0 => MIN(ROUND2(CTotalTradesOpned24M02 * 100 / CTotalTrades02), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades02 = 0 => DEFAULT_L2,
												CTotalTrades02 < 0 => CTotalTrades02,
												CTotalTradesOpned24M02 < 0 => CTotalTradesOpned24M02, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades03 := MAP(CTotalTrades03 > 0 AND CTotalTradesOpned24M03 >= 0 => MIN(ROUND2(CTotalTradesOpned24M03 * 100 / CTotalTrades03), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades03 = 0 => DEFAULT_L2,
												CTotalTrades03 < 0 => CTotalTrades03,
												CTotalTradesOpned24M03 < 0 => CTotalTradesOpned24M03, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades04 := MAP(CTotalTrades04 > 0 AND CTotalTradesOpned24M04 >= 0 => MIN(ROUND2(CTotalTradesOpned24M04 * 100 / CTotalTrades04), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades04 = 0 => DEFAULT_L2,
												CTotalTrades04 < 0 => CTotalTrades04,
												CTotalTradesOpned24M04 < 0 => CTotalTradesOpned24M04, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades05 := MAP(CTotalTrades05 > 0 AND CTotalTradesOpned24M05 >= 0 => MIN(ROUND2(CTotalTradesOpned24M05 * 100 / CTotalTrades05), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades05 = 0 => DEFAULT_L2,
												CTotalTrades05 < 0 => CTotalTrades05,
												CTotalTradesOpned24M05 < 0 => CTotalTradesOpned24M05, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades06 := MAP(CTotalTrades06 > 0 AND CTotalTradesOpned24M06 >= 0 => MIN(ROUND2(CTotalTradesOpned24M06 * 100 / CTotalTrades06), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades06 = 0 => DEFAULT_L2,
												CTotalTrades06 < 0 => CTotalTrades06,
												CTotalTradesOpned24M06 < 0 => CTotalTradesOpned24M06, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades07 := MAP(CTotalTrades07 > 0 AND CTotalTradesOpned24M07 >= 0 => MIN(ROUND2(CTotalTradesOpned24M07 * 100 / CTotalTrades07), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades07 = 0 => DEFAULT_L2,
												CTotalTrades07 < 0 => CTotalTrades07,
												CTotalTradesOpned24M07 < 0 => CTotalTradesOpned24M07, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades08 := MAP(CTotalTrades08 > 0 AND CTotalTradesOpned24M08 >= 0 => MIN(ROUND2(CTotalTradesOpned24M08 * 100 / CTotalTrades08), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades08 = 0 => DEFAULT_L2,
												CTotalTrades08 < 0 => CTotalTrades08,
												CTotalTradesOpned24M08 < 0 => CTotalTradesOpned24M08, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades09 := MAP(CTotalTrades09 > 0 AND CTotalTradesOpned24M09 >= 0 => MIN(ROUND2(CTotalTradesOpned24M09 * 100 / CTotalTrades09), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades09 = 0 => DEFAULT_L2,
												CTotalTrades09 < 0 => CTotalTrades09,
												CTotalTradesOpned24M09 < 0 => CTotalTradesOpned24M09, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades10 := MAP(CTotalTrades10 > 0 AND CTotalTradesOpned24M10 >= 0 => MIN(ROUND2(CTotalTradesOpned24M10 * 100 / CTotalTrades10), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades10 = 0 => DEFAULT_L2,
												CTotalTrades10 < 0 => CTotalTrades10,
												CTotalTradesOpned24M10 < 0 => CTotalTradesOpned24M10, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades11 := MAP(CTotalTrades11 > 0 AND CTotalTradesOpned24M11 >= 0 => MIN(ROUND2(CTotalTradesOpned24M11 * 100 / CTotalTrades11), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades11 = 0 => DEFAULT_L2,
												CTotalTrades11 < 0 => CTotalTrades11,
												CTotalTradesOpned24M11 < 0 => CTotalTradesOpned24M11, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades12 := MAP(CTotalTrades12 > 0 AND CTotalTradesOpned24M12 >= 0 => MIN(ROUND2(CTotalTradesOpned24M12 * 100 / CTotalTrades12), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades12 = 0 => DEFAULT_L2,
												CTotalTrades12 < 0 => CTotalTrades12,
												CTotalTradesOpned24M12 < 0 => CTotalTradesOpned24M12, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades13 := MAP(CTotalTrades13 > 0 AND CTotalTradesOpned24M13 >= 0 => MIN(ROUND2(CTotalTradesOpned24M13 * 100 / CTotalTrades13), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades13 = 0 => DEFAULT_L2,
												CTotalTrades13 < 0 => CTotalTrades13,
												CTotalTradesOpned24M13 < 0 => CTotalTradesOpned24M13, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades14 := MAP(CTotalTrades14 > 0 AND CTotalTradesOpned24M14 >= 0 => MIN(ROUND2(CTotalTradesOpned24M14 * 100 / CTotalTrades14), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades14 = 0 => DEFAULT_L2,
												CTotalTrades14 < 0 => CTotalTrades14,
												CTotalTradesOpned24M14 < 0 => CTotalTradesOpned24M14, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades15 := MAP(CTotalTrades15 > 0 AND CTotalTradesOpned24M15 >= 0 => MIN(ROUND2(CTotalTradesOpned24M15 * 100 / CTotalTrades15), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades15 = 0 => DEFAULT_L2,
												CTotalTrades15 < 0 => CTotalTrades15,
												CTotalTradesOpned24M15 < 0 => CTotalTradesOpned24M15, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades16 := MAP(CTotalTrades16 > 0 AND CTotalTradesOpned24M16 >= 0 => MIN(ROUND2(CTotalTradesOpned24M16 * 100 / CTotalTrades16), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades16 = 0 => DEFAULT_L2,
												CTotalTrades16 < 0 => CTotalTrades16,
												CTotalTradesOpned24M16 < 0 => CTotalTradesOpned24M16, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades17 := MAP(CTotalTrades17 > 0 AND CTotalTradesOpned24M17 >= 0 => MIN(ROUND2(CTotalTradesOpned24M17 * 100 / CTotalTrades17), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades17 = 0 => DEFAULT_L2,
												CTotalTrades17 < 0 => CTotalTrades17,
												CTotalTradesOpned24M17 < 0 => CTotalTradesOpned24M17, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades18 := MAP(CTotalTrades18 > 0 AND CTotalTradesOpned24M18 >= 0 => MIN(ROUND2(CTotalTradesOpned24M18 * 100 / CTotalTrades18), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades18 = 0 => DEFAULT_L2,
												CTotalTrades18 < 0 => CTotalTrades18,
												CTotalTradesOpned24M18 < 0 => CTotalTradesOpned24M18, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades19 := MAP(CTotalTrades19 > 0 AND CTotalTradesOpned24M19 >= 0 => MIN(ROUND2(CTotalTradesOpned24M19 * 100 / CTotalTrades19), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades19 = 0 => DEFAULT_L2,
												CTotalTrades19 < 0 => CTotalTrades19,
												CTotalTradesOpned24M19 < 0 => CTotalTradesOpned24M19, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades20 := MAP(CTotalTrades20 > 0 AND CTotalTradesOpned24M20 >= 0 => MIN(ROUND2(CTotalTradesOpned24M20 * 100 / CTotalTrades20), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades20 = 0 => DEFAULT_L2,
												CTotalTrades20 < 0 => CTotalTrades20,
												CTotalTradesOpned24M20 < 0 => CTotalTradesOpned24M20, DEFAULT_TEST);
CreditReport: => POpned24MToAllTrades21 := MAP(CTotalTrades21 > 0 AND CTotalTradesOpned24M21 >= 0 => MIN(ROUND2(CTotalTradesOpned24M21 * 100 / CTotalTrades21), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades21 = 0 => DEFAULT_L2,
												CTotalTrades21 < 0 => CTotalTrades21,
												CTotalTradesOpned24M21 < 0 => CTotalTradesOpned24M21, DEFAULT_TEST);

// P_Opned36MToAllTrades:
CreditReport: => POpned36MToAllTrades01 := MAP(CTotalTrades01 > 0 AND CTotalTradesOpned36M01 >= 0 => MIN(ROUND2(CTotalTradesOpned36M01 * 100 / CTotalTrades01), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades01 = 0 => DEFAULT_L2,
												CTotalTrades01 < 0 => CTotalTrades01,
												CTotalTradesOpned36M01 < 0 => CTotalTradesOpned36M01, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades02 := MAP(CTotalTrades02 > 0 AND CTotalTradesOpned36M02 >= 0 => MIN(ROUND2(CTotalTradesOpned36M02 * 100 / CTotalTrades02), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades02 = 0 => DEFAULT_L2,
												CTotalTrades02 < 0 => CTotalTrades02,
												CTotalTradesOpned36M02 < 0 => CTotalTradesOpned36M02, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades03 := MAP(CTotalTrades03 > 0 AND CTotalTradesOpned36M03 >= 0 => MIN(ROUND2(CTotalTradesOpned36M03 * 100 / CTotalTrades03), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades03 = 0 => DEFAULT_L2,
												CTotalTrades03 < 0 => CTotalTrades03,
												CTotalTradesOpned36M03 < 0 => CTotalTradesOpned36M03, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades04 := MAP(CTotalTrades04 > 0 AND CTotalTradesOpned36M04 >= 0 => MIN(ROUND2(CTotalTradesOpned36M04 * 100 / CTotalTrades04), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades04 = 0 => DEFAULT_L2,
												CTotalTrades04 < 0 => CTotalTrades04,
												CTotalTradesOpned36M04 < 0 => CTotalTradesOpned36M04, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades05 := MAP(CTotalTrades05 > 0 AND CTotalTradesOpned36M05 >= 0 => MIN(ROUND2(CTotalTradesOpned36M05 * 100 / CTotalTrades05), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades05 = 0 => DEFAULT_L2,
												CTotalTrades05 < 0 => CTotalTrades05,
												CTotalTradesOpned36M05 < 0 => CTotalTradesOpned36M05, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades06 := MAP(CTotalTrades06 > 0 AND CTotalTradesOpned36M06 >= 0 => MIN(ROUND2(CTotalTradesOpned36M06 * 100 / CTotalTrades06), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades06 = 0 => DEFAULT_L2,
												CTotalTrades06 < 0 => CTotalTrades06,
												CTotalTradesOpned36M06 < 0 => CTotalTradesOpned36M06, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades07 := MAP(CTotalTrades07 > 0 AND CTotalTradesOpned36M07 >= 0 => MIN(ROUND2(CTotalTradesOpned36M07 * 100 / CTotalTrades07), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades07 = 0 => DEFAULT_L2,
												CTotalTrades07 < 0 => CTotalTrades07,
												CTotalTradesOpned36M07 < 0 => CTotalTradesOpned36M07, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades08 := MAP(CTotalTrades08 > 0 AND CTotalTradesOpned36M08 >= 0 => MIN(ROUND2(CTotalTradesOpned36M08 * 100 / CTotalTrades08), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades08 = 0 => DEFAULT_L2,
												CTotalTrades08 < 0 => CTotalTrades08,
												CTotalTradesOpned36M08 < 0 => CTotalTradesOpned36M08, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades09 := MAP(CTotalTrades09 > 0 AND CTotalTradesOpned36M09 >= 0 => MIN(ROUND2(CTotalTradesOpned36M09 * 100 / CTotalTrades09), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades09 = 0 => DEFAULT_L2,
												CTotalTrades09 < 0 => CTotalTrades09,
												CTotalTradesOpned36M09 < 0 => CTotalTradesOpned36M09, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades10 := MAP(CTotalTrades10 > 0 AND CTotalTradesOpned36M10 >= 0 => MIN(ROUND2(CTotalTradesOpned36M10 * 100 / CTotalTrades10), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades10 = 0 => DEFAULT_L2,
												CTotalTrades10 < 0 => CTotalTrades10,
												CTotalTradesOpned36M10 < 0 => CTotalTradesOpned36M10, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades11 := MAP(CTotalTrades11 > 0 AND CTotalTradesOpned36M11 >= 0 => MIN(ROUND2(CTotalTradesOpned36M11 * 100 / CTotalTrades11), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades11 = 0 => DEFAULT_L2,
												CTotalTrades11 < 0 => CTotalTrades11,
												CTotalTradesOpned36M11 < 0 => CTotalTradesOpned36M11, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades12 := MAP(CTotalTrades12 > 0 AND CTotalTradesOpned36M12 >= 0 => MIN(ROUND2(CTotalTradesOpned36M12 * 100 / CTotalTrades12), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades12 = 0 => DEFAULT_L2,
												CTotalTrades12 < 0 => CTotalTrades12,
												CTotalTradesOpned36M12 < 0 => CTotalTradesOpned36M12, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades13 := MAP(CTotalTrades13 > 0 AND CTotalTradesOpned36M13 >= 0 => MIN(ROUND2(CTotalTradesOpned36M13 * 100 / CTotalTrades13), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades13 = 0 => DEFAULT_L2,
												CTotalTrades13 < 0 => CTotalTrades13,
												CTotalTradesOpned36M13 < 0 => CTotalTradesOpned36M13, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades14 := MAP(CTotalTrades14 > 0 AND CTotalTradesOpned36M14 >= 0 => MIN(ROUND2(CTotalTradesOpned36M14 * 100 / CTotalTrades14), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades14 = 0 => DEFAULT_L2,
												CTotalTrades14 < 0 => CTotalTrades14,
												CTotalTradesOpned36M14 < 0 => CTotalTradesOpned36M14, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades15 := MAP(CTotalTrades15 > 0 AND CTotalTradesOpned36M15 >= 0 => MIN(ROUND2(CTotalTradesOpned36M15 * 100 / CTotalTrades15), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades15 = 0 => DEFAULT_L2,
												CTotalTrades15 < 0 => CTotalTrades15,
												CTotalTradesOpned36M15 < 0 => CTotalTradesOpned36M15, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades16 := MAP(CTotalTrades16 > 0 AND CTotalTradesOpned36M16 >= 0 => MIN(ROUND2(CTotalTradesOpned36M16 * 100 / CTotalTrades16), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades16 = 0 => DEFAULT_L2,
												CTotalTrades16 < 0 => CTotalTrades16,
												CTotalTradesOpned36M16 < 0 => CTotalTradesOpned36M16, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades17 := MAP(CTotalTrades17 > 0 AND CTotalTradesOpned36M17 >= 0 => MIN(ROUND2(CTotalTradesOpned36M17 * 100 / CTotalTrades17), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades17 = 0 => DEFAULT_L2,
												CTotalTrades17 < 0 => CTotalTrades17,
												CTotalTradesOpned36M17 < 0 => CTotalTradesOpned36M17, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades18 := MAP(CTotalTrades18 > 0 AND CTotalTradesOpned36M18 >= 0 => MIN(ROUND2(CTotalTradesOpned36M18 * 100 / CTotalTrades18), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades18 = 0 => DEFAULT_L2,
												CTotalTrades18 < 0 => CTotalTrades18,
												CTotalTradesOpned36M18 < 0 => CTotalTradesOpned36M18, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades19 := MAP(CTotalTrades19 > 0 AND CTotalTradesOpned36M19 >= 0 => MIN(ROUND2(CTotalTradesOpned36M19 * 100 / CTotalTrades19), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades19 = 0 => DEFAULT_L2,
												CTotalTrades19 < 0 => CTotalTrades19,
												CTotalTradesOpned36M19 < 0 => CTotalTradesOpned36M19, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades20 := MAP(CTotalTrades20 > 0 AND CTotalTradesOpned36M20 >= 0 => MIN(ROUND2(CTotalTradesOpned36M20 * 100 / CTotalTrades20), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades20 = 0 => DEFAULT_L2,
												CTotalTrades20 < 0 => CTotalTrades20,
												CTotalTradesOpned36M20 < 0 => CTotalTradesOpned36M20, DEFAULT_TEST);
CreditReport: => POpned36MToAllTrades21 := MAP(CTotalTrades21 > 0 AND CTotalTradesOpned36M21 >= 0 => MIN(ROUND2(CTotalTradesOpned36M21 * 100 / CTotalTrades21), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades21 = 0 => DEFAULT_L2,
												CTotalTrades21 < 0 => CTotalTrades21,
												CTotalTradesOpned36M21 < 0 => CTotalTradesOpned36M21, DEFAULT_TEST);

// P_ActiveOpned12MToAllOpnTrades:
CreditReport: => PAct03MOpned12MToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalAct03MTradesOpned12M01 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M01 * 100 / CTotalOpnTrades01), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
														CTotalOpnTrades01 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M01 < 0 => CTotalAct03MTradesOpned12M01, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalAct03MTradesOpned12M02 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M02 * 100 / CTotalOpnTrades02), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
														CTotalOpnTrades02 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M02 < 0 => CTotalAct03MTradesOpned12M02, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalAct03MTradesOpned12M03 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M03 * 100 / CTotalOpnTrades03), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
														CTotalOpnTrades03 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M03 < 0 => CTotalAct03MTradesOpned12M03, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalAct03MTradesOpned12M04 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M04 * 100 / CTotalOpnTrades04), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
														CTotalOpnTrades04 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M04 < 0 => CTotalAct03MTradesOpned12M04, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalAct03MTradesOpned12M05 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M05 * 100 / CTotalOpnTrades05), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
														CTotalOpnTrades05 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M05 < 0 => CTotalAct03MTradesOpned12M05, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalAct03MTradesOpned12M06 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M06 * 100 / CTotalOpnTrades06), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
														CTotalOpnTrades06 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M06 < 0 => CTotalAct03MTradesOpned12M06, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalAct03MTradesOpned12M07 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M07 * 100 / CTotalOpnTrades07), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
														CTotalOpnTrades07 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M07 < 0 => CTotalAct03MTradesOpned12M07, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalAct03MTradesOpned12M08 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M08 * 100 / CTotalOpnTrades08), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
														CTotalOpnTrades08 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M08 < 0 => CTotalAct03MTradesOpned12M08, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalAct03MTradesOpned12M09 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M09 * 100 / CTotalOpnTrades09), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
														CTotalOpnTrades09 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M09 < 0 => CTotalAct03MTradesOpned12M09, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalAct03MTradesOpned12M10 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M10 * 100 / CTotalOpnTrades10), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
														CTotalOpnTrades10 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M10 < 0 => CTotalAct03MTradesOpned12M10, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalAct03MTradesOpned12M11 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M11 * 100 / CTotalOpnTrades11), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
														CTotalOpnTrades11 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M11 < 0 => CTotalAct03MTradesOpned12M11, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalAct03MTradesOpned12M12 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M12 * 100 / CTotalOpnTrades12), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
														CTotalOpnTrades12 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M12 < 0 => CTotalAct03MTradesOpned12M12, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalAct03MTradesOpned12M13 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M13 * 100 / CTotalOpnTrades13), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
														CTotalOpnTrades13 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M13 < 0 => CTotalAct03MTradesOpned12M13, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalAct03MTradesOpned12M14 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M14 * 100 / CTotalOpnTrades14), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
														CTotalOpnTrades14 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M14 < 0 => CTotalAct03MTradesOpned12M14, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalAct03MTradesOpned12M15 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M15 * 100 / CTotalOpnTrades15), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
														CTotalOpnTrades15 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M15 < 0 => CTotalAct03MTradesOpned12M15, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalAct03MTradesOpned12M16 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M16 * 100 / CTotalOpnTrades16), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
														CTotalOpnTrades16 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M16 < 0 => CTotalAct03MTradesOpned12M16, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalAct03MTradesOpned12M17 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M17 * 100 / CTotalOpnTrades17), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
														CTotalOpnTrades17 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M17 < 0 => CTotalAct03MTradesOpned12M17, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalAct03MTradesOpned12M18 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M18 * 100 / CTotalOpnTrades18), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
														CTotalOpnTrades18 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M18 < 0 => CTotalAct03MTradesOpned12M18, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalAct03MTradesOpned12M19 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M19 * 100 / CTotalOpnTrades19), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
														CTotalOpnTrades19 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M19 < 0 => CTotalAct03MTradesOpned12M19, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalAct03MTradesOpned12M20 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M20 * 100 / CTotalOpnTrades20), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
														CTotalOpnTrades20 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M20 < 0 => CTotalAct03MTradesOpned12M20, DEFAULT_TEST);
CreditReport: => PAct03MOpned12MToAllOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalAct03MTradesOpned12M21 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned12M21 * 100 / CTotalOpnTrades21), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
														CTotalOpnTrades21 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned12M21 < 0 => CTotalAct03MTradesOpned12M21, DEFAULT_TEST);

// P_ActiveOpned24MToAllOpnTrades:
CreditReport: => PAct03MOpned24MToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalAct03MTradesOpned24M01 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M01 * 100 / CTotalOpnTrades01), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
														CTotalOpnTrades01 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M01 < 0 => CTotalAct03MTradesOpned24M01, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalAct03MTradesOpned24M02 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M02 * 100 / CTotalOpnTrades02), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
														CTotalOpnTrades02 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M02 < 0 => CTotalAct03MTradesOpned24M02, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalAct03MTradesOpned24M03 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M03 * 100 / CTotalOpnTrades03), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
														CTotalOpnTrades03 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M03 < 0 => CTotalAct03MTradesOpned24M03, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalAct03MTradesOpned24M04 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M04 * 100 / CTotalOpnTrades04), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
														CTotalOpnTrades04 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M04 < 0 => CTotalAct03MTradesOpned24M04, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalAct03MTradesOpned24M05 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M05 * 100 / CTotalOpnTrades05), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
														CTotalOpnTrades05 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M05 < 0 => CTotalAct03MTradesOpned24M05, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalAct03MTradesOpned24M06 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M06 * 100 / CTotalOpnTrades06), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
														CTotalOpnTrades06 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M06 < 0 => CTotalAct03MTradesOpned24M06, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalAct03MTradesOpned24M07 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M07 * 100 / CTotalOpnTrades07), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
														CTotalOpnTrades07 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M07 < 0 => CTotalAct03MTradesOpned24M07, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalAct03MTradesOpned24M08 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M08 * 100 / CTotalOpnTrades08), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
														CTotalOpnTrades08 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M08 < 0 => CTotalAct03MTradesOpned24M08, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalAct03MTradesOpned24M09 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M09 * 100 / CTotalOpnTrades09), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
														CTotalOpnTrades09 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M09 < 0 => CTotalAct03MTradesOpned24M09, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalAct03MTradesOpned24M10 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M10 * 100 / CTotalOpnTrades10), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
														CTotalOpnTrades10 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M10 < 0 => CTotalAct03MTradesOpned24M10, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalAct03MTradesOpned24M11 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M11 * 100 / CTotalOpnTrades11), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
														CTotalOpnTrades11 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M11 < 0 => CTotalAct03MTradesOpned24M11, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalAct03MTradesOpned24M12 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M12 * 100 / CTotalOpnTrades12), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
														CTotalOpnTrades12 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M12 < 0 => CTotalAct03MTradesOpned24M12, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalAct03MTradesOpned24M13 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M13 * 100 / CTotalOpnTrades13), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
														CTotalOpnTrades13 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M13 < 0 => CTotalAct03MTradesOpned24M13, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalAct03MTradesOpned24M14 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M14 * 100 / CTotalOpnTrades14), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
														CTotalOpnTrades14 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M14 < 0 => CTotalAct03MTradesOpned24M14, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalAct03MTradesOpned24M15 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M15 * 100 / CTotalOpnTrades15), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
														CTotalOpnTrades15 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M15 < 0 => CTotalAct03MTradesOpned24M15, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalAct03MTradesOpned24M16 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M16 * 100 / CTotalOpnTrades16), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
														CTotalOpnTrades16 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M16 < 0 => CTotalAct03MTradesOpned24M16, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalAct03MTradesOpned24M17 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M17 * 100 / CTotalOpnTrades17), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
														CTotalOpnTrades17 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M17 < 0 => CTotalAct03MTradesOpned24M17, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalAct03MTradesOpned24M18 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M18 * 100 / CTotalOpnTrades18), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
														CTotalOpnTrades18 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M18 < 0 => CTotalAct03MTradesOpned24M18, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalAct03MTradesOpned24M19 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M19 * 100 / CTotalOpnTrades19), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
														CTotalOpnTrades19 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M19 < 0 => CTotalAct03MTradesOpned24M19, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalAct03MTradesOpned24M20 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M20 * 100 / CTotalOpnTrades20), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
														CTotalOpnTrades20 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M20 < 0 => CTotalAct03MTradesOpned24M20, DEFAULT_TEST);
CreditReport: => PAct03MOpned24MToAllOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalAct03MTradesOpned24M21 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned24M21 * 100 / CTotalOpnTrades21), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
														CTotalOpnTrades21 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned24M21 < 0 => CTotalAct03MTradesOpned24M21, DEFAULT_TEST);

// P_ActiveOpned36MToAllOpnTrades:
CreditReport: => PAct03MOpned36MToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalAct03MTradesOpned36M01 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M01 * 100 / CTotalOpnTrades01), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
														CTotalOpnTrades01 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M01 < 0 => CTotalAct03MTradesOpned36M01, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalAct03MTradesOpned36M02 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M02 * 100 / CTotalOpnTrades02), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
														CTotalOpnTrades02 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M02 < 0 => CTotalAct03MTradesOpned36M02, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalAct03MTradesOpned36M03 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M03 * 100 / CTotalOpnTrades03), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
														CTotalOpnTrades03 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M03 < 0 => CTotalAct03MTradesOpned36M03, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalAct03MTradesOpned36M04 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M04 * 100 / CTotalOpnTrades04), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
														CTotalOpnTrades04 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M04 < 0 => CTotalAct03MTradesOpned36M04, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalAct03MTradesOpned36M05 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M05 * 100 / CTotalOpnTrades05), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
														CTotalOpnTrades05 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M05 < 0 => CTotalAct03MTradesOpned36M05, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalAct03MTradesOpned36M06 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M06 * 100 / CTotalOpnTrades06), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
														CTotalOpnTrades06 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M06 < 0 => CTotalAct03MTradesOpned36M06, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalAct03MTradesOpned36M07 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M07 * 100 / CTotalOpnTrades07), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
														CTotalOpnTrades07 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M07 < 0 => CTotalAct03MTradesOpned36M07, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalAct03MTradesOpned36M08 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M08 * 100 / CTotalOpnTrades08), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
														CTotalOpnTrades08 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M08 < 0 => CTotalAct03MTradesOpned36M08, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalAct03MTradesOpned36M09 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M09 * 100 / CTotalOpnTrades09), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
														CTotalOpnTrades09 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M09 < 0 => CTotalAct03MTradesOpned36M09, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalAct03MTradesOpned36M10 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M10 * 100 / CTotalOpnTrades10), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
														CTotalOpnTrades10 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M10 < 0 => CTotalAct03MTradesOpned36M10, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalAct03MTradesOpned36M11 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M11 * 100 / CTotalOpnTrades11), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
														CTotalOpnTrades11 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M11 < 0 => CTotalAct03MTradesOpned36M11, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalAct03MTradesOpned36M12 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M12 * 100 / CTotalOpnTrades12), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
														CTotalOpnTrades12 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M12 < 0 => CTotalAct03MTradesOpned36M12, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalAct03MTradesOpned36M13 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M13 * 100 / CTotalOpnTrades13), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
														CTotalOpnTrades13 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M13 < 0 => CTotalAct03MTradesOpned36M13, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalAct03MTradesOpned36M14 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M14 * 100 / CTotalOpnTrades14), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
														CTotalOpnTrades14 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M14 < 0 => CTotalAct03MTradesOpned36M14, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalAct03MTradesOpned36M15 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M15 * 100 / CTotalOpnTrades15), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
														CTotalOpnTrades15 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M15 < 0 => CTotalAct03MTradesOpned36M15, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalAct03MTradesOpned36M16 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M16 * 100 / CTotalOpnTrades16), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
														CTotalOpnTrades16 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M16 < 0 => CTotalAct03MTradesOpned36M16, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalAct03MTradesOpned36M17 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M17 * 100 / CTotalOpnTrades17), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
														CTotalOpnTrades17 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M17 < 0 => CTotalAct03MTradesOpned36M17, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalAct03MTradesOpned36M18 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M18 * 100 / CTotalOpnTrades18), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
														CTotalOpnTrades18 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M18 < 0 => CTotalAct03MTradesOpned36M18, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalAct03MTradesOpned36M19 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M19 * 100 / CTotalOpnTrades19), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
														CTotalOpnTrades19 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M19 < 0 => CTotalAct03MTradesOpned36M19, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalAct03MTradesOpned36M20 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M20 * 100 / CTotalOpnTrades20), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
														CTotalOpnTrades20 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M20 < 0 => CTotalAct03MTradesOpned36M20, DEFAULT_TEST);
CreditReport: => PAct03MOpned36MToAllOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalAct03MTradesOpned36M21 >= 0 => MIN(ROUND2(CTotalAct03MTradesOpned36M21 * 100 / CTotalOpnTrades21), CAP_100),
														u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
														CTotalOpnTrades21 = 0 => DEFAULT_L4,
														CTotalAct03MTradesOpned36M21 < 0 => CTotalAct03MTradesOpned36M21, DEFAULT_TEST);

// P_ActiveTradesToOpnTrades:
CreditReport: => PAct03MTradesToOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalAct03MTrades01 >= 0 => MIN(ROUND2(CTotalAct03MTrades01 * 100 / CTotalOpnTrades01), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
													CTotalOpnTrades01 = 0 => DEFAULT_L4,
													CTotalAct03MTrades01 < 0 => CTotalAct03MTrades01, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalAct03MTrades02 >= 0 => MIN(ROUND2(CTotalAct03MTrades02 * 100 / CTotalOpnTrades02), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
													CTotalOpnTrades02 = 0 => DEFAULT_L4,
													CTotalAct03MTrades02 < 0 => CTotalAct03MTrades02, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalAct03MTrades03 >= 0 => MIN(ROUND2(CTotalAct03MTrades03 * 100 / CTotalOpnTrades03), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
													CTotalOpnTrades03 = 0 => DEFAULT_L4,
													CTotalAct03MTrades03 < 0 => CTotalAct03MTrades03, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalAct03MTrades04 >= 0 => MIN(ROUND2(CTotalAct03MTrades04 * 100 / CTotalOpnTrades04), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
													CTotalOpnTrades04 = 0 => DEFAULT_L4,
													CTotalAct03MTrades04 < 0 => CTotalAct03MTrades04, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalAct03MTrades05 >= 0 => MIN(ROUND2(CTotalAct03MTrades05 * 100 / CTotalOpnTrades05), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
													CTotalOpnTrades05 = 0 => DEFAULT_L4,
													CTotalAct03MTrades05 < 0 => CTotalAct03MTrades05, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalAct03MTrades06 >= 0 => MIN(ROUND2(CTotalAct03MTrades06 * 100 / CTotalOpnTrades06), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
													CTotalOpnTrades06 = 0 => DEFAULT_L4,
													CTotalAct03MTrades06 < 0 => CTotalAct03MTrades06, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalAct03MTrades07 >= 0 => MIN(ROUND2(CTotalAct03MTrades07 * 100 / CTotalOpnTrades07), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
													CTotalOpnTrades07 = 0 => DEFAULT_L4,
													CTotalAct03MTrades07 < 0 => CTotalAct03MTrades07, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalAct03MTrades08 >= 0 => MIN(ROUND2(CTotalAct03MTrades08 * 100 / CTotalOpnTrades08), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
													CTotalOpnTrades08 = 0 => DEFAULT_L4,
													CTotalAct03MTrades08 < 0 => CTotalAct03MTrades08, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalAct03MTrades09 >= 0 => MIN(ROUND2(CTotalAct03MTrades09 * 100 / CTotalOpnTrades09), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
													CTotalOpnTrades09 = 0 => DEFAULT_L4,
													CTotalAct03MTrades09 < 0 => CTotalAct03MTrades09, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalAct03MTrades10 >= 0 => MIN(ROUND2(CTotalAct03MTrades10 * 100 / CTotalOpnTrades10), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
													CTotalOpnTrades10 = 0 => DEFAULT_L4,
													CTotalAct03MTrades10 < 0 => CTotalAct03MTrades10, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalAct03MTrades11 >= 0 => MIN(ROUND2(CTotalAct03MTrades11 * 100 / CTotalOpnTrades11), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
													CTotalOpnTrades11 = 0 => DEFAULT_L4,
													CTotalAct03MTrades11 < 0 => CTotalAct03MTrades11, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalAct03MTrades12 >= 0 => MIN(ROUND2(CTotalAct03MTrades12 * 100 / CTotalOpnTrades12), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
													CTotalOpnTrades12 = 0 => DEFAULT_L4,
													CTotalAct03MTrades12 < 0 => CTotalAct03MTrades12, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalAct03MTrades13 >= 0 => MIN(ROUND2(CTotalAct03MTrades13 * 100 / CTotalOpnTrades13), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
													CTotalOpnTrades13 = 0 => DEFAULT_L4,
													CTotalAct03MTrades13 < 0 => CTotalAct03MTrades13, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalAct03MTrades14 >= 0 => MIN(ROUND2(CTotalAct03MTrades14 * 100 / CTotalOpnTrades14), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
													CTotalOpnTrades14 = 0 => DEFAULT_L4,
													CTotalAct03MTrades14 < 0 => CTotalAct03MTrades14, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalAct03MTrades15 >= 0 => MIN(ROUND2(CTotalAct03MTrades15 * 100 / CTotalOpnTrades15), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
													CTotalOpnTrades15 = 0 => DEFAULT_L4,
													CTotalAct03MTrades15 < 0 => CTotalAct03MTrades15, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalAct03MTrades16 >= 0 => MIN(ROUND2(CTotalAct03MTrades16 * 100 / CTotalOpnTrades16), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
													CTotalOpnTrades16 = 0 => DEFAULT_L4,
													CTotalAct03MTrades16 < 0 => CTotalAct03MTrades16, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalAct03MTrades17 >= 0 => MIN(ROUND2(CTotalAct03MTrades17 * 100 / CTotalOpnTrades17), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
													CTotalOpnTrades17 = 0 => DEFAULT_L4,
													CTotalAct03MTrades17 < 0 => CTotalAct03MTrades17, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalAct03MTrades18 >= 0 => MIN(ROUND2(CTotalAct03MTrades18 * 100 / CTotalOpnTrades18), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
													CTotalOpnTrades18 = 0 => DEFAULT_L4,
													CTotalAct03MTrades18 < 0 => CTotalAct03MTrades18, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalAct03MTrades19 >= 0 => MIN(ROUND2(CTotalAct03MTrades19 * 100 / CTotalOpnTrades19), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
													CTotalOpnTrades19 = 0 => DEFAULT_L4,
													CTotalAct03MTrades19 < 0 => CTotalAct03MTrades19, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalAct03MTrades20 >= 0 => MIN(ROUND2(CTotalAct03MTrades20 * 100 / CTotalOpnTrades20), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
													CTotalOpnTrades20 = 0 => DEFAULT_L4,
													CTotalAct03MTrades20 < 0 => CTotalAct03MTrades20, DEFAULT_TEST);
CreditReport: => PAct03MTradesToOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalAct03MTrades21 >= 0 => MIN(ROUND2(CTotalAct03MTrades21 * 100 / CTotalOpnTrades21), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
													CTotalOpnTrades21 = 0 => DEFAULT_L4,
													CTotalAct03MTrades21 < 0 => CTotalAct03MTrades21, DEFAULT_TEST);

// P_JointTrades:
CreditReport: => PJointTrades01 := MAP(CTotalTrades01 > 0 AND CTotalJointTrades01 >= 0 => MIN(ROUND2(CTotalJointTrades01 * 100 / CTotalTrades01), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades01 = 0 => DEFAULT_L2,
										CTotalTrades01 < 0 => CTotalTrades01,
										CTotalJointTrades01 < 0 => CTotalJointTrades01, DEFAULT_TEST);
CreditReport: => PJointTrades02 := MAP(CTotalTrades02 > 0 AND CTotalJointTrades02 >= 0 => MIN(ROUND2(CTotalJointTrades02 * 100 / CTotalTrades02), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades02 = 0 => DEFAULT_L2,
										CTotalTrades02 < 0 => CTotalTrades02,
										CTotalJointTrades02 < 0 => CTotalJointTrades02, DEFAULT_TEST);
CreditReport: => PJointTrades03 := MAP(CTotalTrades03 > 0 AND CTotalJointTrades03 >= 0 => MIN(ROUND2(CTotalJointTrades03 * 100 / CTotalTrades03), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades03 = 0 => DEFAULT_L2,
										CTotalTrades03 < 0 => CTotalTrades03,
										CTotalJointTrades03 < 0 => CTotalJointTrades03, DEFAULT_TEST);
CreditReport: => PJointTrades04 := MAP(CTotalTrades04 > 0 AND CTotalJointTrades04 >= 0 => MIN(ROUND2(CTotalJointTrades04 * 100 / CTotalTrades04), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades04 = 0 => DEFAULT_L2,
										CTotalTrades04 < 0 => CTotalTrades04,
										CTotalJointTrades04 < 0 => CTotalJointTrades04, DEFAULT_TEST);
CreditReport: => PJointTrades05 := MAP(CTotalTrades05 > 0 AND CTotalJointTrades05 >= 0 => MIN(ROUND2(CTotalJointTrades05 * 100 / CTotalTrades05), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades05 = 0 => DEFAULT_L2,
										CTotalTrades05 < 0 => CTotalTrades05,
										CTotalJointTrades05 < 0 => CTotalJointTrades05, DEFAULT_TEST);
CreditReport: => PJointTrades06 := MAP(CTotalTrades06 > 0 AND CTotalJointTrades06 >= 0 => MIN(ROUND2(CTotalJointTrades06 * 100 / CTotalTrades06), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades06 = 0 => DEFAULT_L2,
										CTotalTrades06 < 0 => CTotalTrades06,
										CTotalJointTrades06 < 0 => CTotalJointTrades06, DEFAULT_TEST);
CreditReport: => PJointTrades07 := MAP(CTotalTrades07 > 0 AND CTotalJointTrades07 >= 0 => MIN(ROUND2(CTotalJointTrades07 * 100 / CTotalTrades07), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades07 = 0 => DEFAULT_L2,
										CTotalTrades07 < 0 => CTotalTrades07,
										CTotalJointTrades07 < 0 => CTotalJointTrades07, DEFAULT_TEST);
CreditReport: => PJointTrades08 := MAP(CTotalTrades08 > 0 AND CTotalJointTrades08 >= 0 => MIN(ROUND2(CTotalJointTrades08 * 100 / CTotalTrades08), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades08 = 0 => DEFAULT_L2,
										CTotalTrades08 < 0 => CTotalTrades08,
										CTotalJointTrades08 < 0 => CTotalJointTrades08, DEFAULT_TEST);
CreditReport: => PJointTrades09 := MAP(CTotalTrades09 > 0 AND CTotalJointTrades09 >= 0 => MIN(ROUND2(CTotalJointTrades09 * 100 / CTotalTrades09), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades09 = 0 => DEFAULT_L2,
										CTotalTrades09 < 0 => CTotalTrades09,
										CTotalJointTrades09 < 0 => CTotalJointTrades09, DEFAULT_TEST);
CreditReport: => PJointTrades10 := MAP(CTotalTrades10 > 0 AND CTotalJointTrades10 >= 0 => MIN(ROUND2(CTotalJointTrades10 * 100 / CTotalTrades10), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades10 = 0 => DEFAULT_L2,
										CTotalTrades10 < 0 => CTotalTrades10,
										CTotalJointTrades10 < 0 => CTotalJointTrades10, DEFAULT_TEST);
CreditReport: => PJointTrades11 := MAP(CTotalTrades11 > 0 AND CTotalJointTrades11 >= 0 => MIN(ROUND2(CTotalJointTrades11 * 100 / CTotalTrades11), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades11 = 0 => DEFAULT_L2,
										CTotalTrades11 < 0 => CTotalTrades11,
										CTotalJointTrades11 < 0 => CTotalJointTrades11, DEFAULT_TEST);
CreditReport: => PJointTrades12 := MAP(CTotalTrades12 > 0 AND CTotalJointTrades12 >= 0 => MIN(ROUND2(CTotalJointTrades12 * 100 / CTotalTrades12), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades12 = 0 => DEFAULT_L2,
										CTotalTrades12 < 0 => CTotalTrades12,
										CTotalJointTrades12 < 0 => CTotalJointTrades12, DEFAULT_TEST);
CreditReport: => PJointTrades13 := MAP(CTotalTrades13 > 0 AND CTotalJointTrades13 >= 0 => MIN(ROUND2(CTotalJointTrades13 * 100 / CTotalTrades13), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades13 = 0 => DEFAULT_L2,
										CTotalTrades13 < 0 => CTotalTrades13,
										CTotalJointTrades13 < 0 => CTotalJointTrades13, DEFAULT_TEST);
CreditReport: => PJointTrades14 := MAP(CTotalTrades14 > 0 AND CTotalJointTrades14 >= 0 => MIN(ROUND2(CTotalJointTrades14 * 100 / CTotalTrades14), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades14 = 0 => DEFAULT_L2,
										CTotalTrades14 < 0 => CTotalTrades14,
										CTotalJointTrades14 < 0 => CTotalJointTrades14, DEFAULT_TEST);
CreditReport: => PJointTrades15 := MAP(CTotalTrades15 > 0 AND CTotalJointTrades15 >= 0 => MIN(ROUND2(CTotalJointTrades15 * 100 / CTotalTrades15), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades15 = 0 => DEFAULT_L2,
										CTotalTrades15 < 0 => CTotalTrades15,
										CTotalJointTrades15 < 0 => CTotalJointTrades15, DEFAULT_TEST);
CreditReport: => PJointTrades16 := MAP(CTotalTrades16 > 0 AND CTotalJointTrades16 >= 0 => MIN(ROUND2(CTotalJointTrades16 * 100 / CTotalTrades16), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades16 = 0 => DEFAULT_L2,
										CTotalTrades16 < 0 => CTotalTrades16,
										CTotalJointTrades16 < 0 => CTotalJointTrades16, DEFAULT_TEST);
CreditReport: => PJointTrades17 := MAP(CTotalTrades17 > 0 AND CTotalJointTrades17 >= 0 => MIN(ROUND2(CTotalJointTrades17 * 100 / CTotalTrades17), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades17 = 0 => DEFAULT_L2,
										CTotalTrades17 < 0 => CTotalTrades17,
										CTotalJointTrades17 < 0 => CTotalJointTrades17, DEFAULT_TEST);
CreditReport: => PJointTrades18 := MAP(CTotalTrades18 > 0 AND CTotalJointTrades18 >= 0 => MIN(ROUND2(CTotalJointTrades18 * 100 / CTotalTrades18), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades18 = 0 => DEFAULT_L2,
										CTotalTrades18 < 0 => CTotalTrades18,
										CTotalJointTrades18 < 0 => CTotalJointTrades18, DEFAULT_TEST);
CreditReport: => PJointTrades19 := MAP(CTotalTrades19 > 0 AND CTotalJointTrades19 >= 0 => MIN(ROUND2(CTotalJointTrades19 * 100 / CTotalTrades19), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades19 = 0 => DEFAULT_L2,
										CTotalTrades19 < 0 => CTotalTrades19,
										CTotalJointTrades19 < 0 => CTotalJointTrades19, DEFAULT_TEST);
CreditReport: => PJointTrades20 := MAP(CTotalTrades20 > 0 AND CTotalJointTrades20 >= 0 => MIN(ROUND2(CTotalJointTrades20 * 100 / CTotalTrades20), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades20 = 0 => DEFAULT_L2,
										CTotalTrades20 < 0 => CTotalTrades20,
										CTotalJointTrades20 < 0 => CTotalJointTrades20, DEFAULT_TEST);
CreditReport: => PJointTrades21 := MAP(CTotalTrades21 > 0 AND CTotalJointTrades21 >= 0 => MIN(ROUND2(CTotalJointTrades21 * 100 / CTotalTrades21), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades21 = 0 => DEFAULT_L2,
										CTotalTrades21 < 0 => CTotalTrades21,
										CTotalJointTrades21 < 0 => CTotalJointTrades21, DEFAULT_TEST);

// P_OpnJointToOpnTrades:
CreditReport: => POpnJointToOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnJointTrades01 >= 0 => MIN(ROUND2(CTotalOpnJointTrades01 * 100 / CTotalOpnTrades01), CAP_100),
												CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
												CTotalOpnTrades01 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades01 < 0 => CTotalOpnJointTrades01, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalOpnJointTrades02 >= 0 => MIN(ROUND2(CTotalOpnJointTrades02 * 100 / CTotalOpnTrades02), CAP_100),
												CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
												CTotalOpnTrades02 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades02 < 0 => CTotalOpnJointTrades02, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalOpnJointTrades03 >= 0 => MIN(ROUND2(CTotalOpnJointTrades03 * 100 / CTotalOpnTrades03), CAP_100),
												CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
												CTotalOpnTrades03 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades03 < 0 => CTotalOpnJointTrades03, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalOpnJointTrades04 >= 0 => MIN(ROUND2(CTotalOpnJointTrades04 * 100 / CTotalOpnTrades04), CAP_100),
												CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
												CTotalOpnTrades04 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades04 < 0 => CTotalOpnJointTrades04, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalOpnJointTrades05 >= 0 => MIN(ROUND2(CTotalOpnJointTrades05 * 100 / CTotalOpnTrades05), CAP_100),
												CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
												CTotalOpnTrades05 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades05 < 0 => CTotalOpnJointTrades05, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalOpnJointTrades06 >= 0 => MIN(ROUND2(CTotalOpnJointTrades06 * 100 / CTotalOpnTrades06), CAP_100),
												CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
												CTotalOpnTrades06 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades06 < 0 => CTotalOpnJointTrades06, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalOpnJointTrades07 >= 0 => MIN(ROUND2(CTotalOpnJointTrades07 * 100 / CTotalOpnTrades07), CAP_100),
												CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
												CTotalOpnTrades07 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades07 < 0 => CTotalOpnJointTrades07, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalOpnJointTrades08 >= 0 => MIN(ROUND2(CTotalOpnJointTrades08 * 100 / CTotalOpnTrades08), CAP_100),
												CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
												CTotalOpnTrades08 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades08 < 0 => CTotalOpnJointTrades08, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalOpnJointTrades09 >= 0 => MIN(ROUND2(CTotalOpnJointTrades09 * 100 / CTotalOpnTrades09), CAP_100),
												CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
												CTotalOpnTrades09 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades09 < 0 => CTotalOpnJointTrades09, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalOpnJointTrades10 >= 0 => MIN(ROUND2(CTotalOpnJointTrades10 * 100 / CTotalOpnTrades10), CAP_100),
												CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
												CTotalOpnTrades10 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades10 < 0 => CTotalOpnJointTrades10, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalOpnJointTrades11 >= 0 => MIN(ROUND2(CTotalOpnJointTrades11 * 100 / CTotalOpnTrades11), CAP_100),
												CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
												CTotalOpnTrades11 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades11 < 0 => CTotalOpnJointTrades11, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalOpnJointTrades12 >= 0 => MIN(ROUND2(CTotalOpnJointTrades12 * 100 / CTotalOpnTrades12), CAP_100),
												CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
												CTotalOpnTrades12 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades12 < 0 => CTotalOpnJointTrades12, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalOpnJointTrades13 >= 0 => MIN(ROUND2(CTotalOpnJointTrades13 * 100 / CTotalOpnTrades13), CAP_100),
												CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
												CTotalOpnTrades13 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades13 < 0 => CTotalOpnJointTrades13, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalOpnJointTrades14 >= 0 => MIN(ROUND2(CTotalOpnJointTrades14 * 100 / CTotalOpnTrades14), CAP_100),
												CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
												CTotalOpnTrades14 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades14 < 0 => CTotalOpnJointTrades14, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalOpnJointTrades15 >= 0 => MIN(ROUND2(CTotalOpnJointTrades15 * 100 / CTotalOpnTrades15), CAP_100),
												CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
												CTotalOpnTrades15 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades15 < 0 => CTotalOpnJointTrades15, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalOpnJointTrades16 >= 0 => MIN(ROUND2(CTotalOpnJointTrades16 * 100 / CTotalOpnTrades16), CAP_100),
												CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
												CTotalOpnTrades16 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades16 < 0 => CTotalOpnJointTrades16, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalOpnJointTrades17 >= 0 => MIN(ROUND2(CTotalOpnJointTrades17 * 100 / CTotalOpnTrades17), CAP_100),
												CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
												CTotalOpnTrades17 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades17 < 0 => CTotalOpnJointTrades17, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalOpnJointTrades18 >= 0 => MIN(ROUND2(CTotalOpnJointTrades18 * 100 / CTotalOpnTrades18), CAP_100),
												CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
												CTotalOpnTrades18 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades18 < 0 => CTotalOpnJointTrades18, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalOpnJointTrades19 >= 0 => MIN(ROUND2(CTotalOpnJointTrades19 * 100 / CTotalOpnTrades19), CAP_100),
												CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
												CTotalOpnTrades19 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades19 < 0 => CTotalOpnJointTrades19, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalOpnJointTrades20 >= 0 => MIN(ROUND2(CTotalOpnJointTrades20 * 100 / CTotalOpnTrades20), CAP_100),
												CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
												CTotalOpnTrades20 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades20 < 0 => CTotalOpnJointTrades20, DEFAULT_TEST);
CreditReport: => POpnJointToOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalOpnJointTrades21 >= 0 => MIN(ROUND2(CTotalOpnJointTrades21 * 100 / CTotalOpnTrades21), CAP_100),
												CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
												CTotalOpnTrades21 = 0 => DEFAULT_L4,
												CTotalOpnJointTrades21 < 0 => CTotalOpnJointTrades21, DEFAULT_TEST);

// P_AlwaysSatisfiedEver:
CreditReport: => PAlwaysSatisfiedEver01 := MAP(CTotalTrades01 > 0 AND CTotalAlwaysSatisfiedEver01 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver01 * 100 / CTotalTrades01), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades01 = 0 => DEFAULT_L2,
												CTotalTrades01 < 0 => CTotalTrades01,
												CTotalAlwaysSatisfiedEver01 < 0 => CTotalAlwaysSatisfiedEver01, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver02 := MAP(CTotalTrades02 > 0 AND CTotalAlwaysSatisfiedEver02 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver02 * 100 / CTotalTrades02), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades02 = 0 => DEFAULT_L2,
												CTotalTrades02 < 0 => CTotalTrades02,
												CTotalAlwaysSatisfiedEver02 < 0 => CTotalAlwaysSatisfiedEver02, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver03 := MAP(CTotalTrades03 > 0 AND CTotalAlwaysSatisfiedEver03 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver03 * 100 / CTotalTrades03), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades03 = 0 => DEFAULT_L2,
												CTotalTrades03 < 0 => CTotalTrades03,
												CTotalAlwaysSatisfiedEver03 < 0 => CTotalAlwaysSatisfiedEver03, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver04 := MAP(CTotalTrades04 > 0 AND CTotalAlwaysSatisfiedEver04 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver04 * 100 / CTotalTrades04), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades04 = 0 => DEFAULT_L2,
												CTotalTrades04 < 0 => CTotalTrades04,
												CTotalAlwaysSatisfiedEver04 < 0 => CTotalAlwaysSatisfiedEver04, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver05 := MAP(CTotalTrades05 > 0 AND CTotalAlwaysSatisfiedEver05 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver05 * 100 / CTotalTrades05), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades05 = 0 => DEFAULT_L2,
												CTotalTrades05 < 0 => CTotalTrades05,
												CTotalAlwaysSatisfiedEver05 < 0 => CTotalAlwaysSatisfiedEver05, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver06 := MAP(CTotalTrades06 > 0 AND CTotalAlwaysSatisfiedEver06 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver06 * 100 / CTotalTrades06), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades06 = 0 => DEFAULT_L2,
												CTotalTrades06 < 0 => CTotalTrades06,
												CTotalAlwaysSatisfiedEver06 < 0 => CTotalAlwaysSatisfiedEver06, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver07 := MAP(CTotalTrades07 > 0 AND CTotalAlwaysSatisfiedEver07 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver07 * 100 / CTotalTrades07), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades07 = 0 => DEFAULT_L2,
												CTotalTrades07 < 0 => CTotalTrades07,
												CTotalAlwaysSatisfiedEver07 < 0 => CTotalAlwaysSatisfiedEver07, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver08 := MAP(CTotalTrades08 > 0 AND CTotalAlwaysSatisfiedEver08 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver08 * 100 / CTotalTrades08), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades08 = 0 => DEFAULT_L2,
												CTotalTrades08 < 0 => CTotalTrades08,
												CTotalAlwaysSatisfiedEver08 < 0 => CTotalAlwaysSatisfiedEver08, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver09 := MAP(CTotalTrades09 > 0 AND CTotalAlwaysSatisfiedEver09 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver09 * 100 / CTotalTrades09), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades09 = 0 => DEFAULT_L2,
												CTotalTrades09 < 0 => CTotalTrades09,
												CTotalAlwaysSatisfiedEver09 < 0 => CTotalAlwaysSatisfiedEver09, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver10 := MAP(CTotalTrades10 > 0 AND CTotalAlwaysSatisfiedEver10 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver10 * 100 / CTotalTrades10), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades10 = 0 => DEFAULT_L2,
												CTotalTrades10 < 0 => CTotalTrades10,
												CTotalAlwaysSatisfiedEver10 < 0 => CTotalAlwaysSatisfiedEver10, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver11 := MAP(CTotalTrades11 > 0 AND CTotalAlwaysSatisfiedEver11 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver11 * 100 / CTotalTrades11), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades11 = 0 => DEFAULT_L2,
												CTotalTrades11 < 0 => CTotalTrades11,
												CTotalAlwaysSatisfiedEver11 < 0 => CTotalAlwaysSatisfiedEver11, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver12 := MAP(CTotalTrades12 > 0 AND CTotalAlwaysSatisfiedEver12 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver12 * 100 / CTotalTrades12), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades12 = 0 => DEFAULT_L2,
												CTotalTrades12 < 0 => CTotalTrades12,
												CTotalAlwaysSatisfiedEver12 < 0 => CTotalAlwaysSatisfiedEver12, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver13 := MAP(CTotalTrades13 > 0 AND CTotalAlwaysSatisfiedEver13 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver13 * 100 / CTotalTrades13), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades13 = 0 => DEFAULT_L2,
												CTotalTrades13 < 0 => CTotalTrades13,
												CTotalAlwaysSatisfiedEver13 < 0 => CTotalAlwaysSatisfiedEver13, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver14 := MAP(CTotalTrades14 > 0 AND CTotalAlwaysSatisfiedEver14 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver14 * 100 / CTotalTrades14), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades14 = 0 => DEFAULT_L2,
												CTotalTrades14 < 0 => CTotalTrades14,
												CTotalAlwaysSatisfiedEver14 < 0 => CTotalAlwaysSatisfiedEver14, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver15 := MAP(CTotalTrades15 > 0 AND CTotalAlwaysSatisfiedEver15 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver15 * 100 / CTotalTrades15), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades15 = 0 => DEFAULT_L2,
												CTotalTrades15 < 0 => CTotalTrades15,
												CTotalAlwaysSatisfiedEver15 < 0 => CTotalAlwaysSatisfiedEver15, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver16 := MAP(CTotalTrades16 > 0 AND CTotalAlwaysSatisfiedEver16 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver16 * 100 / CTotalTrades16), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades16 = 0 => DEFAULT_L2,
												CTotalTrades16 < 0 => CTotalTrades16,
												CTotalAlwaysSatisfiedEver16 < 0 => CTotalAlwaysSatisfiedEver16, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver17 := MAP(CTotalTrades17 > 0 AND CTotalAlwaysSatisfiedEver17 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver17 * 100 / CTotalTrades17), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades17 = 0 => DEFAULT_L2,
												CTotalTrades17 < 0 => CTotalTrades17,
												CTotalAlwaysSatisfiedEver17 < 0 => CTotalAlwaysSatisfiedEver17, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver18 := MAP(CTotalTrades18 > 0 AND CTotalAlwaysSatisfiedEver18 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver18 * 100 / CTotalTrades18), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades18 = 0 => DEFAULT_L2,
												CTotalTrades18 < 0 => CTotalTrades18,
												CTotalAlwaysSatisfiedEver18 < 0 => CTotalAlwaysSatisfiedEver18, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver19 := MAP(CTotalTrades19 > 0 AND CTotalAlwaysSatisfiedEver19 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver19 * 100 / CTotalTrades19), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades19 = 0 => DEFAULT_L2,
												CTotalTrades19 < 0 => CTotalTrades19,
												CTotalAlwaysSatisfiedEver19 < 0 => CTotalAlwaysSatisfiedEver19, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver20 := MAP(CTotalTrades20 > 0 AND CTotalAlwaysSatisfiedEver20 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver20 * 100 / CTotalTrades20), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades20 = 0 => DEFAULT_L2,
												CTotalTrades20 < 0 => CTotalTrades20,
												CTotalAlwaysSatisfiedEver20 < 0 => CTotalAlwaysSatisfiedEver20, DEFAULT_TEST);
CreditReport: => PAlwaysSatisfiedEver21 := MAP(CTotalTrades21 > 0 AND CTotalAlwaysSatisfiedEver21 >= 0 => MIN(ROUND2(CTotalAlwaysSatisfiedEver21 * 100 / CTotalTrades21), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalTrades21 = 0 => DEFAULT_L2,
												CTotalTrades21 < 0 => CTotalTrades21,
												CTotalAlwaysSatisfiedEver21 < 0 => CTotalAlwaysSatisfiedEver21, DEFAULT_TEST);

// P_OpnAlwaysSatisfiedEver:
CreditReport: => POpnAlwaysSatisfiedEver01 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpnAlwaysSatisfiedEver01 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver01 * 100 / CTotalOpnTrades01), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
													CTotalOpnTrades01 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver01 < 0 => CTotalOpnAlwaysSatisfiedEver01, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver02 := MAP(CTotalOpnTrades02 > 0 AND CTotalOpnAlwaysSatisfiedEver02 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver02 * 100 / CTotalOpnTrades02), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
													CTotalOpnTrades02 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver02 < 0 => CTotalOpnAlwaysSatisfiedEver02, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver03 := MAP(CTotalOpnTrades03 > 0 AND CTotalOpnAlwaysSatisfiedEver03 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver03 * 100 / CTotalOpnTrades03), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
													CTotalOpnTrades03 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver03 < 0 => CTotalOpnAlwaysSatisfiedEver03, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver04 := MAP(CTotalOpnTrades04 > 0 AND CTotalOpnAlwaysSatisfiedEver04 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver04 * 100 / CTotalOpnTrades04), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
													CTotalOpnTrades04 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver04 < 0 => CTotalOpnAlwaysSatisfiedEver04, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver05 := MAP(CTotalOpnTrades05 > 0 AND CTotalOpnAlwaysSatisfiedEver05 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver05 * 100 / CTotalOpnTrades05), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
													CTotalOpnTrades05 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver05 < 0 => CTotalOpnAlwaysSatisfiedEver05, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver06 := MAP(CTotalOpnTrades06 > 0 AND CTotalOpnAlwaysSatisfiedEver06 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver06 * 100 / CTotalOpnTrades06), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
													CTotalOpnTrades06 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver06 < 0 => CTotalOpnAlwaysSatisfiedEver06, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver07 := MAP(CTotalOpnTrades07 > 0 AND CTotalOpnAlwaysSatisfiedEver07 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver07 * 100 / CTotalOpnTrades07), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
													CTotalOpnTrades07 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver07 < 0 => CTotalOpnAlwaysSatisfiedEver07, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver08 := MAP(CTotalOpnTrades08 > 0 AND CTotalOpnAlwaysSatisfiedEver08 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver08 * 100 / CTotalOpnTrades08), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
													CTotalOpnTrades08 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver08 < 0 => CTotalOpnAlwaysSatisfiedEver08, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver09 := MAP(CTotalOpnTrades09 > 0 AND CTotalOpnAlwaysSatisfiedEver09 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver09 * 100 / CTotalOpnTrades09), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
													CTotalOpnTrades09 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver09 < 0 => CTotalOpnAlwaysSatisfiedEver09, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver10 := MAP(CTotalOpnTrades10 > 0 AND CTotalOpnAlwaysSatisfiedEver10 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver10 * 100 / CTotalOpnTrades10), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
													CTotalOpnTrades10 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver10 < 0 => CTotalOpnAlwaysSatisfiedEver10, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver11 := MAP(CTotalOpnTrades11 > 0 AND CTotalOpnAlwaysSatisfiedEver11 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver11 * 100 / CTotalOpnTrades11), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
													CTotalOpnTrades11 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver11 < 0 => CTotalOpnAlwaysSatisfiedEver11, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver12 := MAP(CTotalOpnTrades12 > 0 AND CTotalOpnAlwaysSatisfiedEver12 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver12 * 100 / CTotalOpnTrades12), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
													CTotalOpnTrades12 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver12 < 0 => CTotalOpnAlwaysSatisfiedEver12, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver13 := MAP(CTotalOpnTrades13 > 0 AND CTotalOpnAlwaysSatisfiedEver13 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver13 * 100 / CTotalOpnTrades13), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
													CTotalOpnTrades13 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver13 < 0 => CTotalOpnAlwaysSatisfiedEver13, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver14 := MAP(CTotalOpnTrades14 > 0 AND CTotalOpnAlwaysSatisfiedEver14 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver14 * 100 / CTotalOpnTrades14), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
													CTotalOpnTrades14 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver14 < 0 => CTotalOpnAlwaysSatisfiedEver14, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver15 := MAP(CTotalOpnTrades15 > 0 AND CTotalOpnAlwaysSatisfiedEver15 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver15 * 100 / CTotalOpnTrades15), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
													CTotalOpnTrades15 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver15 < 0 => CTotalOpnAlwaysSatisfiedEver15, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver16 := MAP(CTotalOpnTrades16 > 0 AND CTotalOpnAlwaysSatisfiedEver16 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver16 * 100 / CTotalOpnTrades16), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
													CTotalOpnTrades16 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver16 < 0 => CTotalOpnAlwaysSatisfiedEver16, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver17 := MAP(CTotalOpnTrades17 > 0 AND CTotalOpnAlwaysSatisfiedEver17 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver17 * 100 / CTotalOpnTrades17), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
													CTotalOpnTrades17 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver17 < 0 => CTotalOpnAlwaysSatisfiedEver17, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver18 := MAP(CTotalOpnTrades18 > 0 AND CTotalOpnAlwaysSatisfiedEver18 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver18 * 100 / CTotalOpnTrades18), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
													CTotalOpnTrades18 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver18 < 0 => CTotalOpnAlwaysSatisfiedEver18, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver19 := MAP(CTotalOpnTrades19 > 0 AND CTotalOpnAlwaysSatisfiedEver19 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver19 * 100 / CTotalOpnTrades19), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
													CTotalOpnTrades19 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver19 < 0 => CTotalOpnAlwaysSatisfiedEver19, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver20 := MAP(CTotalOpnTrades20 > 0 AND CTotalOpnAlwaysSatisfiedEver20 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver20 * 100 / CTotalOpnTrades20), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
													CTotalOpnTrades20 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver20 < 0 => CTotalOpnAlwaysSatisfiedEver20, DEFAULT_TEST);
CreditReport: => POpnAlwaysSatisfiedEver21 := MAP(CTotalOpnTrades21 > 0 AND CTotalOpnAlwaysSatisfiedEver21 >= 0 => MIN(ROUND2(CTotalOpnAlwaysSatisfiedEver21 * 100 / CTotalOpnTrades21), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
													CTotalOpnTrades21 = 0 => DEFAULT_L4,
													CTotalOpnAlwaysSatisfiedEver21 < 0 => CTotalOpnAlwaysSatisfiedEver21, DEFAULT_TEST);

// P_LastRept90PDRG:
CreditReport: => PLastRept90PDRG01 := MAP(CTotalNotDeferred01 > 0 AND CTotalLastRept90PDRG01 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG01 * 100 / CTotalNotDeferred01), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred01 < 0 => CTotalNotDeferred01,
										CTotalNotDeferred01 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG01 < 0 => CTotalLastRept90PDRG01, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG02 := MAP(CTotalNotDeferred02 > 0 AND CTotalLastRept90PDRG02 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG02 * 100 / CTotalNotDeferred02), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred02 < 0 => CTotalNotDeferred02,
										CTotalNotDeferred02 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG02 < 0 => CTotalLastRept90PDRG02, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG03 := MAP(CTotalNotDeferred03 > 0 AND CTotalLastRept90PDRG03 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG03 * 100 / CTotalNotDeferred03), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred03 < 0 => CTotalNotDeferred03,
										CTotalNotDeferred03 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG03 < 0 => CTotalLastRept90PDRG03, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG04 := MAP(CTotalNotDeferred04 > 0 AND CTotalLastRept90PDRG04 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG04 * 100 / CTotalNotDeferred04), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred04 < 0 => CTotalNotDeferred04,
										CTotalNotDeferred04 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG04 < 0 => CTotalLastRept90PDRG04, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG05 := MAP(CTotalNotDeferred05 > 0 AND CTotalLastRept90PDRG05 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG05 * 100 / CTotalNotDeferred05), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred05 < 0 => CTotalNotDeferred05,
										CTotalNotDeferred05 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG05 < 0 => CTotalLastRept90PDRG05, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG06 := MAP(CTotalNotDeferred06 > 0 AND CTotalLastRept90PDRG06 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG06 * 100 / CTotalNotDeferred06), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred06 < 0 => CTotalNotDeferred06,
										CTotalNotDeferred06 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG06 < 0 => CTotalLastRept90PDRG06, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG07 := MAP(CTotalNotDeferred07 > 0 AND CTotalLastRept90PDRG07 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG07 * 100 / CTotalNotDeferred07), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred07 < 0 => CTotalNotDeferred07,
										CTotalNotDeferred07 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG07 < 0 => CTotalLastRept90PDRG07, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG08 := MAP(CTotalNotDeferred08 > 0 AND CTotalLastRept90PDRG08 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG08 * 100 / CTotalNotDeferred08), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred08 < 0 => CTotalNotDeferred08,
										CTotalNotDeferred08 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG08 < 0 => CTotalLastRept90PDRG08, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG09 := MAP(CTotalNotDeferred09 > 0 AND CTotalLastRept90PDRG09 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG09 * 100 / CTotalNotDeferred09), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred09 < 0 => CTotalNotDeferred09,
										CTotalNotDeferred09 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG09 < 0 => CTotalLastRept90PDRG09, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG10 := MAP(CTotalNotDeferred10 > 0 AND CTotalLastRept90PDRG10 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG10 * 100 / CTotalNotDeferred10), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred10 < 0 => CTotalNotDeferred10,
										CTotalNotDeferred10 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG10 < 0 => CTotalLastRept90PDRG10, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG11 := MAP(CTotalNotDeferred11 > 0 AND CTotalLastRept90PDRG11 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG11 * 100 / CTotalNotDeferred11), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred11 < 0 => CTotalNotDeferred11,
										CTotalNotDeferred11 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG11 < 0 => CTotalLastRept90PDRG11, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG12 := MAP(CTotalNotDeferred12 > 0 AND CTotalLastRept90PDRG12 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG12 * 100 / CTotalNotDeferred12), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred12 < 0 => CTotalNotDeferred12,
										CTotalNotDeferred12 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG12 < 0 => CTotalLastRept90PDRG12, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG13 := MAP(CTotalNotDeferred13 > 0 AND CTotalLastRept90PDRG13 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG13 * 100 / CTotalNotDeferred13), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred13 < 0 => CTotalNotDeferred13,
										CTotalNotDeferred13 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG13 < 0 => CTotalLastRept90PDRG13, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG14 := MAP(CTotalNotDeferred14 > 0 AND CTotalLastRept90PDRG14 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG14 * 100 / CTotalNotDeferred14), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred14 < 0 => CTotalNotDeferred14,
										CTotalNotDeferred14 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG14 < 0 => CTotalLastRept90PDRG14, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG15 := MAP(CTotalNotDeferred15 > 0 AND CTotalLastRept90PDRG15 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG15 * 100 / CTotalNotDeferred15), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred15 < 0 => CTotalNotDeferred15,
										CTotalNotDeferred15 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG15 < 0 => CTotalLastRept90PDRG15, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG16 := MAP(CTotalNotDeferred16 > 0 AND CTotalLastRept90PDRG16 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG16 * 100 / CTotalNotDeferred16), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred16 < 0 => CTotalNotDeferred16,
										CTotalNotDeferred16 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG16 < 0 => CTotalLastRept90PDRG16, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG17 := MAP(CTotalNotDeferred17 > 0 AND CTotalLastRept90PDRG17 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG17 * 100 / CTotalNotDeferred17), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred17 < 0 => CTotalNotDeferred17,
										CTotalNotDeferred17 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG17 < 0 => CTotalLastRept90PDRG17, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG18 := MAP(CTotalNotDeferred18 > 0 AND CTotalLastRept90PDRG18 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG18 * 100 / CTotalNotDeferred18), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred18 < 0 => CTotalNotDeferred18,
										CTotalNotDeferred18 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG18 < 0 => CTotalLastRept90PDRG18, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG19 := MAP(CTotalNotDeferred19 > 0 AND CTotalLastRept90PDRG19 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG19 * 100 / CTotalNotDeferred19), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred19 < 0 => CTotalNotDeferred19,
										CTotalNotDeferred19 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG19 < 0 => CTotalLastRept90PDRG19, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG20 := MAP(CTotalNotDeferred20 > 0 AND CTotalLastRept90PDRG20 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG20 * 100 / CTotalNotDeferred20), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred20 < 0 => CTotalNotDeferred20,
										CTotalNotDeferred20 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG20 < 0 => CTotalLastRept90PDRG20, DEFAULT_TEST);
CreditReport: => PLastRept90PDRG21 := MAP(CTotalNotDeferred21 > 0 AND CTotalLastRept90PDRG21 >= 0 => MIN(ROUND2(CTotalLastRept90PDRG21 * 100 / CTotalNotDeferred21), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred21 < 0 => CTotalNotDeferred21,
										CTotalNotDeferred21 = 0 => DEFAULT_L4,
										CTotalLastRept90PDRG21 < 0 => CTotalLastRept90PDRG21, DEFAULT_TEST);

// P_LastRept120PDRG:
CreditReport: => PLastRept120PDRG01 := MAP(CTotalNotDeferred01 > 0 AND CTotalLastRept120PDRG01 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG01 * 100 / CTotalNotDeferred01), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred01 < 0 => CTotalNotDeferred01,
										CTotalNotDeferred01 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG01 < 0 => CTotalLastRept120PDRG01, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG02 := MAP(CTotalNotDeferred02 > 0 AND CTotalLastRept120PDRG02 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG02 * 100 / CTotalNotDeferred02), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred02 < 0 => CTotalNotDeferred02,
										CTotalNotDeferred02 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG02 < 0 => CTotalLastRept120PDRG02, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG03 := MAP(CTotalNotDeferred03 > 0 AND CTotalLastRept120PDRG03 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG03 * 100 / CTotalNotDeferred03), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred03 < 0 => CTotalNotDeferred03,
										CTotalNotDeferred03 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG03 < 0 => CTotalLastRept120PDRG03, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG04 := MAP(CTotalNotDeferred04 > 0 AND CTotalLastRept120PDRG04 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG04 * 100 / CTotalNotDeferred04), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred04 < 0 => CTotalNotDeferred04,
										CTotalNotDeferred04 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG04 < 0 => CTotalLastRept120PDRG04, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG05 := MAP(CTotalNotDeferred05 > 0 AND CTotalLastRept120PDRG05 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG05 * 100 / CTotalNotDeferred05), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred05 < 0 => CTotalNotDeferred05,
										CTotalNotDeferred05 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG05 < 0 => CTotalLastRept120PDRG05, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG06 := MAP(CTotalNotDeferred06 > 0 AND CTotalLastRept120PDRG06 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG06 * 100 / CTotalNotDeferred06), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred06 < 0 => CTotalNotDeferred06,
										CTotalNotDeferred06 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG06 < 0 => CTotalLastRept120PDRG06, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG07 := MAP(CTotalNotDeferred07 > 0 AND CTotalLastRept120PDRG07 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG07 * 100 / CTotalNotDeferred07), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred07 < 0 => CTotalNotDeferred07,
										CTotalNotDeferred07 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG07 < 0 => CTotalLastRept120PDRG07, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG08 := MAP(CTotalNotDeferred08 > 0 AND CTotalLastRept120PDRG08 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG08 * 100 / CTotalNotDeferred08), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred08 < 0 => CTotalNotDeferred08,
										CTotalNotDeferred08 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG08 < 0 => CTotalLastRept120PDRG08, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG09 := MAP(CTotalNotDeferred09 > 0 AND CTotalLastRept120PDRG09 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG09 * 100 / CTotalNotDeferred09), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred09 < 0 => CTotalNotDeferred09,
										CTotalNotDeferred09 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG09 < 0 => CTotalLastRept120PDRG09, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG10 := MAP(CTotalNotDeferred10 > 0 AND CTotalLastRept120PDRG10 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG10 * 100 / CTotalNotDeferred10), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred10 < 0 => CTotalNotDeferred10,
										CTotalNotDeferred10 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG10 < 0 => CTotalLastRept120PDRG10, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG11 := MAP(CTotalNotDeferred11 > 0 AND CTotalLastRept120PDRG11 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG11 * 100 / CTotalNotDeferred11), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred11 < 0 => CTotalNotDeferred11,
										CTotalNotDeferred11 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG11 < 0 => CTotalLastRept120PDRG11, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG12 := MAP(CTotalNotDeferred12 > 0 AND CTotalLastRept120PDRG12 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG12 * 100 / CTotalNotDeferred12), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred12 < 0 => CTotalNotDeferred12,
										CTotalNotDeferred12 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG12 < 0 => CTotalLastRept120PDRG12, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG13 := MAP(CTotalNotDeferred13 > 0 AND CTotalLastRept120PDRG13 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG13 * 100 / CTotalNotDeferred13), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred13 < 0 => CTotalNotDeferred13,
										CTotalNotDeferred13 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG13 < 0 => CTotalLastRept120PDRG13, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG14 := MAP(CTotalNotDeferred14 > 0 AND CTotalLastRept120PDRG14 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG14 * 100 / CTotalNotDeferred14), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred14 < 0 => CTotalNotDeferred14,
										CTotalNotDeferred14 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG14 < 0 => CTotalLastRept120PDRG14, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG15 := MAP(CTotalNotDeferred15 > 0 AND CTotalLastRept120PDRG15 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG15 * 100 / CTotalNotDeferred15), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred15 < 0 => CTotalNotDeferred15,
										CTotalNotDeferred15 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG15 < 0 => CTotalLastRept120PDRG15, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG16 := MAP(CTotalNotDeferred16 > 0 AND CTotalLastRept120PDRG16 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG16 * 100 / CTotalNotDeferred16), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred16 < 0 => CTotalNotDeferred16,
										CTotalNotDeferred16 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG16 < 0 => CTotalLastRept120PDRG16, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG17 := MAP(CTotalNotDeferred17 > 0 AND CTotalLastRept120PDRG17 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG17 * 100 / CTotalNotDeferred17), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred17 < 0 => CTotalNotDeferred17,
										CTotalNotDeferred17 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG17 < 0 => CTotalLastRept120PDRG17, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG18 := MAP(CTotalNotDeferred18 > 0 AND CTotalLastRept120PDRG18 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG18 * 100 / CTotalNotDeferred18), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred18 < 0 => CTotalNotDeferred18,
										CTotalNotDeferred18 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG18 < 0 => CTotalLastRept120PDRG18, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG19 := MAP(CTotalNotDeferred19 > 0 AND CTotalLastRept120PDRG19 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG19 * 100 / CTotalNotDeferred19), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred19 < 0 => CTotalNotDeferred19,
										CTotalNotDeferred19 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG19 < 0 => CTotalLastRept120PDRG19, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG20 := MAP(CTotalNotDeferred20 > 0 AND CTotalLastRept120PDRG20 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG20 * 100 / CTotalNotDeferred20), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred20 < 0 => CTotalNotDeferred20,
										CTotalNotDeferred20 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG20 < 0 => CTotalLastRept120PDRG20, DEFAULT_TEST);
CreditReport: => PLastRept120PDRG21 := MAP(CTotalNotDeferred21 > 0 AND CTotalLastRept120PDRG21 >= 0 => MIN(ROUND2(CTotalLastRept120PDRG21 * 100 / CTotalNotDeferred21), CAP_100),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalNotDeferred21 < 0 => CTotalNotDeferred21,
										CTotalNotDeferred21 = 0 => DEFAULT_L4,
										CTotalLastRept120PDRG21 < 0 => CTotalLastRept120PDRG21, DEFAULT_TEST);

// P_LastReptDerogatory:
CreditReport: => PLastReptDerogatory01 := MAP(CTotalNotDeferred01 > 0 AND CTotalLastReptDerogatory01 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory01 * 100 / CTotalNotDeferred01), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred01 < 0 => CTotalNotDeferred01,
											CTotalNotDeferred01 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory01 < 0 => CTotalLastReptDerogatory01, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory02 := MAP(CTotalNotDeferred02 > 0 AND CTotalLastReptDerogatory02 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory02 * 100 / CTotalNotDeferred02), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred02 < 0 => CTotalNotDeferred02,
											CTotalNotDeferred02 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory02 < 0 => CTotalLastReptDerogatory02, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory03 := MAP(CTotalNotDeferred03 > 0 AND CTotalLastReptDerogatory03 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory03 * 100 / CTotalNotDeferred03), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred03 < 0 => CTotalNotDeferred03,
											CTotalNotDeferred03 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory03 < 0 => CTotalLastReptDerogatory03, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory04 := MAP(CTotalNotDeferred04 > 0 AND CTotalLastReptDerogatory04 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory04 * 100 / CTotalNotDeferred04), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred04 < 0 => CTotalNotDeferred04,
											CTotalNotDeferred04 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory04 < 0 => CTotalLastReptDerogatory04, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory05 := MAP(CTotalNotDeferred05 > 0 AND CTotalLastReptDerogatory05 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory05 * 100 / CTotalNotDeferred05), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred05 < 0 => CTotalNotDeferred05,
											CTotalNotDeferred05 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory05 < 0 => CTotalLastReptDerogatory05, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory06 := MAP(CTotalNotDeferred06 > 0 AND CTotalLastReptDerogatory06 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory06 * 100 / CTotalNotDeferred06), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred06 < 0 => CTotalNotDeferred06,
											CTotalNotDeferred06 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory06 < 0 => CTotalLastReptDerogatory06, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory07 := MAP(CTotalNotDeferred07 > 0 AND CTotalLastReptDerogatory07 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory07 * 100 / CTotalNotDeferred07), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred07 < 0 => CTotalNotDeferred07,
											CTotalNotDeferred07 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory07 < 0 => CTotalLastReptDerogatory07, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory08 := MAP(CTotalNotDeferred08 > 0 AND CTotalLastReptDerogatory08 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory08 * 100 / CTotalNotDeferred08), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred08 < 0 => CTotalNotDeferred08,
											CTotalNotDeferred08 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory08 < 0 => CTotalLastReptDerogatory08, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory09 := MAP(CTotalNotDeferred09 > 0 AND CTotalLastReptDerogatory09 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory09 * 100 / CTotalNotDeferred09), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred09 < 0 => CTotalNotDeferred09,
											CTotalNotDeferred09 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory09 < 0 => CTotalLastReptDerogatory09, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory10 := MAP(CTotalNotDeferred10 > 0 AND CTotalLastReptDerogatory10 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory10 * 100 / CTotalNotDeferred10), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred10 < 0 => CTotalNotDeferred10,
											CTotalNotDeferred10 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory10 < 0 => CTotalLastReptDerogatory10, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory11 := MAP(CTotalNotDeferred11 > 0 AND CTotalLastReptDerogatory11 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory11 * 100 / CTotalNotDeferred11), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred11 < 0 => CTotalNotDeferred11,
											CTotalNotDeferred11 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory11 < 0 => CTotalLastReptDerogatory11, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory12 := MAP(CTotalNotDeferred12 > 0 AND CTotalLastReptDerogatory12 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory12 * 100 / CTotalNotDeferred12), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred12 < 0 => CTotalNotDeferred12,
											CTotalNotDeferred12 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory12 < 0 => CTotalLastReptDerogatory12, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory13 := MAP(CTotalNotDeferred13 > 0 AND CTotalLastReptDerogatory13 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory13 * 100 / CTotalNotDeferred13), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred13 < 0 => CTotalNotDeferred13,
											CTotalNotDeferred13 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory13 < 0 => CTotalLastReptDerogatory13, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory14 := MAP(CTotalNotDeferred14 > 0 AND CTotalLastReptDerogatory14 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory14 * 100 / CTotalNotDeferred14), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred14 < 0 => CTotalNotDeferred14,
											CTotalNotDeferred14 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory14 < 0 => CTotalLastReptDerogatory14, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory15 := MAP(CTotalNotDeferred15 > 0 AND CTotalLastReptDerogatory15 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory15 * 100 / CTotalNotDeferred15), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred15 < 0 => CTotalNotDeferred15,
											CTotalNotDeferred15 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory15 < 0 => CTotalLastReptDerogatory15, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory16 := MAP(CTotalNotDeferred16 > 0 AND CTotalLastReptDerogatory16 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory16 * 100 / CTotalNotDeferred16), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred16 < 0 => CTotalNotDeferred16,
											CTotalNotDeferred16 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory16 < 0 => CTotalLastReptDerogatory16, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory17 := MAP(CTotalNotDeferred17 > 0 AND CTotalLastReptDerogatory17 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory17 * 100 / CTotalNotDeferred17), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred17 < 0 => CTotalNotDeferred17,
											CTotalNotDeferred17 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory17 < 0 => CTotalLastReptDerogatory17, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory18 := MAP(CTotalNotDeferred18 > 0 AND CTotalLastReptDerogatory18 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory18 * 100 / CTotalNotDeferred18), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred18 < 0 => CTotalNotDeferred18,
											CTotalNotDeferred18 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory18 < 0 => CTotalLastReptDerogatory18, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory19 := MAP(CTotalNotDeferred19 > 0 AND CTotalLastReptDerogatory19 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory19 * 100 / CTotalNotDeferred19), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred19 < 0 => CTotalNotDeferred19,
											CTotalNotDeferred19 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory19 < 0 => CTotalLastReptDerogatory19, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory20 := MAP(CTotalNotDeferred20 > 0 AND CTotalLastReptDerogatory20 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory20 * 100 / CTotalNotDeferred20), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred20 < 0 => CTotalNotDeferred20,
											CTotalNotDeferred20 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory20 < 0 => CTotalLastReptDerogatory20, DEFAULT_TEST);
CreditReport: => PLastReptDerogatory21 := MAP(CTotalNotDeferred21 > 0 AND CTotalLastReptDerogatory21 >= 0 => MIN(ROUND2(CTotalLastReptDerogatory21 * 100 / CTotalNotDeferred21), CAP_100),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											CTotalNotDeferred21 < 0 => CTotalNotDeferred21,
											CTotalNotDeferred21 = 0 => DEFAULT_L4,
											CTotalLastReptDerogatory21 < 0 => CTotalLastReptDerogatory21, DEFAULT_TEST);

// CurrentAPtoBalance:
CreditReport: => PCurrentAPtoBalance01 := MAP(ATradeCurrentBalance01 > 0 AND ATotalCurrentActualPayment01 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment01 * 100 / ATradeCurrentBalance01), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance01 < 0 => ATradeCurrentBalance01,
											ATotalCurrentActualPayment01 < 0 => ATotalCurrentActualPayment01, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance02 := MAP(ATradeCurrentBalance02 > 0 AND ATotalCurrentActualPayment02 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment02 * 100 / ATradeCurrentBalance02), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance02 < 0 => ATradeCurrentBalance02,
											ATotalCurrentActualPayment02 < 0 => ATotalCurrentActualPayment02, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance03 := MAP(ATradeCurrentBalance03 > 0 AND ATotalCurrentActualPayment03 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment03 * 100 / ATradeCurrentBalance03), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance03 < 0 => ATradeCurrentBalance03,
											ATotalCurrentActualPayment03 < 0 => ATotalCurrentActualPayment03, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance04 := MAP(ATradeCurrentBalance04 > 0 AND ATotalCurrentActualPayment04 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment04 * 100 / ATradeCurrentBalance04), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance04 < 0 => ATradeCurrentBalance04,
											ATotalCurrentActualPayment04 < 0 => ATotalCurrentActualPayment04, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance05 := MAP(ATradeCurrentBalance05 > 0 AND ATotalCurrentActualPayment05 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment05 * 100 / ATradeCurrentBalance05), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance05 < 0 => ATradeCurrentBalance05,
											ATotalCurrentActualPayment05 < 0 => ATotalCurrentActualPayment05, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance06 := MAP(ATradeCurrentBalance06 > 0 AND ATotalCurrentActualPayment06 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment06 * 100 / ATradeCurrentBalance06), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance06 < 0 => ATradeCurrentBalance06,
											ATotalCurrentActualPayment06 < 0 => ATotalCurrentActualPayment06, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance07 := MAP(ATradeCurrentBalance07 > 0 AND ATotalCurrentActualPayment07 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment07 * 100 / ATradeCurrentBalance07), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance07 < 0 => ATradeCurrentBalance07,
											ATotalCurrentActualPayment07 < 0 => ATotalCurrentActualPayment07, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance08 := MAP(ATradeCurrentBalance08 > 0 AND ATotalCurrentActualPayment08 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment08 * 100 / ATradeCurrentBalance08), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance08 < 0 => ATradeCurrentBalance08,
											ATotalCurrentActualPayment08 < 0 => ATotalCurrentActualPayment08, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance09 := MAP(ATradeCurrentBalance09 > 0 AND ATotalCurrentActualPayment09 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment09 * 100 / ATradeCurrentBalance09), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance09 < 0 => ATradeCurrentBalance09,
											ATotalCurrentActualPayment09 < 0 => ATotalCurrentActualPayment09, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance10 := MAP(ATradeCurrentBalance10 > 0 AND ATotalCurrentActualPayment10 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment10 * 100 / ATradeCurrentBalance10), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance10 < 0 => ATradeCurrentBalance10,
											ATotalCurrentActualPayment10 < 0 => ATotalCurrentActualPayment10, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance11 := MAP(ATradeCurrentBalance11 > 0 AND ATotalCurrentActualPayment11 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment11 * 100 / ATradeCurrentBalance11), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance11 < 0 => ATradeCurrentBalance11,
											ATotalCurrentActualPayment11 < 0 => ATotalCurrentActualPayment11, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance12 := MAP(ATradeCurrentBalance12 > 0 AND ATotalCurrentActualPayment12 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment12 * 100 / ATradeCurrentBalance12), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance12 < 0 => ATradeCurrentBalance12,
											ATotalCurrentActualPayment12 < 0 => ATotalCurrentActualPayment12, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance13 := MAP(ATradeCurrentBalance13 > 0 AND ATotalCurrentActualPayment13 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment13 * 100 / ATradeCurrentBalance13), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance13 < 0 => ATradeCurrentBalance13,
											ATotalCurrentActualPayment13 < 0 => ATotalCurrentActualPayment13, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance14 := MAP(ATradeCurrentBalance14 > 0 AND ATotalCurrentActualPayment14 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment14 * 100 / ATradeCurrentBalance14), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance14 < 0 => ATradeCurrentBalance14,
											ATotalCurrentActualPayment14 < 0 => ATotalCurrentActualPayment14, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance15 := MAP(ATradeCurrentBalance15 > 0 AND ATotalCurrentActualPayment15 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment15 * 100 / ATradeCurrentBalance15), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance15 < 0 => ATradeCurrentBalance15,
											ATotalCurrentActualPayment15 < 0 => ATotalCurrentActualPayment15, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance16 := MAP(ATradeCurrentBalance16 > 0 AND ATotalCurrentActualPayment16 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment16 * 100 / ATradeCurrentBalance16), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance16 < 0 => ATradeCurrentBalance16,
											ATotalCurrentActualPayment16 < 0 => ATotalCurrentActualPayment16, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance17 := MAP(ATradeCurrentBalance17 > 0 AND ATotalCurrentActualPayment17 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment17 * 100 / ATradeCurrentBalance17), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance17 < 0 => ATradeCurrentBalance17,
											ATotalCurrentActualPayment17 < 0 => ATotalCurrentActualPayment17, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance18 := MAP(ATradeCurrentBalance18 > 0 AND ATotalCurrentActualPayment18 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment18 * 100 / ATradeCurrentBalance18), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance18 < 0 => ATradeCurrentBalance18,
											ATotalCurrentActualPayment18 < 0 => ATotalCurrentActualPayment18, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance19 := MAP(ATradeCurrentBalance19 > 0 AND ATotalCurrentActualPayment19 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment19 * 100 / ATradeCurrentBalance19), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance19 < 0 => ATradeCurrentBalance19,
											ATotalCurrentActualPayment19 < 0 => ATotalCurrentActualPayment19, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance20 := MAP(ATradeCurrentBalance20 > 0 AND ATotalCurrentActualPayment20 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment20 * 100 / ATradeCurrentBalance20), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance20 < 0 => ATradeCurrentBalance20,
											ATotalCurrentActualPayment20 < 0 => ATotalCurrentActualPayment20, DEFAULT_TEST);
CreditReport: => PCurrentAPtoBalance21 := MAP(ATradeCurrentBalance21 > 0 AND ATotalCurrentActualPayment21 >= 0 => MIN(ROUND2(ATotalCurrentActualPayment21 * 100 / ATradeCurrentBalance21), CAP_999_DOT_92),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATradeCurrentBalance21 < 0 => ATradeCurrentBalance21,
											ATotalCurrentActualPayment21 < 0 => ATotalCurrentActualPayment21, DEFAULT_TEST);

// P_OpnTradesBalance0:
CreditReport: => POpn0BalanceToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND CTotalOpn0Balance01 >= 0 => MIN(ROUND2(CTotalOpn0Balance01 * 100 / CTotalOpnTrades01), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
													CTotalOpnTrades01 = 0 => DEFAULT_L4,
													CTotalOpn0Balance01 < 0 => CTotalOpn0Balance01, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades02 := MAP(CTotalOpnTrades02 > 0 AND CTotalOpn0Balance02 >= 0 => MIN(ROUND2(CTotalOpn0Balance02 * 100 / CTotalOpnTrades02), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
													CTotalOpnTrades02 = 0 => DEFAULT_L4,
													CTotalOpn0Balance02 < 0 => CTotalOpn0Balance02, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades03 := MAP(CTotalOpnTrades03 > 0 AND CTotalOpn0Balance03 >= 0 => MIN(ROUND2(CTotalOpn0Balance03 * 100 / CTotalOpnTrades03), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
													CTotalOpnTrades03 = 0 => DEFAULT_L4,
													CTotalOpn0Balance03 < 0 => CTotalOpn0Balance03, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades04 := MAP(CTotalOpnTrades04 > 0 AND CTotalOpn0Balance04 >= 0 => MIN(ROUND2(CTotalOpn0Balance04 * 100 / CTotalOpnTrades04), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
													CTotalOpnTrades04 = 0 => DEFAULT_L4,
													CTotalOpn0Balance04 < 0 => CTotalOpn0Balance04, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades05 := MAP(CTotalOpnTrades05 > 0 AND CTotalOpn0Balance05 >= 0 => MIN(ROUND2(CTotalOpn0Balance05 * 100 / CTotalOpnTrades05), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
													CTotalOpnTrades05 = 0 => DEFAULT_L4,
													CTotalOpn0Balance05 < 0 => CTotalOpn0Balance05, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades06 := MAP(CTotalOpnTrades06 > 0 AND CTotalOpn0Balance06 >= 0 => MIN(ROUND2(CTotalOpn0Balance06 * 100 / CTotalOpnTrades06), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
													CTotalOpnTrades06 = 0 => DEFAULT_L4,
													CTotalOpn0Balance06 < 0 => CTotalOpn0Balance06, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades07 := MAP(CTotalOpnTrades07 > 0 AND CTotalOpn0Balance07 >= 0 => MIN(ROUND2(CTotalOpn0Balance07 * 100 / CTotalOpnTrades07), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
													CTotalOpnTrades07 = 0 => DEFAULT_L4,
													CTotalOpn0Balance07 < 0 => CTotalOpn0Balance07, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades08 := MAP(CTotalOpnTrades08 > 0 AND CTotalOpn0Balance08 >= 0 => MIN(ROUND2(CTotalOpn0Balance08 * 100 / CTotalOpnTrades08), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
													CTotalOpnTrades08 = 0 => DEFAULT_L4,
													CTotalOpn0Balance08 < 0 => CTotalOpn0Balance08, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades09 := MAP(CTotalOpnTrades09 > 0 AND CTotalOpn0Balance09 >= 0 => MIN(ROUND2(CTotalOpn0Balance09 * 100 / CTotalOpnTrades09), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
													CTotalOpnTrades09 = 0 => DEFAULT_L4,
													CTotalOpn0Balance09 < 0 => CTotalOpn0Balance09, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades10 := MAP(CTotalOpnTrades10 > 0 AND CTotalOpn0Balance10 >= 0 => MIN(ROUND2(CTotalOpn0Balance10 * 100 / CTotalOpnTrades10), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
													CTotalOpnTrades10 = 0 => DEFAULT_L4,
													CTotalOpn0Balance10 < 0 => CTotalOpn0Balance10, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades11 := MAP(CTotalOpnTrades11 > 0 AND CTotalOpn0Balance11 >= 0 => MIN(ROUND2(CTotalOpn0Balance11 * 100 / CTotalOpnTrades11), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
													CTotalOpnTrades11 = 0 => DEFAULT_L4,
													CTotalOpn0Balance11 < 0 => CTotalOpn0Balance11, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades12 := MAP(CTotalOpnTrades12 > 0 AND CTotalOpn0Balance12 >= 0 => MIN(ROUND2(CTotalOpn0Balance12 * 100 / CTotalOpnTrades12), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
													CTotalOpnTrades12 = 0 => DEFAULT_L4,
													CTotalOpn0Balance12 < 0 => CTotalOpn0Balance12, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades13 := MAP(CTotalOpnTrades13 > 0 AND CTotalOpn0Balance13 >= 0 => MIN(ROUND2(CTotalOpn0Balance13 * 100 / CTotalOpnTrades13), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
													CTotalOpnTrades13 = 0 => DEFAULT_L4,
													CTotalOpn0Balance13 < 0 => CTotalOpn0Balance13, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades14 := MAP(CTotalOpnTrades14 > 0 AND CTotalOpn0Balance14 >= 0 => MIN(ROUND2(CTotalOpn0Balance14 * 100 / CTotalOpnTrades14), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
													CTotalOpnTrades14 = 0 => DEFAULT_L4,
													CTotalOpn0Balance14 < 0 => CTotalOpn0Balance14, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades15 := MAP(CTotalOpnTrades15 > 0 AND CTotalOpn0Balance15 >= 0 => MIN(ROUND2(CTotalOpn0Balance15 * 100 / CTotalOpnTrades15), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
													CTotalOpnTrades15 = 0 => DEFAULT_L4,
													CTotalOpn0Balance15 < 0 => CTotalOpn0Balance15, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades16 := MAP(CTotalOpnTrades16 > 0 AND CTotalOpn0Balance16 >= 0 => MIN(ROUND2(CTotalOpn0Balance16 * 100 / CTotalOpnTrades16), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
													CTotalOpnTrades16 = 0 => DEFAULT_L4,
													CTotalOpn0Balance16 < 0 => CTotalOpn0Balance16, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades17 := MAP(CTotalOpnTrades17 > 0 AND CTotalOpn0Balance17 >= 0 => MIN(ROUND2(CTotalOpn0Balance17 * 100 / CTotalOpnTrades17), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
													CTotalOpnTrades17 = 0 => DEFAULT_L4,
													CTotalOpn0Balance17 < 0 => CTotalOpn0Balance17, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades18 := MAP(CTotalOpnTrades18 > 0 AND CTotalOpn0Balance18 >= 0 => MIN(ROUND2(CTotalOpn0Balance18 * 100 / CTotalOpnTrades18), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
													CTotalOpnTrades18 = 0 => DEFAULT_L4,
													CTotalOpn0Balance18 < 0 => CTotalOpn0Balance18, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades19 := MAP(CTotalOpnTrades19 > 0 AND CTotalOpn0Balance19 >= 0 => MIN(ROUND2(CTotalOpn0Balance19 * 100 / CTotalOpnTrades19), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
													CTotalOpnTrades19 = 0 => DEFAULT_L4,
													CTotalOpn0Balance19 < 0 => CTotalOpn0Balance19, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades20 := MAP(CTotalOpnTrades20 > 0 AND CTotalOpn0Balance20 >= 0 => MIN(ROUND2(CTotalOpn0Balance20 * 100 / CTotalOpnTrades20), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
													CTotalOpnTrades20 = 0 => DEFAULT_L4,
													CTotalOpn0Balance20 < 0 => CTotalOpn0Balance20, DEFAULT_TEST);
CreditReport: => POpn0BalanceToAllOpnTrades21 := MAP(CTotalOpnTrades21 > 0 AND CTotalOpn0Balance21 >= 0 => MIN(ROUND2(CTotalOpn0Balance21 * 100 / CTotalOpnTrades21), CAP_100),
													u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
													CTotalOpnTrades21 = 0 => DEFAULT_L4,
													CTotalOpn0Balance21 < 0 => CTotalOpn0Balance21, DEFAULT_TEST);

// P_CrLimHiCrYoungestToOldest:
CreditReport: => PCrLimHiCrYoungToOld01 := MAP(ACrLimHiCrOldestTR01 > 0 AND ACrLimHiCrYoungestTR01 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR01 * 100 / ACrLimHiCrOldestTR01), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR01 < 0 => ACrLimHiCrOldestTR01,
												ACrLimHiCrYoungestTR01 < 0 => ACrLimHiCrYoungestTR01, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld02 := MAP(ACrLimHiCrOldestTR02 > 0 AND ACrLimHiCrYoungestTR02 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR02 * 100 / ACrLimHiCrOldestTR02), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR02 < 0 => ACrLimHiCrOldestTR02,
												ACrLimHiCrYoungestTR02 < 0 => ACrLimHiCrYoungestTR02, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld03 := MAP(ACrLimHiCrOldestTR03 > 0 AND ACrLimHiCrYoungestTR03 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR03 * 100 / ACrLimHiCrOldestTR03), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR03 < 0 => ACrLimHiCrOldestTR03,
												ACrLimHiCrYoungestTR03 < 0 => ACrLimHiCrYoungestTR03, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld04 := MAP(ACrLimHiCrOldestTR04 > 0 AND ACrLimHiCrYoungestTR04 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR04 * 100 / ACrLimHiCrOldestTR04), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR04 < 0 => ACrLimHiCrOldestTR04,
												ACrLimHiCrYoungestTR04 < 0 => ACrLimHiCrYoungestTR04, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld05 := MAP(ACrLimHiCrOldestTR05 > 0 AND ACrLimHiCrYoungestTR05 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR05 * 100 / ACrLimHiCrOldestTR05), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR05 < 0 => ACrLimHiCrOldestTR05,
												ACrLimHiCrYoungestTR05 < 0 => ACrLimHiCrYoungestTR05, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld06 := MAP(ACrLimHiCrOldestTR06 > 0 AND ACrLimHiCrYoungestTR06 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR06 * 100 / ACrLimHiCrOldestTR06), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR06 < 0 => ACrLimHiCrOldestTR06,
												ACrLimHiCrYoungestTR06 < 0 => ACrLimHiCrYoungestTR06, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld07 := MAP(ACrLimHiCrOldestTR07 > 0 AND ACrLimHiCrYoungestTR07 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR07 * 100 / ACrLimHiCrOldestTR07), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR07 < 0 => ACrLimHiCrOldestTR07,
												ACrLimHiCrYoungestTR07 < 0 => ACrLimHiCrYoungestTR07, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld08 := MAP(ACrLimHiCrOldestTR08 > 0 AND ACrLimHiCrYoungestTR08 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR08 * 100 / ACrLimHiCrOldestTR08), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR08 < 0 => ACrLimHiCrOldestTR08,
												ACrLimHiCrYoungestTR08 < 0 => ACrLimHiCrYoungestTR08, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld09 := MAP(ACrLimHiCrOldestTR09 > 0 AND ACrLimHiCrYoungestTR09 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR09 * 100 / ACrLimHiCrOldestTR09), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR09 < 0 => ACrLimHiCrOldestTR09,
												ACrLimHiCrYoungestTR09 < 0 => ACrLimHiCrYoungestTR09, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld10 := MAP(ACrLimHiCrOldestTR10 > 0 AND ACrLimHiCrYoungestTR10 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR10 * 100 / ACrLimHiCrOldestTR10), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR10 < 0 => ACrLimHiCrOldestTR10,
												ACrLimHiCrYoungestTR10 < 0 => ACrLimHiCrYoungestTR10, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld11 := MAP(ACrLimHiCrOldestTR11 > 0 AND ACrLimHiCrYoungestTR11 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR11 * 100 / ACrLimHiCrOldestTR11), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR11 < 0 => ACrLimHiCrOldestTR11,
												ACrLimHiCrYoungestTR11 < 0 => ACrLimHiCrYoungestTR11, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld12 := MAP(ACrLimHiCrOldestTR12 > 0 AND ACrLimHiCrYoungestTR12 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR12 * 100 / ACrLimHiCrOldestTR12), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR12 < 0 => ACrLimHiCrOldestTR12,
												ACrLimHiCrYoungestTR12 < 0 => ACrLimHiCrYoungestTR12, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld13 := MAP(ACrLimHiCrOldestTR13 > 0 AND ACrLimHiCrYoungestTR13 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR13 * 100 / ACrLimHiCrOldestTR13), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR13 < 0 => ACrLimHiCrOldestTR13,
												ACrLimHiCrYoungestTR13 < 0 => ACrLimHiCrYoungestTR13, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld14 := MAP(ACrLimHiCrOldestTR14 > 0 AND ACrLimHiCrYoungestTR14 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR14 * 100 / ACrLimHiCrOldestTR14), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR14 < 0 => ACrLimHiCrOldestTR14,
												ACrLimHiCrYoungestTR14 < 0 => ACrLimHiCrYoungestTR14, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld15 := MAP(ACrLimHiCrOldestTR15 > 0 AND ACrLimHiCrYoungestTR15 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR15 * 100 / ACrLimHiCrOldestTR15), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR15 < 0 => ACrLimHiCrOldestTR15,
												ACrLimHiCrYoungestTR15 < 0 => ACrLimHiCrYoungestTR15, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld16 := MAP(ACrLimHiCrOldestTR16 > 0 AND ACrLimHiCrYoungestTR16 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR16 * 100 / ACrLimHiCrOldestTR16), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR16 < 0 => ACrLimHiCrOldestTR16,
												ACrLimHiCrYoungestTR16 < 0 => ACrLimHiCrYoungestTR16, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld17 := MAP(ACrLimHiCrOldestTR17 > 0 AND ACrLimHiCrYoungestTR17 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR17 * 100 / ACrLimHiCrOldestTR17), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR17 < 0 => ACrLimHiCrOldestTR17,
												ACrLimHiCrYoungestTR17 < 0 => ACrLimHiCrYoungestTR17, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld18 := MAP(ACrLimHiCrOldestTR18 > 0 AND ACrLimHiCrYoungestTR18 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR18 * 100 / ACrLimHiCrOldestTR18), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR18 < 0 => ACrLimHiCrOldestTR18,
												ACrLimHiCrYoungestTR18 < 0 => ACrLimHiCrYoungestTR18, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld19 := MAP(ACrLimHiCrOldestTR19 > 0 AND ACrLimHiCrYoungestTR19 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR19 * 100 / ACrLimHiCrOldestTR19), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR19 < 0 => ACrLimHiCrOldestTR19,
												ACrLimHiCrYoungestTR19 < 0 => ACrLimHiCrYoungestTR19, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld20 := MAP(ACrLimHiCrOldestTR20 > 0 AND ACrLimHiCrYoungestTR20 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR20 * 100 / ACrLimHiCrOldestTR20), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR20 < 0 => ACrLimHiCrOldestTR20,
												ACrLimHiCrYoungestTR20 < 0 => ACrLimHiCrYoungestTR20, DEFAULT_TEST);
CreditReport: => PCrLimHiCrYoungToOld21 := MAP(ACrLimHiCrOldestTR21 > 0 AND ACrLimHiCrYoungestTR21 > 0 => MIN(ROUND2(ACrLimHiCrYoungestTR21 * 100 / ACrLimHiCrOldestTR21), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR21 < 0 => ACrLimHiCrOldestTR21,
												ACrLimHiCrYoungestTR21 < 0 => ACrLimHiCrYoungestTR21, DEFAULT_TEST);

// A_AvgOpnCrLimHiCr:

CreditReport: => d_AAVGCrLimHiCrOpnTR01 := COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR01 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR01 := MAP(d_AAVGCrLimHiCrOpnTR01 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR01 / d_AAVGCrLimHiCrOpnTR01), CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel33_01 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR02 := COUNT(CreditReportTradeline(u_group02 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR02 := SUM(CreditReportTradeline(u_group02 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR02 := MAP(d_AAVGCrLimHiCrOpnTR02 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR02 / d_AAVGCrLimHiCrOpnTR02), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_02 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_02 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR03 := COUNT(CreditReportTradeline(u_group03 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR03 := SUM(CreditReportTradeline(u_group03 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR03 := MAP(d_AAVGCrLimHiCrOpnTR03 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR03 / d_AAVGCrLimHiCrOpnTR03), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_03 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_03 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR04 := COUNT(CreditReportTradeline(u_group04 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR04 := SUM(CreditReportTradeline(u_group04 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR04 := MAP(d_AAVGCrLimHiCrOpnTR04 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR04 / d_AAVGCrLimHiCrOpnTR04), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_04 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_04 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR05 := COUNT(CreditReportTradeline(u_group05 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR05 := SUM(CreditReportTradeline(u_group05 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR05 := MAP(d_AAVGCrLimHiCrOpnTR05 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR05 / d_AAVGCrLimHiCrOpnTR05), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_05 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_05 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR06 := COUNT(CreditReportTradeline(u_group06 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR06 := SUM(CreditReportTradeline(u_group06 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR06 := MAP(d_AAVGCrLimHiCrOpnTR06 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR06 / d_AAVGCrLimHiCrOpnTR06), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_06 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_06 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR07 := COUNT(CreditReportTradeline(u_group07 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR07 := SUM(CreditReportTradeline(u_group07 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR07 := MAP(d_AAVGCrLimHiCrOpnTR07 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR07 / d_AAVGCrLimHiCrOpnTR07), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_07 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_07 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR08 := COUNT(CreditReportTradeline(u_group08 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR08 := SUM(CreditReportTradeline(u_group08 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR08 := MAP(d_AAVGCrLimHiCrOpnTR08 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR08 / d_AAVGCrLimHiCrOpnTR08), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_08 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_08 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR09 := COUNT(CreditReportTradeline(u_group09 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR09 := SUM(CreditReportTradeline(u_group09 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR09 := MAP(d_AAVGCrLimHiCrOpnTR09 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR09 / d_AAVGCrLimHiCrOpnTR09), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_09 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_09 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR10 := COUNT(CreditReportTradeline(u_group10 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR10 := SUM(CreditReportTradeline(u_group10 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR10 := MAP(d_AAVGCrLimHiCrOpnTR10 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR10 / d_AAVGCrLimHiCrOpnTR10), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_10 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_10 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR11 := COUNT(CreditReportTradeline(u_group11 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR11 := SUM(CreditReportTradeline(u_group11 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR11 := MAP(d_AAVGCrLimHiCrOpnTR11 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR11 / d_AAVGCrLimHiCrOpnTR11), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_11 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_11 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR12 := COUNT(CreditReportTradeline(u_group12 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR12 := SUM(CreditReportTradeline(u_group12 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR12 := MAP(d_AAVGCrLimHiCrOpnTR12 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR12 / d_AAVGCrLimHiCrOpnTR12), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_12 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_12 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR13 := COUNT(CreditReportTradeline(u_group13 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR13 := SUM(CreditReportTradeline(u_group13 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR13 := MAP(d_AAVGCrLimHiCrOpnTR13 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR13 / d_AAVGCrLimHiCrOpnTR13), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_13 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_13 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR14 := COUNT(CreditReportTradeline(u_group14 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR14 := SUM(CreditReportTradeline(u_group14 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR14 := MAP(d_AAVGCrLimHiCrOpnTR14 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR14 / d_AAVGCrLimHiCrOpnTR14), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_14 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_14 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR15 := COUNT(CreditReportTradeline(u_group15 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR15 := SUM(CreditReportTradeline(u_group15 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR15 := MAP(d_AAVGCrLimHiCrOpnTR15 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR15 / d_AAVGCrLimHiCrOpnTR15), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_15 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_15 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR16 := COUNT(CreditReportTradeline(u_group16 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR16 := SUM(CreditReportTradeline(u_group16 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR16 := MAP(d_AAVGCrLimHiCrOpnTR16 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR16 / d_AAVGCrLimHiCrOpnTR16), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_16 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_16 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR17 := COUNT(CreditReportTradeline(u_group17 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR17 := SUM(CreditReportTradeline(u_group17 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR17 := MAP(d_AAVGCrLimHiCrOpnTR17 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR17 / d_AAVGCrLimHiCrOpnTR17), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_17 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_17 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR18 := COUNT(CreditReportTradeline(u_group18 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR18 := SUM(CreditReportTradeline(u_group18 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR18 := MAP(d_AAVGCrLimHiCrOpnTR18 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR18 / d_AAVGCrLimHiCrOpnTR18), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_18 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_18 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR19 := COUNT(CreditReportTradeline(u_group19 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR19 := SUM(CreditReportTradeline(u_group19 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR19 := MAP(d_AAVGCrLimHiCrOpnTR19 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR19 / d_AAVGCrLimHiCrOpnTR19), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_19 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_19 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR20 := COUNT(CreditReportTradeline(u_group20 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR20 := SUM(CreditReportTradeline(u_group20 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR20 := MAP(d_AAVGCrLimHiCrOpnTR20 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR20 / d_AAVGCrLimHiCrOpnTR20), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_20 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_20 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => d_AAVGCrLimHiCrOpnTR21 := COUNT(CreditReportTradeline(u_group21 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0));
CreditReport: => n_AAVGCrLimHiCrOpnTR21 := SUM(CreditReportTradeline(u_group21 AND NOT G3AllExcluded AND NOT G6Closed AND GCreditLimitORHighCredit > 0),GCreditLimitORHighCredit);
CreditReport: => AAVGCrLimHiCrOpnTR21 := MAP(d_AAVGCrLimHiCrOpnTR21 > 0 => MIN(ROUND(n_AAVGCrLimHiCrOpnTR21 / d_AAVGCrLimHiCrOpnTR21), CAP_9999999992),
           u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
           u_TR_CntrlLevel2_21 = 0 => DEFAULT_L2,
           u_TR_CntrlLevel33_21 = 0 => DEFAULT_L3, DEFAULT_L4);
											


// P_CrLimHiCrMaxToOldest:
CreditReport: => PCrLimHiCrMaxToOldest01 := MAP(ACrLimHiCrOldestTR01 > 0 AND AMaxCrLimHiCr01 > 0 => MIN(ROUND2(AMaxCrLimHiCr01 * 100 / ACrLimHiCrOldestTR01), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR01 < 0 => ACrLimHiCrOldestTR01,
												AMaxCrLimHiCr01 < 0 => AMaxCrLimHiCr01,
												ACrLimHiCrOldestTR01 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr01 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest02 := MAP(ACrLimHiCrOldestTR02 > 0 AND AMaxCrLimHiCr02 > 0 => MIN(ROUND2(AMaxCrLimHiCr02 * 100 / ACrLimHiCrOldestTR02), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR02 < 0 => ACrLimHiCrOldestTR02,
												AMaxCrLimHiCr02 < 0 => AMaxCrLimHiCr02,
												ACrLimHiCrOldestTR02 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr02 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest03 := MAP(ACrLimHiCrOldestTR03 > 0 AND AMaxCrLimHiCr03 > 0 => MIN(ROUND2(AMaxCrLimHiCr03 * 100 / ACrLimHiCrOldestTR03), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR03 < 0 => ACrLimHiCrOldestTR03,
												AMaxCrLimHiCr03 < 0 => AMaxCrLimHiCr03,
												ACrLimHiCrOldestTR03 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr03 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest04 := MAP(ACrLimHiCrOldestTR04 > 0 AND AMaxCrLimHiCr04 > 0 => MIN(ROUND2(AMaxCrLimHiCr04 * 100 / ACrLimHiCrOldestTR04), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR04 < 0 => ACrLimHiCrOldestTR04,
												AMaxCrLimHiCr04 < 0 => AMaxCrLimHiCr04,
												ACrLimHiCrOldestTR04 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr04 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest05 := MAP(ACrLimHiCrOldestTR05 > 0 AND AMaxCrLimHiCr05 > 0 => MIN(ROUND2(AMaxCrLimHiCr05 * 100 / ACrLimHiCrOldestTR05), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR05 < 0 => ACrLimHiCrOldestTR05,
												AMaxCrLimHiCr05 < 0 => AMaxCrLimHiCr05,
												ACrLimHiCrOldestTR05 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr05 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest06 := MAP(ACrLimHiCrOldestTR06 > 0 AND AMaxCrLimHiCr06 > 0 => MIN(ROUND2(AMaxCrLimHiCr06 * 100 / ACrLimHiCrOldestTR06), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR06 < 0 => ACrLimHiCrOldestTR06,
												AMaxCrLimHiCr06 < 0 => AMaxCrLimHiCr06,
												ACrLimHiCrOldestTR06 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr06 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest07 := MAP(ACrLimHiCrOldestTR07 > 0 AND AMaxCrLimHiCr07 > 0 => MIN(ROUND2(AMaxCrLimHiCr07 * 100 / ACrLimHiCrOldestTR07), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR07 < 0 => ACrLimHiCrOldestTR07,
												AMaxCrLimHiCr07 < 0 => AMaxCrLimHiCr07,
												ACrLimHiCrOldestTR07 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr07 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest08 := MAP(ACrLimHiCrOldestTR08 > 0 AND AMaxCrLimHiCr08 > 0 => MIN(ROUND2(AMaxCrLimHiCr08 * 100 / ACrLimHiCrOldestTR08), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR08 < 0 => ACrLimHiCrOldestTR08,
												AMaxCrLimHiCr08 < 0 => AMaxCrLimHiCr08,
												ACrLimHiCrOldestTR08 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr08 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest09 := MAP(ACrLimHiCrOldestTR09 > 0 AND AMaxCrLimHiCr09 > 0 => MIN(ROUND2(AMaxCrLimHiCr09 * 100 / ACrLimHiCrOldestTR09), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR09 < 0 => ACrLimHiCrOldestTR09,
												AMaxCrLimHiCr09 < 0 => AMaxCrLimHiCr09,
												ACrLimHiCrOldestTR09 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr09 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest10 := MAP(ACrLimHiCrOldestTR10 > 0 AND AMaxCrLimHiCr10 > 0 => MIN(ROUND2(AMaxCrLimHiCr10 * 100 / ACrLimHiCrOldestTR10), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR10 < 0 => ACrLimHiCrOldestTR10,
												AMaxCrLimHiCr10 < 0 => AMaxCrLimHiCr10,
												ACrLimHiCrOldestTR10 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr10 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest11 := MAP(ACrLimHiCrOldestTR11 > 0 AND AMaxCrLimHiCr11 > 0 => MIN(ROUND2(AMaxCrLimHiCr11 * 100 / ACrLimHiCrOldestTR11), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR11 < 0 => ACrLimHiCrOldestTR11,
												AMaxCrLimHiCr11 < 0 => AMaxCrLimHiCr11,
												ACrLimHiCrOldestTR11 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr11 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest12 := MAP(ACrLimHiCrOldestTR12 > 0 AND AMaxCrLimHiCr12 > 0 => MIN(ROUND2(AMaxCrLimHiCr12 * 100 / ACrLimHiCrOldestTR12), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR12 < 0 => ACrLimHiCrOldestTR12,
												AMaxCrLimHiCr12 < 0 => AMaxCrLimHiCr12,
												ACrLimHiCrOldestTR12 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr12 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest13 := MAP(ACrLimHiCrOldestTR13 > 0 AND AMaxCrLimHiCr13 > 0 => MIN(ROUND2(AMaxCrLimHiCr13 * 100 / ACrLimHiCrOldestTR13), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR13 < 0 => ACrLimHiCrOldestTR13,
												AMaxCrLimHiCr13 < 0 => AMaxCrLimHiCr13,
												ACrLimHiCrOldestTR13 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr13 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest14 := MAP(ACrLimHiCrOldestTR14 > 0 AND AMaxCrLimHiCr14 > 0 => MIN(ROUND2(AMaxCrLimHiCr14 * 100 / ACrLimHiCrOldestTR14), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR14 < 0 => ACrLimHiCrOldestTR14,
												AMaxCrLimHiCr14 < 0 => AMaxCrLimHiCr14,
												ACrLimHiCrOldestTR14 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr14 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest15 := MAP(ACrLimHiCrOldestTR15 > 0 AND AMaxCrLimHiCr15 > 0 => MIN(ROUND2(AMaxCrLimHiCr15 * 100 / ACrLimHiCrOldestTR15), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR15 < 0 => ACrLimHiCrOldestTR15,
												AMaxCrLimHiCr15 < 0 => AMaxCrLimHiCr15,
												ACrLimHiCrOldestTR15 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr15 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest16 := MAP(ACrLimHiCrOldestTR16 > 0 AND AMaxCrLimHiCr16 > 0 => MIN(ROUND2(AMaxCrLimHiCr16 * 100 / ACrLimHiCrOldestTR16), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR16 < 0 => ACrLimHiCrOldestTR16,
												AMaxCrLimHiCr16 < 0 => AMaxCrLimHiCr16,
												ACrLimHiCrOldestTR16 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr16 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest17 := MAP(ACrLimHiCrOldestTR17 > 0 AND AMaxCrLimHiCr17 > 0 => MIN(ROUND2(AMaxCrLimHiCr17 * 100 / ACrLimHiCrOldestTR17), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR17 < 0 => ACrLimHiCrOldestTR17,
												AMaxCrLimHiCr17 < 0 => AMaxCrLimHiCr17,
												ACrLimHiCrOldestTR17 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr17 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest18 := MAP(ACrLimHiCrOldestTR18 > 0 AND AMaxCrLimHiCr18 > 0 => MIN(ROUND2(AMaxCrLimHiCr18 * 100 / ACrLimHiCrOldestTR18), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR18 < 0 => ACrLimHiCrOldestTR18,
												AMaxCrLimHiCr18 < 0 => AMaxCrLimHiCr18,
												ACrLimHiCrOldestTR18 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr18 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest19 := MAP(ACrLimHiCrOldestTR19 > 0 AND AMaxCrLimHiCr19 > 0 => MIN(ROUND2(AMaxCrLimHiCr19 * 100 / ACrLimHiCrOldestTR19), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR19 < 0 => ACrLimHiCrOldestTR19,
												AMaxCrLimHiCr19 < 0 => AMaxCrLimHiCr19,
												ACrLimHiCrOldestTR19 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr19 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest20 := MAP(ACrLimHiCrOldestTR20 > 0 AND AMaxCrLimHiCr20 > 0 => MIN(ROUND2(AMaxCrLimHiCr20 * 100 / ACrLimHiCrOldestTR20), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR20 < 0 => ACrLimHiCrOldestTR20,
												AMaxCrLimHiCr20 < 0 => AMaxCrLimHiCr20,
												ACrLimHiCrOldestTR20 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr20 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => PCrLimHiCrMaxToOldest21 := MAP(ACrLimHiCrOldestTR21 > 0 AND AMaxCrLimHiCr21 > 0 => MIN(ROUND2(AMaxCrLimHiCr21 * 100 / ACrLimHiCrOldestTR21), CAP_999_DOT_92),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												ACrLimHiCrOldestTR21 < 0 => ACrLimHiCrOldestTR21,
												AMaxCrLimHiCr21 < 0 => AMaxCrLimHiCr21,
												ACrLimHiCrOldestTR21 = 0 => DEFAULT_L4,
												AMaxCrLimHiCr21 = 0 => DEFAULT_L4, DEFAULT_TEST);

// A_TotClosedBalance:
CreditReport: => ATotalClosedBalance01 := MAP(ATotalTradeBalance01 >= 0 AND ATradeOpnBalance01 >= 0 AND ATradeOpnBalance01 <= ATotalTradeBalance01 => MIN(ATotalTradeBalance01 - ATradeOpnBalance01, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance01 < 0 => ATotalTradeBalance01,
											0);
CreditReport: => ATotalClosedBalance02 := MAP(ATotalTradeBalance02 >= 0 AND ATradeOpnBalance02 >= 0 AND ATradeOpnBalance02 <= ATotalTradeBalance02 => MIN(ATotalTradeBalance02 - ATradeOpnBalance02, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance02 < 0 => ATotalTradeBalance02,
											0);
CreditReport: => ATotalClosedBalance03 := MAP(ATotalTradeBalance03 >= 0 AND ATradeOpnBalance03 >= 0 AND ATradeOpnBalance03 <= ATotalTradeBalance03 => MIN(ATotalTradeBalance03 - ATradeOpnBalance03, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance03 < 0 => ATotalTradeBalance03,
											0);
CreditReport: => ATotalClosedBalance04 := MAP(ATotalTradeBalance04 >= 0 AND ATradeOpnBalance04 >= 0 AND ATradeOpnBalance04 <= ATotalTradeBalance04 => MIN(ATotalTradeBalance04 - ATradeOpnBalance04, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance04 < 0 => ATotalTradeBalance04,
											0);
CreditReport: => ATotalClosedBalance05 := MAP(ATotalTradeBalance05 >= 0 AND ATradeOpnBalance05 >= 0 AND ATradeOpnBalance05 <= ATotalTradeBalance05 => MIN(ATotalTradeBalance05 - ATradeOpnBalance05, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance05 < 0 => ATotalTradeBalance05,
											0);
CreditReport: => ATotalClosedBalance06 := MAP(ATotalTradeBalance06 >= 0 AND ATradeOpnBalance06 >= 0 AND ATradeOpnBalance06 <= ATotalTradeBalance06 => MIN(ATotalTradeBalance06 - ATradeOpnBalance06, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance06 < 0 => ATotalTradeBalance06,
											0);
CreditReport: => ATotalClosedBalance07 := MAP(ATotalTradeBalance07 >= 0 AND ATradeOpnBalance07 >= 0 AND ATradeOpnBalance07 <= ATotalTradeBalance07 => MIN(ATotalTradeBalance07 - ATradeOpnBalance07, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance07 < 0 => ATotalTradeBalance07,
											0);
CreditReport: => ATotalClosedBalance08 := MAP(ATotalTradeBalance08 >= 0 AND ATradeOpnBalance08 >= 0 AND ATradeOpnBalance08 <= ATotalTradeBalance08 => MIN(ATotalTradeBalance08 - ATradeOpnBalance08, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance08 < 0 => ATotalTradeBalance08,
											0);
CreditReport: => ATotalClosedBalance09 := MAP(ATotalTradeBalance09 >= 0 AND ATradeOpnBalance09 >= 0 AND ATradeOpnBalance09 <= ATotalTradeBalance09 => MIN(ATotalTradeBalance09 - ATradeOpnBalance09, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance09 < 0 => ATotalTradeBalance09,
											0);
CreditReport: => ATotalClosedBalance10 := MAP(ATotalTradeBalance10 >= 0 AND ATradeOpnBalance10 >= 0 AND ATradeOpnBalance10 <= ATotalTradeBalance10 => MIN(ATotalTradeBalance10 - ATradeOpnBalance10, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance10 < 0 => ATotalTradeBalance10,
											0);
CreditReport: => ATotalClosedBalance11 := MAP(ATotalTradeBalance11 >= 0 AND ATradeOpnBalance11 >= 0 AND ATradeOpnBalance11 <= ATotalTradeBalance11 => MIN(ATotalTradeBalance11 - ATradeOpnBalance11, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance11 < 0 => ATotalTradeBalance11,
											0);
CreditReport: => ATotalClosedBalance12 := MAP(ATotalTradeBalance12 >= 0 AND ATradeOpnBalance12 >= 0 AND ATradeOpnBalance12 <= ATotalTradeBalance12 => MIN(ATotalTradeBalance12 - ATradeOpnBalance12, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance12 < 0 => ATotalTradeBalance12,
											0);
CreditReport: => ATotalClosedBalance13 := MAP(ATotalTradeBalance13 >= 0 AND ATradeOpnBalance13 >= 0 AND ATradeOpnBalance13 <= ATotalTradeBalance13 => MIN(ATotalTradeBalance13 - ATradeOpnBalance13, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance13 < 0 => ATotalTradeBalance13,
											0);
CreditReport: => ATotalClosedBalance14 := MAP(ATotalTradeBalance14 >= 0 AND ATradeOpnBalance14 >= 0 AND ATradeOpnBalance14 <= ATotalTradeBalance14 => MIN(ATotalTradeBalance14 - ATradeOpnBalance14, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance14 < 0 => ATotalTradeBalance14,
											0);
CreditReport: => ATotalClosedBalance15 := MAP(ATotalTradeBalance15 >= 0 AND ATradeOpnBalance15 >= 0 AND ATradeOpnBalance15 <= ATotalTradeBalance15 => MIN(ATotalTradeBalance15 - ATradeOpnBalance15, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance15 < 0 => ATotalTradeBalance15,
											0);
CreditReport: => ATotalClosedBalance16 := MAP(ATotalTradeBalance16 >= 0 AND ATradeOpnBalance16 >= 0 AND ATradeOpnBalance16 <= ATotalTradeBalance16 => MIN(ATotalTradeBalance16 - ATradeOpnBalance16, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance16 < 0 => ATotalTradeBalance16,
											0);
CreditReport: => ATotalClosedBalance17 := MAP(ATotalTradeBalance17 >= 0 AND ATradeOpnBalance17 >= 0 AND ATradeOpnBalance17 <= ATotalTradeBalance17 => MIN(ATotalTradeBalance17 - ATradeOpnBalance17, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance17 < 0 => ATotalTradeBalance17,
											0);
CreditReport: => ATotalClosedBalance18 := MAP(ATotalTradeBalance18 >= 0 AND ATradeOpnBalance18 >= 0 AND ATradeOpnBalance18 <= ATotalTradeBalance18 => MIN(ATotalTradeBalance18 - ATradeOpnBalance18, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance18 < 0 => ATotalTradeBalance18,
											0);
CreditReport: => ATotalClosedBalance19 := MAP(ATotalTradeBalance19 >= 0 AND ATradeOpnBalance19 >= 0 AND ATradeOpnBalance19 <= ATotalTradeBalance19 => MIN(ATotalTradeBalance19 - ATradeOpnBalance19, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance19 < 0 => ATotalTradeBalance19,
											0);
CreditReport: => ATotalClosedBalance20 := MAP(ATotalTradeBalance20 >= 0 AND ATradeOpnBalance20 >= 0 AND ATradeOpnBalance20 <= ATotalTradeBalance20 => MIN(ATotalTradeBalance20 - ATradeOpnBalance20, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance20 < 0 => ATotalTradeBalance20,
											0);
CreditReport: => ATotalClosedBalance21 := MAP(ATotalTradeBalance21 >= 0 AND ATradeOpnBalance21 >= 0 AND ATradeOpnBalance21 <= ATotalTradeBalance21 => MIN(ATotalTradeBalance21 - ATradeOpnBalance21, CAP_9999999992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											ATotalTradeBalance21 < 0 => ATotalTradeBalance21,
											0);

// Age_AvgTotalTrade:
// CreditReport: => tmp_MAvgTradeAge := ROUND(MTotalAgeAllTrades01/u_TR_CntrlLevel41o_01);
// CreditReport: => MAvgTradeAge01 := MAP(MTotalAgeAllTrades01 >= 0 AND u_TR_CntrlLevel41o_01 > 0 => MIN(tmp_MAvgTradeAge, CAP_9992),
                                       // u_TR_CntrlLevel1 => DEFAULT_L1,
																			 // CTotalTrades01 = 0 => DEFAULT_L2,
																			 // CTotalTrades01 < 0 => CTotalTrades01,
																			 // MTotalAgeAllTrades01 < 0 => MTotalAgeAllTrades01, DEFAULT_TEST);

CreditReport: => tmp_MAvgTradeAge01 := MIN(ROUND(MTotalAgeAllTrades01 / u_TR_CntrlLevel41o_01), CAP_9992);
CreditReport: => MAvgTradeAge01 := MAP(u_TR_CntrlLevel41o_01 > 0 AND MTotalAgeAllTrades01 >= 0 => tmp_MAvgTradeAge01,
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades01 < 0 => CTotalTrades01,
										MTotalAgeAllTrades01 < 0 => MTotalAgeAllTrades01, DEFAULT_TEST);
CreditReport: => MAvgTradeAge02 := MAP(u_TR_CntrlLevel41o_02 > 0 AND MTotalAgeAllTrades02 >= 0 => MIN(ROUND(MTotalAgeAllTrades02 / u_TR_CntrlLevel41o_02), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades02 = 0 => DEFAULT_L2,
										CTotalTrades02 < 0 => CTotalTrades02,
										MTotalAgeAllTrades02 < 0 => MTotalAgeAllTrades02, DEFAULT_TEST);
CreditReport: => MAvgTradeAge03 := MAP(u_TR_CntrlLevel41o_03 > 0 AND MTotalAgeAllTrades03 >= 0 => MIN(ROUND(MTotalAgeAllTrades03 / u_TR_CntrlLevel41o_03), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades03 = 0 => DEFAULT_L2,
										CTotalTrades03 < 0 => CTotalTrades03,
										MTotalAgeAllTrades03 < 0 => MTotalAgeAllTrades03, DEFAULT_TEST);
CreditReport: => MAvgTradeAge04 := MAP(u_TR_CntrlLevel41o_04 > 0 AND MTotalAgeAllTrades04 >= 0 => MIN(ROUND(MTotalAgeAllTrades04 / u_TR_CntrlLevel41o_04), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades04 = 0 => DEFAULT_L2,
										CTotalTrades04 < 0 => CTotalTrades04,
										MTotalAgeAllTrades04 < 0 => MTotalAgeAllTrades04, DEFAULT_TEST);
CreditReport: => MAvgTradeAge05 := MAP(u_TR_CntrlLevel41o_05 > 0 AND MTotalAgeAllTrades05 >= 0 => MIN(ROUND(MTotalAgeAllTrades05 / u_TR_CntrlLevel41o_05), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades05 = 0 => DEFAULT_L2,
										CTotalTrades05 < 0 => CTotalTrades05,
										MTotalAgeAllTrades05 < 0 => MTotalAgeAllTrades05, DEFAULT_TEST);
CreditReport: => MAvgTradeAge06 := MAP(u_TR_CntrlLevel41o_06 > 0 AND MTotalAgeAllTrades06 >= 0 => MIN(ROUND(MTotalAgeAllTrades06 / u_TR_CntrlLevel41o_06), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades06 = 0 => DEFAULT_L2,
										CTotalTrades06 < 0 => CTotalTrades06,
										MTotalAgeAllTrades06 < 0 => MTotalAgeAllTrades06, DEFAULT_TEST);
CreditReport: => MAvgTradeAge07 := MAP(u_TR_CntrlLevel41o_07 > 0 AND MTotalAgeAllTrades07 >= 0 => MIN(ROUND(MTotalAgeAllTrades07 / u_TR_CntrlLevel41o_07), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades07 = 0 => DEFAULT_L2,
										CTotalTrades07 < 0 => CTotalTrades07,
										MTotalAgeAllTrades07 < 0 => MTotalAgeAllTrades07, DEFAULT_TEST);
CreditReport: => MAvgTradeAge08 := MAP(u_TR_CntrlLevel41o_08 > 0 AND MTotalAgeAllTrades08 >= 0 => MIN(ROUND(MTotalAgeAllTrades08 / u_TR_CntrlLevel41o_08), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades08 = 0 => DEFAULT_L2,
										CTotalTrades08 < 0 => CTotalTrades08,
										MTotalAgeAllTrades08 < 0 => MTotalAgeAllTrades08, DEFAULT_TEST);
CreditReport: => MAvgTradeAge09 := MAP(u_TR_CntrlLevel41o_09 > 0 AND MTotalAgeAllTrades09 >= 0 => MIN(ROUND(MTotalAgeAllTrades09 / u_TR_CntrlLevel41o_09), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades09 = 0 => DEFAULT_L2,
										CTotalTrades09 < 0 => CTotalTrades09,
										MTotalAgeAllTrades09 < 0 => MTotalAgeAllTrades09, DEFAULT_TEST);
CreditReport: => MAvgTradeAge10 := MAP(u_TR_CntrlLevel41o_10 > 0 AND MTotalAgeAllTrades10 >= 0 => MIN(ROUND(MTotalAgeAllTrades10 / u_TR_CntrlLevel41o_10), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades10 = 0 => DEFAULT_L2,
										CTotalTrades10 < 0 => CTotalTrades10,
										MTotalAgeAllTrades10 < 0 => MTotalAgeAllTrades10, DEFAULT_TEST);
CreditReport: => MAvgTradeAge11 := MAP(u_TR_CntrlLevel41o_11 > 0 AND MTotalAgeAllTrades11 >= 0 => MIN(ROUND(MTotalAgeAllTrades11 / u_TR_CntrlLevel41o_11), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades11 = 0 => DEFAULT_L2,
										CTotalTrades11 < 0 => CTotalTrades11,
										MTotalAgeAllTrades11 < 0 => MTotalAgeAllTrades11, DEFAULT_TEST);
CreditReport: => MAvgTradeAge12 := MAP(u_TR_CntrlLevel41o_12 > 0 AND MTotalAgeAllTrades12 >= 0 => MIN(ROUND(MTotalAgeAllTrades12 / u_TR_CntrlLevel41o_12), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades12 = 0 => DEFAULT_L2,
										CTotalTrades12 < 0 => CTotalTrades12,
										MTotalAgeAllTrades12 < 0 => MTotalAgeAllTrades12, DEFAULT_TEST);
CreditReport: => MAvgTradeAge13 := MAP(u_TR_CntrlLevel41o_13 > 0 AND MTotalAgeAllTrades13 >= 0 => MIN(ROUND(MTotalAgeAllTrades13 / u_TR_CntrlLevel41o_13), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades13 = 0 => DEFAULT_L2,
										CTotalTrades13 < 0 => CTotalTrades13,
										MTotalAgeAllTrades13 < 0 => MTotalAgeAllTrades13, DEFAULT_TEST);
CreditReport: => MAvgTradeAge14 := MAP(u_TR_CntrlLevel41o_14 > 0 AND MTotalAgeAllTrades14 >= 0 => MIN(ROUND(MTotalAgeAllTrades14 / u_TR_CntrlLevel41o_14), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades14 = 0 => DEFAULT_L2,
										CTotalTrades14 < 0 => CTotalTrades14,
										MTotalAgeAllTrades14 < 0 => MTotalAgeAllTrades14, DEFAULT_TEST);
CreditReport: => MAvgTradeAge15 := MAP(u_TR_CntrlLevel41o_15 > 0 AND MTotalAgeAllTrades15 >= 0 => MIN(ROUND(MTotalAgeAllTrades15 / u_TR_CntrlLevel41o_15), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades15 = 0 => DEFAULT_L2,
										CTotalTrades15 < 0 => CTotalTrades15,
										MTotalAgeAllTrades15 < 0 => MTotalAgeAllTrades15, DEFAULT_TEST);
CreditReport: => MAvgTradeAge16 := MAP(u_TR_CntrlLevel41o_16 > 0 AND MTotalAgeAllTrades16 >= 0 => MIN(ROUND(MTotalAgeAllTrades16 / u_TR_CntrlLevel41o_16), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades16 = 0 => DEFAULT_L2,
										CTotalTrades16 < 0 => CTotalTrades16,
										MTotalAgeAllTrades16 < 0 => MTotalAgeAllTrades16, DEFAULT_TEST);
CreditReport: => MAvgTradeAge17 := MAP(u_TR_CntrlLevel41o_17 > 0 AND MTotalAgeAllTrades17 >= 0 => MIN(ROUND(MTotalAgeAllTrades17 / u_TR_CntrlLevel41o_17), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades17 = 0 => DEFAULT_L2,
										CTotalTrades17 < 0 => CTotalTrades17,
										MTotalAgeAllTrades17 < 0 => MTotalAgeAllTrades17, DEFAULT_TEST);
CreditReport: => MAvgTradeAge18 := MAP(u_TR_CntrlLevel41o_18 > 0 AND MTotalAgeAllTrades18 >= 0 => MIN(ROUND(MTotalAgeAllTrades18 / u_TR_CntrlLevel41o_18), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades18 = 0 => DEFAULT_L2,
										CTotalTrades18 < 0 => CTotalTrades18,
										MTotalAgeAllTrades18 < 0 => MTotalAgeAllTrades18, DEFAULT_TEST);
CreditReport: => MAvgTradeAge19 := MAP(u_TR_CntrlLevel41o_19 > 0 AND MTotalAgeAllTrades19 >= 0 => MIN(ROUND(MTotalAgeAllTrades19 / u_TR_CntrlLevel41o_19), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades19 = 0 => DEFAULT_L2,
										CTotalTrades19 < 0 => CTotalTrades19,
										MTotalAgeAllTrades19 < 0 => MTotalAgeAllTrades19, DEFAULT_TEST);
CreditReport: => MAvgTradeAge20 := MAP(u_TR_CntrlLevel41o_20 > 0 AND MTotalAgeAllTrades20 >= 0 => MIN(ROUND(MTotalAgeAllTrades20 / u_TR_CntrlLevel41o_20), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades20 = 0 => DEFAULT_L2,
										CTotalTrades20 < 0 => CTotalTrades20,
										MTotalAgeAllTrades20 < 0 => MTotalAgeAllTrades20, DEFAULT_TEST);
CreditReport: => MAvgTradeAge21 := MAP(u_TR_CntrlLevel41o_21 > 0 AND MTotalAgeAllTrades21 >= 0 => MIN(ROUND(MTotalAgeAllTrades21 / u_TR_CntrlLevel41o_21), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalTrades21 = 0 => DEFAULT_L2,
										CTotalTrades21 < 0 => CTotalTrades21,
										MTotalAgeAllTrades21 < 0 => MTotalAgeAllTrades21, DEFAULT_TEST);

// Age_AvgOpnTradeAge:
CreditReport: => tmp_MAvgOpnTradeAge01 := MIN(ROUND(MTotalAgeOpnTrades01 / u_TR_CntrlLevel43o_01), CAP_9992);
CreditReport: => MAvgOpnTradeAge01 := MAP(u_TR_CntrlLevel43o_01 > 0 AND MTotalAgeOpnTrades01 >= 0 => tmp_MAvgOpnTradeAge01,
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades01 < 0 => CTotalOpnTrades01,
										CTotalOpnTrades01 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades01 < 0 => MTotalAgeOpnTrades01, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge02 := MAP(u_TR_CntrlLevel43o_02 > 0 AND MTotalAgeOpnTrades02 >= 0 => MIN(ROUND(MTotalAgeOpnTrades02 / u_TR_CntrlLevel43o_02), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades02 < 0 => CTotalOpnTrades02,
										CTotalOpnTrades02 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades02 < 0 => MTotalAgeOpnTrades02, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge03 := MAP(u_TR_CntrlLevel43o_03 > 0 AND MTotalAgeOpnTrades03 >= 0 => MIN(ROUND(MTotalAgeOpnTrades03 / u_TR_CntrlLevel43o_03), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades03 < 0 => CTotalOpnTrades03,
										CTotalOpnTrades03 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades03 < 0 => MTotalAgeOpnTrades03, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge04 := MAP(u_TR_CntrlLevel43o_04 > 0 AND MTotalAgeOpnTrades04 >= 0 => MIN(ROUND(MTotalAgeOpnTrades04 / u_TR_CntrlLevel43o_04), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades04 < 0 => CTotalOpnTrades04,
										CTotalOpnTrades04 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades04 < 0 => MTotalAgeOpnTrades04, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge05 := MAP(u_TR_CntrlLevel43o_05 > 0 AND MTotalAgeOpnTrades05 >= 0 => MIN(ROUND(MTotalAgeOpnTrades05 / u_TR_CntrlLevel43o_05), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades05 < 0 => CTotalOpnTrades05,
										CTotalOpnTrades05 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades05 < 0 => MTotalAgeOpnTrades05, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge06 := MAP(u_TR_CntrlLevel43o_06 > 0 AND MTotalAgeOpnTrades06 >= 0 => MIN(ROUND(MTotalAgeOpnTrades06 / u_TR_CntrlLevel43o_06), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades06 < 0 => CTotalOpnTrades06,
										CTotalOpnTrades06 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades06 < 0 => MTotalAgeOpnTrades06, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge07 := MAP(u_TR_CntrlLevel43o_07 > 0 AND MTotalAgeOpnTrades07 >= 0 => MIN(ROUND(MTotalAgeOpnTrades07 / u_TR_CntrlLevel43o_07), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades07 < 0 => CTotalOpnTrades07,
										CTotalOpnTrades07 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades07 < 0 => MTotalAgeOpnTrades07, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge08 := MAP(u_TR_CntrlLevel43o_08 > 0 AND MTotalAgeOpnTrades08 >= 0 => MIN(ROUND(MTotalAgeOpnTrades08 / u_TR_CntrlLevel43o_08), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades08 < 0 => CTotalOpnTrades08,
										CTotalOpnTrades08 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades08 < 0 => MTotalAgeOpnTrades08, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge09 := MAP(u_TR_CntrlLevel43o_09 > 0 AND MTotalAgeOpnTrades09 >= 0 => MIN(ROUND(MTotalAgeOpnTrades09 / u_TR_CntrlLevel43o_09), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades09 < 0 => CTotalOpnTrades09,
										CTotalOpnTrades09 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades09 < 0 => MTotalAgeOpnTrades09, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge10 := MAP(u_TR_CntrlLevel43o_10 > 0 AND MTotalAgeOpnTrades10 >= 0 => MIN(ROUND(MTotalAgeOpnTrades10 / u_TR_CntrlLevel43o_10), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades10 < 0 => CTotalOpnTrades10,
										CTotalOpnTrades10 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades10 < 0 => MTotalAgeOpnTrades10, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge11 := MAP(u_TR_CntrlLevel43o_11 > 0 AND MTotalAgeOpnTrades11 >= 0 => MIN(ROUND(MTotalAgeOpnTrades11 / u_TR_CntrlLevel43o_11), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades11 < 0 => CTotalOpnTrades11,
										CTotalOpnTrades11 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades11 < 0 => MTotalAgeOpnTrades11, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge12 := MAP(u_TR_CntrlLevel43o_12 > 0 AND MTotalAgeOpnTrades12 >= 0 => MIN(ROUND(MTotalAgeOpnTrades12 / u_TR_CntrlLevel43o_12), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades12 < 0 => CTotalOpnTrades12,
										CTotalOpnTrades12 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades12 < 0 => MTotalAgeOpnTrades12, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge13 := MAP(u_TR_CntrlLevel43o_13 > 0 AND MTotalAgeOpnTrades13 >= 0 => MIN(ROUND(MTotalAgeOpnTrades13 / u_TR_CntrlLevel43o_13), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades13 < 0 => CTotalOpnTrades13,
										CTotalOpnTrades13 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades13 < 0 => MTotalAgeOpnTrades13, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge14 := MAP(u_TR_CntrlLevel43o_14 > 0 AND MTotalAgeOpnTrades14 >= 0 => MIN(ROUND(MTotalAgeOpnTrades14 / u_TR_CntrlLevel43o_14), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades14 < 0 => CTotalOpnTrades14,
										CTotalOpnTrades14 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades14 < 0 => MTotalAgeOpnTrades14, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge15 := MAP(u_TR_CntrlLevel43o_15 > 0 AND MTotalAgeOpnTrades15 >= 0 => MIN(ROUND(MTotalAgeOpnTrades15 / u_TR_CntrlLevel43o_15), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades15 < 0 => CTotalOpnTrades15,
										CTotalOpnTrades15 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades15 < 0 => MTotalAgeOpnTrades15, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge16 := MAP(u_TR_CntrlLevel43o_16 > 0 AND MTotalAgeOpnTrades16 >= 0 => MIN(ROUND(MTotalAgeOpnTrades16 / u_TR_CntrlLevel43o_16), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades16 < 0 => CTotalOpnTrades16,
										CTotalOpnTrades16 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades16 < 0 => MTotalAgeOpnTrades16, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge17 := MAP(u_TR_CntrlLevel43o_17 > 0 AND MTotalAgeOpnTrades17 >= 0 => MIN(ROUND(MTotalAgeOpnTrades17 / u_TR_CntrlLevel43o_17), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades17 < 0 => CTotalOpnTrades17,
										CTotalOpnTrades17 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades17 < 0 => MTotalAgeOpnTrades17, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge18 := MAP(u_TR_CntrlLevel43o_18 > 0 AND MTotalAgeOpnTrades18 >= 0 => MIN(ROUND(MTotalAgeOpnTrades18 / u_TR_CntrlLevel43o_18), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades18 < 0 => CTotalOpnTrades18,
										CTotalOpnTrades18 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades18 < 0 => MTotalAgeOpnTrades18, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge19 := MAP(u_TR_CntrlLevel43o_19 > 0 AND MTotalAgeOpnTrades19 >= 0 => MIN(ROUND(MTotalAgeOpnTrades19 / u_TR_CntrlLevel43o_19), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades19 < 0 => CTotalOpnTrades19,
										CTotalOpnTrades19 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades19 < 0 => MTotalAgeOpnTrades19, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge20 := MAP(u_TR_CntrlLevel43o_20 > 0 AND MTotalAgeOpnTrades20 >= 0 => MIN(ROUND(MTotalAgeOpnTrades20 / u_TR_CntrlLevel43o_20), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades20 < 0 => CTotalOpnTrades20,
										CTotalOpnTrades20 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades20 < 0 => MTotalAgeOpnTrades20, DEFAULT_TEST);
CreditReport: => MAvgOpnTradeAge21 := MAP(u_TR_CntrlLevel43o_21 > 0 AND MTotalAgeOpnTrades21 >= 0 => MIN(ROUND(MTotalAgeOpnTrades21 / u_TR_CntrlLevel43o_21), CAP_9992),
										u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										CTotalOpnTrades21 < 0 => CTotalOpnTrades21,
										CTotalOpnTrades21 = 0 => DEFAULT_L3,
										MTotalAgeOpnTrades21 < 0 => MTotalAgeOpnTrades21, DEFAULT_TEST);

// Age_AvgLifeVlntryClosed:
CreditReport: => MAvgLifeVlntryClosed01 := MAP(CTotalVlntryClosedTrades01 > 0 AND MTotLifeVlntryClosedTrades01 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades01 / CTotalVlntryClosedTrades01), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades01 < 0 => CTotalVlntryClosedTrades01,
												CTotalVlntryClosedTrades01 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades01 < 0 => MTotLifeVlntryClosedTrades01, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed02 := MAP(CTotalVlntryClosedTrades02 > 0 AND MTotLifeVlntryClosedTrades02 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades02 / CTotalVlntryClosedTrades02), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades02 < 0 => CTotalVlntryClosedTrades02,
												CTotalVlntryClosedTrades02 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades02 < 0 => MTotLifeVlntryClosedTrades02, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed03 := MAP(CTotalVlntryClosedTrades03 > 0 AND MTotLifeVlntryClosedTrades03 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades03 / CTotalVlntryClosedTrades03), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades03 < 0 => CTotalVlntryClosedTrades03,
												CTotalVlntryClosedTrades03 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades03 < 0 => MTotLifeVlntryClosedTrades03, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed04 := MAP(CTotalVlntryClosedTrades04 > 0 AND MTotLifeVlntryClosedTrades04 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades04 / CTotalVlntryClosedTrades04), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades04 < 0 => CTotalVlntryClosedTrades04,
												CTotalVlntryClosedTrades04 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades04 < 0 => MTotLifeVlntryClosedTrades04, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed05 := MAP(CTotalVlntryClosedTrades05 > 0 AND MTotLifeVlntryClosedTrades05 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades05 / CTotalVlntryClosedTrades05), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades05 < 0 => CTotalVlntryClosedTrades05,
												CTotalVlntryClosedTrades05 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades05 < 0 => MTotLifeVlntryClosedTrades05, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed06 := MAP(CTotalVlntryClosedTrades06 > 0 AND MTotLifeVlntryClosedTrades06 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades06 / CTotalVlntryClosedTrades06), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades06 < 0 => CTotalVlntryClosedTrades06,
												CTotalVlntryClosedTrades06 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades06 < 0 => MTotLifeVlntryClosedTrades06, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed07 := MAP(CTotalVlntryClosedTrades07 > 0 AND MTotLifeVlntryClosedTrades07 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades07 / CTotalVlntryClosedTrades07), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades07 < 0 => CTotalVlntryClosedTrades07,
												CTotalVlntryClosedTrades07 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades07 < 0 => MTotLifeVlntryClosedTrades07, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed08 := MAP(CTotalVlntryClosedTrades08 > 0 AND MTotLifeVlntryClosedTrades08 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades08 / CTotalVlntryClosedTrades08), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades08 < 0 => CTotalVlntryClosedTrades08,
												CTotalVlntryClosedTrades08 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades08 < 0 => MTotLifeVlntryClosedTrades08, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed09 := MAP(CTotalVlntryClosedTrades09 > 0 AND MTotLifeVlntryClosedTrades09 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades09 / CTotalVlntryClosedTrades09), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades09 < 0 => CTotalVlntryClosedTrades09,
												CTotalVlntryClosedTrades09 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades09 < 0 => MTotLifeVlntryClosedTrades09, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed10 := MAP(CTotalVlntryClosedTrades10 > 0 AND MTotLifeVlntryClosedTrades10 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades10 / CTotalVlntryClosedTrades10), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades10 < 0 => CTotalVlntryClosedTrades10,
												CTotalVlntryClosedTrades10 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades10 < 0 => MTotLifeVlntryClosedTrades10, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed11 := MAP(CTotalVlntryClosedTrades11 > 0 AND MTotLifeVlntryClosedTrades11 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades11 / CTotalVlntryClosedTrades11), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades11 < 0 => CTotalVlntryClosedTrades11,
												CTotalVlntryClosedTrades11 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades11 < 0 => MTotLifeVlntryClosedTrades11, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed12 := MAP(CTotalVlntryClosedTrades12 > 0 AND MTotLifeVlntryClosedTrades12 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades12 / CTotalVlntryClosedTrades12), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades12 < 0 => CTotalVlntryClosedTrades12,
												CTotalVlntryClosedTrades12 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades12 < 0 => MTotLifeVlntryClosedTrades12, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed13 := MAP(CTotalVlntryClosedTrades13 > 0 AND MTotLifeVlntryClosedTrades13 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades13 / CTotalVlntryClosedTrades13), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades13 < 0 => CTotalVlntryClosedTrades13,
												CTotalVlntryClosedTrades13 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades13 < 0 => MTotLifeVlntryClosedTrades13, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed14 := MAP(CTotalVlntryClosedTrades14 > 0 AND MTotLifeVlntryClosedTrades14 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades14 / CTotalVlntryClosedTrades14), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades14 < 0 => CTotalVlntryClosedTrades14,
												CTotalVlntryClosedTrades14 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades14 < 0 => MTotLifeVlntryClosedTrades14, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed15 := MAP(CTotalVlntryClosedTrades15 > 0 AND MTotLifeVlntryClosedTrades15 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades15 / CTotalVlntryClosedTrades15), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades15 < 0 => CTotalVlntryClosedTrades15,
												CTotalVlntryClosedTrades15 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades15 < 0 => MTotLifeVlntryClosedTrades15, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed16 := MAP(CTotalVlntryClosedTrades16 > 0 AND MTotLifeVlntryClosedTrades16 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades16 / CTotalVlntryClosedTrades16), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades16 < 0 => CTotalVlntryClosedTrades16,
												CTotalVlntryClosedTrades16 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades16 < 0 => MTotLifeVlntryClosedTrades16, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed17 := MAP(CTotalVlntryClosedTrades17 > 0 AND MTotLifeVlntryClosedTrades17 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades17 / CTotalVlntryClosedTrades17), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades17 < 0 => CTotalVlntryClosedTrades17,
												CTotalVlntryClosedTrades17 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades17 < 0 => MTotLifeVlntryClosedTrades17, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed18 := MAP(CTotalVlntryClosedTrades18 > 0 AND MTotLifeVlntryClosedTrades18 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades18 / CTotalVlntryClosedTrades18), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades18 < 0 => CTotalVlntryClosedTrades18,
												CTotalVlntryClosedTrades18 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades18 < 0 => MTotLifeVlntryClosedTrades18, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed19 := MAP(CTotalVlntryClosedTrades19 > 0 AND MTotLifeVlntryClosedTrades19 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades19 / CTotalVlntryClosedTrades19), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades19 < 0 => CTotalVlntryClosedTrades19,
												CTotalVlntryClosedTrades19 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades19 < 0 => MTotLifeVlntryClosedTrades19, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed20 := MAP(CTotalVlntryClosedTrades20 > 0 AND MTotLifeVlntryClosedTrades20 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades20 / CTotalVlntryClosedTrades20), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades20 < 0 => CTotalVlntryClosedTrades20,
												CTotalVlntryClosedTrades20 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades20 < 0 => MTotLifeVlntryClosedTrades20, DEFAULT_TEST);
CreditReport: => MAvgLifeVlntryClosed21 := MAP(CTotalVlntryClosedTrades21 > 0 AND MTotLifeVlntryClosedTrades21 >= 0 => MIN(ROUND(MTotLifeVlntryClosedTrades21 / CTotalVlntryClosedTrades21), CAP_9992),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												CTotalVlntryClosedTrades21 < 0 => CTotalVlntryClosedTrades21,
												CTotalVlntryClosedTrades21 = 0 => DEFAULT_L4,
												MTotLifeVlntryClosedTrades21 < 0 => MTotLifeVlntryClosedTrades21, DEFAULT_TEST);


// Age_AvgLifeDRGTrade:
CreditReport: => MAvgLifeDRGTrade01 := MAP(MTotLifeDRGTrades01 > 0 AND u_TR_CntrlLevel42drgSD_01 > 0 => MIN(ROUND(MTotLifeDRGTrades01 / u_TR_CntrlLevel42drgSD_01), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades01 < 0 => MTotLifeDRGTrades01, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade02 := MAP(MTotLifeDRGTrades02 > 0 AND u_TR_CntrlLevel42drgSD_02 > 0 => MIN(ROUND(MTotLifeDRGTrades02 / u_TR_CntrlLevel42drgSD_02), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades02 < 0 => MTotLifeDRGTrades02, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade03 := MAP(MTotLifeDRGTrades03 > 0 AND u_TR_CntrlLevel42drgSD_03 > 0 => MIN(ROUND(MTotLifeDRGTrades03 / u_TR_CntrlLevel42drgSD_03), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades03 < 0 => MTotLifeDRGTrades03, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade04 := MAP(MTotLifeDRGTrades04 > 0 AND u_TR_CntrlLevel42drgSD_04 > 0 => MIN(ROUND(MTotLifeDRGTrades04 / u_TR_CntrlLevel42drgSD_04), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades04 < 0 => MTotLifeDRGTrades04, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade05 := MAP(MTotLifeDRGTrades05 > 0 AND u_TR_CntrlLevel42drgSD_05 > 0 => MIN(ROUND(MTotLifeDRGTrades05 / u_TR_CntrlLevel42drgSD_05), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades05 < 0 => MTotLifeDRGTrades05, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade06 := MAP(MTotLifeDRGTrades06 > 0 AND u_TR_CntrlLevel42drgSD_06 > 0 => MIN(ROUND(MTotLifeDRGTrades06 / u_TR_CntrlLevel42drgSD_06), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades06 < 0 => MTotLifeDRGTrades06, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade07 := MAP(MTotLifeDRGTrades07 > 0 AND u_TR_CntrlLevel42drgSD_07 > 0 => MIN(ROUND(MTotLifeDRGTrades07 / u_TR_CntrlLevel42drgSD_07), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades07 < 0 => MTotLifeDRGTrades07, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade08 := MAP(MTotLifeDRGTrades08 > 0 AND u_TR_CntrlLevel42drgSD_08 > 0 => MIN(ROUND(MTotLifeDRGTrades08 / u_TR_CntrlLevel42drgSD_08), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades08 < 0 => MTotLifeDRGTrades08, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade09 := MAP(MTotLifeDRGTrades09 > 0 AND u_TR_CntrlLevel42drgSD_09 > 0 => MIN(ROUND(MTotLifeDRGTrades09 / u_TR_CntrlLevel42drgSD_09), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades09 < 0 => MTotLifeDRGTrades09, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade10 := MAP(MTotLifeDRGTrades10 > 0 AND u_TR_CntrlLevel42drgSD_10 > 0 => MIN(ROUND(MTotLifeDRGTrades10 / u_TR_CntrlLevel42drgSD_10), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades10 < 0 => MTotLifeDRGTrades10, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade11 := MAP(MTotLifeDRGTrades11 > 0 AND u_TR_CntrlLevel42drgSD_11 > 0 => MIN(ROUND(MTotLifeDRGTrades11 / u_TR_CntrlLevel42drgSD_11), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades11 < 0 => MTotLifeDRGTrades11, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade12 := MAP(MTotLifeDRGTrades12 > 0 AND u_TR_CntrlLevel42drgSD_12 > 0 => MIN(ROUND(MTotLifeDRGTrades12 / u_TR_CntrlLevel42drgSD_12), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades12 < 0 => MTotLifeDRGTrades12, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade13 := MAP(MTotLifeDRGTrades13 > 0 AND u_TR_CntrlLevel42drgSD_13 > 0 => MIN(ROUND(MTotLifeDRGTrades13 / u_TR_CntrlLevel42drgSD_13), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades13 < 0 => MTotLifeDRGTrades13, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade14 := MAP(MTotLifeDRGTrades14 > 0 AND u_TR_CntrlLevel42drgSD_14 > 0 => MIN(ROUND(MTotLifeDRGTrades14 / u_TR_CntrlLevel42drgSD_14), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades14 < 0 => MTotLifeDRGTrades14, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade15 := MAP(MTotLifeDRGTrades15 > 0 AND u_TR_CntrlLevel42drgSD_15 > 0 => MIN(ROUND(MTotLifeDRGTrades15 / u_TR_CntrlLevel42drgSD_15), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades15 < 0 => MTotLifeDRGTrades15, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade16 := MAP(MTotLifeDRGTrades16 > 0 AND u_TR_CntrlLevel42drgSD_16 > 0 => MIN(ROUND(MTotLifeDRGTrades16 / u_TR_CntrlLevel42drgSD_16), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades16 < 0 => MTotLifeDRGTrades16, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade17 := MAP(MTotLifeDRGTrades17 > 0 AND u_TR_CntrlLevel42drgSD_17 > 0 => MIN(ROUND(MTotLifeDRGTrades17 / u_TR_CntrlLevel42drgSD_17), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades17 < 0 => MTotLifeDRGTrades17, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade18 := MAP(MTotLifeDRGTrades18 > 0 AND u_TR_CntrlLevel42drgSD_18 > 0 => MIN(ROUND(MTotLifeDRGTrades18 / u_TR_CntrlLevel42drgSD_18), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades18 < 0 => MTotLifeDRGTrades18, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade19 := MAP(MTotLifeDRGTrades19 > 0 AND u_TR_CntrlLevel42drgSD_19 > 0 => MIN(ROUND(MTotLifeDRGTrades19 / u_TR_CntrlLevel42drgSD_19), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades19 < 0 => MTotLifeDRGTrades19, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade20 := MAP(MTotLifeDRGTrades20 > 0 AND u_TR_CntrlLevel42drgSD_20 > 0 => MIN(ROUND(MTotLifeDRGTrades20 / u_TR_CntrlLevel42drgSD_20), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades20 < 0 => MTotLifeDRGTrades20, DEFAULT_L4);
CreditReport: => MAvgLifeDRGTrade21 := MAP(MTotLifeDRGTrades21 > 0 AND u_TR_CntrlLevel42drgSD_21 > 0 => MIN(ROUND(MTotLifeDRGTrades21 / u_TR_CntrlLevel42drgSD_21), CAP_9992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											MTotLifeDRGTrades21 < 0 => MTotLifeDRGTrades21, DEFAULT_L4);

// Age_TotalCreditHistory:
CreditReport: => MTotalCreditHistory01 := MAP(MTotalAgeOpnTrades01 >= 0 OR MTotLifeDRGTrades01 >= 0 OR MTotLifeVlntryClosedTrades01 >= 0 => MIN(MAX(MTotalAgeOpnTrades01, 0) + MAX(MTotLifeDRGTrades01, 0) + MAX(MTotLifeVlntryClosedTrades01, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory02 := MAP(MTotalAgeOpnTrades02 >= 0 OR MTotLifeDRGTrades02 >= 0 OR MTotLifeVlntryClosedTrades02 >= 0 => MIN(MAX(MTotalAgeOpnTrades02, 0) + MAX(MTotLifeDRGTrades02, 0) + MAX(MTotLifeVlntryClosedTrades02, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_02 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_02 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory03 := MAP(MTotalAgeOpnTrades03 >= 0 OR MTotLifeDRGTrades03 >= 0 OR MTotLifeVlntryClosedTrades03 >= 0 => MIN(MAX(MTotalAgeOpnTrades03, 0) + MAX(MTotLifeDRGTrades03, 0) + MAX(MTotLifeVlntryClosedTrades03, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_03 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_03 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory04 := MAP(MTotalAgeOpnTrades04 >= 0 OR MTotLifeDRGTrades04 >= 0 OR MTotLifeVlntryClosedTrades04 >= 0 => MIN(MAX(MTotalAgeOpnTrades04, 0) + MAX(MTotLifeDRGTrades04, 0) + MAX(MTotLifeVlntryClosedTrades04, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_04 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_04 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory05 := MAP(MTotalAgeOpnTrades05 >= 0 OR MTotLifeDRGTrades05 >= 0 OR MTotLifeVlntryClosedTrades05 >= 0 => MIN(MAX(MTotalAgeOpnTrades05, 0) + MAX(MTotLifeDRGTrades05, 0) + MAX(MTotLifeVlntryClosedTrades05, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_05 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_05 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory06 := MAP(MTotalAgeOpnTrades06 >= 0 OR MTotLifeDRGTrades06 >= 0 OR MTotLifeVlntryClosedTrades06 >= 0 => MIN(MAX(MTotalAgeOpnTrades06, 0) + MAX(MTotLifeDRGTrades06, 0) + MAX(MTotLifeVlntryClosedTrades06, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_06 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_06 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory07 := MAP(MTotalAgeOpnTrades07 >= 0 OR MTotLifeDRGTrades07 >= 0 OR MTotLifeVlntryClosedTrades07 >= 0 => MIN(MAX(MTotalAgeOpnTrades07, 0) + MAX(MTotLifeDRGTrades07, 0) + MAX(MTotLifeVlntryClosedTrades07, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_07 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_07 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory08 := MAP(MTotalAgeOpnTrades08 >= 0 OR MTotLifeDRGTrades08 >= 0 OR MTotLifeVlntryClosedTrades08 >= 0 => MIN(MAX(MTotalAgeOpnTrades08, 0) + MAX(MTotLifeDRGTrades08, 0) + MAX(MTotLifeVlntryClosedTrades08, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_08 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_08 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory09 := MAP(MTotalAgeOpnTrades09 >= 0 OR MTotLifeDRGTrades09 >= 0 OR MTotLifeVlntryClosedTrades09 >= 0 => MIN(MAX(MTotalAgeOpnTrades09, 0) + MAX(MTotLifeDRGTrades09, 0) + MAX(MTotLifeVlntryClosedTrades09, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_09 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_09 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory10 := MAP(MTotalAgeOpnTrades10 >= 0 OR MTotLifeDRGTrades10 >= 0 OR MTotLifeVlntryClosedTrades10 >= 0 => MIN(MAX(MTotalAgeOpnTrades10, 0) + MAX(MTotLifeDRGTrades10, 0) + MAX(MTotLifeVlntryClosedTrades10, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_10 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_10 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory11 := MAP(MTotalAgeOpnTrades11 >= 0 OR MTotLifeDRGTrades11 >= 0 OR MTotLifeVlntryClosedTrades11 >= 0 => MIN(MAX(MTotalAgeOpnTrades11, 0) + MAX(MTotLifeDRGTrades11, 0) + MAX(MTotLifeVlntryClosedTrades11, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_11 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_11 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory12 := MAP(MTotalAgeOpnTrades12 >= 0 OR MTotLifeDRGTrades12 >= 0 OR MTotLifeVlntryClosedTrades12 >= 0 => MIN(MAX(MTotalAgeOpnTrades12, 0) + MAX(MTotLifeDRGTrades12, 0) + MAX(MTotLifeVlntryClosedTrades12, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_12 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_12 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory13 := MAP(MTotalAgeOpnTrades13 >= 0 OR MTotLifeDRGTrades13 >= 0 OR MTotLifeVlntryClosedTrades13 >= 0 => MIN(MAX(MTotalAgeOpnTrades13, 0) + MAX(MTotLifeDRGTrades13, 0) + MAX(MTotLifeVlntryClosedTrades13, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_13 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_13 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory14 := MAP(MTotalAgeOpnTrades14 >= 0 OR MTotLifeDRGTrades14 >= 0 OR MTotLifeVlntryClosedTrades14 >= 0 => MIN(MAX(MTotalAgeOpnTrades14, 0) + MAX(MTotLifeDRGTrades14, 0) + MAX(MTotLifeVlntryClosedTrades14, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_14 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_14 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory15 := MAP(MTotalAgeOpnTrades15 >= 0 OR MTotLifeDRGTrades15 >= 0 OR MTotLifeVlntryClosedTrades15 >= 0 => MIN(MAX(MTotalAgeOpnTrades15, 0) + MAX(MTotLifeDRGTrades15, 0) + MAX(MTotLifeVlntryClosedTrades15, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_15 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_15 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory16 := MAP(MTotalAgeOpnTrades16 >= 0 OR MTotLifeDRGTrades16 >= 0 OR MTotLifeVlntryClosedTrades16 >= 0 => MIN(MAX(MTotalAgeOpnTrades16, 0) + MAX(MTotLifeDRGTrades16, 0) + MAX(MTotLifeVlntryClosedTrades16, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_16 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_16 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory17 := MAP(MTotalAgeOpnTrades17 >= 0 OR MTotLifeDRGTrades17 >= 0 OR MTotLifeVlntryClosedTrades17 >= 0 => MIN(MAX(MTotalAgeOpnTrades17, 0) + MAX(MTotLifeDRGTrades17, 0) + MAX(MTotLifeVlntryClosedTrades17, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_17 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_17 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory18 := MAP(MTotalAgeOpnTrades18 >= 0 OR MTotLifeDRGTrades18 >= 0 OR MTotLifeVlntryClosedTrades18 >= 0 => MIN(MAX(MTotalAgeOpnTrades18, 0) + MAX(MTotLifeDRGTrades18, 0) + MAX(MTotLifeVlntryClosedTrades18, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_18 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_18 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory19 := MAP(MTotalAgeOpnTrades19 >= 0 OR MTotLifeDRGTrades19 >= 0 OR MTotLifeVlntryClosedTrades19 >= 0 => MIN(MAX(MTotalAgeOpnTrades19, 0) + MAX(MTotLifeDRGTrades19, 0) + MAX(MTotLifeVlntryClosedTrades19, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_19 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_19 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory20 := MAP(MTotalAgeOpnTrades20 >= 0 OR MTotLifeDRGTrades20 >= 0 OR MTotLifeVlntryClosedTrades20 >= 0 => MIN(MAX(MTotalAgeOpnTrades20, 0) + MAX(MTotLifeDRGTrades20, 0) + MAX(MTotLifeVlntryClosedTrades20, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_20 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_20 = 0 => DEFAULT_L3, DEFAULT_L4);
CreditReport: => MTotalCreditHistory21 := MAP(MTotalAgeOpnTrades21 >= 0 OR MTotLifeDRGTrades21 >= 0 OR MTotLifeVlntryClosedTrades21 >= 0 => MIN(MAX(MTotalAgeOpnTrades21, 0) + MAX(MTotLifeDRGTrades21, 0) + MAX(MTotLifeVlntryClosedTrades21, 0), CAP_99992),
											u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
											u_TR_CntrlLevel2_21 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_21 = 0 => DEFAULT_L3, DEFAULT_L4);


// P_AgeOldMortToOldCard:
CreditReport: => PAgeOldMortToOldCard := IF(MAgeOldestTrade02 >= 0 AND MAgeOldestTrade14 > 0,
											MIN(ROUND2(MAgeOldestTrade02 / MAgeOldestTrade14), CAP_999_DOT_92),
											MAP(MAgeOldestTrade14 < 0 => MAgeOldestTrade14,
												MAgeOldestTrade02 < 0 => MAgeOldestTrade02,
												MAgeOldestTrade14 = 0 => DEFAULT_L4, DEFAULT_TEST));

/**************************************************/
/* Level 3 attributes  - use a level2             */
/**************************************************/


// P_DelqMosToAgeAllTrades:
CreditReport: => u_nPDelqMosToAgeAllTrades01 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades01 := MAP(MTotalCreditHistory01 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades01, CAP_99992) * 100 / MTotalCreditHistory01), CAP_100),
												MTotalCreditHistory01 < 0 => MTotalCreditHistory01,
												MTotalCreditHistory01 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades02 := SUM(CreditReportTradeline(u_group02 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades02 := MAP(MTotalCreditHistory02 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades02, CAP_99992) * 100 / MTotalCreditHistory02), CAP_100),
												MTotalCreditHistory02 < 0 => MTotalCreditHistory02,
												MTotalCreditHistory02 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades03 := SUM(CreditReportTradeline(u_group03 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades03 := MAP(MTotalCreditHistory03 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades03, CAP_99992) * 100 / MTotalCreditHistory03), CAP_100),
												MTotalCreditHistory03 < 0 => MTotalCreditHistory03,
												MTotalCreditHistory03 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades04 := SUM(CreditReportTradeline(u_group04 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades04 := MAP(MTotalCreditHistory04 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades04, CAP_99992) * 100 / MTotalCreditHistory04), CAP_100),
												MTotalCreditHistory04 < 0 => MTotalCreditHistory04,
												MTotalCreditHistory04 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades05 := SUM(CreditReportTradeline(u_group05 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades05 := MAP(MTotalCreditHistory05 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades05, CAP_99992) * 100 / MTotalCreditHistory05), CAP_100),
												MTotalCreditHistory05 < 0 => MTotalCreditHistory05,
												MTotalCreditHistory05 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades06 := SUM(CreditReportTradeline(u_group06 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades06 := MAP(MTotalCreditHistory06 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades06, CAP_99992) * 100 / MTotalCreditHistory06), CAP_100),
												MTotalCreditHistory06 < 0 => MTotalCreditHistory06,
												MTotalCreditHistory06 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades07 := SUM(CreditReportTradeline(u_group07 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades07 := MAP(MTotalCreditHistory07 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades07, CAP_99992) * 100 / MTotalCreditHistory07), CAP_100),
												MTotalCreditHistory07 < 0 => MTotalCreditHistory07,
												MTotalCreditHistory07 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades08 := SUM(CreditReportTradeline(u_group08 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades08 := MAP(MTotalCreditHistory08 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades08, CAP_99992) * 100 / MTotalCreditHistory08), CAP_100),
												MTotalCreditHistory08 < 0 => MTotalCreditHistory08,
												MTotalCreditHistory08 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades09 := SUM(CreditReportTradeline(u_group09 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades09 := MAP(MTotalCreditHistory09 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades09, CAP_99992) * 100 / MTotalCreditHistory09), CAP_100),
												MTotalCreditHistory09 < 0 => MTotalCreditHistory09,
												MTotalCreditHistory09 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades10 := SUM(CreditReportTradeline(u_group10 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades10 := MAP(MTotalCreditHistory10 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades10, CAP_99992) * 100 / MTotalCreditHistory10), CAP_100),
												MTotalCreditHistory10 < 0 => MTotalCreditHistory10,
												MTotalCreditHistory10 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades11 := SUM(CreditReportTradeline(u_group11 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades11 := MAP(MTotalCreditHistory11 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades11, CAP_99992) * 100 / MTotalCreditHistory11), CAP_100),
												MTotalCreditHistory11 < 0 => MTotalCreditHistory11,
												MTotalCreditHistory11 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades12 := SUM(CreditReportTradeline(u_group12 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades12 := MAP(MTotalCreditHistory12 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades12, CAP_99992) * 100 / MTotalCreditHistory12), CAP_100),
												MTotalCreditHistory12 < 0 => MTotalCreditHistory12,
												MTotalCreditHistory12 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades13 := SUM(CreditReportTradeline(u_group13 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades13 := MAP(MTotalCreditHistory13 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades13, CAP_99992) * 100 / MTotalCreditHistory13), CAP_100),
												MTotalCreditHistory13 < 0 => MTotalCreditHistory13,
												MTotalCreditHistory13 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades14 := SUM(CreditReportTradeline(u_group14 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades14 := MAP(MTotalCreditHistory14 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades14, CAP_99992) * 100 / MTotalCreditHistory14), CAP_100),
												MTotalCreditHistory14 < 0 => MTotalCreditHistory14,
												MTotalCreditHistory14 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades15 := SUM(CreditReportTradeline(u_group15 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades15 := MAP(MTotalCreditHistory15 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades15, CAP_99992) * 100 / MTotalCreditHistory15), CAP_100),
												MTotalCreditHistory15 < 0 => MTotalCreditHistory15,
												MTotalCreditHistory15 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades16 := SUM(CreditReportTradeline(u_group16 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades16 := MAP(MTotalCreditHistory16 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades16, CAP_99992) * 100 / MTotalCreditHistory16), CAP_100),
												MTotalCreditHistory16 < 0 => MTotalCreditHistory16,
												MTotalCreditHistory16 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades17 := SUM(CreditReportTradeline(u_group17 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades17 := MAP(MTotalCreditHistory17 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades17, CAP_99992) * 100 / MTotalCreditHistory17), CAP_100),
												MTotalCreditHistory17 < 0 => MTotalCreditHistory17,
												MTotalCreditHistory17 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades18 := SUM(CreditReportTradeline(u_group18 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades18 := MAP(MTotalCreditHistory18 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades18, CAP_99992) * 100 / MTotalCreditHistory18), CAP_100),
												MTotalCreditHistory18 < 0 => MTotalCreditHistory18,
												MTotalCreditHistory18 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades19 := SUM(CreditReportTradeline(u_group19 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades19 := MAP(MTotalCreditHistory19 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades19, CAP_99992) * 100 / MTotalCreditHistory19), CAP_100),
												MTotalCreditHistory19 < 0 => MTotalCreditHistory19,
												MTotalCreditHistory19 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades20 := SUM(CreditReportTradeline(u_group20 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades20 := MAP(MTotalCreditHistory20 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades20, CAP_99992) * 100 / MTotalCreditHistory20), CAP_100),
												MTotalCreditHistory20 < 0 => MTotalCreditHistory20,
												MTotalCreditHistory20 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllTrades21 := SUM(CreditReportTradeline(u_group21 AND NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllTrades21 := MAP(MTotalCreditHistory21 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllTrades21, CAP_99992) * 100 / MTotalCreditHistory21), CAP_100),
												MTotalCreditHistory21 < 0 => MTotalCreditHistory21,
												MTotalCreditHistory21 = 0 => DEFAULT_L4, DEFAULT_TEST);

// P_DelqMosToAgeAllOpnTrades:
CreditReport: => u_nPDelqMosToAgeAllOpnTrades01 := SUM(CreditReportTradeline(u_group01 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades01 := MAP(MTotalAgeOpnTrades01 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades01, CAP_99992) * 100 / MTotalAgeOpnTrades01), CAP_100),
													MTotalAgeOpnTrades01 < 0 => MTotalAgeOpnTrades01,
													MTotalAgeOpnTrades01 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades02 := SUM(CreditReportTradeline(u_group02 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades02 := MAP(MTotalAgeOpnTrades02 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades02, CAP_99992) * 100 / MTotalAgeOpnTrades02), CAP_100),
													MTotalAgeOpnTrades02 < 0 => MTotalAgeOpnTrades02,
													MTotalAgeOpnTrades02 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades03 := SUM(CreditReportTradeline(u_group03 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades03 := MAP(MTotalAgeOpnTrades03 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades03, CAP_99992) * 100 / MTotalAgeOpnTrades03), CAP_100),
													MTotalAgeOpnTrades03 < 0 => MTotalAgeOpnTrades03,
													MTotalAgeOpnTrades03 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades04 := SUM(CreditReportTradeline(u_group04 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades04 := MAP(MTotalAgeOpnTrades04 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades04, CAP_99992) * 100 / MTotalAgeOpnTrades04), CAP_100),
													MTotalAgeOpnTrades04 < 0 => MTotalAgeOpnTrades04,
													MTotalAgeOpnTrades04 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades05 := SUM(CreditReportTradeline(u_group05 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades05 := MAP(MTotalAgeOpnTrades05 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades05, CAP_99992) * 100 / MTotalAgeOpnTrades05), CAP_100),
													MTotalAgeOpnTrades05 < 0 => MTotalAgeOpnTrades05,
													MTotalAgeOpnTrades05 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades06 := SUM(CreditReportTradeline(u_group06 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades06 := MAP(MTotalAgeOpnTrades06 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades06, CAP_99992) * 100 / MTotalAgeOpnTrades06), CAP_100),
													MTotalAgeOpnTrades06 < 0 => MTotalAgeOpnTrades06,
													MTotalAgeOpnTrades06 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades07 := SUM(CreditReportTradeline(u_group07 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades07 := MAP(MTotalAgeOpnTrades07 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades07, CAP_99992) * 100 / MTotalAgeOpnTrades07), CAP_100),
													MTotalAgeOpnTrades07 < 0 => MTotalAgeOpnTrades07,
													MTotalAgeOpnTrades07 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades08 := SUM(CreditReportTradeline(u_group08 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades08 := MAP(MTotalAgeOpnTrades08 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades08, CAP_99992) * 100 / MTotalAgeOpnTrades08), CAP_100),
													MTotalAgeOpnTrades08 < 0 => MTotalAgeOpnTrades08,
													MTotalAgeOpnTrades08 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades09 := SUM(CreditReportTradeline(u_group09 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades09 := MAP(MTotalAgeOpnTrades09 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades09, CAP_99992) * 100 / MTotalAgeOpnTrades09), CAP_100),
													MTotalAgeOpnTrades09 < 0 => MTotalAgeOpnTrades09,
													MTotalAgeOpnTrades09 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades10 := SUM(CreditReportTradeline(u_group10 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades10 := MAP(MTotalAgeOpnTrades10 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades10, CAP_99992) * 100 / MTotalAgeOpnTrades10), CAP_100),
													MTotalAgeOpnTrades10 < 0 => MTotalAgeOpnTrades10,
													MTotalAgeOpnTrades10 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades11 := SUM(CreditReportTradeline(u_group11 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades11 := MAP(MTotalAgeOpnTrades11 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades11, CAP_99992) * 100 / MTotalAgeOpnTrades11), CAP_100),
													MTotalAgeOpnTrades11 < 0 => MTotalAgeOpnTrades11,
													MTotalAgeOpnTrades11 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades12 := SUM(CreditReportTradeline(u_group12 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades12 := MAP(MTotalAgeOpnTrades12 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades12, CAP_99992) * 100 / MTotalAgeOpnTrades12), CAP_100),
													MTotalAgeOpnTrades12 < 0 => MTotalAgeOpnTrades12,
													MTotalAgeOpnTrades12 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades13 := SUM(CreditReportTradeline(u_group13 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades13 := MAP(MTotalAgeOpnTrades13 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades13, CAP_99992) * 100 / MTotalAgeOpnTrades13), CAP_100),
													MTotalAgeOpnTrades13 < 0 => MTotalAgeOpnTrades13,
													MTotalAgeOpnTrades13 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades14 := SUM(CreditReportTradeline(u_group14 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades14 := MAP(MTotalAgeOpnTrades14 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades14, CAP_99992) * 100 / MTotalAgeOpnTrades14), CAP_100),
													MTotalAgeOpnTrades14 < 0 => MTotalAgeOpnTrades14,
													MTotalAgeOpnTrades14 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades15 := SUM(CreditReportTradeline(u_group15 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades15 := MAP(MTotalAgeOpnTrades15 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades15, CAP_99992) * 100 / MTotalAgeOpnTrades15), CAP_100),
													MTotalAgeOpnTrades15 < 0 => MTotalAgeOpnTrades15,
													MTotalAgeOpnTrades15 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades16 := SUM(CreditReportTradeline(u_group16 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades16 := MAP(MTotalAgeOpnTrades16 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades16, CAP_99992) * 100 / MTotalAgeOpnTrades16), CAP_100),
													MTotalAgeOpnTrades16 < 0 => MTotalAgeOpnTrades16,
													MTotalAgeOpnTrades16 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades17 := SUM(CreditReportTradeline(u_group17 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades17 := MAP(MTotalAgeOpnTrades17 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades17, CAP_99992) * 100 / MTotalAgeOpnTrades17), CAP_100),
													MTotalAgeOpnTrades17 < 0 => MTotalAgeOpnTrades17,
													MTotalAgeOpnTrades17 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades18 := SUM(CreditReportTradeline(u_group18 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades18 := MAP(MTotalAgeOpnTrades18 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades18, CAP_99992) * 100 / MTotalAgeOpnTrades18), CAP_100),
													MTotalAgeOpnTrades18 < 0 => MTotalAgeOpnTrades18,
													MTotalAgeOpnTrades18 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades19 := SUM(CreditReportTradeline(u_group19 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades19 := MAP(MTotalAgeOpnTrades19 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades19, CAP_99992) * 100 / MTotalAgeOpnTrades19), CAP_100),
													MTotalAgeOpnTrades19 < 0 => MTotalAgeOpnTrades19,
													MTotalAgeOpnTrades19 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades20 := SUM(CreditReportTradeline(u_group20 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades20 := MAP(MTotalAgeOpnTrades20 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades20, CAP_99992) * 100 / MTotalAgeOpnTrades20), CAP_100),
													MTotalAgeOpnTrades20 < 0 => MTotalAgeOpnTrades20,
													MTotalAgeOpnTrades20 = 0 => DEFAULT_L4, DEFAULT_TEST);
CreditReport: => u_nPDelqMosToAgeAllOpnTrades21 := SUM(CreditReportTradeline(u_group21 AND NOT G3AllExcluded AND NOT G6Closed), MAX(TRThirtyDayCounter, 0) + MAX(TRSixtyDayCounter, 0) + MAX(TRNinetyDayCounter, 0));
CreditReport: => PDelqMosToAgeAllOpnTrades21 := MAP(MTotalAgeOpnTrades21 > 0 => MIN(ROUND2(MIN(u_nPDelqMosToAgeAllOpnTrades21, CAP_99992) * 100 / MTotalAgeOpnTrades21), CAP_100),
													MTotalAgeOpnTrades21 < 0 => MTotalAgeOpnTrades21,
													MTotalAgeOpnTrades21 = 0 => DEFAULT_L4, DEFAULT_TEST);

// P_AvgCrLimHiCrOpnToClosed:
CreditReport: => PAvgCrLimHiCrOpnToClosed01 := MAP(AAVGCrLimHiCrClosedTR01 > 0 AND AAVGCrLimHiCrOpnTR01 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR01 * 100 / AAVGCrLimHiCrClosedTR01), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR01 < 0 => AAVGCrLimHiCrClosedTR01,
													AAVGCrLimHiCrClosedTR01 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR01 < 0 => AAVGCrLimHiCrOpnTR01, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed02 := MAP(AAVGCrLimHiCrClosedTR02 > 0 AND AAVGCrLimHiCrOpnTR02 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR02 * 100 / AAVGCrLimHiCrClosedTR02), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR02 < 0 => AAVGCrLimHiCrClosedTR02,
													AAVGCrLimHiCrClosedTR02 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR02 < 0 => AAVGCrLimHiCrOpnTR02, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed03 := MAP(AAVGCrLimHiCrClosedTR03 > 0 AND AAVGCrLimHiCrOpnTR03 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR03 * 100 / AAVGCrLimHiCrClosedTR03), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR03 < 0 => AAVGCrLimHiCrClosedTR03,
													AAVGCrLimHiCrClosedTR03 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR03 < 0 => AAVGCrLimHiCrOpnTR03, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed04 := MAP(AAVGCrLimHiCrClosedTR04 > 0 AND AAVGCrLimHiCrOpnTR04 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR04 * 100 / AAVGCrLimHiCrClosedTR04), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR04 < 0 => AAVGCrLimHiCrClosedTR04,
													AAVGCrLimHiCrClosedTR04 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR04 < 0 => AAVGCrLimHiCrOpnTR04, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed05 := MAP(AAVGCrLimHiCrClosedTR05 > 0 AND AAVGCrLimHiCrOpnTR05 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR05 * 100 / AAVGCrLimHiCrClosedTR05), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR05 < 0 => AAVGCrLimHiCrClosedTR05,
													AAVGCrLimHiCrClosedTR05 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR05 < 0 => AAVGCrLimHiCrOpnTR05, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed06 := MAP(AAVGCrLimHiCrClosedTR06 > 0 AND AAVGCrLimHiCrOpnTR06 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR06 * 100 / AAVGCrLimHiCrClosedTR06), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR06 < 0 => AAVGCrLimHiCrClosedTR06,
													AAVGCrLimHiCrClosedTR06 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR06 < 0 => AAVGCrLimHiCrOpnTR06, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed07 := MAP(AAVGCrLimHiCrClosedTR07 > 0 AND AAVGCrLimHiCrOpnTR07 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR07 * 100 / AAVGCrLimHiCrClosedTR07), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR07 < 0 => AAVGCrLimHiCrClosedTR07,
													AAVGCrLimHiCrClosedTR07 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR07 < 0 => AAVGCrLimHiCrOpnTR07, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed08 := MAP(AAVGCrLimHiCrClosedTR08 > 0 AND AAVGCrLimHiCrOpnTR08 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR08 * 100 / AAVGCrLimHiCrClosedTR08), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR08 < 0 => AAVGCrLimHiCrClosedTR08,
													AAVGCrLimHiCrClosedTR08 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR08 < 0 => AAVGCrLimHiCrOpnTR08, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed09 := MAP(AAVGCrLimHiCrClosedTR09 > 0 AND AAVGCrLimHiCrOpnTR09 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR09 * 100 / AAVGCrLimHiCrClosedTR09), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR09 < 0 => AAVGCrLimHiCrClosedTR09,
													AAVGCrLimHiCrClosedTR09 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR09 < 0 => AAVGCrLimHiCrOpnTR09, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed10 := MAP(AAVGCrLimHiCrClosedTR10 > 0 AND AAVGCrLimHiCrOpnTR10 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR10 * 100 / AAVGCrLimHiCrClosedTR10), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR10 < 0 => AAVGCrLimHiCrClosedTR10,
													AAVGCrLimHiCrClosedTR10 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR10 < 0 => AAVGCrLimHiCrOpnTR10, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed11 := MAP(AAVGCrLimHiCrClosedTR11 > 0 AND AAVGCrLimHiCrOpnTR11 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR11 * 100 / AAVGCrLimHiCrClosedTR11), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR11 < 0 => AAVGCrLimHiCrClosedTR11,
													AAVGCrLimHiCrClosedTR11 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR11 < 0 => AAVGCrLimHiCrOpnTR11, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed12 := MAP(AAVGCrLimHiCrClosedTR12 > 0 AND AAVGCrLimHiCrOpnTR12 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR12 * 100 / AAVGCrLimHiCrClosedTR12), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR12 < 0 => AAVGCrLimHiCrClosedTR12,
													AAVGCrLimHiCrClosedTR12 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR12 < 0 => AAVGCrLimHiCrOpnTR12, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed13 := MAP(AAVGCrLimHiCrClosedTR13 > 0 AND AAVGCrLimHiCrOpnTR13 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR13 * 100 / AAVGCrLimHiCrClosedTR13), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR13 < 0 => AAVGCrLimHiCrClosedTR13,
													AAVGCrLimHiCrClosedTR13 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR13 < 0 => AAVGCrLimHiCrOpnTR13, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed14 := MAP(AAVGCrLimHiCrClosedTR14 > 0 AND AAVGCrLimHiCrOpnTR14 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR14 * 100 / AAVGCrLimHiCrClosedTR14), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR14 < 0 => AAVGCrLimHiCrClosedTR14,
													AAVGCrLimHiCrClosedTR14 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR14 < 0 => AAVGCrLimHiCrOpnTR14, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed15 := MAP(AAVGCrLimHiCrClosedTR15 > 0 AND AAVGCrLimHiCrOpnTR15 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR15 * 100 / AAVGCrLimHiCrClosedTR15), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR15 < 0 => AAVGCrLimHiCrClosedTR15,
													AAVGCrLimHiCrClosedTR15 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR15 < 0 => AAVGCrLimHiCrOpnTR15, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed16 := MAP(AAVGCrLimHiCrClosedTR16 > 0 AND AAVGCrLimHiCrOpnTR16 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR16 * 100 / AAVGCrLimHiCrClosedTR16), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR16 < 0 => AAVGCrLimHiCrClosedTR16,
													AAVGCrLimHiCrClosedTR16 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR16 < 0 => AAVGCrLimHiCrOpnTR16, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed17 := MAP(AAVGCrLimHiCrClosedTR17 > 0 AND AAVGCrLimHiCrOpnTR17 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR17 * 100 / AAVGCrLimHiCrClosedTR17), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR17 < 0 => AAVGCrLimHiCrClosedTR17,
													AAVGCrLimHiCrClosedTR17 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR17 < 0 => AAVGCrLimHiCrOpnTR17, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed18 := MAP(AAVGCrLimHiCrClosedTR18 > 0 AND AAVGCrLimHiCrOpnTR18 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR18 * 100 / AAVGCrLimHiCrClosedTR18), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR18 < 0 => AAVGCrLimHiCrClosedTR18,
													AAVGCrLimHiCrClosedTR18 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR18 < 0 => AAVGCrLimHiCrOpnTR18, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed19 := MAP(AAVGCrLimHiCrClosedTR19 > 0 AND AAVGCrLimHiCrOpnTR19 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR19 * 100 / AAVGCrLimHiCrClosedTR19), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR19 < 0 => AAVGCrLimHiCrClosedTR19,
													AAVGCrLimHiCrClosedTR19 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR19 < 0 => AAVGCrLimHiCrOpnTR19, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed20 := MAP(AAVGCrLimHiCrClosedTR20 > 0 AND AAVGCrLimHiCrOpnTR20 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR20 * 100 / AAVGCrLimHiCrClosedTR20), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR20 < 0 => AAVGCrLimHiCrClosedTR20,
													AAVGCrLimHiCrClosedTR20 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR20 < 0 => AAVGCrLimHiCrOpnTR20, DEFAULT_L4);
CreditReport: => PAvgCrLimHiCrOpnToClosed21 := MAP(AAVGCrLimHiCrClosedTR21 > 0 AND AAVGCrLimHiCrOpnTR21 > 0 => MIN(ROUND2(AAVGCrLimHiCrOpnTR21 * 100 / AAVGCrLimHiCrClosedTR21), CAP_999_DOT_92),
													AAVGCrLimHiCrClosedTR21 < 0 => AAVGCrLimHiCrClosedTR21,
													AAVGCrLimHiCrClosedTR21 = 0 => DEFAULT_L4,
													AAVGCrLimHiCrOpnTR21 < 0 => AAVGCrLimHiCrOpnTR21, DEFAULT_L4);



//5/31/2021			
//Add deferred payment per request from Prince's team	
CreditReport: => CTotalDisaster := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND G1NCDisaster)), CAP_992));
CreditReport: => CTotalForbearance := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND G1NCForbearance)), CAP_992));		
CreditReport: => CTotalNonSTLPaymentDefer := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND (G2PaymentDeferred AND NOT G2StudentLoan))), CAP_992));
										
CreditReport: => IDisasterFlag := IF(CTotalDisaster > 0,1,0);
CreditReport: => IForbearanceFlag := IF(CTotalForbearance > 0,1,0);
CreditReport: => INonSTLPaymentDeferFlag := IF(CTotalNonSTLPaymentDefer > 0,1,0);		

//Count excluded trade lines
CreditReport: => CTotalDisasterAll := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										MIN(COUNT(CreditReportTradeline(G1NCDisaster)), CAP_992));
CreditReport: => CTotalForbearanceAll := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										MIN(COUNT(CreditReportTradeline(G1NCForbearance)), CAP_992));		
CreditReport: => CTotalNonSTLPaymentDeferAll := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										MIN(COUNT(CreditReportTradeline(G2PaymentDeferred AND NOT G2StudentLoan)), CAP_992));
										
CreditReport: => IDisasterFlagAll := IF(CTotalDisasterAll > 0,1,0);
CreditReport: => IForbearanceFlagAll := IF(CTotalForbearanceAll > 0,1,0);
CreditReport: => INonSTLPaymentDeferFlagAll := IF(CTotalNonSTLPaymentDeferAll > 0,1,0);					

// more scenarios
CreditReport: => CTotalDisasterOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND G1NCDisaster)), CAP_992));
CreditReport: => CTotalForbearanceOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND G1NCForbearance)), CAP_992));		
CreditReport: => CTotalNonSTLPaymentDeferOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND (G2PaymentDeferred AND NOT G2StudentLoan))), CAP_992));

//TO SEE IF deferred that not caused by forebearance or student loan
CreditReport: => CTotaldeferredNoForSTLOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND (G2PaymentDeferred AND NOT G2StudentLoan AND NOT G1NCForbearance))), CAP_992));

CreditReport: => CTotalStudentLoanOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND G2StudentLoan)), CAP_992));

CreditReport: => CTotalnodeferredSTLOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND (NOT G2PaymentDeferred AND G2StudentLoan))), CAP_992));
CreditReport: => CTotaldeferredSTLOpn := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND (G2PaymentDeferred AND G2StudentLoan))), CAP_992));

//////////////////////
CreditReport: => CTotalDisasterall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(G1NCDisaster)), CAP_992));
CreditReport: => CTotalForbearanceall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(G1NCForbearance)), CAP_992));		
CreditReport: => CTotalNonSTLPaymentDeferall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline((G2PaymentDeferred AND NOT G2StudentLoan))), CAP_992));

//TO SEE IF deferred that not caused by forebearance or student loan
CreditReport: => CTotaldeferredNoForSTLall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline((G2PaymentDeferred AND NOT G2StudentLoan AND NOT G1NCForbearance))), CAP_992));

CreditReport: => CTotalStudentLoanall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(G2StudentLoan)), CAP_992));

CreditReport: => CTotalnodeferredSTLall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G2PaymentDeferred AND G2StudentLoan)), CAP_992));
CreditReport: => CTotaldeferredSTLall_ex := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(G2PaymentDeferred AND G2StudentLoan)), CAP_992));
//////////

//TO SEE IF deferred that not caused by forebearance or student loan
CreditReport: => CTotaldeferredNoForSTL := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND (G2PaymentDeferred AND NOT G2StudentLoan AND NOT G1NCForbearance))), CAP_992));

CreditReport: => CTotalStudentLoan := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND G2StudentLoan)), CAP_992));

CreditReport: => CTotalnodeferredSTL := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND (NOT G2PaymentDeferred AND G2StudentLoan))), CAP_992));
CreditReport: => CTotaldeferredSTL := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
										u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
										u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
										MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND (G2PaymentDeferred AND G2StudentLoan))), CAP_992));

// CreditReportNarrativeRemarks: => TRPaymentFrequency := rCreditReportTradeline.TRPaymentFrequency;
// CreditReportNarrativeRemarks: := rCreditReportTradeline.;
// CreditReportNarrativeRemarks: := rCreditReportTradeline.;
// CreditReportNarrativeRemarks: := rCreditReportTradeline.;
// CreditReportTradeline: => NarrativeCodes := CreditReportNarrativeRemarks.NarrativeCodes.NarrativeCode;

//5/17/2022, State Regulated attributes, MAgeOldestTrade60M01 and MAvgLifeVlntryClosed60M16_MD
CreditReport: => u_TR_CntrlLevel1_60M := COUNT(CreditReportTradeline(GMOSDateAccountOpened <= 60)); 
CreditReport: => u_TR_CntrlLevel2_60M_01 := COUNT(CreditReportTradeline(GMOSDateAccountOpened <= 60)); 
CreditReport: => u_TR_CntrlLevel31_60M_01 := COUNT(CreditReportTradeline(GMOSDateAccountOpened <= 60 AND NOT G3AllExcluded));

CreditReport: => tmp_MAgeOldestTrade60M01 := MAX(CreditReportTradeline(NOT G3AllExcluded AND GMOSDateAccountOpened >= 0 AND GMOSDateAccountOpened <= 60), GMOSDateAccountOpened);

CreditReport: => MAgeOldestTrade60M01 := IF(tmp_MAgeOldestTrade60M01:Null, MAP(u_TR_CntrlLevel1_60M = 0 => DEFAULT_L1,
											//u_TR_CntrlLevel2_60M_01 = 0 => DEFAULT_L2,
											u_TR_CntrlLevel31_60M_01 = 0 => DEFAULT_L3,
											u_TR_CntrlLevel41o_01 = 0 => DEFAULT_L4,DEFAULT_L4),
											MIN(tmp_MAgeOldestTrade60M01,CAP_9992));

//tmp_GAvailableDate60M16 means all available dates (not including open date) are in 60 months. 	
//u_group16 AND (tmp_GMOSOpenToLastPaymentFlag60M OR tmp_GMOSClosedDateFlag60M OR tmp_GMOSDateLastActivityFlag60M OR tmp_GMOSStatusDateFlag60M OR tmp_GMOSDateReportedFlag60M)));
//******************************************audit********************************************************************//
CreditReport: => audit1 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND tmp_GMOSOpenToLastPaymentFlag60M), MIN(60,GMOSDateAccountOpened)- MIN(60,GMOSLastPaymentDate));
CreditReport: => audit2 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND tmp_GMOSClosedDateFlag60M), MIN(60,GMOSDateAccountOpened) - MIN(60,GMOSClosedDate));
CreditReport: => audit3 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND tmp_GMOSDateLastActivityFlag60M), MIN(60,GMOSDateAccountOpened) - MIN(60,GMOSDateLastActivity));
CreditReport: => audit4 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND tmp_GMOSStatusDateFlag60M), MIN(60,GMOSDateAccountOpened) - MIN(60,GMOSStatusDate));
CreditReport: => audit5 := SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND NOT tmp_GMOSStatusDateFlag60M AND tmp_GMOSDateReportedFlag60M), MIN(60,GMOSDateAccountOpened) - MIN(60,GMOSDateReported));

CreditReportTradeline: => audit1 := NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND tmp_GMOSOpenToLastPaymentFlag60M;
CreditReportTradeline: => audit2 := NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND tmp_GMOSClosedDateFlag60M;
CreditReportTradeline: => audit3 := NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND tmp_GMOSDateLastActivityFlag60M;
CreditReportTradeline: => audit4 := NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND tmp_GMOSStatusDateFlag60M;
CreditReportTradeline: => audit5 := NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND NOT tmp_GMOSStatusDateFlag60M AND tmp_GMOSDateReportedFlag60M;

CreditReport: => u_TR_CntrlLevel1_MD := COUNT(CreditReportTradeline(tmp_GMOSOpenToLastPaymentFlag60M OR tmp_GMOSClosedDateFlag60M OR tmp_GMOSDateLastActivityFlag60M OR tmp_GMOSStatusDateFlag60M OR tmp_GMOSDateReportedFlag60M));
CreditReport: => u_TR_CntrlLevel2_16_MD := COUNT(CreditReportTradeline(tmp_GMOSOpenToLastPaymentFlag60M OR tmp_GMOSClosedDateFlag60M OR tmp_GMOSDateLastActivityFlag60M OR tmp_GMOSStatusDateFlag60M OR tmp_GMOSDateReportedFlag60M AND u_group16));
CreditReport: => u_TR_CntrlLevel317_16_MD := COUNT(CreditReportTradeline(tmp_GMOSOpenToLastPaymentFlag60M OR tmp_GMOSClosedDateFlag60M OR tmp_GMOSDateLastActivityFlag60M OR tmp_GMOSStatusDateFlag60M OR tmp_GMOSDateReportedFlag60M AND u_group16 AND NOT G3AllExcluded));
CreditReport: => MTotLifeVlntryClosedTrades16_MD := IF(tmp_MTotLifeVlntryClosedTrades16_MD = -99999,
													MAP(u_TR_CntrlLevel1_MD = 0 => DEFAULT_L1,
														u_TR_CntrlLevel2_16 = 0 => DEFAULT_L2,
														u_TR_CntrlLevel317_16 = 0 => DEFAULT_L3, DEFAULT_L4),
													MIN(tmp_MTotLifeVlntryClosedTrades16_MD, CAP_99992));
//******************************************audit********************************************************************//

													
CreditReport: => tmp_MTotLifeVlntryClosedTrades16_MD := IF(tmp_GAvailableDate60M16,SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND tmp_GMOSOpenToLastPaymentFlag60M), MIN(60,GMOSDateAccountOpened)- GMOSLastPaymentDate) +
													 		SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND tmp_GMOSClosedDateFlag60M), MIN(60,GMOSDateAccountOpened) - GMOSClosedDate) +
															SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND tmp_GMOSDateLastActivityFlag60M), MIN(60,GMOSDateAccountOpened) - GMOSDateLastActivity) +
															SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND tmp_GMOSStatusDateFlag60M), MIN(60,GMOSDateAccountOpened) - GMOSStatusDate) +
													 		SUM(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed AND u_group16 AND NOT tmp_GMOSOpenToLastPaymentFlag60M AND NOT tmp_GMOSClosedDateFlag60M AND NOT tmp_GMOSDateLastActivityFlag60M AND NOT tmp_GMOSStatusDateFlag60M AND tmp_GMOSDateReportedFlag60M), MIN(60,GMOSDateAccountOpened) - GMOSDateReported), -99999);
													
CreditReport: => tmp_CTotLifeVlntryClosedTrades16_MD := COUNT(CreditReportTradeline((tmp_GMOSOpenToLastPaymentFlag60M OR tmp_GMOSClosedDateFlag60M OR tmp_GMOSDateLastActivityFlag60M OR tmp_GMOSStatusDateFlag60M OR tmp_GMOSDateReportedFlag60M) AND u_group16 AND NOT G3AllExcluded AND NOT G2Transferred AND NOT G2Derogatory AND G6Closed));													

CreditReport: => MAvgLifeVlntryClosed16_MD := IF(tmp_MTotLifeVlntryClosedTrades16_MD = -99999,
													MAP(u_TR_CntrlLevel1_MD = 0 => DEFAULT_L1,
														u_TR_CntrlLevel2_16 = 0 => DEFAULT_L2,
														u_TR_CntrlLevel317_16 = 0 => DEFAULT_L3, DEFAULT_L4),
													MIN(ROUND(tmp_MTotLifeVlntryClosedTrades16_MD/tmp_CTotLifeVlntryClosedTrades16_MD), CAP_99992));
													
//7/21/2022	
// CTotal60PDPDBALG7512M01
CreditReport: => u_TR_CntrlLevel321BALG75_01 := COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred)); 
CreditReport: => u_TR_CntrlLevel421BALG75_01 := COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G3_Current60PIn12M AND GCreditLimitORHighCredit > 0)); 

CreditReportTradeline: => G3_Current60PIn12M := (G2Current60 AND GMOSDateReported >= 0 AND GMOSDateReported <= 12) OR (G2Current90 AND GMOSDateReported >= 0 AND GMOSDateReported <= 12) OR (G2Current120180 AND GMOSDateReported >= 0 AND GMOSDateReported <= 12);
CreditReport: => CTotal60PDPDBALG7512M01 := MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													u_TR_CntrlLevel321BALG75_01 = 0 => DEFAULT_L3,// no pastdue
													u_TR_CntrlLevel421BALG75_01 =0 => DEFAULT_L4,//with pastdue no creditlimit
													MIN(COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Dispute AND NOT G2Deferred AND G3_Current60PIn12M AND GCreditLimitORHighCredit > 0 AND u_GcurrentUtilization > 75.00)), CAP_992));
													//with pastdue but creditlimit <= 75% or no pastdue at all													
												
// 12/13/2022 Add MAgeLatestInqTradeAct

CreditReportTradeline: => GMOSLatestActivity := MIN(IF(GMOSClosedDate != -9999,GMOSClosedDate), IF(GMOSDateAccountOpened != -9999,GMOSDateAccountOpened), IF(GMOSDateLastActivity != -9999, GMOSDateLastActivity), IF(GMOSDateReported != -9999,GMOSDateReported), IF(GMOSLastPaymentDate != -9999, GMOSLastPaymentDate),IF(GMOSPaymentPatternStartDate != -9999, GMOSPaymentPatternStartDate), IF(GMOSStatusDate != -9999,GMOSStatusDate), IF(GMOSMaximumDelinquencyDate != -9999,GMOSMaximumDelinquencyDate));

CreditReport: => tmp_MAgeLastActivityOfTrade01 := MIN(CreditReportTradeline(NOT G3AllExcluded), GMOSLatestActivity);
CreditReport: => tmp_MAgeLatestInqTradeAct := MIN(tmp_MAgeYoungestInquiry01,  tmp_MAgeLastActivityOfTrade01);

CreditReport: => MAgeLatestInqTradeAct := MAP(u_IQ_CntlLevel1=0 AND u_TR_CntrlLevel1=0 => DEFAULT_L1 ,
											u_IQ_CntrlLevel3_01 = 0 AND u_TR_CntrlLevel31_01=0 => DEFAULT_L3,
											tmp_MAgeLatestInqTradeAct:Null OR tmp_MAgeLatestInqTradeAct <0 => DEFAULT_L4,
											MIN(tmp_MAgeLatestInqTradeAct, CAP_9992));


// 3/27/2023 Add 10 new attributes for AllState ISM8

//POpned12MToAllOpnTrades01: Percentage of open trade accounts that were opened within the past year
CreditReport: => tmp_CTotalOpnTradesOpned12M01 := COUNT(CreditReportTradeline(NOT G3AllExcluded AND NOT G6Closed AND GMOSDateAccountOpened >= 0 AND GMOSDateAccountOpened <= 12));
CreditReport: => POpned12MToAllOpnTrades01 := MAP(CTotalOpnTrades01 > 0 AND tmp_CTotalOpnTradesOpned12M01 >= 0 => MIN(ROUND2(tmp_CTotalOpnTradesOpned12M01 * 100 / CTotalOpnTrades01), CAP_100),
												u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
												u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3, DEFAULT_L4);
												

//CTotalTrades60M01: The number of all trade accounts held during the past 5 years
CreditReport: => tmp_CTotalTrades60M01 := COUNT(CreditReportTradeline(NOT G3AllExcluded AND (NOT G6Closed OR (G6Closed AND GMOSClosedDate >= 0 AND GMOSClosedDate <= 60))));
CreditReport: => CTotalTrades60M01 := IF(tmp_CTotalTrades60M01 = 0,
												MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
													u_TR_CntrlLevel2_01 = 0 => DEFAULT_L2,
													u_TR_CntrlLevel31_01 = 0 => DEFAULT_L3,
													u_TR_CntrlLevel41o_01 = 0 => DEFAULT_L4, 0),
												MIN(tmp_CTotalTrades60M01, CAP_992));

//PTDAVGPaidOffMonth13: Average paid balance percentage on revolving trades
CreditReportTradeline.Trended: => GTDNPaidOff := MAP(GTDoverBalanceM > 0 => 1, 
														GTDoverBalanceM < 0 AND GTDoverBalanceM >= -25 => 1, 
														GTDoverBalanceM = 0 => 1, 0);
CreditReportTradeline.Trended: => GTDNBalanceAPG0 := MAP(GTDBalanceM > 0 OR GTDActualPaymentM > 0 => 1,
														GTDoverBalanceM = 0 => 1,0); // account with activities

CreditReportTradeline: => GTDNBalanceAPG0_24 := GTDNBalanceAPG0$Trended(MonthCounter >= 1 AND MonthCounter <= 24):Sum; 
CreditReportTradeline: => GTDNPaidOff_24 := GTDNPaidOff$Trended(MonthCounter >= 1 AND MonthCounter <= 24):Sum;

CreditReport: => tmp_CTDMOPaidOff := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded), GTDNPaidOff_24); 
CreditReport: => tmp_CTDMOBalanceAPG0 := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded),GTDNBalanceAPG0_24);

CreditReport: => PTDAVGPaidOffMonth13 := MAP(tmp_CTDMOPaidOff >= 0 AND tmp_CTDMOBalanceAPG0 > 0 => MIN(ROUND2(tmp_CTDMOPaidOff * 100 / tmp_CTDMOBalanceAPG0), CAP_100),
												u_TD_CntrlLevel1 = 0 => -1,
												u_TD_CntrlLevel2_13 = 0 => -2,
												u_TD_CntrlLevel3TD1_13 = 0 => -3, -4);


//PTDAVGPaidasAgreedMonth13: Average percentage of months revolving trades are used and paid as agreed
CreditReportTradeline.Trended: => GTDNPaidasAgreed := MAP(GTDBalanceM >0 AND PreviousGTDBalanceM >= 0 AND PreviousGTDScheduledPaymentM >= 0 AND GTDActualPaymentM >= PreviousGTDScheduledPaymentM => 1,
														GTDBalanceM >0 AND GTDActualPaymentM < 0 AND (PreviousGTDBalanceM - GTDBalanceM >= PreviousGTDScheduledPaymentM) AND PreviousGTDScheduledPaymentM > 0 => 1, 0);
														
CreditReportTradeline: => GTDNPaidasAgreed_24 := GTDNPaidasAgreed$Trended(MonthCounter >= 1 AND MonthCounter <= 24):Sum; 
CreditReportTradeline: => GTDNBalanceG0_24_01 := GTDNBalanceG0$Trended(MonthCounter >= 1 AND MonthCounter <= 24):Sum;

CreditReport: => tmp_CTDMOPaidasAgreed := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded AND NOT (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30)), GTDNPaidasAgreed_24);
CreditReport: => tmp_CTDMOBalanceG0 := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded AND NOT (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30)),GTDNBalanceG0_24_01);

CreditReport: => PTDAVGPaidasAgreedMonth13 := MAP(tmp_CTDMOPaidasAgreed >= 0 AND tmp_CTDMOBalanceG0 > 0 => MIN(ROUND2(tmp_CTDMOPaidasAgreed * 100 / tmp_CTDMOBalanceG0), CAP_100),
													u_TD_CntrlLevel1 = 0 => -1,
													u_TD_CntrlLevel2_13 = 0 => -2,
													u_TD_CntrlLevel3TD1_13 = 0 => -3, -4); 


//PTDAvgBaltoMaxCrLim13: Average balance to Maximum Credit Limit for all revolving trades
CreditReportTradeline.Trended: => GTDSumBalanceM := MAX(GTDBalanceM, 0);
CreditReportTradeline: => GTDSumBalance24 := GTDSumBalanceM$Trended(MonthCounter >= 1 AND MonthCounter <= 25):Sum;
CreditReportTradeline: => GTDAvgBalance24 := IF(GTDSumBalance24 >=0 AND GTDNBalanceG0_24 >0, ROUND2(GTDSumBalance24/GTDNBalanceG0_24), 0);


CreditReport: => tmp_GTDAvgBalance24 := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded), GTDAvgBalance24); 
CreditReport: => tmp_GTDmaxLoanCreditLimit24 := SUM(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded),GTDmaxLoanCreditLimit24);

CreditReport: => PTDAvgBaltoMaxCrLim13 := MAP(tmp_GTDAvgBalance24 >= 0 AND tmp_GTDmaxLoanCreditLimit24 > 0 => MIN(ROUND2(tmp_GTDAvgBalance24 * 100 / tmp_GTDmaxLoanCreditLimit24), CAP_100),
												u_TD_CntrlLevel1 = 0 => -1,
												u_TD_CntrlLevel2_13 = 0 => -2,
												u_TD_CntrlLevel3TD1_13 = 0 => -3, -4);


//MTDAgeBalanceGCrLim13: Number of months since balance exceeded credit limit on a revolving trade
CreditReportTradeline.Trended: => GTDMOSBalanceGCrLim := IF(GTDBalanceM >0 AND GTDLoanAmountCreditLimitM >0 AND GTDBalanceM > GTDLoanAmountCreditLimitM, MonthCounter-1, -9999); 
CreditReportTradeline: => tmp_MTDAgeBalanceGCrLim13 := MIN(Trended,IF(GTDMOSBalanceGCrLim >= 0,GTDMOSBalanceGCrLim));
CreditReport: => MTDAgeBalanceGCrLim13_tmp := MIN(CreditReportTradeline(u_group13 AND NOT GTDAllExcluded),tmp_MTDAgeBalanceGCrLim13);
CreditReport: => MTDAgeBalanceGCrLim13 := MAP(u_TD_CntrlLevel1 = 0 => -1,
											u_TD_CntrlLevel2_13 = 0 => -2,
											u_TD_CntrlLevel3TD1_13 = 0 => -3,
											MTDAgeBalanceGCrLim13_tmp:Null => -4,
											MTDAgeBalanceGCrLim13_tmp);


//Create new inquiry globals for 45-day drop period

//Auto dedupe
CreditReportInquiry: => AutoFirstInquiryEach45D := EXISTS(Sequence.Dedup(CreditReportInquiry(NOT u_GIQExcluded AND GAutoDedupeSubjectSetLday), LEFT.TransactionID = RIGHT.TransactionID AND LEFT.ReportLexID = RIGHT.ReportLexID AND (RIGHT.GDaysSinceInquiry - LEFT.GDaysSinceInquiry) <= 45,TransactionID, GDaysSinceInquiry, u_iqsortorder, u_koborder, IQKOB, u_typeorder, IQType)(UID = CreditReportInquiry.UID)); // need add the ReportLexID
CreditReportInquiry: => u45d_LastAdaysSince := Sequence.PreviousWhere(TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID AND AutoFirstInquiryEach45D, TransactionID, GDaysSinceInquiry, u_iqsortorder, u_koborder, IQKOB, u_typeorder, IQType).GDaysSinceInquiry;
CreditReportInquiry: => tmp45d_GDropInquiryA := IF(u45d_LastAdaysSince:Null, FALSE, (GDaysSinceInquiry - u45d_LastAdaysSince) <= 45);
CreditReportInquiry: => u45d_GDropInquiryA := tmp45d_GDropInquiryA AND GAutoDedupeSubject AND NOT u_GIQExcluded;

//mortgage dedupe
CreditReportInquiry: => MortgageFirstInquiryEach45D := EXISTS(Sequence.Dedup(CreditReportInquiry(NOT u_GIQExcluded AND GMortgageDedupeSubjectSetLday), LEFT.TransactionID = RIGHT.TransactionID AND LEFT.ReportLexID = RIGHT.ReportLexID AND (RIGHT.GDaysSinceInquiry - LEFT.GDaysSinceInquiry) <= 45,TransactionID, GDaysSinceInquiry, u_iqsortorder, u_koborder, IQKOB, u_typeorder, IQType)(UID = CreditReportInquiry.UID)); // need add the ReportLexID
CreditReportInquiry: => u45d_LastMdaysSince := Sequence.PreviousWhere(TransactionID = CreditReportInquiry.TransactionID AND ReportLexID = CreditReportInquiry.ReportLexID AND MortgageFirstInquiryEach45D, TransactionID, GDaysSinceInquiry, u_iqsortorder, u_koborder, IQKOB, u_typeorder, IQType).GDaysSinceInquiry;
CreditReportInquiry: => tmp45d_GDropInquiryM := IF(u45d_LastMdaysSince:Null, FALSE, (GDaysSinceInquiry - u45d_LastMdaysSince) <= 45);
CreditReportInquiry: => u45d_GDropInquiryM := tmp45d_GDropInquiryM AND GMortgageDedupeSubject AND NOT u_GIQExcluded;

CreditReportInquiry: => GDropInquiryAMDrop45D :=  u45d_GDropInquiryA OR u45d_GDropInquiryM;
CreditReportInquiry: => GIQExcludedDrop45D := GCollectionInquiry   /* skip search inq */
             OR GGovernmentInquiry
             OR GInsuranceInquiry
             OR GMedicalInquiry
             OR GTenantScreenInquiry
             OR GFamilySupport
             OR (GDaysSinceInquiry < 0)
             OR (GMOSInquiryDate > 24)
             OR IQKOB:Null      /* see blank KOB in Experian data */
             OR GDropInquiryAMDrop45D         /* 45 days duplicate inq */
  ; //DELETE(NOT GCreditInquiry)


//CTotalInquiries45Dedup03: Number of Auto Inquires in the past 2 years (45-day drop period)
CreditReport: => u45d_IQ_CntrlLevel3_03 := COUNT(CreditReportInquiry(u_IQ_Group03 AND NOT GIQExcludedDrop45D));
CreditReport: => CTotalInquiries45Dedup03 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_03 =0 => 0, 
                                        u45d_IQ_CntrlLevel3_03 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcludedDrop45D AND u_IQ_Group03)), CAP_992));

//CTotalInquiries45Dedup04: Number of Home Related Inquires in the past 2 years (45-day drop period)
CreditReport: => u45d_IQ_CntrlLevel3_04 := COUNT(CreditReportInquiry(u_IQ_Group04 AND NOT GIQExcludedDrop45D));
CreditReport: => CTotalInquiries45Dedup04 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_04 =0 => 0, 
                                        u45d_IQ_CntrlLevel3_04 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcludedDrop45D AND u_IQ_Group04)), CAP_992));

//CTotalInquiries45Dedup07: Number of Other Financial Related Inquires in the past 2 years (45-day drop period)
CreditReport: => u45d_IQ_CntrlLevel3_07 := COUNT(CreditReportInquiry(u_IQ_Group07 AND NOT GIQExcludedDrop45D));
CreditReport: => CTotalInquiries45Dedup07 := MAP(u_IQ_CntlLevel1 =0 => DEFAULT_L1,
                                        u_IQ_CntrlLevel2_07 =0 => 0, 
                                        u45d_IQ_CntrlLevel3_07 =0 => DEFAULT_L3,
                                        MIN(COUNT(CreditReportInquiry(NOT GIQExcludedDrop45D AND u_IQ_Group07)), CAP_992));



//MAgeYoungest30PDRG01exBKP: Months since the most recent Delinquency other than a Bankruptcy, Charge-off or Collection
CreditReport: => tmp1_MAgeYoungest30PDRG01exBKP := MIN(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Bankruptcy AND NOT G3Collection AND (NOT G2Dispute OR NOT (G3Ever30 OR G3Ever60 OR G3Ever90P OR G3EverDerog))
    AND NOT G2Deferred AND (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30) AND G2Derogatory AND (G3MOSDerogatory >=0)),  G3MOSDerogatory);
CreditReport: => tmp2_MAgeYoungest30PDRG01exBKP := MIN(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Bankruptcy AND NOT G3Collection AND (NOT G2Dispute OR NOT (G3Ever30 OR G3Ever60 OR G3Ever90P OR G3EverDerog))
    AND(NOT G2Deferred) AND (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30) AND (G2Current120180 OR G2Current90 OR G2Current60 OR G2Current30) AND (GMOSDateReported >=0)), GMOSDateReported);
CreditReport: => tmp3_MAgeYoungest30PDRG01exBKP := MIN(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Bankruptcy AND NOT G3Collection AND (NOT G2Dispute OR NOT (G3Ever30 OR G3Ever60 OR G3Ever90P OR G3EverDerog))
    AND(NOT G2Deferred) AND (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30) AND (tmp_indexc_30PD_02 > 0) AND (GMOSDateReported>=0)),GMOSDateReported + tmp_indexc_30PD_02);
CreditReport: => tmp4_MAgeYoungest30PDRG01exBKP := MIN(CreditReportTradeline(NOT G3AllExcluded AND NOT G2Bankruptcy AND NOT G3Collection AND (NOT G2Dispute OR NOT (G3Ever30 OR G3Ever60 OR G3Ever90P OR G3EverDerog))
    AND(NOT G2Deferred) AND (G3EverDerog OR G3Ever90P OR G3Ever60 OR G3Ever30) AND (GMOSMaximumDelinquencyDate > 0)),GMOSMaximumDelinquencyDate);


CreditReport: => tmp_MAgeYoungest30PDRG01exBKP := IF(tmp1_MAgeYoungest30PDRG01exBKP:Null AND tmp2_MAgeYoungest30PDRG01exBKP:Null AND tmp3_MAgeYoungest30PDRG01exBKP:Null AND tmp4_MAgeYoungest30PDRG01exBKP:Null,
													MAP(u_TR_CntrlLevel1 = 0 => DEFAULT_L1,
														u_TR_CntrlLevel37_01 = 0 => DEFAULT_L3,
														u_TR_CntrlLevel42G030DNoRdate_01 > 0 OR 
														u_TR_CntrlLevel42G060DNoRdate_01 > 0 OR 
														u_TR_CntrlLevel42G090PNoRdate_01 > 0 OR
														u_TR_CntrlLevel42G0drgNoRdate_01 > 0 => DEFAULT_L4, DEFAULT_L3), 
														MIN(tmp1_MAgeYoungest30PDRG01exBKP,tmp2_MAgeYoungest30PDRG01exBKP,tmp3_MAgeYoungest30PDRG01exBKP,tmp4_MAgeYoungest30PDRG01exBKP));
CreditReport: => MAgeYoungest30PDRG01exBKP := IF(tmp_MAgeYoungest30PDRG01exBKP > 60, DEFAULT_L3, tmp_MAgeYoungest30PDRG01exBKP);
