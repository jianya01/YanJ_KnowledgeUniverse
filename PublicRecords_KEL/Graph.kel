#OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins

// --- ENTITY Definitions Section --- 
IMPORT KnowledgeUniverse.PublicRecords_KEL.Entities; 

// --- USE Statements Section ---
IMPORT PublicRecords_KEL.Uses; 

// --- Attributes Section ---
IMPORT KnowledgeUniverse.PublicRecords_KEL.Attributes;

QUERY: InputAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					InputArchiveDateClean, 
					PERMITS DPM) <= InputPII{
		InputUIDAppend := UID, 
		InputAccountEcho := InputAccountValue,	
		InputLexIDEcho := InputLexIDValue,  
		InputFirstNameEcho := InputFirstNameValue, 
		InputMiddleNameEcho := InputMiddleNameValue,
		InputLastNameEcho := InputLastNameValue, 
		InputStreetEcho := InputStreetValue,
		InputCityEcho := InputCityValue, 
		InputStateEcho := InputStateValue, 
		InputZipEcho := InputZipValue, 
		InputSSNEcho := InputSSNValue,
		InputDOBEcho := InputDOBValue,
		InputDLEcho := InputDLValue,
		InputDLStateEcho := InputDLStateValue,
		InputHomePhoneEcho := InputHomePhoneValue, 
		InputWorkPhoneEcho := InputWorkPhoneValue, 
		InputEmailEcho := InputEmailValue,
		InputArchiveDateEcho := InputArchiveDateValue,
		InputAccountEchoPop := InputAccountEchoPopValue,
		InputLexIDEchoPop := InputLexIDEchoPopValue, 
		InputFirstNameEchoPop := InputFirstNameEchoPopValue,
		InputMiddleNameEchoPop := InputMiddleNameEchoPopValue,
		InputLastNameEchoPop := InputLastNameEchoPopValue,   
		InputStreetEchoPop := InputStreetEchoPopValue, 
		InputCityEchoPop := InputCityEchoPopValue,
		InputStateEchoPop := InputStateEchoPopValue, 
		InputZipEchoPop := InputZipEchoPopValue,
		InputSSNEchoPop := InputSSNEchoPopValue,   
		InputDOBEchoPop := InputDOBEchoPopValue,  
		InputDLEchoPop := InputDLEchoPopValue,  
		InputDLStateEchoPop := InputDLStateEchoPopValue,  
		InputHomePhoneEchoPop := InputHomePhoneEchoPopValue, 
		InputWorkPhoneEchoPop := InputWorkPhoneEchoPopValue,
		InputEmailEchoPop := InputEmailEchoPopValue, 
		InputArchiveDateEchoPop := InputArchiveDateEchoPopValue,
		LexIDAppend, 
		LexIDScoreAppend, 
		InputPrefixClean := InputPrefixCleanValue, 
		InputFirstNameClean := InputFirstNameCleanValue,
		InputMiddleNameClean := InputMiddleNameCleanValue,
		InputLastNameClean := InputLastNameCleanValue,
		InputSuffixClean := InputSuffixCleanValue, 
		InputPrimaryRangeClean := InputPrimaryRangeCleanValue,
		InputPreDirectionClean := InputPreDirectionCleanValue, 
		InputPrimaryNameClean := InputPrimaryNameCleanValue,
		InputAddressSuffixClean := InputAddressSuffixCleanValue, 
		InputPostDirectionClean := InputPostDirectionCleanValue,
		InputUnitDesigClean := InputUnitDesigCleanValue, 
		InputSecondaryRangeClean := InputSecondaryRangeCleanValue,
		InputCityClean := InputCityCleanValue, 
		InputStateClean := InputStateCleanValue, 
		InputZip5Clean := InputZip5CleanValue,
		InputZip4Clean := InputZip4CleanValue, 
		InputStreetClean := InputStreetCleanValue,
		InputFullAddressClean := InputFullAddressCleanValue,
		InputLatitudeClean := InputLatitudeCleanValue, 
		InputLongitudeClean := InputLongitudeCleanValue, 
		InputCountyClean := InputCountyCleanValue, 
		InputGeoblockClean := InputGeoblockCleanValue, 
		InputAddressTypeClean := InputAddressTypeCleanValue, 
		InputAddressStatusClean := InputAddressStatusCleanValue,
		InputSSNClean := InputSSNCleanValue,
		InputDOBClean := InputDOBCleanValue,
		InputDLClean := InputDLCleanValue,
		InputDLStateClean := InputDLStateCleanValue,
		InputHomePhoneClean := InputHomePhoneCleanValue, 
		InputWorkPhoneClean := InputWorkPhoneCleanValue,
		InputEmailClean :=InputEmailCleanValue, 
		InputArchiveDateClean := InputArchiveDateCleanValue, 
		InputPrefixCleanPop := InputPrefixCleanPopValue, 
		InputFirstNameCleanPop := InputFirstNameCleanPopValue,
		InputMiddleNameCleanPop := InputMiddleNameCleanPopValue,
		InputLastNameCleanPop := InputLastNameCleanPopValue,
		InputSuffixCleanPop := InputSuffixCleanPopValue, 
		InputPrimaryRangeCleanPop := InputPrimaryRangeCleanPopValue,
		InputPreDirectionCleanPop := InputPreDirectionCleanPopValue, 
		InputPrimaryNameCleanPop := InputPrimaryNameCleanPopValue,
		InputAddressSuffixCleanPop := InputAddressSuffixCleanPopValue, 
		InputPostDirectionCleanPop := InputPostDirectionCleanPopValue,
		InputUnitDesigCleanPop := InputUnitDesigCleanPopValue, 
		InputSecondaryRangeCleanPop := InputSecondaryRangeCleanPopValue,
		InputCityCleanPop := InputCityCleanPopValue, 
		InputStateCleanPop := InputStateCleanPopValue, 
		InputZip5CleanPop := InputZip5CleanPopValue,
		InputZip4CleanPop := InputZip4CleanPopValue, 
		InputStreetCleanPop := InputStreetCleanPopValue,
		InputFullAddressCleanPop := InputFullAddressCleanPopValue,
		InputLatitudeCleanPop := InputLatitudeCleanPopValue, 
		InputLongitudeCleanPop := InputLongitudeCleanPopValue,
		InputCountyCleanPop := InputCountyCleanPopValue, 
		InputGeoblockCleanPop := InputGeoblockCleanPopValue, 
		InputAddressTypeCleanPop := InputAddressTypeCleanPopValue,
		InputAddressStatusCleanPop := InputAddressStatusCleanPopValue,
		InputSSNCleanPop := InputSSNCleanPopValue,
		InputDOBCleanPop := InputDOBCleanPopValue,
		InputDLCleanPop := InputDLCleanPopValue,
		InputDLStateCleanPop := InputDLStateCleanPopValue,
		InputHomePhoneCleanPop := InputHomePhoneCleanPopValue,
		InputWorkPhoneCleanPop := InputWorkPhoneCleanPopValue,
		InputEmailCleanPop := InputEmailCleanPopValue,
		InputArchiveDateCleanPop := InputArchiveDateCleanPopValue,
		BusInputUIDAppend,
		RepNumber := IRepNumberValue}
	USING DPM
	USE InputPIIDataset(FLAT, 
		InputPII(UID = InputUIDAppend, Subject = LexIDAppend));// We are linking the Input PII to the Person ENTITY via the InputUIDAppend

 QUERY: InputBusAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputBII InputBIIDataset, 
					InputArchiveDateClean,
					PERMITS DPM) <= InputBII{
		BusInputUIDAppend := UID, 
		BusInputAccountEcho := BusInputAccountEchoValue,
		BusInputUIDAppend, 
		InputLexIDBusExtendedFamilyEcho := InputLexIDBusExtendedFamilyEchoValue, 
		InputLexIDBusLegalFamilyEcho := InputLexIDBusLegalFamilyEchoValue, 
		InputLexIDBusLegalEntityEcho := InputLexIDBusLegalEntityEchoValue,
		InputLexIDBusPlaceGroupEcho := InputLexIDBusPlaceGroupEchoValue, 
		InputLexIDBusPlaceEcho := InputLexIDBusPlaceEchoValue, 
		BusInputNameEcho := BusInputNameEchoValue, 
		BusInputAlternateNameEcho := BusInputAlternateNameEchoValue, 
		BusInputStreetEcho := BusInputStreetEchoValue,
		BusInputCityEcho := BusInputCityEchoValue,
		BusInputStateEcho := BusInputStateEchoValue,
		BusInputZipEcho := BusInputZipEchoValue,
		BusInputPhoneEcho := BusInputPhoneEchoValue,
		BusInputIPAddressEcho := BusInputIPAddressEchoValue,
		BusInputURLEcho := BusInputURLEchoValue,
		BusInputEmailEcho := BusInputEmailEchoValue,
		BusInputTINEcho := BusInputTINEchoValue,
		BusInputSICCodeEcho := BusInputSICCodeEchoValue,
		BusInputNAICSCodeEcho := BusInputNAICSCodeEchoValue,
		BusInputArchiveDateEcho := BusInputArchiveDateEchoValue,
		BusInputRep1LexIDEcho := BusInputRep1LexIDEchoValue,
		BusInputRep1FirstNameEcho := BusInputRep1FirstNameEchoValue,
		BusInputRep1MiddleNameEcho := BusInputRep1MiddleNameEchoValue,
		BusInputRep1LastNameEcho := BusInputRep1LastNameEchoValue,
		BusInputRep1StreetEcho := BusInputRep1StreetEchoValue,
		BusInputRep1CityEcho := BusInputRep1CityEchoValue,
		BusInputRep1StateEcho := BusInputRep1StateEchoValue,
		BusInputRep1ZipEcho := BusInputRep1ZipEchoValue,
		BusInputRep1PhoneEcho := BusInputRep1PhoneEchoValue,
		BusInputRep1SSNEcho := BusInputRep1SSNEchoValue,
		BusInputRep1DOBEcho := BusInputRep1DOBEchoValue,
		BusInputRep1EmailEcho := BusInputRep1EmailEchoValue,
		BusInputRep1DLEcho := BusInputRep1DLEchoValue,
		BusInputRep1DLStateEcho := BusInputRep1DLStateEchoValue,
		BusInputRep2LexIDEcho := BusInputRep2LexIDEchoValue,
		BusInputRep2FirstNameEcho := BusInputRep2FirstNameEchoValue,
		BusInputRep2MiddleNameEcho := BusInputRep2MiddleNameEchoValue,
		BusInputRep2LastNameEcho := BusInputRep2LastNameEchoValue,
		BusInputRep2StreetEcho := BusInputRep2StreetEchoValue,
		BusInputRep2CityEcho := BusInputRep2CityEchoValue,
		BusInputRep2StateEcho := BusInputRep2StateEchoValue,
		BusInputRep2ZipEcho := BusInputRep2ZipEchoValue,
		BusInputRep2PhoneEcho := BusInputRep2PhoneEchoValue,
		BusInputRep2SSNEcho := BusInputRep2SSNEchoValue,
		BusInputRep2DOBEcho := BusInputRep2DOBEchoValue,
		BusInputRep2EmailEcho := BusInputRep2EmailEchoValue,
		BusInputRep2DLEcho := BusInputRep2DLEchoValue,
		BusInputRep2DLStateEcho := BusInputRep2DLStateEchoValue,
		BusInputRep3LexIDEcho := BusInputRep3LexIDEchoValue,
		BusInputRep3FirstNameEcho := BusInputRep3FirstNameEchoValue,
		BusInputRep3MiddleNameEcho := BusInputRep3MiddleNameEchoValue,
		BusInputRep3LastNameEcho := BusInputRep3LastNameEchoValue,
		BusInputRep3StreetEcho := BusInputRep3StreetEchoValue,
		BusInputRep3CityEcho := BusInputRep3CityEchoValue,
		BusInputRep3StateEcho := BusInputRep3StateEchoValue,
		BusInputRep3ZipEcho := BusInputRep3ZipEchoValue,
		BusInputRep3PhoneEcho := BusInputRep3PhoneEchoValue,
		BusInputRep3SSNEcho := BusInputRep3SSNEchoValue,
		BusInputRep3DOBEcho := BusInputRep3DOBEchoValue,
		BusInputRep3EmailEcho := BusInputRep3EmailEchoValue,
		BusInputRep3DLEcho := BusInputRep3DLEchoValue,
		BusInputRep3DLStateEcho := BusInputRep3DLStateEchoValue,
		BusInputRep4LexIDEcho := BusInputRep4LexIDEchoValue,
		BusInputRep4FirstNameEcho := BusInputRep4FirstNameEchoValue,
		BusInputRep4MiddleNameEcho := BusInputRep4MiddleNameEchoValue,
		BusInputRep4LastNameEcho := BusInputRep4LastNameEchoValue,
		BusInputRep4StreetEcho := BusInputRep4StreetEchoValue,
		BusInputRep4CityEcho := BusInputRep4CityEchoValue,
		BusInputRep4StateEcho := BusInputRep4StateEchoValue,
		BusInputRep4ZipEcho := BusInputRep4ZipEchoValue,
		BusInputRep4PhoneEcho := BusInputRep4PhoneEchoValue,
		BusInputRep4SSNEcho := BusInputRep4SSNEchoValue,
		BusInputRep4DOBEcho := BusInputRep4DOBEchoValue,
		BusInputRep4EmailEcho := BusInputRep4EmailEchoValue,
		BusInputRep4DLEcho := BusInputRep4DLEchoValue,
		BusInputRep4DLStateEcho := BusInputRep4DLStateEchoValue,
		BusInputRep5LexIDEcho := BusInputRep5LexIDEchoValue,
		BusInputRep5FirstNameEcho := BusInputRep5FirstNameEchoValue,
		BusInputRep5MiddleNameEcho := BusInputRep5MiddleNameEchoValue,
		BusInputRep5LastNameEcho := BusInputRep5LastNameEchoValue,
		BusInputRep5StreetEcho := BusInputRep5StreetEchoValue,
		BusInputRep5CityEcho := BusInputRep5CityEchoValue,
		BusInputRep5StateEcho := BusInputRep5StateEchoValue,
		BusInputRep5ZipEcho := BusInputRep5ZipEchoValue,
		BusInputRep5PhoneEcho := BusInputRep5PhoneEchoValue,
		BusInputRep5SSNEcho := BusInputRep5SSNEchoValue,
		BusInputRep5DOBEcho := BusInputRep5DOBEchoValue,
		BusInputRep5EmailEcho := BusInputRep5EmailEchoValue,
		BusInputRep5DLEcho := BusInputRep5DLEchoValue,
		BusInputRep5DLStateEcho := BusInputRep5DLStateEchoValue,
		//Business Clean 
		LexIDBusExtendedFamilyAppend := LexIDBusExtendedFamilyAppendValue,
		LexIDBusLegalFamilyAppend := LexIDBusLegalFamilyAppendValue,
		LexIDBusLegalEntityAppend := LexIDBusLegalEntityAppendValue,
		LexIDBusPlaceGroupAppend := LexIDBusPlaceGroupAppendValue,
		LexIDBusPlaceAppend := LexIDBusPlaceAppendValue,
		BusLexIDScoreAppend := BusLexIDScoreAppendValue,
		BusLexIDWeightAppend := BusLexIDWeightAppendValue,
		BusInputArchiveDateClean := BusInputArchiveDateCleanValue,
		BusInputNameClean := BusInputNameCleanValue,
		BusInputAlternateNameClean := BusInputAlternateNameCleanValue,
		BusInputPrimRangeClean := BusInputPrimRangeCleanValue,
		BusInputPreDirClean := BusInputPreDirCleanValue,
		BusInputPrimNameClean := BusInputPrimNameCleanValue,
		BusInputAddrSuffixClean := BusInputAddrSuffixCleanValue,
		BusInputPostDirClean := BusInputPostDirCleanValue,
		BusInputUnitDesigClean := BusInputUnitDesigCleanValue,
		BusInputSecRangeClean := BusInputSecRangeCleanValue,
		BusInputCityClean := BusInputCityCleanValue,
		BusInputStateClean := BusInputStateCleanValue,
		BusInputZip5Clean := BusInputZip5CleanValue,
		BusInputZip4Clean := BusInputZip4CleanValue,
		BusInputStreetClean := BusInputStreetCleanValue,
		BusInputFullAddressClean := BusInputFullAddressCleanValue,
		BusInputLatitudeClean := BusInputLatitudeCleanValue,
		BusInputLongitudeClean := BusInputLongitudeCleanValue,
		BusInputCountyClean := BusInputCountyCleanValue,
		BusInputGeoblockClean := BusInputGeoblockCleanValue,
		BusInputAddrTypeClean := BusInputAddrTypeCleanValue,
		BusInputAddrStatusClean := BusInputAddrStatusCleanValue,
		BusInputPhoneClean := BusInputPhoneCleanValue,
		BusInputTINClean := BusInputTINCleanValue,
		BusInputEmailClean := BusInputEmailCleanValue,
		//Rep 1 Clean
		LexIDForRep1Append, 
		LexIDScoreForRep1Append, 
		BusInputRep1PrefixClean,
		BusInputRep1FirstNameClean,
		BusInputRep1MiddleNameClean,
		BusInputRep1LastNameClean,
		BusInputRep1SuffixClean,
		BusInputRep1PrimRangeClean,
		BusInputRep1PreDirClean,
		BusInputRep1PrimNameClean,
		BusInputRep1AddrSuffixClean,
		BusInputRep1PostDirClean,
		BusInputRep1UnitDesigClean,
		BusInputRep1SecRangeClean,
		BusInputRep1CityClean,
		BusInputRep1StateClean,
		BusInputRep1Zip5Clean,
		BusInputRep1Zip4Clean,
		BusInputRep1StreetClean,
		BusInputRep1FullAddressClean,
		BusInputRep1LatitudeClean,
		BusInputRep1LongitudeClean,
		BusInputRep1CountyClean,
		BusInputRep1GeoblockClean,
		BusInputRep1AddrTypeClean,
		BusInputRep1AddrStatusClean,
		BusInputRep1PhoneClean,
		BusInputRep1SSNClean,
		BusInputRep1DOBClean,
		BusInputRep1DLClean,
		BusInputRep1DLStateClean,
		BusInputRep1EmailClean, 
		// Rep 2 Clean
		LexIDForRep2Append, 
		LexIDScoreForRep2Append, 
		BusInputRep2PrefixClean,
		BusInputRep2FirstNameClean,
		BusInputRep2MiddleNameClean,
		BusInputRep2LastNameClean,
		BusInputRep2SuffixClean,
		BusInputRep2PrimRangeClean,
		BusInputRep2PreDirClean,
		BusInputRep2PrimNameClean,
		BusInputRep2AddrSuffixClean,
		BusInputRep2PostDirClean,
		BusInputRep2UnitDesigClean,
		BusInputRep2SecRangeClean,
		BusInputRep2CityClean,
		BusInputRep2StateClean,
		BusInputRep2Zip5Clean,
		BusInputRep2Zip4Clean,
		BusInputRep2StreetClean,
		BusInputRep2FullAddressClean,
		BusInputRep2LatitudeClean,
		BusInputRep2LongitudeClean,
		BusInputRep2CountyClean,
		BusInputRep2GeoblockClean,
		BusInputRep2AddrTypeClean,
		BusInputRep2AddrStatusClean,
		BusInputRep2PhoneClean,
		BusInputRep2SSNClean,
		BusInputRep2DOBClean,
		BusInputRep2DLClean,
		BusInputRep2DLStateClean,
		BusInputRep2EmailClean,
		// Rep 3 Clean
		LexIDForRep3Append, 
		LexIDScoreForRep3Append, 
		BusInputRep3PrefixClean,
		BusInputRep3FirstNameClean,
		BusInputRep3MiddleNameClean,
		BusInputRep3LastNameClean,
		BusInputRep3SuffixClean,
		BusInputRep3PrimRangeClean,
		BusInputRep3PreDirClean,
		BusInputRep3PrimNameClean,
		BusInputRep3AddrSuffixClean,
		BusInputRep3PostDirClean,
		BusInputRep3UnitDesigClean,
		BusInputRep3SecRangeClean,
		BusInputRep3CityClean,
		BusInputRep3StateClean,
		BusInputRep3Zip5Clean,
		BusInputRep3Zip4Clean,
		BusInputRep3StreetClean,
		BusInputRep3FullAddressClean,
		BusInputRep3LatitudeClean,
		BusInputRep3LongitudeClean,
		BusInputRep3CountyClean,
		BusInputRep3GeoblockClean,
		BusInputRep3AddrTypeClean,
		BusInputRep3AddrStatusClean,
		BusInputRep3PhoneClean,
		BusInputRep3SSNClean,
		BusInputRep3DOBClean,
		BusInputRep3DLClean,
		BusInputRep3DLStateClean,
		BusInputRep3EmailClean,
		// Rep 4 Clean
		LexIDForRep4Append, 
		LexIDScoreForRep4Append, 
		BusInputRep4PrefixClean,
		BusInputRep4FirstNameClean,
		BusInputRep4MiddleNameClean,
		BusInputRep4LastNameClean,
		BusInputRep4SuffixClean,
		BusInputRep4PrimRangeClean,
		BusInputRep4PreDirClean,
		BusInputRep4PrimNameClean,
		BusInputRep4AddrSuffixClean,
		BusInputRep4PostDirClean,
		BusInputRep4UnitDesigClean,
		BusInputRep4SecRangeClean,
		BusInputRep4CityClean,
		BusInputRep4StateClean,
		BusInputRep4Zip5Clean,
		BusInputRep4Zip4Clean,
		BusInputRep4StreetClean,
		BusInputRep4FullAddressClean,
		BusInputRep4LatitudeClean,
		BusInputRep4LongitudeClean,
		BusInputRep4CountyClean,
		BusInputRep4GeoblockClean,
		BusInputRep4AddrTypeClean,
		BusInputRep4AddrStatusClean,
		BusInputRep4PhoneClean,
		BusInputRep4SSNClean,
		BusInputRep4DOBClean,
		BusInputRep4DLClean,
		BusInputRep4DLStateClean,
		BusInputRep4EmailClean,
		// Rep 5 Clean
		LexIDForRep5Append, 
		LexIDScoreForRep5Append, 
		BusInputRep5PrefixClean,
		BusInputRep5FirstNameClean,
		BusInputRep5MiddleNameClean,
		BusInputRep5LastNameClean,
		BusInputRep5SuffixClean,
		BusInputRep5PrimRangeClean,
		BusInputRep5PreDirClean,
		BusInputRep5PrimNameClean,
		BusInputRep5AddrSuffixClean,
		BusInputRep5PostDirClean,
		BusInputRep5UnitDesigClean,
		BusInputRep5SecRangeClean,
		BusInputRep5CityClean,
		BusInputRep5StateClean,
		BusInputRep5Zip5Clean,
		BusInputRep5Zip4Clean,
		BusInputRep5StreetClean,
		BusInputRep5FullAddressClean,
		BusInputRep5LatitudeClean,
		BusInputRep5LongitudeClean,
		BusInputRep5CountyClean,
		BusInputRep5GeoblockClean,
		BusInputRep5AddrTypeClean,
		BusInputRep5AddrStatusClean,
		BusInputRep5PhoneClean,
		BusInputRep5SSNClean,
		BusInputRep5DOBClean,
		BusInputRep5DLClean,
		BusInputRep5DLStateClean,
		BusInputRep5EmailClean,
		//Echo Pop	
		BusInputArchiveDateEchoPop := BusInputArchiveDateEchoPopValue,
		BusInputNameEchoPop := BusInputNameEchoPopValue,
		BusInputAlternateNameEchoPop := BusInputAlternateNameEchoPopValue,
		BusInputStreetEchoPop := BusInputStreetEchoPopValue,
		BusInputCityEchoPop := BusInputCityEchoPopValue,
		BusInputStateEchoPop := BusInputStateEchoPopValue,
		BusInputZipEchoPop := BusInputZipEchoPopValue,
		BusInputPhoneEchoPop := BusInputPhoneEchoPopValue,
		BusInputTINEchoPop := BusInputTINEchoPopValue,
		BusInputSICCodeEchoPop := BusInputSICCodeEchoPopValue,
		BusInputNAICSCodeEchoPop := BusInputNAICSCodeEchoPopValue,
		BusInputRep1LexIDEchoPop := BusInputRep1LexIDEchoPopValue,
		BusInputRep1FirstNameEchoPop := BusInputRep1FirstNameEchoPopValue,
		BusInputRep1MiddleNameEchoPop := BusInputRep1MiddleNameEchoPopValue,
		BusInputRep1LastNameEchoPop := BusInputRep1LastNameEchoPopValue,
		BusInputRep1StreetEchoPop := BusInputRep1StreetEchoPopValue,
		BusInputRep1CityEchoPop := BusInputRep1CityEchoPopValue,
		BusInputRep1StateEchoPop := BusInputRep1StateEchoPopValue,
		BusInputRep1ZipEchoPop := BusInputRep1ZipEchoPopValue,
		BusInputRep1PhoneEchoPop := BusInputRep1PhoneEchoPopValue,
		BusInputRep1SSNEchoPop := BusInputRep1SSNEchoPopValue,
		BusInputRep1DOBEchoPop := BusInputRep1DOBEchoPopValue,
		BusInputRep1EmailEchoPop := BusInputRep1EmailEchoPopValue,
		BusInputRep1DLEchoPop := BusInputRep1DLEchoPopValue,
		BusInputRep1DLStateEchoPop := BusInputRep1DLStateEchoPopValue,
		BusInputRep2LexIDEchoPop := BusInputRep2LexIDEchoPopValue,
		BusInputRep2FirstNameEchoPop := BusInputRep2FirstNameEchoPopValue,
		BusInputRep2MiddleNameEchoPop := BusInputRep2MiddleNameEchoPopValue,
		BusInputRep2LastNameEchoPop := BusInputRep2LastNameEchoPopValue,
		BusInputRep2StreetEchoPop := BusInputRep2StreetEchoPopValue,
		BusInputRep2CityEchoPop := BusInputRep2CityEchoPopValue,
		BusInputRep2StateEchoPop := BusInputRep2StateEchoPopValue,
		BusInputRep2ZipEchoPop := BusInputRep2ZipEchoPopValue,
		BusInputRep2PhoneEchoPop := BusInputRep2PhoneEchoPopValue,
		BusInputRep2SSNEchoPop := BusInputRep2SSNEchoPopValue,
		BusInputRep2DOBEchoPop := BusInputRep2DOBEchoPopValue,
		BusInputRep2EmailEchoPop := BusInputRep2EmailEchoPopValue,
		BusInputRep2DLEchoPop := BusInputRep2DLEchoPopValue,
		BusInputRep2DLStateEchoPop := BusInputRep2DLStateEchoPopValue,
		BusInputRep3LexIDEchoPop := BusInputRep3LexIDEchoPopValue,
		BusInputRep3FirstNameEchoPop := BusInputRep3FirstNameEchoPopValue,
		BusInputRep3MiddleNameEchoPop := BusInputRep3MiddleNameEchoPopValue,
		BusInputRep3LastNameEchoPop := BusInputRep3LastNameEchoPopValue,
		BusInputRep3StreetEchoPop := BusInputRep3StreetEchoPopValue,
		BusInputRep3CityEchoPop := BusInputRep3CityEchoPopValue,
		BusInputRep3StateEchoPop := BusInputRep3StateEchoPopValue,
		BusInputRep3ZipEchoPop := BusInputRep3ZipEchoPopValue,
		BusInputRep3PhoneEchoPop := BusInputRep3PhoneEchoPopValue,
		BusInputRep3SSNEchoPop := BusInputRep3SSNEchoPopValue,
		BusInputRep3DOBEchoPop := BusInputRep3DOBEchoPopValue,
		BusInputRep3EmailEchoPop := BusInputRep3EmailEchoPopValue,
		BusInputRep3DLEchoPop := BusInputRep3DLEchoPopValue,
		BusInputRep3DLStateEchoPop := BusInputRep3DLStateEchoPopValue,
		BusInputRep4LexIDEchoPop := BusInputRep4LexIDEchoPopValue,
		BusInputRep4FirstNameEchoPop := BusInputRep4FirstNameEchoPopValue,
		BusInputRep4MiddleNameEchoPop := BusInputRep4MiddleNameEchoPopValue,
		BusInputRep4LastNameEchoPop := BusInputRep4LastNameEchoPopValue,
		BusInputRep4StreetEchoPop := BusInputRep4StreetEchoPopValue,
		BusInputRep4CityEchoPop := BusInputRep4CityEchoPopValue,
		BusInputRep4StateEchoPop := BusInputRep4StateEchoPopValue,
		BusInputRep4ZipEchoPop := BusInputRep4ZipEchoPopValue,
		BusInputRep4PhoneEchoPop := BusInputRep4PhoneEchoPopValue,
		BusInputRep4SSNEchoPop := BusInputRep4SSNEchoPopValue,
		BusInputRep4DOBEchoPop := BusInputRep4DOBEchoPopValue,
		BusInputRep4EmailEchoPop := BusInputRep4EmailEchoPopValue,
		BusInputRep4DLEchoPop := BusInputRep4DLEchoPopValue,
		BusInputRep4DLStateEchoPop := BusInputRep4DLStateEchoPopValue,
		BusInputRep5LexIDEchoPop := BusInputRep5LexIDEchoPopValue,
		BusInputRep5FirstNameEchoPop := BusInputRep5FirstNameEchoPopValue,
		BusInputRep5MiddleNameEchoPop := BusInputRep5MiddleNameEchoPopValue,
		BusInputRep5LastNameEchoPop := BusInputRep5LastNameEchoPopValue,
		BusInputRep5StreetEchoPop := BusInputRep5StreetEchoPopValue,
		BusInputRep5CityEchoPop := BusInputRep5CityEchoPopValue,
		BusInputRep5StateEchoPop := BusInputRep5StateEchoPopValue,
		BusInputRep5ZipEchoPop := BusInputRep5ZipEchoPopValue,
		BusInputRep5PhoneEchoPop := BusInputRep5PhoneEchoPopValue,
		BusInputRep5SSNEchoPop := BusInputRep5SSNEchoPopValue,
		BusInputRep5DOBEchoPop := BusInputRep5DOBEchoPopValue,
		BusInputRep5EmailEchoPop := BusInputRep5EmailEchoPopValue,
		BusInputRep5DLEchoPop := BusInputRep5DLEchoPopValue,
		BusInputRep5DLStateEchoPop := BusInputRep5DLStateEchoPopValue,
		//Clean Pop	
		BusInputNameCleanPop := BusInputNameCleanPopValue,
		BusInputAlternateNameCleanPop := BusInputAlternateNameCleanPopValue,
		BusInputPrimRangeCleanPop := BusInputPrimRangeCleanPopValue,
		BusInputPreDirCleanPop := BusInputPreDirCleanPopValue,
		BusInputPrimNameCleanPop := BusInputPrimNameCleanPopValue,
		BusInputAddrSuffixCleanPop := BusInputAddrSuffixCleanPopValue,
		BusInputPostDirCleanPop := BusInputPostDirCleanPopValue,
		BusInputUnitDesigCleanPop := BusInputUnitDesigCleanPopValue,
		BusInputSecRangeCleanPop := BusInputSecRangeCleanPopValue,
		BusInputCityCleanPop := BusInputCityCleanPopValue,
		BusInputStateCleanPop := BusInputStateCleanPopValue,
		BusInputZip5CleanPop := BusInputZip5CleanPopValue,
		BusInputZip4CleanPop := BusInputZip4CleanPopValue,
		BusInputStreetCleanPop := BusInputStreetCleanPopValue,
		BusInputFullAddressCleanPop := BusInputFullAddressCleanPopValue,
		BusInputLatitudeCleanPop := BusInputLatitudeCleanPopValue,
		BusInputLongitudeCleanPop := BusInputLongitudeCleanPopValue,
		BusInputCountyCleanPop := BusInputCountyCleanPopValue,
		BusInputGeoblockCleanPop := BusInputGeoblockCleanPopValue,
		BusInputAddrTypeCleanPop := BusInputAddrTypeCleanPopValue,
		BusInputAddrStatusCleanPop := BusInputAddrStatusCleanPopValue,
		BusInputPhoneCleanPop := BusInputPhoneCleanPopValue,
		BusInputTINCleanPop := BusInputTINCleanPopValue,
		BusInputEmailCleanPop := BusInputEmailCleanPopValue,
		BusInputArchiveDateCleanPop := BusInputArchiveDateCleanPopValue,
		BusInputRep1PrefixCleanPop := BusInputRep1PrefixCleanPopValue,
		BusInputRep1FirstNameCleanPop := BusInputRep1FirstNameCleanPopValue,
		BusInputRep1MiddleNameCleanPop := BusInputRep1MiddleNameCleanPopValue,
		BusInputRep1LastNameCleanPop := BusInputRep1LastNameCleanPopValue,
		BusInputRep1SuffixCleanPop := BusInputRep1SuffixCleanPopValue,
		BusInputRep1PrimRangeCleanPop := BusInputRep1PrimRangeCleanPopValue,
		BusInputRep1PreDirCleanPop := BusInputRep1PreDirCleanPopValue,
		BusInputRep1PrimNameCleanPop := BusInputRep1PrimNameCleanPopValue,
		BusInputRep1AddrSuffixCleanPop := BusInputRep1AddrSuffixCleanPopValue,
		BusInputRep1PostDirCleanPop := BusInputRep1PostDirCleanPopValue,
		BusInputRep1UnitDesigCleanPop := BusInputRep1UnitDesigCleanPopValue,
		BusInputRep1SecRangeCleanPop := BusInputRep1SecRangeCleanPopValue,
		BusInputRep1CityCleanPop := BusInputRep1CityCleanPopValue,
		BusInputRep1StateCleanPop := BusInputRep1StateCleanPopValue,
		BusInputRep1Zip5CleanPop := BusInputRep1Zip5CleanPopValue,
		BusInputRep1Zip4CleanPop := BusInputRep1Zip4CleanPopValue,
		BusInputRep1StreetCleanPop := BusInputRep1StreetCleanPopValue,
		BusInputRep1FullAddressCleanPop := BusInputRep1FullAddressCleanPopValue,
		BusInputRep1LatitudeCleanPop := BusInputRep1LatitudeCleanPopValue,
		BusInputRep1LongitudeCleanPop := BusInputRep1LongitudeCleanPopValue,
		BusInputRep1CountyCleanPop := BusInputRep1CountyCleanPopValue,
		BusInputRep1GeoblockCleanPop := BusInputRep1GeoblockCleanPopValue,
		BusInputRep1AddrTypeCleanPop := BusInputRep1AddrTypeCleanPopValue,
		BusInputRep1AddrStatusCleanPop := BusInputRep1AddrStatusCleanPopValue,
		BusInputRep1PhoneCleanPop := BusInputRep1PhoneCleanPopValue,
		BusInputRep1SSNCleanPop := BusInputRep1SSNCleanPopValue,
		BusInputRep1DOBCleanPop := BusInputRep1DOBCleanPopValue,
		BusInputRep1EmailCleanPop := BusInputRep1EmailCleanPopValue,
		BusInputRep1DLCleanPop := BusInputRep1DLCleanPopValue,
		BusInputRep1DLStateCleanPop := BusInputRep1DLStateCleanPopValue,
		BusInputRep2PrefixCleanPop := BusInputRep2PrefixCleanPopValue,
		BusInputRep2FirstNameCleanPop := BusInputRep2FirstNameCleanPopValue,
		BusInputRep2MiddleNameCleanPop := BusInputRep2MiddleNameCleanPopValue,
		BusInputRep2LastNameCleanPop := BusInputRep2LastNameCleanPopValue,
		BusInputRep2SuffixCleanPop := BusInputRep2SuffixCleanPopValue,
		BusInputRep2PrimRangeCleanPop := BusInputRep2PrimRangeCleanPopValue,
		BusInputRep2PreDirCleanPop := BusInputRep2PreDirCleanPopValue,
		BusInputRep2PrimNameCleanPop := BusInputRep2PrimNameCleanPopValue,
		BusInputRep2AddrSuffixCleanPop := BusInputRep2AddrSuffixCleanPopValue,
		BusInputRep2PostDirCleanPop := BusInputRep2PostDirCleanPopValue,
		BusInputRep2UnitDesigCleanPop := BusInputRep2UnitDesigCleanPopValue,
		BusInputRep2SecRangeCleanPop := BusInputRep2SecRangeCleanPopValue,
		BusInputRep2CityCleanPop := BusInputRep2CityCleanPopValue,
		BusInputRep2StateCleanPop := BusInputRep2StateCleanPopValue,
		BusInputRep2Zip5CleanPop := BusInputRep2Zip5CleanPopValue,
		BusInputRep2Zip4CleanPop := BusInputRep2Zip4CleanPopValue,
		BusInputRep2StreetCleanPop := BusInputRep2StreetCleanPopValue,
		BusInputRep2FullAddressCleanPop := BusInputRep2FullAddressCleanPopValue,
		BusInputRep2LatitudeCleanPop := BusInputRep2LatitudeCleanPopValue,
		BusInputRep2LongitudeCleanPop := BusInputRep2LongitudeCleanPopValue,
		BusInputRep2CountyCleanPop := BusInputRep2CountyCleanPopValue,
		BusInputRep2GeoblockCleanPop := BusInputRep2GeoblockCleanPopValue,
		BusInputRep2AddrTypeCleanPop := BusInputRep2AddrTypeCleanPopValue,
		BusInputRep2AddrStatusCleanPop := BusInputRep2AddrStatusCleanPopValue,
		BusInputRep2PhoneCleanPop := BusInputRep2PhoneCleanPopValue,
		BusInputRep2SSNCleanPop := BusInputRep2SSNCleanPopValue,
		BusInputRep2DOBCleanPop := BusInputRep2DOBCleanPopValue,
		BusInputRep2EmailCleanPop := BusInputRep2EmailCleanPopValue,
		BusInputRep2DLCleanPop := BusInputRep2DLCleanPopValue,
		BusInputRep2DLStateCleanPop := BusInputRep2DLStateCleanPopValue,
		BusInputRep3PrefixCleanPop := BusInputRep3PrefixCleanPopValue,
		BusInputRep3FirstNameCleanPop := BusInputRep3FirstNameCleanPopValue,
		BusInputRep3MiddleNameCleanPop := BusInputRep3MiddleNameCleanPopValue,
		BusInputRep3LastNameCleanPop := BusInputRep3LastNameCleanPopValue,
		BusInputRep3SuffixCleanPop := BusInputRep3SuffixCleanPopValue,
		BusInputRep3PrimRangeCleanPop := BusInputRep3PrimRangeCleanPopValue,
		BusInputRep3PreDirCleanPop := BusInputRep3PreDirCleanPopValue,
		BusInputRep3PrimNameCleanPop := BusInputRep3PrimNameCleanPopValue,
		BusInputRep3AddrSuffixCleanPop := BusInputRep3AddrSuffixCleanPopValue,
		BusInputRep3PostDirCleanPop := BusInputRep3PostDirCleanPopValue,
		BusInputRep3UnitDesigCleanPop := BusInputRep3UnitDesigCleanPopValue,
		BusInputRep3SecRangeCleanPop := BusInputRep3SecRangeCleanPopValue,
		BusInputRep3CityCleanPop := BusInputRep3CityCleanPopValue,
		BusInputRep3StateCleanPop := BusInputRep3StateCleanPopValue,
		BusInputRep3Zip5CleanPop := BusInputRep3Zip5CleanPopValue,
		BusInputRep3Zip4CleanPop := BusInputRep3Zip4CleanPopValue,
		BusInputRep3StreetCleanPop := BusInputRep3StreetCleanPopValue,
		BusInputRep3FullAddressCleanPop := BusInputRep3FullAddressCleanPopValue,
		BusInputRep3LatitudeCleanPop := BusInputRep3LatitudeCleanPopValue,
		BusInputRep3LongitudeCleanPop := BusInputRep3LongitudeCleanPopValue,
		BusInputRep3CountyCleanPop := BusInputRep3CountyCleanPopValue,
		BusInputRep3GeoblockCleanPop := BusInputRep3GeoblockCleanPopValue,
		BusInputRep3AddrTypeCleanPop := BusInputRep3AddrTypeCleanPopValue,
		BusInputRep3AddrStatusCleanPop := BusInputRep3AddrStatusCleanPopValue,
		BusInputRep3PhoneCleanPop := BusInputRep3PhoneCleanPopValue,
		BusInputRep3SSNCleanPop := BusInputRep3SSNCleanPopValue,
		BusInputRep3DOBCleanPop := BusInputRep3DOBCleanPopValue,
		BusInputRep3EmailCleanPop := BusInputRep3EmailCleanPopValue,
		BusInputRep3DLCleanPop := BusInputRep3DLCleanPopValue,
		BusInputRep3DLStateCleanPop := BusInputRep3DLStateCleanPopValue,
		BusInputRep4PrefixCleanPop := BusInputRep4PrefixCleanPopValue,
		BusInputRep4FirstNameCleanPop := BusInputRep4FirstNameCleanPopValue,
		BusInputRep4MiddleNameCleanPop := BusInputRep4MiddleNameCleanPopValue,
		BusInputRep4LastNameCleanPop := BusInputRep4LastNameCleanPopValue,
		BusInputRep4SuffixCleanPop := BusInputRep4SuffixCleanPopValue,
		BusInputRep4PrimRangeCleanPop := BusInputRep4PrimRangeCleanPopValue,
		BusInputRep4PreDirCleanPop := BusInputRep4PreDirCleanPopValue,
		BusInputRep4PrimNameCleanPop := BusInputRep4PrimNameCleanPopValue,
		BusInputRep4AddrSuffixCleanPop := BusInputRep4AddrSuffixCleanPopValue,
		BusInputRep4PostDirCleanPop := BusInputRep4PostDirCleanPopValue,
		BusInputRep4UnitDesigCleanPop := BusInputRep4UnitDesigCleanPopValue,
		BusInputRep4SecRangeCleanPop := BusInputRep4SecRangeCleanPopValue,
		BusInputRep4CityCleanPop := BusInputRep4CityCleanPopValue,
		BusInputRep4StateCleanPop := BusInputRep4StateCleanPopValue,
		BusInputRep4Zip5CleanPop := BusInputRep4Zip5CleanPopValue,
		BusInputRep4Zip4CleanPop := BusInputRep4Zip4CleanPopValue,
		BusInputRep4StreetCleanPop := BusInputRep4StreetCleanPopValue,
		BusInputRep4FullAddressCleanPop := BusInputRep4FullAddressCleanPopValue,
		BusInputRep4LatitudeCleanPop := BusInputRep4LatitudeCleanPopValue,
		BusInputRep4LongitudeCleanPop := BusInputRep4LongitudeCleanPopValue,
		BusInputRep4CountyCleanPop := BusInputRep4CountyCleanPopValue,
		BusInputRep4GeoblockCleanPop := BusInputRep4GeoblockCleanPopValue,
		BusInputRep4AddrTypeCleanPop := BusInputRep4AddrTypeCleanPopValue,
		BusInputRep4AddrStatusCleanPop := BusInputRep4AddrStatusCleanPopValue,
		BusInputRep4PhoneCleanPop := BusInputRep4PhoneCleanPopValue,
		BusInputRep4SSNCleanPop := BusInputRep4SSNCleanPopValue,
		BusInputRep4DOBCleanPop := BusInputRep4DOBCleanPopValue,
		BusInputRep4EmailCleanPop := BusInputRep4EmailCleanPopValue,
		BusInputRep4DLCleanPop := BusInputRep4DLCleanPopValue,
		BusInputRep4DLStateCleanPop := BusInputRep4DLStateCleanPopValue,
		BusInputRep5PrefixCleanPop := BusInputRep5PrefixCleanPopValue,
		BusInputRep5FirstNameCleanPop := BusInputRep5FirstNameCleanPopValue,
		BusInputRep5MiddleNameCleanPop := BusInputRep5MiddleNameCleanPopValue,
		BusInputRep5LastNameCleanPop := BusInputRep5LastNameCleanPopValue,
		BusInputRep5SuffixCleanPop := BusInputRep5SuffixCleanPopValue,
		BusInputRep5PrimRangeCleanPop := BusInputRep5PrimRangeCleanPopValue,
		BusInputRep5PreDirCleanPop := BusInputRep5PreDirCleanPopValue,
		BusInputRep5PrimNameCleanPop := BusInputRep5PrimNameCleanPopValue,
		BusInputRep5AddrSuffixCleanPop := BusInputRep5AddrSuffixCleanPopValue,
		BusInputRep5PostDirCleanPop := BusInputRep5PostDirCleanPopValue,
		BusInputRep5UnitDesigCleanPop := BusInputRep5UnitDesigCleanPopValue,
		BusInputRep5SecRangeCleanPop := BusInputRep5SecRangeCleanPopValue,
		BusInputRep5CityCleanPop := BusInputRep5CityCleanPopValue,
		BusInputRep5StateCleanPop := BusInputRep5StateCleanPopValue,
		BusInputRep5Zip5CleanPop := BusInputRep5Zip5CleanPopValue,
		BusInputRep5Zip4CleanPop := BusInputRep5Zip4CleanPopValue,
		BusInputRep5StreetCleanPop := BusInputRep5StreetCleanPopValue,
		BusInputRep5FullAddressCleanPop := BusInputRep5FullAddressCleanPopValue,
		BusInputRep5LatitudeCleanPop := BusInputRep5LatitudeCleanPopValue,
		BusInputRep5LongitudeCleanPop := BusInputRep5LongitudeCleanPopValue,
		BusInputRep5CountyCleanPop := BusInputRep5CountyCleanPopValue,
		BusInputRep5GeoblockCleanPop := BusInputRep5GeoblockCleanPopValue,
		BusInputRep5AddrTypeCleanPop := BusInputRep5AddrTypeCleanPopValue,
		BusInputRep5AddrStatusCleanPop := BusInputRep5AddrStatusCleanPopValue,
		BusInputRep5PhoneCleanPop := BusInputRep5PhoneCleanPopValue,
		BusInputRep5SSNCleanPop := BusInputRep5SSNCleanPopValue,
		BusInputRep5DOBCleanPop := BusInputRep5DOBCleanPopValue,
		BusInputRep5EmailCleanPop := BusInputRep5EmailCleanPopValue,
		BusInputRep5DLCleanPop := BusInputRep5DLCleanPopValue,
		BusInputRep5DLStateCleanPop := BusInputRep5DLStateCleanPopValue}
	USING DPM
	USE InputPIIDataset(FLAT,
		InputPII(UID = InputUIDAppend),
		InputBIIInputPII(PII = InputUIDAppend, BII = BusInputUIDAppend)),
		InputBIIDataset(FLAT, InputBII(UID = BusInputUIDAppend));

 QUERY: NonFCRAPersonAttributesV1(SET OF Person LexIDs, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Person(UID IN LexIDs){
		LexID := UID,
		// Criminal Attributes 
		FelonyCnt1Y, 
		FelonyCnt7Y, 
		FelonyNew1Y, 
		FelonyOld1Y, 
		FelonyNew7Y, 
		FelonyOld7Y, 
		MonSinceNewestFelonyCnt1Y, 
		MonSinceOldestFelonyCnt1Y, 
		MonSinceNewestFelonyCnt7Y, 
		MonSinceOldestFelonyCnt7Y,
		NonFelonyCnt1Y, 
		NonfelonyCnt7Y, 
		NonfelonyNew1Y, 
		NonfelonyOld1Y, 
		NonfelonyNew7Y, 
		NonfelonyOld7Y, 
		MonSinceNewestNonfelonyCnt1Y, 
		MonSinceOldestNonfelonyCnt1Y, 
		MonSinceNewestNonfelonyCnt7Y, 
		MonSinceOldestNonfelonyCnt7Y,
		ArrestCnt1Y,
		ArrestCnt7Y,
		ArrestNew1Y,
		ArrestOld1Y,
		ArrestNew7Y,
		ArrestOld7Y,
		MonSinceNewestArrestCnt1Y,
		MonSinceOldestArrestCnt1Y,
		MonSinceNewestArrestCnt7Y,
		MonSinceOldestArrestCnt7Y,
		CrimCnt1Y,
		CrimCnt7Y,
		CrimNew1Y,
		CrimOld1Y,
		CrimNew7Y,
		CrimOld7Y,
		MonSinceNewestCrimCnt1Y,
		MonSinceOldestCrimCnt1Y,
		MonSinceNewestCrimCnt7Y,
		MonSinceOldestCrimCnt7Y,
		CrimSeverityIndex7Y,
		CrimBehaviorIndex7Y,
		// Bankruptcy Attributes
		BkCnt1Y,
		BkCnt7Y,
		BkCnt10Y,
		DtOfBksList1Y,
		DtOfBksList7Y,
		DtOfBksList10Y,
		BkNew1Y,
		BkNew7Y,
		BkNew10Y,
		BkOld1Y,
		BkOld7Y,
		BkOld10Y,
		MonSinceNewestBkCnt1Y,
		MonSinceNewestBkCnt7Y,
		MonSinceNewestBkCnt10Y,
		MonSinceOldestBkCnt1Y,
		MonSinceOldestBkCnt7Y,
		MonSinceOldestBkCnt10Y,
		ChForBksList1Y,
		ChForBksList7Y,
		ChForBksList10Y,
		BkWithNewestDateCh1Y, 
		BkWithNewestDateCh7Y, 
		BkWithNewestDateCh10Y,
		BkUnderCh7Cnt1Y,
		BkUnderCh7Cnt7Y,
		BkUnderCh7Cnt10Y,
		BkUnderCh13Cnt1Y,
		BkUnderCh13Cnt7Y,
		BkUnderCh13Cnt10Y,
		NewestBkUpdateDt1Y,
		NewestBkUpdateDt7Y,
		NewestBkUpdateDt10Y,
		MonSinceNewestBkUpdateCnt1Y,
		MonSinceNewestBkUpdateCnt7Y,
		MonSinceNewestBkUpdateCnt10Y,
		DispOfBksList1Y,
		DispOfBksList7Y,
		DispOfBksList10Y,
		BkWithNewestDateDisp1Y,
		BkWithNewestDateDisp7Y,
		BkWithNewestDateDisp10Y,
		DispOfNewestBkDt1Y,
		DispOfNewestBkDt7Y,
		DispOfNewestBkDt10Y,
		MonSinceDispOfNewestBkCnt1Y,
		MonSinceDispOfNewestBkCnt7Y,
		MonSinceDispOfNewestBkCnt10Y,
		BkDisposedCnt1Y,
		BkDisposedCnt7Y,
		BkDisposedCnt10Y,
		BkDismissedCnt1Y,
		BkDismissedCnt7Y,
		BkDismissedCnt10Y,
		BkDischargedCnt1Y,
		BkDischargedCnt7Y,
		BkDischargedCnt10Y,
		TypeOfBksList1Y,
		TypeOfBksList7Y,
		TypeOfBksList10Y,
		BkHavingBusTypeFlag1Y,
		BkHavingBusTypeFlag7Y,
		BkHavingBusTypeFlag10Y,
		BkSeverityIndex10Y
		} 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

 QUERY: FCRAPersonAttributesV1(SET OF Person LexIDs, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Person(UID IN LexIDs){
		LexID := UID,
		// Criminal Attributes 
		FelonyCnt1Y, 
		FelonyCnt7Y, 
		FelonyNew1Y, 
		FelonyOld1Y, 
		FelonyNew7Y, 
		FelonyOld7Y, 
		MonSinceNewestFelonyCnt1Y, 
		MonSinceOldestFelonyCnt1Y, 
		MonSinceNewestFelonyCnt7Y, 
		MonSinceOldestFelonyCnt7Y,
		NonFelonyCnt1Y, 
		NonfelonyCnt7Y, 
		NonfelonyNew1Y, 
		NonfelonyOld1Y, 
		NonfelonyNew7Y, 
		NonfelonyOld7Y, 
		MonSinceNewestNonfelonyCnt1Y, 
		MonSinceOldestNonfelonyCnt1Y, 
		MonSinceNewestNonfelonyCnt7Y, 
		MonSinceOldestNonfelonyCnt7Y,
		CrimCnt1Y,
		CrimCnt7Y,
		CrimNew1Y,
		CrimOld1Y,
		CrimNew7Y,
		CrimOld7Y,
		MonSinceNewestCrimCnt1Y,
		MonSinceOldestCrimCnt1Y,
		MonSinceNewestCrimCnt7Y,
		MonSinceOldestCrimCnt7Y,
		CrimSeverityIndex7Y,
		CrimBehaviorIndex7Y,
		// Bankruptcy Attributes
		BkCnt1Y,
		BkCnt7Y,
		BkCnt10Y,
		DtOfBksList1Y,
		DtOfBksList7Y,
		DtOfBksList10Y,
		BkNew1Y,
		BkNew7Y,
		BkNew10Y,
		BkOld1Y,
		BkOld7Y,
		BkOld10Y,
		MonSinceNewestBkCnt1Y,
		MonSinceNewestBkCnt7Y,
		MonSinceNewestBkCnt10Y,
		MonSinceOldestBkCnt1Y,
		MonSinceOldestBkCnt7Y,
		MonSinceOldestBkCnt10Y,
		ChForBksList1Y,
		ChForBksList7Y,
		ChForBksList10Y,
		BkWithNewestDateCh1Y, 
		BkWithNewestDateCh7Y, 
		BkWithNewestDateCh10Y,
		BkUnderCh7Cnt1Y,
		BkUnderCh7Cnt7Y,
		BkUnderCh7Cnt10Y,
		BkUnderCh13Cnt1Y,
		BkUnderCh13Cnt7Y,
		BkUnderCh13Cnt10Y,
		NewestBkUpdateDt1Y,
		NewestBkUpdateDt7Y,
		NewestBkUpdateDt10Y,
		MonSinceNewestBkUpdateCnt1Y,
		MonSinceNewestBkUpdateCnt7Y,
		MonSinceNewestBkUpdateCnt10Y,
		DispOfBksList1Y,
		DispOfBksList7Y,
		DispOfBksList10Y,
		BkWithNewestDateDisp1Y,
		BkWithNewestDateDisp7Y,
		BkWithNewestDateDisp10Y,
		DispOfNewestBkDt1Y,
		DispOfNewestBkDt7Y,
		DispOfNewestBkDt10Y,
		MonSinceDispOfNewestBkCnt1Y,
		MonSinceDispOfNewestBkCnt7Y,
		MonSinceDispOfNewestBkCnt10Y,
		BkDisposedCnt1Y,
		BkDisposedCnt7Y,
		BkDisposedCnt10Y,
		BkDismissedCnt1Y,
		BkDismissedCnt7Y,
		BkDismissedCnt10Y,
		BkDischargedCnt1Y,
		BkDischargedCnt7Y,
		BkDischargedCnt10Y,
		TypeOfBksList1Y,
		TypeOfBksList7Y,
		TypeOfBksList10Y,
		BkHavingBusTypeFlag1Y,
		BkHavingBusTypeFlag7Y,
		BkHavingBusTypeFlag10Y,
		BkSeverityIndex10Y	
		} 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

QUERY: NonFCRABusinessSeleIDAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Business(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		LexIDBusExtendedFamilyAppend := UltID,
		LexIDBusLegalFamilyAppend := OrgID,
		LexIDBusLegalEntityAppend := SeleID,
		LexIDBusLegalEntitySeen,
		SrcVerBusLegalEntityList,
		//Tradeline
		B2bTLCntEv,
		B2bTLCnt2Y,
		B2bTLInCarrCnt2Y,
		B2bTLInFltCnt2Y,
		B2bTLInMatCnt2Y,
		B2bTLInOpsCnt2Y,
		B2bTLInOthCnt2Y,
		B2bTLInCarrPct2Y,
		B2bTLInFltPct2Y,
		B2bTLInMatPct2Y,
		B2bTLInOpsPct2Y,
		B2bTLInOthPct2Y,
		B2bOldestTLDtEv,
		B2bOldestTLMsinceEv,
		B2bOldestTLDt2Y,
		B2bNewestTLDt2Y,
		B2bOldestTLMsince2Y,
		B2bNewestTLMsince2Y,
		B2bActvTLCnt,
		B2bActvTLInCarrCnt,
		B2bActvTLInFltCnt,
		B2bActvTLInMatCnt,
		B2bActvTLInOpsCnt,
		B2bActvTLInOthCnt,
		B2bActvTLInCarrPct,
		B2bActvTLInFltPct,
		B2bActvTLInMatPct,
		B2bActvTLInOpsPct,
		B2bActvTLInOthPct,
// B2bActvTLCntArch1Y,
// B2bActvTLInCarrCntArch1Y,
// B2bActvTLInFltCntArch1Y,
// B2bActvTLInMatCntArch1Y,
// B2bActvTLInOpsCntArch1Y,
// B2bActvTLInOthCntArch1Y,
// B2bActvTLCntGrow1Y,
// B2bActvTLCntInCarrGrow1Y,
// B2bActvTLCntInFltGrow1Y,
// B2bActvTLCntInMatGrow1Y,
// B2bActvTLCntInOpsGrow1Y,
// B2bActvTLCntInOthGrow1Y,
		B2bActvTLBalTot,
		B2bActvTLBalInCarrTot,
		B2bActvTLBalInFltTot,
		B2bActvTLBalInMatTot,
		B2bActvTLBalInOpsTot,
		B2bActvTLBalInOthTot,
		B2bActvTLBalInCarrPct,
		B2bActvTLBalInFltPct,
		B2bActvTLBalInMatPct,
		B2bActvTLBalInOpsPct,
		B2bActvTLBalInOthPct
// B2bActvTLBalTotBin,
// B2bActvTLBalInCarrTotBin,
// B2bActvTLBalInFltTotBin,
// B2bActvTLBalInMatTotBin,
// B2bActvTLBalInOpsTotBin,
// B2bActvTLBalInOthTotBin,
// B2bActvTLBalAvg,
// B2bActvTLBalInCarrAvg,
// B2bActvTLBalInFltAvg,
// B2bActvTLBalInMatAvg,
// B2bActvTLBalInOpsAvg,
// B2bActvTLBalInOthAvg,
// B2bActvTLBalArch1Y,
// B2bActvTLBalInCarrArch1Y,
// B2bActvTLBalInFltArch1Y,
// B2bActvTLBalInMatArch1Y,
// B2bActvTLBalInOpsArch1Y,
// B2bActvTLBalInOthArch1Y,
// B2bActvTLBalGrow1Y,
// B2bActvTLBalInCarrGrow1Y,
// B2bActvTLBalInFltGrow1Y,
// B2bActvTLBalInMatGrow1Y,
// B2bActvTLBalInOpsGrow1Y,
// B2bActvTLBalInOthGrow1Y,
// B2bActvTLBalGrowIndex1Y,
// B2bActvTLBalInCarrGrowIndex1Y,
// B2bActvTLBalInFltGrowIndex1Y,
// B2bActvTLBalInMatGrowIndex1Y,
// B2bActvTLBalInOpsGrowIndex1Y,
// B2bActvTLBalInOthGrowIndex1Y,
// B2bTLBalMax2Y,
// B2bTLBalInCarrMax2Y,
// B2bTLBalInFltMax2Y,
// B2bTLBalInMatMax2Y,
// B2bTLBalInOpsMax2Y,
// B2bTLBalInOthMax2Y,
// B2bMaxTLBalDt2Y,
// B2bMaxTLBalInCarrDt2Y,
// B2bMaxTLBalInFltDt2Y,
// B2bMaxTLBalInMatDt2Y,
// B2bMaxTLBalInOpsDt2Y,
// B2bMaxTLBalInOthDt2Y,
// B2bMaxTLBalMsince2Y,
// B2bMaxTLBalInCarrMsince2Y,
// B2bMaxTLBalInFltMsince2Y,
// B2bMaxTLBalInMatMsince2Y,
// B2bMaxTLBalInOpsMsince2Y,
// B2bMaxTLBalInOthMsince2Y,
// B2bTLWMaxBalSeg2Y,
// B2bActvTLWorstPerfIndex,
// B2bActvTLWorstPerfInCarrIndex,
// B2bActvTLWorstPerfInFltIndex,
// B2bActvTLWorstPerfInMatIndex,
// B2bActvTLWorstPerfInOpsIndex,
// B2bActvTLWorstPerfInOthIndex,
// B2bActvTLW1pDpdCnt,
// B2bActvTLW31pDpdCnt,
// B2bActvTLW61pDpdCnt,
// B2bActvTLW91pDpdCnt,
// B2bActvTLW1pDpdPct,
// B2bActvTLW31pDpdPct,
// B2bActvTLW61pDpdPct,
// B2bActvTLW91pDpdPct,
// B2bBalOnActvTL1pDpdTot,
// B2bBalOnActvTL31pDpdTot,
// B2bBalOnActvTL61pDpdTot,
// B2bBalOnActvTL91pDpdTot,
// B2bBalOnActvTL1pDpdPct,
// B2bBalOnActvTL31pDpdPct,
// B2bBalOnActvTL61pDpdPct,
// B2bBalOnActvTL91pDpdPct,
// B2bBalOnActvTL1pDpdTotArch1Y,
// B2bBalOnActvTL31pDpdTotArch1Y,
// B2bBalOnActvTL61pDpdTotArch1Y,
// B2bBalOnActvTL91pDpdTotArch1Y,
// B2bBalOnActvTL1pDpdGrow1Y,
// B2bBalOnActvTL31pDpdGrow1Y,
// B2bBalOnActvTL61pDpdGrow1Y,
// B2bBalOnActvTL91pDpdGrow1Y,
// B2bTLWorstPerfIndex2Y,
// B2bTLWorstPerfInCarrIndex2Y,
// B2bTLWorstPerfInFltIndex2Y,
// B2bTLWorstPerfInMatIndex2Y,
// B2bTLWorstPerfInOpsIndex2Y,
// B2bTLWorstPerfInOthIndex2Y,
// B2bTLWorstPerfDt2Y,
// B2bTLWorstPerfInCarrDt2Y,
// B2bTLWorstPerfInFltDt2Y,
// B2bTLWorstPerfInMatDt2Y,
// B2bTLWorstPerfInOpsDt2Y,
// B2bTLWorstPerfInOthDt2Y,
// B2bTLWorstPerfMsince2Y,
// B2bTLWorstPerfInCarrMsince2Y,
// B2bTLWorstPerfInFltMsince2Y,
// B2bTLWorstPerfInMatMsince2Y,
// B2bTLWorstPerfInOpsMsince2Y,
// B2bTLWorstPerfInOthMsince2Y,
// B2bTLCnt24Mfull,
// B2bTLInCarrCnt24Mfull,
// B2bTLInFltCnt24Mfull,
// B2bTLInMatCnt24Mfull,
// B2bTLInOpsCnt24Mfull,
// B2bTLInOthCnt24Mfull,
// B2bIndOfMonWTLStr24Mfull,
// B2bIndOfMonWTLInCarrStr24Mfull,
// B2bIndOfMonWTLInFltStr24Mfull,
// B2bIndOfMonWTLInMatStr24Mfull,
// B2bIndOfMonWTLInOpsStr24Mfull,
// B2bIndOfMonWTLInOthStr24Mfull,
// B2bMonWTLCnt24Mfull,
// B2bMonWTLInCarrCnt24Mfull,
// B2bMonWTLInFltCnt24Mfull,
// B2bMonWTLInMatCnt24Mfull,
// B2bMonWTLInOpsCnt24Mfull,
// B2bMonWTLInOthCnt24Mfull,
// B2bTLBalVol24Mfull,
// B2bTLBalInCarrVol24Mfull,
// B2bTLBalInFltVol24Mfull,
// B2bTLBalInMatVol24Mfull,
// B2bTLBalInOpsVol24Mfull,
// B2bTLBalInOthVol24Mfull,		
	
		} 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

// NonFCRABusinessSeleIDNoDatesAttributesV1 is used only to calculate LexIDBusLegalEntityRestricted. 
// The intention of this is to check if we can find any records on file for the business given the permissions we have set, regardless of the date on the records.
// This is a search on the Business SeleID ENTITY with no ASOF filtering applied. If we find records on file, we say the business is not restricted.
// If no records are found, but we do have a SeleID, then the business must only be seen on restricted sources. This attribute is ONLY used in the master layout,
// And therefore should only be calculated when master results are requested so that we do not impact production performance.
QUERY: NonFCRABusinessSeleIDNoDatesAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, 
					PERMITS DPM) <= Business(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		LexIDBusExtendedFamilyAppend := UltID,
		LexIDBusLegalFamilyAppend := OrgID,
		LexIDBusLegalEntityAppend := SeleID,
		LexIDBusLegalEntityRestricted
		} 
	USING DPM;
	
// --- Index Build QUERY ---
/* This QUERY Ensures we are generating all of the ECL Code necessary for building any of the ENTITY or ASSOCIATION Indexes at any given time (That KEL doesn't optimize them away completely
   MAKE SURE TO ADD ANY NEW ENTITY OR ASSOCIATIONS TO THIS LIST */ 
QUERY: IndexBuildEntity(InputArchiveDateClean, PERMITS DPM) <= 
		Accident,
		Address,
		Aircraft,
		Bankruptcy,
		Business,
		CriminalOffender,
		CriminalOffense,
		CriminalPunishment,
		DriversLicense,
		Education,
		Email,
		Employment,
		Household,
		Inquiry,
		Neighborhood,
		// Person, // Currently causes an "internal - invalid internal compiler state" when uncommented, being investigated by the compiler team.  Thankfully the Attribute QUERY's above will generate this build code anyways.
		Phone,
		ProfessionalLicense,
		Property,
		SocialSecurityNumber,
		Tradeline,
		Utility,
		Vehicle,
		Watercraft,
		ZipCode
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

QUERY: IndexBuildAssociation(InputArchiveDateClean, PERMITS DPM) <=  
		AccidentAddress,
		AccidentDriversLicense,
		AddressDriversLicense,
		AddressInquiry,
		AddressPhone,
		AddressProperty,
		AircraftOwner,
		// BusinessProperty, // Removing temporarily until the Business ENTITY is complete
		CriminalDetails,
		DriversLicenseInquiry,
		EducationSSN,
		EducationStudentAddress,
		// EmploymentBusiness, // Removing temporarily until the Business ENTITY is complete
		EmploymentBusinessAddress,
		EmploymentPerson,
		EmploymentSSN,
		FirstDegreeAssociations,
		FirstDegreeRelative,
		HouseholdMember,
		OffenderAddress,
		OffenderSSN,
		PersonAccident,
		PersonAddress,
		PersonBankruptcy,
		PersonDriversLicense,
		PersonEducation,
		PersonEmail,
		PersonInquiry,
		PersonOffender,
		PersonOffenses,
		PersonPhone,
		PersonProperty,
		PersonSSN,
		PersonVehicle,
		PhoneInquiry,
		PhoneSSN,
		ProfessionalLicenseAddress,
		ProfessionalLicensePerson,
		ProfessionalLicensePhone,
		SecondDegreeAssociations,
		SSNAddress,
		SSNBankruptcy,
		SSNInquiry,
		SSNProperty,
		TradelineBusiness,
		UtilityHomeAddress,
		UtilityPerson,
		UtilityPhone,
		WatercraftOwner,
		ZipCodePerson 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;


// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID) <= Business(UltID, OrgID, SeleID)


		// QUERY: BusinessSearch(SET OF Business SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UID IN SeleIDs){ 
				// QUERY: BusinessSearch(UltIDs, OrgIDs, SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UltIDs, OrgIDs, SeleIDs){ 
		// UID, TradelineBusiness.Account{
		// QUERY: BusinessSearch(SET OF Business UltIDs, SET OF Business OrgIDs, SET OF Business SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UID IN UltIDs, UID IN OrgIDs, UID IN SeleIDs){ 
		// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID, ArchiveDate, PERMITS DPM) <= Business(UltID=UltID,OrgID=OrgID, SeleID=SeleID){ 


// --- Debugging QUERYs Section (Only Uncomment for Debugging) ---
// QUERY: DataPermissions(SET OF Person LexIDs, 
					// PERMITS DPM, 
					// InputArchiveDateClean) <= 
	// Person(UID IN LexIDs){DataSources}, // Person
	// Person(UID IN LexIDs).PersonAddress{DataSources}, // PersonAddress
	// Person(UID IN LexIDs).PersonAddress.Location{DataSources}, // Address
	// Person(UID IN LexIDs).PersonBankruptcy{DataSources}, // PersonBankruptcy
	// Person(UID IN LexIDs).PersonBankruptcy.Bankrupt{DataSources}, // Bankruptcy
	// Person(UID IN LexIDs).PersonPhone{DataSources}, // PersonPhone
	// Person(UID IN LexIDs).PersonPhone.PhoneNumber{DataSources}, // Phone
	// Person(UID IN LexIDs).PersonOffenses{DataSources}, // PersonOffenses
	// Person(UID IN LexIDs).PersonOffenses.Offense{DataSources}, // CriminalOffense
	// Person(UID IN LexIDs).PersonOffender{DataSources}, // PersonOffender
	// Person(UID IN LexIDs).PersonOffender.Offender{DataSources}, // CriminalOffender
	// Person(UID IN LexIDs).PersonSSN{DataSources}, // PersonSSN
	// Person(UID IN LexIDs).PersonSSN.Social{DataSources}, // SocialSecurityNumber
	// Person(UID IN LexIDs).PersonInquiry{DataSources}, // PersonInquiry
	// Person(UID IN LexIDs).PersonInquiry.Inquiry{DataSources}, // Inquiry
	// Person(UID IN LexIDs).PersonDriversLicense{DataSources}, // PersonDriversLicense
	// Person(UID IN LexIDs).PersonDriversLicense.License{DataSources}, // DriversLicense
	// Person(UID IN LexIDs).AircraftOwner{DataSources}, // AircraftOwner
	// Person(UID IN LexIDs).AircraftOwner.Plane{DataSources}, // Aircraft
	// Person(UID IN LexIDs).WatercraftOwner{DataSources}, // WatercraftOwner
	// Person(UID IN LexIDs).WatercraftOwner.WCraft{DataSources}, // Watercraft
	// Person(UID IN LexIDs).PersonEmail{DataSources}, // PersonEmail
	// Person(UID IN LexIDs).PersonEmail.rEmail{DataSources}, // Email
	// Person(UID IN LexIDs).PersonProperty{DataSources}, // PersonProperty
	// Person(UID IN LexIDs).PersonProperty.Transaction{DataSources}, // Property
	// Person(UID IN LexIDs).PersonEducation{DataSources}, // PersonEducation
	// Person(UID IN LexIDs).PersonEducation.Edu{DataSources}, // Education
	// Person(UID IN LexIDs).UtilityPerson{DataSources}, // UtilityPerson
	// Person(UID IN LexIDs).UtilityPerson.Util{DataSources}, // Utility
	// Person(UID IN LexIDs).ZipCodePerson{DataSources}, // ZipCodePerson
	// Person(UID IN LexIDs).ZipCodePerson.Zip{DataSources}, // ZipCode
	// Person(UID IN LexIDs).PersonVehicle{DataSources}, // PersonVehicle
	// Person(UID IN LexIDs).PersonVehicle.Automobile{DataSources}, // Vehicle
	// Person(UID IN LexIDs).PersonAccident{DataSources}, // PersonAccident
	// Person(UID IN LexIDs).PersonAccident.Acc{DataSources} // Accident
	// ASOF reportedby(InputArchiveDateClean)
	// USING DPM;

// QUERY: BuildDates(ArchiveDate) <= Aircraft{CurrentDate}, Bankruptcy{CurrentDate}, Business{CurrentDate}, CriminalOffense{CurrentDate}, CriminalOffender{CurrentDate}, CriminalPunishment{CurrentDate}, Inquiry{CurrentDate}, Person{CurrentDate}, Phone{CurrentDate}, ProfessionalLicense{CurrentDate}, Property{CurrentDate, CurrentDateFCRA}, Watercraft{CurrentDate} ASOF reportedby(ArchiveDate);

// QUERY: PersonEntity(SearchForLexID, ArchiveDate) <= Person(UID = SearchForLexID) ASOF reportedby(ArchiveDate); 
// QUERY: PersonDump <= Person{UID, 
		// Gender, LexIDSegment,
		// FullName{Title, FirstName, MiddleName, LastName, NameSuffix}, 
		// ReportedDatesOfBirth{DateOfBirth},
		// ReportedDatesOfDeath{DateOfDeath},
		// Race, RaceDescription,
		// DataSources{Source}};
// QUERY: PersonAddressDump <= PersonAddress;

// Offense Queries
// QUERY: CriminalOffenseEntity(SearchForOffenderKey) <= CriminalOffense(OffenderKey = SearchForOffenderKey);
// QUERY: PersonsOffenses(SearchForLexID) <= Person(UID = SearchForLexID).PersonOffenses.Offense;   
  
// Address Queries
// QUERY: PersonsAddresses(SearchForLexID) <= Person(UID = SearchForLexID).PersonAddress.Location;
// QUERY: AddressEntity(ArchiveDate) <= Address ASOF reportedby(ArchiveDate);

// Aircraft Queries
// QUERY: AircraftEntity <= Aircraft, AircraftOwner;

// Watercraft Queries
// QUERY: WatercraftEntity <= Watercraft, WatercraftOwner; 

// Phone Queries
// QUERY: PhoneEntity <= Phone;

// Inquiry Queries
// QUERY: InquiryEntity <= Inquiry;

// Bankruptcy Queries
// QUERY: BankruptcyEntity(SearchForTMSID) <= Bankruptcy(TMSID = SearchForTMSID); 

// Email Queries
// QUERY: EmailEntity <=  Email;

// SSN Queries
// QUERY: SSNEntity <= SocialSecurityNumber;

// Property Queries
// QUERY: PropertyEntity <= Property;

// DriversLicense Queries
// QUERY: DriversLicenseEntity <= DriversLicense, DrivingViolation, DriversLicenseInquiry, AddressDriversLicense, Person{UID, DLCount, HasDL};

// Education Queries
// QUERY: EducationEntity <= Education, PersonEducation, EducationSSN, EducationStudentAddress, EducationSSN.Social{UID, NumOfColleges, NumEducations}, EducationStudentAddress.UniLocation USING [nonFCRA,FCRA];

// Employment Queries
// QUERY: EmploymentEntity <= Employment, EmploymentPerson, EmploymentSSN, EmploymentBusinessAddress,EmploymentBusiness,EmploymentSSN.Social{UID,NumOfJobs},EmploymentBusinessAddress.Location(NumOfJobs>0), EmploymentBusiness.Bus{UID, NumOfJobs},EmploymentBusinessAddress(Location.NumOfJobs > 0){Emp, Location}USING [nonFCRA,FCRA];

// Utility Queries
// QUERY: UtilityEntity <= Utility, UtilityPerson, UtilityHomeAddress.Location, UtilityPhone, Phone(NumOfUtils > 0){UID,NumOfUtils}USING [nonFCRA,FCRA];

// Neighborhood queries
// QUERY: NeighborhoodDump(PERMITS PermitsValue) <= Neighborhood USING PermitsValue;
// QUERY: NeighborhoodDumpFCRA <= Neighborhood USING [FCRA];
// QUERY: NeighborhoodDumpNonFCRA <= Neighborhood USING [nonFCRA];
// QUERY: NeighborhoodByGeolink(ForFIPSGeolink) <= Neighborhood(UID = ForFIPSGeolink);
