#OPTION(keyfetchlimit, 10000) // Maximum number of rows to return for any key fetch. HPCC Defaults to 10,000
#OPTION(keyfetchlimitaction, 'atmost') // Instead of using LIMIT(N) for ECL JOIN's, use ATMOST(N). The N is specified by the keyfetchlimit #OPTION above.

// --- ENTITY Definitions Section --- 
IMPORT KnowledgeUniverse.PublicRecords_KEL.Entities;

// --- USE Statements Section ---
IMPORT PublicRecords_KEL.Uses;

// --- Attributes Section ---
IMPORT KnowledgeUniverse.PublicRecords_KEL.Attributes;

QUERY: InputAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					P_InpClnArchDt, 
					PERMITS DPM) <= InputPII{
		G_ProcUID := UID, 
		P_InpAcct := InputAccountValue,
		P_InpLexID := InputLexIDValue, 
		P_InpNameFirst := InputFirstNameValue, 
		P_InpNameMid := InputMiddleNameValue,
		P_InpNameLast := InputLastNameValue, 
		P_InpAddrLine1 := InputStreetValue,
		P_InpAddrLine2 := P_InpAddrLine2Value,
		P_InpAddrCity := InputCityValue,
		P_InpAddrState := InputStateValue, 
		P_InpAddrZip := InputZipValue, 
		P_InpSSN := InputSSNValue,
		P_InpDOB := InputDOBValue,
		P_InpDL := InputDLValue,
		P_InpDLState := InputDLStateValue,
		P_InpPhoneHome := InputHomePhoneValue, 
		P_InpPhoneWork := InputWorkPhoneValue, 
		P_InpEmail := InputEmailValue,
		P_InpArchDt := InputArchiveDateValue,
		P_InpAcctFlag := P_InpAcctFlagValue,
		P_InpLexIDFlag := P_InpLexIDFlagValue, 
		P_InpNameFirstFlag := P_InpNameFirstFlagValue,
		P_InpNameMidFlag := P_InpNameMidFlagValue,
		P_InpNameLastFlag := P_InpNameLastFlagValue,   
		P_InpAddrStFlag := P_InpAddrStFlagValue, 
		P_InpAddrCityFlag := P_InpAddrCityFlagValue,
		P_InpAddrStateFlag := P_InpAddrStateFlagValue, 
		P_InpAddrZipFlag := P_InpAddrZipFlagValue,
		P_InpAddrSSNFlag := P_InpAddrSSNFlagValue,   
		P_InpDOBFlag := P_InpDOBFlagValue,  
		P_InpDLFlag := P_InpDLFlagValue,  
		P_InpDLStateFlag := P_InpDLStateFlagValue,  
		P_InpPhoneHomeFlag := P_InpPhoneHomeFlagValue, 
		P_InpPhoneWorkFlag := P_InpPhoneWorkFlagValue,
		P_InpEmailFlag := P_InpEmailFlagValue, 
		P_InpArchDtFlag := P_InpArchDtFlagValue,
		P_LexID,
		P_LexIDScore, 
		P_InpClnNamePrfx := InputPrefixCleanValue,
		P_InpClnNameFirst := InputFirstNameCleanValue,
		P_InpClnNameMid := InputMiddleNameCleanValue,
		P_InpClnNameLast := InputLastNameCleanValue,
		P_InpClnNameSffx := InputSuffixCleanValue, 
		P_InpClnAddrPrimRng := InputPrimaryRangeCleanValue,
		P_InpClnAddrPreDir := InputPreDirectionCleanValue, 
		P_InpClnAddrPrimName := InputPrimaryNameCleanValue,
		P_InpClnAddrSffx := InputAddressSuffixCleanValue, 
		P_InpClnAddrPostDir := InputPostDirectionCleanValue,
		P_InpClnAddrUnitDesig := InputUnitDesigCleanValue, 
		P_InpClnAddrSecRng := InputSecondaryRangeCleanValue,
		P_InpClnAddrCity := InputCityCleanValue, 
		P_InpClnAddrState := InputStateCleanValue, 
		P_InpClnAddrZip5 := InputZip5CleanValue,
		P_InpClnAddrZip4 := InputZip4CleanValue, 
		P_InpClnAddrSt := InputStreetCleanValue,
		P_InpClnAddrFull := InputFullAddressCleanValue,
		P_InpClnAddrLat := InputLatitudeCleanValue, 
		P_InpClnAddrLng := InputLongitudeCleanValue, 
		P_InpClnAddrStateCode := InputStateCodeCleanValue, 
		P_InpClnAddrCnty := InputCountyCleanValue, 
		P_InpClnAddrGeo := InputGeoblockCleanValue, 
		P_InpClnAddrType := InputAddressTypeCleanValue, 
		P_InpClnAddrStatus := InputAddressStatusCleanValue,
		P_InpClnAddrLocID,
		P_InpClnSSN := InputSSNCleanValue,
		P_InpClnDOB := InputDOBCleanValue,
		P_InpClnDL := InputDLCleanValue,
		P_InpClnDLState := InputDLStateCleanValue,
		P_InpClnPhoneHome := InputHomePhoneCleanValue, 
		P_InpClnPhoneWork := InputWorkPhoneCleanValue,
		P_InpClnEmail :=InputEmailCleanValue, 
		P_InpClnArchDt := InputArchiveDateCleanValue,
		P_InpClnNamePrfxFlag := P_InpClnNamePrfxFlagValue, 
		P_InpClnNameFirstFlag := P_InpClnNameFirstFlagValue,
		P_InpClnNameMidFlag := P_InpClnNameMidFlagValue,
		P_InpClnNameLastFlag := P_InpClnNameLastFlagValue,
		P_InpClnNameSffxFlag := P_InpClnNameSffxFlagValue,
		P_InpClnAddrPrimRngFlag := P_InpClnAddrPrimRngFlagValue,
		P_InpClnAddrPreDirFlag := P_InpClnAddrPreDirFlagValue,
		P_InpClnAddrPrimNameFlag := P_InpClnAddrPrimNameFlagValue,
		P_InpClnAddrSffxFlag := P_InpClnAddrSffxFlagValue,
		P_InpClnAddrPostDirFlag := P_InpClnAddrPostDirFlagValue,
		P_InpClnAddrUnitDesigFlag := P_InpClnAddrUnitDesigFlagValue,
		P_InpClnAddrSecRngFlag := P_InpClnAddrSecRngFlagValue,
		P_InpClnAddrCityFlag := P_InpClnAddrCityFlagValue,
		P_InpClnAddrStateFlag := P_InpClnAddrStateFlagValue,
		P_InpClnAddrZip5Flag := P_InpClnAddrZip5FlagValue,
		P_InpClnAddrZip4Flag := P_InpClnAddrZip4FlagValue,
		P_InpValAddrZipBadLenFlag := P_InpValAddrZipBadLenFlagValue,
		P_InpValAddrZipAllZeroFlag := P_InpValAddrZipAllZeroFlagValue,
		P_InpValAddrStateBadAbbrFlag := P_InpValAddrStateBadAbbrFlagValue,
		P_InpClnAddrStFlag := P_InpClnAddrStFlagValue,
		P_InpClnAddrFullFlag := P_InpClnAddrFullFlagValue,
		P_InpClnAddrLatFlag := P_InpClnAddrLatFlagValue,
		P_InpClnAddrLngFlag := P_InpClnAddrLngFlagValue,
		P_InpClnAddrCntyFlag := P_InpClnAddrCntyFlagValue,
		P_InpClnAddrGeoFlag := P_InpClnAddrGeoFlagValue,
		P_InpClnAddrTypeFlag := P_InpClnAddrTypeFlagValue,
		P_InpClnAddrStatusFlag := P_InpClnAddrStatusFlagValue,
		P_InpClnSSNFlag := P_InpClnSSNFlagValue,
		P_InpValSSNBadCharFlag := P_InpValSSNBadCharFlagValue,
		P_InpValSSNBadLenFlag := P_InpValSSNBadLenFlagValue,
		P_InpValSSNBogusFlag := P_InpValSSNBogusFlagValue,
		P_InpValSSNNonSSAFlag := P_InpValSSNNonSSAFlagValue,
		P_InpValSSNIsITINFlag := P_InpValSSNIsITINFlagValue,
		P_InpClnDOBFlag := P_InpClnDOBFlagValue,
		P_InpClnDLFlag := P_InpClnDLFlagValue,
		P_InpClnDLStateFlag := P_InpClnDLStateFlagValue,
		P_InpClnPhoneHomeFlag := P_InpClnPhoneHomeFlagValue,
		P_InpClnPhoneWorkFlag := P_InpClnPhoneWorkFlagValue,
		P_InpClnEmailFlag := P_InpClnEmailFlagValue,
		P_InpValEmailBogusFlag := P_InpValEmailBogusFlagValue,
		P_InpValEmailUserAllZeroFlag := P_InpValEmailUserAllZeroFlagValue,
		P_InpValEmailUserBadCharFlag := P_InpValEmailUserBadCharFlagValue,
		P_InpValEmailDomAllZeroFlag := P_InpValEmailDomAllZeroFlagValue,
		P_InpValEmailDomBadCharFlag := P_InpValEmailDomBadCharFlagValue,
		P_InpClnArchDtFlag := P_InpClnArchDtFlagValue,
		P_InpValNameBogusFlag,
		P_InpValPhoneHomeBadCharFlag,
		P_InpValPhoneHomeBadLenFlag,
		P_InpValPhoneHomeBogusFlag,
		P_InpValPhoneWorkBadCharFlag,
		P_InpValPhoneWorkBadLenFlag,
		P_InpValPhoneWorkBogusFlag,
		// InputAddressCharacteristics Attributes
		// PI_InpAddrAVMVal,
		// PI_InpAddrAVMValA1Y,
		// PI_InpAddrAVMRatio1Y,
		// PI_InpAddrAVMValA5Y,
		// PI_InpAddrAVMRatio5Y,
		// PI_InpAddrAVMConfScore,
		G_ProcBusUID,
		RepNumber := IRepNumberValue,
		PhoneVerificationBureau,
		DialIndicator,
		PointID,
		NXXType,
		ZIPMatch ,
		COCType,
		SSC,
		WirelessIndicator	
		}
	USING DPM
	USE InputPIIDataset(FLAT, 
			InputPII(UID = G_ProcUID, Subject = P_LexID));// We are linking the Input PII to the Person ENTITY via the G_ProcUID

 QUERY: InputBusAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputBII InputBIIDataset, 
					P_InpClnArchDt,
					PERMITS DPM) <= InputBII{
		G_ProcBusUID := UID, 
		B_InpAcct := BusInputAccountEchoValue,
		G_ProcBusUID, 
		B_InpLexIDUlt := B_InpLexIDUltValue, 
		B_InpLexIDOrg := B_InpLexIDOrgValue, 
		B_InpLexIDLegal := B_InpLexIDLegalValue,
		B_InpLexIDSite := B_InpLexIDSiteValue, 
		B_InpLexIDLoc := B_InpLexIDLocValue, 
		B_InpName := BusInputNameEchoValue, 
		B_InpAltName := BusInputAlternateNameEchoValue, 
		B_InpAddrLine1 := BusInputStreetEchoValue,
		B_InpAddrLine2 := B_InpAddrLine2Value,
		B_InpAddrCity := BusInputCityEchoValue,
		B_InpAddrState := BusInputStateEchoValue,
		B_InpAddrZip := BusInputZipEchoValue,
		B_InpPhone := BusInputPhoneEchoValue,
		B_InpIPAddr := BusInputIPAddressEchoValue,
		B_InpURL := BusInputURLEchoValue,
		B_InpEmail := BusInputEmailEchoValue,
		B_InpTIN := BusInputTINEchoValue,
		B_InpSICCode := BusInputSICCodeEchoValue,
		B_InpNAICSCode := BusInputNAICSCodeEchoValue,
		B_InpArchDt := BusInputArchiveDateEchoValue,
		B_Rep1InpLexID := BusInputRep1LexIDEchoValue,
		B_Rep1InpNameFirst := BusInputRep1FirstNameEchoValue,
		B_Rep1InpNameMid := BusInputRep1MiddleNameEchoValue,
		B_Rep1InpNameLast := BusInputRep1LastNameEchoValue,
		B_Rep1InpAddrLine1 := BusInputRep1StreetEchoValue,
		B_Rep1InpAddrLine2 := B_Rep1InpAddrLine2Value,
		B_Rep1InpAddrCity := BusInputRep1CityEchoValue,
		B_Rep1InpAddrState := BusInputRep1StateEchoValue,
		B_Rep1InpAddrZip := BusInputRep1ZipEchoValue,
		B_Rep1InpPhone := BusInputRep1PhoneEchoValue,
		B_Rep1InpSSN := BusInputRep1SSNEchoValue,
		B_Rep1InpDOB := BusInputRep1DOBEchoValue,
		B_Rep1InpEmail := BusInputRep1EmailEchoValue,
		B_Rep1InpDL := BusInputRep1DLEchoValue,
		B_Rep1InpDLState := BusInputRep1DLStateEchoValue,
		B_Rep2InpLexID := BusInputRep2LexIDEchoValue,
		B_Rep2InpNameFirst := BusInputRep2FirstNameEchoValue,
		B_Rep2InpNameMid := BusInputRep2MiddleNameEchoValue,
		B_Rep2InpNameLast := BusInputRep2LastNameEchoValue,
		B_Rep2InpAddrLine1 := BusInputRep2StreetEchoValue,
		B_Rep2InpAddrLine2 := B_Rep2InpAddrLine2Value,
		B_Rep2InpAddrCity := BusInputRep2CityEchoValue,
		B_Rep2InpAddrState := BusInputRep2StateEchoValue,
		B_Rep2InpAddrZip := BusInputRep2ZipEchoValue,
		B_Rep2InpPhone := BusInputRep2PhoneEchoValue,
		B_Rep2InpSSN := BusInputRep2SSNEchoValue,
		B_Rep2InpDOB := BusInputRep2DOBEchoValue,
		B_Rep2InpEmail := BusInputRep2EmailEchoValue,
		B_Rep2InpDL := BusInputRep2DLEchoValue,
		B_Rep2InpDLState := BusInputRep2DLStateEchoValue,
		B_Rep3InpLexID := BusInputRep3LexIDEchoValue,
		B_Rep3InpNameFirst := BusInputRep3FirstNameEchoValue,
		B_Rep3InpNameMid := BusInputRep3MiddleNameEchoValue,
		B_Rep3InpNameLast := BusInputRep3LastNameEchoValue,
		B_Rep3InpAddrLine1 := BusInputRep3StreetEchoValue,
		B_Rep3InpAddrLine2 := B_Rep3InpAddrLine2Value,
		B_Rep3InpAddrCity := BusInputRep3CityEchoValue,
		B_Rep3InpAddrState := BusInputRep3StateEchoValue,
		B_Rep3InpAddrZip := BusInputRep3ZipEchoValue,
		B_Rep3InpPhone := BusInputRep3PhoneEchoValue,
		B_Rep3InpSSN := BusInputRep3SSNEchoValue,
		B_Rep3InpDOB := BusInputRep3DOBEchoValue,
		B_Rep3InpEmail := BusInputRep3EmailEchoValue,
		B_Rep3InpDL := BusInputRep3DLEchoValue,
		B_Rep3InpDLState := BusInputRep3DLStateEchoValue,
		B_Rep4InpLexID := BusInputRep4LexIDEchoValue,
		B_Rep4InpNameFirst := BusInputRep4FirstNameEchoValue,
		B_Rep4InpNameMid := BusInputRep4MiddleNameEchoValue,
		B_Rep4InpNameLast := BusInputRep4LastNameEchoValue,
		B_Rep4InpAddrLine1 := BusInputRep4StreetEchoValue,
		B_Rep4InpAddrLine2 := B_Rep4InpAddrLine2Value,
		B_Rep4InpAddrCity := BusInputRep4CityEchoValue,
		B_Rep4InpAddrState := BusInputRep4StateEchoValue,
		B_Rep4InpAddrZip := BusInputRep4ZipEchoValue,
		B_Rep4InpPhone := BusInputRep4PhoneEchoValue,
		B_Rep4InpSSN := BusInputRep4SSNEchoValue,
		B_Rep4InpDOB := BusInputRep4DOBEchoValue,
		B_Rep4InpEmail := BusInputRep4EmailEchoValue,
		B_Rep4InpDL := BusInputRep4DLEchoValue,
		B_Rep4InpDLState := BusInputRep4DLStateEchoValue,
		B_Rep5InpLexID := BusInputRep5LexIDEchoValue,
		B_Rep5InpNameFirst := BusInputRep5FirstNameEchoValue,
		B_Rep5InpNameMid := BusInputRep5MiddleNameEchoValue,
		B_Rep5InpNameLast := BusInputRep5LastNameEchoValue,
		B_Rep5InpAddrLine1 := BusInputRep5StreetEchoValue,
		B_Rep5InpAddrLine2 := B_Rep5InpAddrLine2Value,
		B_Rep5InpAddrCity := BusInputRep5CityEchoValue,
		B_Rep5InpAddrState := BusInputRep5StateEchoValue,
		B_Rep5InpAddrZip := BusInputRep5ZipEchoValue,
		B_Rep5InpPhone := BusInputRep5PhoneEchoValue,
		B_Rep5InpSSN := BusInputRep5SSNEchoValue,
		B_Rep5InpDOB := BusInputRep5DOBEchoValue,
		B_Rep5InpEmail := BusInputRep5EmailEchoValue,
		B_Rep5InpDL := BusInputRep5DLEchoValue,
		B_Rep5InpDLState := BusInputRep5DLStateEchoValue,
		//Business Clean 
		B_LexIDUlt := B_LexIDUltValue,
		B_LexIDOrg := B_LexIDOrgValue,
		B_LexIDLegal := B_LexIDLegalValue,
		B_LexIDSite := B_LexIDSiteValue,
		B_LexIDLoc := B_LexIDLocValue,
		B_LexIDLegalScore := B_LexIDLegalScoreValue,
		B_LexIDLegalWgt := B_LexIDLegalWgtValue,
		B_InpClnArchDt := BusInputArchiveDateCleanValue,
		B_InpClnName := BusInputNameCleanValue,
		B_InpClnAltName := BusInputAlternateNameCleanValue,
		B_InpClnAddrPrimRng := BusInputPrimRangeCleanValue,
		B_InpClnAddrPreDir := BusInputPreDirCleanValue,
		B_InpClnAddrPrimName := BusInputPrimNameCleanValue,
		B_InpClnAddrSffx := BusInputAddrSuffixCleanValue,
		B_InpClnAddrPostDir := BusInputPostDirCleanValue,
		B_InpClnAddrUnitDesig := BusInputUnitDesigCleanValue,
		B_InpClnAddrSecRng := BusInputSecRangeCleanValue,
		B_InpClnAddrCity := BusInputCityCleanValue,
		B_InpClnAddrState := BusInputStateCleanValue,
		B_InpClnAddrZip5 := BusInputZip5CleanValue,
		B_InpClnAddrZip4 := BusInputZip4CleanValue,
		B_InpClnAddrSt := BusInputStreetCleanValue,
		B_InpClnAddrFull := BusInputFullAddressCleanValue,
		B_InpClnAddrLat := BusInputLatitudeCleanValue,
		B_InpClnAddrLng := BusInputLongitudeCleanValue,
		B_InpClnAddrStateCode := BusInputStateCodeCleanValue,
		B_InpClnAddrCnty := BusInputCountyCleanValue,
		B_InpClnAddrGeo := BusInputGeoblockCleanValue,
		B_InpClnAddrType := BusInputAddrTypeCleanValue,
		B_InpClnAddrStatus := BusInputAddrStatusCleanValue,
		B_InpClnAddrLocID,
		B_InpClnPhone := BusInputPhoneCleanValue,
		B_InpClnTIN := BusInputTINCleanValue,
		B_InpClnEmail := BusInputEmailCleanValue,
		//Rep 1 Clean
		B_Rep1LexID, 
		B_Rep1LexIDScore, 
		B_Rep1InpClnNamePrfx,
		B_Rep1InpClnNameFirst,
		B_Rep1InpClnNameMid,
		B_Rep1InpClnNameLast,
		B_Rep1InpClnNameSffx,
		B_Rep1InpClnAddrPrimRng,
		B_Rep1InpClnAddrPreDir,
		B_Rep1InpClnAddrPrimName,
		B_Rep1InpClnAddrSffx,
		B_Rep1InpClnAddrPostDir,
		B_Rep1InpClnAddrUnitDesig,
		B_Rep1InpClnAddrSecRng,
		B_Rep1InpClnAddrCity,
		B_Rep1InpClnAddrState,
		B_Rep1InpClnAddrZip5,
		B_Rep1InpClnAddrZip4,
		B_Rep1InpClnAddrSt,
		B_Rep1InpClnAddrFull,
		B_Rep1InpClnAddrLat,
		B_Rep1InpClnAddrLng,
		B_Rep1InpClnAddrStateCode,
		B_Rep1InpClnAddrCnty,
		B_Rep1InpClnAddrGeo,
		B_Rep1InpClnAddrType,
		B_Rep1InpClnAddrStatus,
		B_Rep1InpClnAddrLocID,
		B_Rep1InpClnPhone,
		B_Rep1InpClnSSN,
		B_Rep1InpClnDOB,
		B_Rep1InpClnDL,
		B_Rep1InpClnDLState,
		B_Rep1InpClnEmail, 
		// Rep 2 Clean
		B_Rep2LexID, 
		B_Rep2LexIDScore, 
		B_Rep2InpClnNamePrfx,
		B_Rep2InpClnNameFirst,
		B_Rep2InpClnNameMid,
		B_Rep2InpClnNameLast,
		B_Rep2InpClnNameSffx,
		B_Rep2InpClnAddrPrimRng,
		B_Rep2InpClnAddrPreDir,
		B_Rep2InpClnAddrPrimName,
		B_Rep2InpClnAddrSffx,
		B_Rep2InpClnAddrPostDir,
		B_Rep2InpClnAddrUnitDesig,
		B_Rep2InpClnAddrSecRng,
		B_Rep2InpClnAddrCity,
		B_Rep2InpClnAddrState,
		B_Rep2InpClnAddrZip5,
		B_Rep2InpClnAddrZip4,
		B_Rep2InpClnAddrSt,
		B_Rep2InpClnAddrFull,
		B_Rep2InpClnAddrLat,
		B_Rep2InpClnAddrLng,
		B_Rep2InpClnAddrStateCode,
		B_Rep2InpClnAddrCnty,
		B_Rep2InpClnAddrGeo,
		B_Rep2InpClnAddrType,
		B_Rep2InpClnAddrStatus,
		B_Rep2InpClnAddrLocID,
		B_Rep2InpClnPhone,
		B_Rep2InpClnSSN,
		B_Rep2InpClnDOB,
		B_Rep2InpClnDL,
		B_Rep2InpClnDLState,
		B_Rep2InpClnEmail, 
		// Rep 3 Clean
		B_Rep3LexID, 
		B_Rep3LexIDScore, 
		B_Rep3InpClnNamePrfx,
		B_Rep3InpClnNameFirst,
		B_Rep3InpClnNameMid,
		B_Rep3InpClnNameLast,
		B_Rep3InpClnNameSffx,
		B_Rep3InpClnAddrPrimRng,
		B_Rep3InpClnAddrPreDir,
		B_Rep3InpClnAddrPrimName,
		B_Rep3InpClnAddrSffx,
		B_Rep3InpClnAddrPostDir,
		B_Rep3InpClnAddrUnitDesig,
		B_Rep3InpClnAddrSecRng,
		B_Rep3InpClnAddrCity,
		B_Rep3InpClnAddrState,
		B_Rep3InpClnAddrZip5,
		B_Rep3InpClnAddrZip4,
		B_Rep3InpClnAddrSt,
		B_Rep3InpClnAddrFull,
		B_Rep3InpClnAddrLat,
		B_Rep3InpClnAddrLng,
		B_Rep3InpClnAddrStateCode,
		B_Rep3InpClnAddrCnty,
		B_Rep3InpClnAddrGeo,
		B_Rep3InpClnAddrType,
		B_Rep3InpClnAddrStatus,
		B_Rep3InpClnAddrLocID,
		B_Rep3InpClnPhone,
		B_Rep3InpClnSSN,
		B_Rep3InpClnDOB,
		B_Rep3InpClnDL,
		B_Rep3InpClnDLState,
		B_Rep3InpClnEmail, 
		// Rep 4 Clean
		B_Rep4LexID, 
		B_Rep4LexIDScore, 
		B_Rep4InpClnNamePrfx,
		B_Rep4InpClnNameFirst,
		B_Rep4InpClnNameMid,
		B_Rep4InpClnNameLast,
		B_Rep4InpClnNameSffx,
		B_Rep4InpClnAddrPrimRng,
		B_Rep4InpClnAddrPreDir,
		B_Rep4InpClnAddrPrimName,
		B_Rep4InpClnAddrSffx,
		B_Rep4InpClnAddrPostDir,
		B_Rep4InpClnAddrUnitDesig,
		B_Rep4InpClnAddrSecRng,
		B_Rep4InpClnAddrCity,
		B_Rep4InpClnAddrState,
		B_Rep4InpClnAddrZip5,
		B_Rep4InpClnAddrZip4,
		B_Rep4InpClnAddrSt,
		B_Rep4InpClnAddrFull,
		B_Rep4InpClnAddrLat,
		B_Rep4InpClnAddrLng,
		B_Rep4InpClnAddrStateCode,
		B_Rep4InpClnAddrCnty,
		B_Rep4InpClnAddrGeo,
		B_Rep4InpClnAddrType,
		B_Rep4InpClnAddrStatus,
		B_Rep4InpClnAddrLocID,
		B_Rep4InpClnPhone,
		B_Rep4InpClnSSN,
		B_Rep4InpClnDOB,
		B_Rep4InpClnDL,
		B_Rep4InpClnDLState,
		B_Rep4InpClnEmail, 
		// Rep 5 Clean
		B_Rep5LexID, 
		B_Rep5LexIDScore, 
		B_Rep5InpClnNamePrfx,
		B_Rep5InpClnNameFirst,
		B_Rep5InpClnNameMid,
		B_Rep5InpClnNameLast,
		B_Rep5InpClnNameSffx,
		B_Rep5InpClnAddrPrimRng,
		B_Rep5InpClnAddrPreDir,
		B_Rep5InpClnAddrPrimName,
		B_Rep5InpClnAddrSffx,
		B_Rep5InpClnAddrPostDir,
		B_Rep5InpClnAddrUnitDesig,
		B_Rep5InpClnAddrSecRng,
		B_Rep5InpClnAddrCity,
		B_Rep5InpClnAddrState,
		B_Rep5InpClnAddrZip5,
		B_Rep5InpClnAddrZip4,
		B_Rep5InpClnAddrSt,
		B_Rep5InpClnAddrFull,
		B_Rep5InpClnAddrLat,
		B_Rep5InpClnAddrLng,
		B_Rep5InpClnAddrStateCode,
		B_Rep5InpClnAddrCnty,
		B_Rep5InpClnAddrGeo,
		B_Rep5InpClnAddrType,
		B_Rep5InpClnAddrStatus,
		B_Rep5InpClnAddrLocID,
		B_Rep5InpClnPhone,
		B_Rep5InpClnSSN,
		B_Rep5InpClnDOB,
		B_Rep5InpClnDL,
		B_Rep5InpClnDLState,
		B_Rep5InpClnEmail,
		//Echo Pop	
		B_InpArchDtFlag := B_InpArchDtFlagValue,
		B_InpNameFlag := B_InpNameFlagValue,
		B_InpAltNameFlag := B_InpAltNameFlagValue,
		B_InpAddrStFlag := B_InpAddrStFlagValue,
		B_InpAddrCityFlag := B_InpAddrCityFlagValue,
		B_InpAddrStateFlag := B_InpAddrStateFlagValue,
		B_InpAddrZipFlag := B_InpAddrZipFlagValue,
		B_InpPhoneFlag := B_InpPhoneFlagValue,
		B_InpTINFlag := B_InpTINFlagValue,
		B_InpSICCodeFlag := B_InpSICCodeFlagValue,
		B_InpNAICSCodeFlag := B_InpNAICSCodeFlagValue,
		
		B_Rep1InpLexIDFlag := B_Rep1InpLexIDFlagValue,
		B_Rep1InpNameFirstFlag := B_Rep1InpNameFirstFlagValue,
		B_Rep1InpNameMidFlag := B_Rep1InpNameMidFlagValue,
		B_Rep1InpNameLastFlag := B_Rep1InpNameLastFlagValue,
		B_Rep1InpAddrStFlag := B_Rep1InpAddrStFlagValue,
		B_Rep1InpAddrCityFlag := B_Rep1InpAddrCityFlagValue,
		B_Rep1InpAddrStateFlag := B_Rep1InpAddrStateFlagValue,
		B_Rep1InpAddrZipFlag := B_Rep1InpAddrZipFlagValue,
		B_Rep1InpPhoneFlag := B_Rep1InpPhoneFlagValue,
		B_Rep1InpSSNFlag := B_Rep1InpSSNFlagValue,
		B_Rep1InpDOBFlag := B_Rep1InpDOBFlagValue,
		B_Rep1InpEmailFlag := B_Rep1InpEmailFlagValue,
		B_Rep1InpDLFlag := B_Rep1InpDLFlagValue,
		B_Rep1InpDLStateFlag := B_Rep1InpDLStateFlagValue,
		
		B_Rep2InpLexIDFlag := 		B_Rep2InpLexIDFlagValue,
		B_Rep2InpNameFirstFlag := 	B_Rep2InpNameFirstFlagValue,
		B_Rep2InpNameMidFlag := 	B_Rep2InpNameMidFlagValue,
		B_Rep2InpNameLastFlag := 	B_Rep2InpNameLastFlagValue,
		B_Rep2InpAddrStFlag := 	B_Rep2InpAddrStFlagValue,
		B_Rep2InpAddrCityFlag := 	B_Rep2InpAddrCityFlagValue,
		B_Rep2InpAddrStateFlag := 	B_Rep2InpAddrStateFlagValue,
		B_Rep2InpAddrZipFlag := 	B_Rep2InpAddrZipFlagValue,
		B_Rep2InpPhoneFlag := 		B_Rep2InpPhoneFlagValue,
		B_Rep2InpSSNFlag := 		B_Rep2InpSSNFlagValue,
		B_Rep2InpDOBFlag := 		B_Rep2InpDOBFlagValue,
		B_Rep2InpEmailFlag := 		B_Rep2InpEmailFlagValue,
		B_Rep2InpDLFlag := 			B_Rep2InpDLFlagValue,
		B_Rep2InpDLStateFlag := 	B_Rep2InpDLStateFlagValue,
				
		B_Rep3InpLexIDFlag := 		B_Rep3InpLexIDFlagValue,
		B_Rep3InpNameFirstFlag := 	B_Rep3InpNameFirstFlagValue,
		B_Rep3InpNameMidFlag := 	B_Rep3InpNameMidFlagValue,
		B_Rep3InpNameLastFlag := 	B_Rep3InpNameLastFlagValue,
		B_Rep3InpAddrStFlag := 	B_Rep3InpAddrStFlagValue,
		B_Rep3InpAddrCityFlag := 	B_Rep3InpAddrCityFlagValue,
		B_Rep3InpAddrStateFlag := 	B_Rep3InpAddrStateFlagValue,
		B_Rep3InpAddrZipFlag := 	B_Rep3InpAddrZipFlagValue,
		B_Rep3InpPhoneFlag := 		B_Rep3InpPhoneFlagValue,
		B_Rep3InpSSNFlag := 		B_Rep3InpSSNFlagValue,
		B_Rep3InpDOBFlag := 		B_Rep3InpDOBFlagValue,
		B_Rep3InpEmailFlag := 		B_Rep3InpEmailFlagValue,
		B_Rep3InpDLFlag := 			B_Rep3InpDLFlagValue,
		B_Rep3InpDLStateFlag := 	B_Rep3InpDLStateFlagValue,
				
		B_Rep4InpLexIDFlag := 		B_Rep4InpLexIDFlagValue,
		B_Rep4InpNameFirstFlag := 	B_Rep4InpNameFirstFlagValue,
		B_Rep4InpNameMidFlag := 	B_Rep4InpNameMidFlagValue,
		B_Rep4InpNameLastFlag := 	B_Rep4InpNameLastFlagValue,
		B_Rep4InpAddrStFlag := 	B_Rep4InpAddrStFlagValue,
		B_Rep4InpAddrCityFlag := 	B_Rep4InpAddrCityFlagValue,
		B_Rep4InpAddrStateFlag := 	B_Rep4InpAddrStateFlagValue,
		B_Rep4InpAddrZipFlag := 	B_Rep4InpAddrZipFlagValue,
		B_Rep4InpPhoneFlag := 		B_Rep4InpPhoneFlagValue,
		B_Rep4InpSSNFlag := 		B_Rep4InpSSNFlagValue,
		B_Rep4InpDOBFlag := 		B_Rep4InpDOBFlagValue,
		B_Rep4InpEmailFlag := 		B_Rep4InpEmailFlagValue,
		B_Rep4InpDLFlag := 			B_Rep4InpDLFlagValue,
		B_Rep4InpDLStateFlag := 	B_Rep4InpDLStateFlagValue,
				
		B_Rep5InpLexIDFlag := 		B_Rep5InpLexIDFlagValue,
		B_Rep5InpNameFirstFlag := 	B_Rep5InpNameFirstFlagValue,
		B_Rep5InpNameMidFlag := 	B_Rep5InpNameMidFlagValue,
		B_Rep5InpNameLastFlag := 	B_Rep5InpNameLastFlagValue,
		B_Rep5InpAddrStFlag := 	B_Rep5InpAddrStFlagValue,
		B_Rep5InpAddrCityFlag := 	B_Rep5InpAddrCityFlagValue,
		B_Rep5InpAddrStateFlag := 	B_Rep5InpAddrStateFlagValue,
		B_Rep5InpAddrZipFlag := 	B_Rep5InpAddrZipFlagValue,
		B_Rep5InpPhoneFlag := 		B_Rep5InpPhoneFlagValue,
		B_Rep5InpSSNFlag := 		B_Rep5InpSSNFlagValue,
		B_Rep5InpDOBFlag := 		B_Rep5InpDOBFlagValue,
		B_Rep5InpEmailFlag := 		B_Rep5InpEmailFlagValue,
		B_Rep5InpDLFlag := 			B_Rep5InpDLFlagValue,
		B_Rep5InpDLStateFlag := 	B_Rep5InpDLStateFlagValue,
		//Clean Pop	
		B_InpClnNameFlag := B_InpClnNameFlagValue,
		B_InpClnAltNameFlag := B_InpClnAltNameFlagValue,
		B_InpClnAddrPrimRngFlag := B_InpClnAddrPrimRngFlagValue,
		B_InpClnAddrPreDirFlag := B_InpClnAddrPreDirFlagValue,
		B_InpClnAddrPrimNameFlag := B_InpClnAddrPrimNameFlagValue,
		B_InpClnAddrSffxFlag := B_InpClnAddrSffxFlagValue,
		B_InpClnAddrPostDirFlag := B_InpClnAddrPostDirFlagValue,
		B_InpClnAddrUnitDesigFlag := B_InpClnAddrUnitDesigFlagValue,
		B_InpClnAddrSecRngFlag := B_InpClnAddrSecRngFlagValue,
		B_InpClnAddrCityFlag := B_InpClnAddrCityFlagValue,
		B_InpClnAddrStateFlag := B_InpClnAddrStateFlagValue,
		B_InpClnAddrZip5Flag := B_InpClnAddrZip5FlagValue,
		B_InpClnAddrZip4Flag := B_InpClnAddrZip4FlagValue,
		B_InpClnAddrStFlag := B_InpClnAddrStFlagValue,
		B_InpClnAddrFullFlag := B_InpClnAddrFullFlagValue,
		B_InpClnAddrLatFlag := B_InpClnAddrLatFlagValue,
		B_InpClnAddrLngFlag := B_InpClnAddrLngFlagValue,
		B_InpClnAddrCntyFlag := B_InpClnAddrCntyFlagValue,
		B_InpClnAddrGeoFlag := B_InpClnAddrGeoFlagValue,
		B_InpClnAddrTypeFlag := B_InpClnAddrTypeFlagValue,
		B_InpClnAddrStatusFlag := B_InpClnAddrStatusFlagValue,
		B_InpClnPhoneFlag := B_InpClnPhoneFlagValue,
		B_InpClnTINFlag := B_InpClnTINFlagValue,
		B_InpClnEmailFlag := B_InpClnEmailFlagValue,
		B_InpClnArchDtFlag := B_InpClnArchDtFlagValue,
		
		B_Rep1InpClnNamePrfxFlag := B_Rep1InpClnNamePrfxFlagValue,
		B_Rep1InpClnNameFirstFlag := B_Rep1InpClnNameFirstFlagValue,
		B_Rep1InpClnNameMidFlag := B_Rep1InpClnNameMidFlagValue,
		B_Rep1InpClnNameLastFlag := B_Rep1InpClnNameLastFlagValue,
		B_Rep1InpClnNameSffxFlag := B_Rep1InpClnNameSffxFlagValue,
		B_Rep1InpClnAddrPrimRngFlag := B_Rep1InpClnAddrPrimRngFlagValue,
		B_Rep1InpClnAddrPreDirFlag := B_Rep1InpClnAddrPreDirFlagValue,
		B_Rep1InpClnAddrPrimNameFlag := B_Rep1InpClnAddrPrimNameFlagValue,
		B_Rep1InpClnAddrSffxFlag := B_Rep1InpClnAddrSffxFlagValue,
		B_Rep1InpClnAddrPostDirFlag := B_Rep1InpClnAddrPostDirFlagValue,
		B_Rep1InpClnAddrUnitDesigFlag := B_Rep1InpClnAddrUnitDesigFlagValue,
		B_Rep1InpClnAddrSecRngFlag := B_Rep1InpClnAddrSecRngFlagValue,
		B_Rep1InpClnAddrCityFlag := B_Rep1InpClnAddrCityFlagValue,
		B_Rep1InpClnAddrStateFlag := B_Rep1InpClnAddrStateFlagValue,
		B_Rep1InpClnAddrZip5Flag := B_Rep1InpClnAddrZip5FlagValue,
		B_Rep1InpClnAddrZip4Flag := B_Rep1InpClnAddrZip4FlagValue,
		B_Rep1InpClnAddrStFlag := B_Rep1InpClnAddrStFlagValue,
		B_Rep1InpClnAddrFullFlag := B_Rep1InpClnAddrFullFlagValue,
		B_Rep1InpClnAddrLatFlag := B_Rep1InpClnAddrLatFlagValue,
		B_Rep1InpClnAddrLngFlag := B_Rep1InpClnAddrLngFlagValue,
		B_Rep1InpClnAddrCntyFlag := B_Rep1InpClnAddrCntyFlagValue,
		B_Rep1InpClnAddrGeoFlag := B_Rep1InpClnAddrGeoFlagValue,
		B_Rep1InpClnAddrTypeFlag := B_Rep1InpClnAddrTypeFlagValue,
		B_Rep1InpClnAddrStatusFlag := B_Rep1InpClnAddrStatusFlagValue,
		B_Rep1InpClnPhoneFlag := B_Rep1InpClnPhoneFlagValue,
		B_Rep1InpClnSSNFlag := B_Rep1InpClnSSNFlagValue,
		B_Rep1InpClnDOBFlag := B_Rep1InpClnDOBFlagValue,
		B_Rep1InpClnEmailFlag := B_Rep1InpClnEmailFlagValue,
		B_Rep1InpClnDLFlag := B_Rep1InpClnDLFlagValue,
		B_Rep1InpClnDLStateFlag := B_Rep1InpClnDLStateFlagValue,
		
		B_Rep2InpClnNamePrfxFlag := 		B_Rep2InpClnNamePrfxFlagValue,
		B_Rep2InpClnNameFirstFlag := 		B_Rep2InpClnNameFirstFlagValue,
		B_Rep2InpClnNameMidFlag := 			B_Rep2InpClnNameMidFlagValue,
		B_Rep2InpClnNameLastFlag := 		B_Rep2InpClnNameLastFlagValue,
		B_Rep2InpClnNameSffxFlag := 		B_Rep2InpClnNameSffxFlagValue,
		B_Rep2InpClnAddrPrimRngFlag := 		B_Rep2InpClnAddrPrimRngFlagValue,
		B_Rep2InpClnAddrPreDirFlag := 		B_Rep2InpClnAddrPreDirFlagValue,
		B_Rep2InpClnAddrPrimNameFlag := 	B_Rep2InpClnAddrPrimNameFlagValue,
		B_Rep2InpClnAddrSffxFlag := 		B_Rep2InpClnAddrSffxFlagValue,
		B_Rep2InpClnAddrPostDirFlag := 		B_Rep2InpClnAddrPostDirFlagValue,
		B_Rep2InpClnAddrUnitDesigFlag := 	B_Rep2InpClnAddrUnitDesigFlagValue,
		B_Rep2InpClnAddrSecRngFlag := 		B_Rep2InpClnAddrSecRngFlagValue,
		B_Rep2InpClnAddrCityFlag := 		B_Rep2InpClnAddrCityFlagValue,
		B_Rep2InpClnAddrStateFlag := 		B_Rep2InpClnAddrStateFlagValue,
		B_Rep2InpClnAddrZip5Flag := 		B_Rep2InpClnAddrZip5FlagValue,
		B_Rep2InpClnAddrZip4Flag := 		B_Rep2InpClnAddrZip4FlagValue,
		B_Rep2InpClnAddrStFlag := 			B_Rep2InpClnAddrStFlagValue,
		B_Rep2InpClnAddrFullFlag := 		B_Rep2InpClnAddrFullFlagValue,
		B_Rep2InpClnAddrLatFlag := 			B_Rep2InpClnAddrLatFlagValue,
		B_Rep2InpClnAddrLngFlag := 			B_Rep2InpClnAddrLngFlagValue,
		B_Rep2InpClnAddrCntyFlag := 		B_Rep2InpClnAddrCntyFlagValue,
		B_Rep2InpClnAddrGeoFlag := 			B_Rep2InpClnAddrGeoFlagValue,
		B_Rep2InpClnAddrTypeFlag := 		B_Rep2InpClnAddrTypeFlagValue,
		B_Rep2InpClnAddrStatusFlag := 		B_Rep2InpClnAddrStatusFlagValue,
		B_Rep2InpClnPhoneFlag := 			B_Rep2InpClnPhoneFlagValue,
		B_Rep2InpClnSSNFlag := 				B_Rep2InpClnSSNFlagValue,
		B_Rep2InpClnDOBFlag := 				B_Rep2InpClnDOBFlagValue,
		B_Rep2InpClnEmailFlag := 			B_Rep2InpClnEmailFlagValue,
		B_Rep2InpClnDLFlag := 				B_Rep2InpClnDLFlagValue,
		B_Rep2InpClnDLStateFlag := 			B_Rep2InpClnDLStateFlagValue,
				
		B_Rep3InpClnNamePrfxFlag := 		B_Rep3InpClnNamePrfxFlagValue,
		B_Rep3InpClnNameFirstFlag := 		B_Rep3InpClnNameFirstFlagValue,
		B_Rep3InpClnNameMidFlag := 			B_Rep3InpClnNameMidFlagValue,
		B_Rep3InpClnNameLastFlag := 		B_Rep3InpClnNameLastFlagValue,
		B_Rep3InpClnNameSffxFlag := 		B_Rep3InpClnNameSffxFlagValue,
		B_Rep3InpClnAddrPrimRngFlag := 		B_Rep3InpClnAddrPrimRngFlagValue,
		B_Rep3InpClnAddrPreDirFlag := 		B_Rep3InpClnAddrPreDirFlagValue,
		B_Rep3InpClnAddrPrimNameFlag := 	B_Rep3InpClnAddrPrimNameFlagValue,
		B_Rep3InpClnAddrSffxFlag := 		B_Rep3InpClnAddrSffxFlagValue,
		B_Rep3InpClnAddrPostDirFlag := 		B_Rep3InpClnAddrPostDirFlagValue,
		B_Rep3InpClnAddrUnitDesigFlag := 	B_Rep3InpClnAddrUnitDesigFlagValue,
		B_Rep3InpClnAddrSecRngFlag := 		B_Rep3InpClnAddrSecRngFlagValue,
		B_Rep3InpClnAddrCityFlag := 		B_Rep3InpClnAddrCityFlagValue,
		B_Rep3InpClnAddrStateFlag := 		B_Rep3InpClnAddrStateFlagValue,
		B_Rep3InpClnAddrZip5Flag := 		B_Rep3InpClnAddrZip5FlagValue,
		B_Rep3InpClnAddrZip4Flag := 		B_Rep3InpClnAddrZip4FlagValue,
		B_Rep3InpClnAddrStFlag := 			B_Rep3InpClnAddrStFlagValue,
		B_Rep3InpClnAddrFullFlag := 		B_Rep3InpClnAddrFullFlagValue,
		B_Rep3InpClnAddrLatFlag := 			B_Rep3InpClnAddrLatFlagValue,
		B_Rep3InpClnAddrLngFlag := 			B_Rep3InpClnAddrLngFlagValue,
		B_Rep3InpClnAddrCntyFlag := 		B_Rep3InpClnAddrCntyFlagValue,
		B_Rep3InpClnAddrGeoFlag := 			B_Rep3InpClnAddrGeoFlagValue,
		B_Rep3InpClnAddrTypeFlag := 		B_Rep3InpClnAddrTypeFlagValue,
		B_Rep3InpClnAddrStatusFlag := 		B_Rep3InpClnAddrStatusFlagValue,
		B_Rep3InpClnPhoneFlag := 			B_Rep3InpClnPhoneFlagValue,
		B_Rep3InpClnSSNFlag := 				B_Rep3InpClnSSNFlagValue,
		B_Rep3InpClnDOBFlag := 				B_Rep3InpClnDOBFlagValue,
		B_Rep3InpClnEmailFlag := 			B_Rep3InpClnEmailFlagValue,
		B_Rep3InpClnDLFlag := 				B_Rep3InpClnDLFlagValue,
		B_Rep3InpClnDLStateFlag := 			B_Rep3InpClnDLStateFlagValue,
				
		B_Rep4InpClnNamePrfxFlag := 		B_Rep4InpClnNamePrfxFlagValue,
		B_Rep4InpClnNameFirstFlag := 		B_Rep4InpClnNameFirstFlagValue,
		B_Rep4InpClnNameMidFlag := 			B_Rep4InpClnNameMidFlagValue,
		B_Rep4InpClnNameLastFlag := 		B_Rep4InpClnNameLastFlagValue,
		B_Rep4InpClnNameSffxFlag := 		B_Rep4InpClnNameSffxFlagValue,
		B_Rep4InpClnAddrPrimRngFlag := 		B_Rep4InpClnAddrPrimRngFlagValue,
		B_Rep4InpClnAddrPreDirFlag := 		B_Rep4InpClnAddrPreDirFlagValue,
		B_Rep4InpClnAddrPrimNameFlag := 	B_Rep4InpClnAddrPrimNameFlagValue,
		B_Rep4InpClnAddrSffxFlag := 		B_Rep4InpClnAddrSffxFlagValue,
		B_Rep4InpClnAddrPostDirFlag := 		B_Rep4InpClnAddrPostDirFlagValue,
		B_Rep4InpClnAddrUnitDesigFlag := 	B_Rep4InpClnAddrUnitDesigFlagValue,
		B_Rep4InpClnAddrSecRngFlag := 		B_Rep4InpClnAddrSecRngFlagValue,
		B_Rep4InpClnAddrCityFlag := 		B_Rep4InpClnAddrCityFlagValue,
		B_Rep4InpClnAddrStateFlag := 		B_Rep4InpClnAddrStateFlagValue,
		B_Rep4InpClnAddrZip5Flag := 		B_Rep4InpClnAddrZip5FlagValue,
		B_Rep4InpClnAddrZip4Flag := 		B_Rep4InpClnAddrZip4FlagValue,
		B_Rep4InpClnAddrStFlag := 			B_Rep4InpClnAddrStFlagValue,
		B_Rep4InpClnAddrFullFlag := 		B_Rep4InpClnAddrFullFlagValue,
		B_Rep4InpClnAddrLatFlag := 			B_Rep4InpClnAddrLatFlagValue,
		B_Rep4InpClnAddrLngFlag := 			B_Rep4InpClnAddrLngFlagValue,
		B_Rep4InpClnAddrCntyFlag := 		B_Rep4InpClnAddrCntyFlagValue,
		B_Rep4InpClnAddrGeoFlag := 			B_Rep4InpClnAddrGeoFlagValue,
		B_Rep4InpClnAddrTypeFlag := 		B_Rep4InpClnAddrTypeFlagValue,
		B_Rep4InpClnAddrStatusFlag := 		B_Rep4InpClnAddrStatusFlagValue,
		B_Rep4InpClnPhoneFlag := 			B_Rep4InpClnPhoneFlagValue,
		B_Rep4InpClnSSNFlag := 				B_Rep4InpClnSSNFlagValue,
		B_Rep4InpClnDOBFlag := 				B_Rep4InpClnDOBFlagValue,
		B_Rep4InpClnEmailFlag := 			B_Rep4InpClnEmailFlagValue,
		B_Rep4InpClnDLFlag := 				B_Rep4InpClnDLFlagValue,
		B_Rep4InpClnDLStateFlag := 			B_Rep4InpClnDLStateFlagValue,
				
		B_Rep5InpClnNamePrfxFlag := 		B_Rep5InpClnNamePrfxFlagValue,
		B_Rep5InpClnNameFirstFlag := 		B_Rep5InpClnNameFirstFlagValue,
		B_Rep5InpClnNameMidFlag := 			B_Rep5InpClnNameMidFlagValue,
		B_Rep5InpClnNameLastFlag := 		B_Rep5InpClnNameLastFlagValue,
		B_Rep5InpClnNameSffxFlag := 		B_Rep5InpClnNameSffxFlagValue,
		B_Rep5InpClnAddrPrimRngFlag := 		B_Rep5InpClnAddrPrimRngFlagValue,
		B_Rep5InpClnAddrPreDirFlag := 		B_Rep5InpClnAddrPreDirFlagValue,
		B_Rep5InpClnAddrPrimNameFlag := 	B_Rep5InpClnAddrPrimNameFlagValue,
		B_Rep5InpClnAddrSffxFlag := 		B_Rep5InpClnAddrSffxFlagValue,
		B_Rep5InpClnAddrPostDirFlag := 		B_Rep5InpClnAddrPostDirFlagValue,
		B_Rep5InpClnAddrUnitDesigFlag := 	B_Rep5InpClnAddrUnitDesigFlagValue,
		B_Rep5InpClnAddrSecRngFlag := 		B_Rep5InpClnAddrSecRngFlagValue,
		B_Rep5InpClnAddrCityFlag := 		B_Rep5InpClnAddrCityFlagValue,
		B_Rep5InpClnAddrStateFlag := 		B_Rep5InpClnAddrStateFlagValue,
		B_Rep5InpClnAddrZip5Flag := 		B_Rep5InpClnAddrZip5FlagValue,
		B_Rep5InpClnAddrZip4Flag := 		B_Rep5InpClnAddrZip4FlagValue,
		B_Rep5InpClnAddrStFlag := 			B_Rep5InpClnAddrStFlagValue,
		B_Rep5InpClnAddrFullFlag := 		B_Rep5InpClnAddrFullFlagValue,
		B_Rep5InpClnAddrLatFlag := 			B_Rep5InpClnAddrLatFlagValue,
		B_Rep5InpClnAddrLngFlag := 			B_Rep5InpClnAddrLngFlagValue,
		B_Rep5InpClnAddrCntyFlag := 		B_Rep5InpClnAddrCntyFlagValue,
		B_Rep5InpClnAddrGeoFlag := 			B_Rep5InpClnAddrGeoFlagValue,
		B_Rep5InpClnAddrTypeFlag := 		B_Rep5InpClnAddrTypeFlagValue,
		B_Rep5InpClnAddrStatusFlag := 		B_Rep5InpClnAddrStatusFlagValue,
		B_Rep5InpClnPhoneFlag := 			B_Rep5InpClnPhoneFlagValue,
		B_Rep5InpClnSSNFlag := 				B_Rep5InpClnSSNFlagValue,
		B_Rep5InpClnDOBFlag := 				B_Rep5InpClnDOBFlagValue,
		B_Rep5InpClnEmailFlag := 			B_Rep5InpClnEmailFlagValue,
		B_Rep5InpClnDLFlag := 				B_Rep5InpClnDLFlagValue,
		B_Rep5InpClnDLStateFlag := 			B_Rep5InpClnDLStateFlagValue,
		B_InpValNameInvalidFlag,
		B_InpValAltNameInvalidFlag,
		B_InpValAddrStInvalidFlag,
		B_InpValPhoneInvalidFlag,
		B_InpValTINInvalidFlag,
		B_InpValEmailInvalidFlag,
		B_InpValAddrZipBadLenFlag,
		B_InpValAddrZipAllZeroFlag,
		B_InpValAddrStateBadAbbrFlag,
		B_InpValPhoneBadCharFlag,
		B_InpValPhoneBadLenFlag,
		B_InpValPhoneBogusFlag,
		B_InpValTINBadCharFlag,
		B_InpValTINBadLenFlag,
		B_InpValTINBogusFlag,
		B_InpValEmailBogusFlag,
		B_InpValEmailUserBadCharFlag,
		B_InpValEmailUserAllZeroFlag,
		B_InpValEmailDomBadCharFlag,
		B_InpValEmailDomAllZeroFlag,
		B_InpValNameBadCharFlag,
		B_InpValAltNameBadCharFlag,
		B_InpValNameMatchesAltNameFlag,
		PhoneVerificationBureau,
		DialIndicator,
		PointID,
		NXXType,
		ZIPMatch,
		COCType,
		SSC,
		WirelessIndicator	
		}
	USING DPM
	USE InputPIIDataset(FLAT,
			InputPII(UID = G_ProcUID),
			InputBIIInputPII(PII = G_ProcUID, BII = G_ProcBusUID)),
		InputBIIDataset(FLAT, InputBII(UID = G_ProcBusUID));

 QUERY: NonFCRAPersonAttributesV1(Person LexID_in, 
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					P_InpClnArchDt, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		P_LexIDSeenFlag,
		PL_AstVehAutoCntEv,
		PL_AstVehAutoEmrgDtListEv,
		PL_AstVehAutoLastDtListEv,
		PL_AstVehAutoCnt10Y,
		PL_AstVehAutoCnt2Y,
		PL_AstVehAutoEmrgNewDtEv,
		PL_AstVehAutoEmrgOldDtEv,
		PL_AstVehAutoEmrgNewMsncEv,
		PL_AstVehAutoEmrgOldMsncEv,
		PL_AstVehAirCntEv,
		PL_AstVehAirEmrgDtListEv,
		PL_AstVehAirEmrgNewDtEv,
		PL_AstVehAirEmrgOldDtEv,
		PL_AstVehAirEmrgNewMsncEv,
		PL_AstVehAirEmrgOldMsncEv,
		PL_AstVehWtrCntEv,
		PL_AstVehWtrEmrgDtListEv,
		PL_AstVehWtrEmrgNewDtEv,
		PL_AstVehWtrEmrgOldDtEv,
		PL_AstVehWtrEmrgNewMsncEv,
		PL_AstVehWtrEmrgOldMsncEv,
		// Criminal Attributes 
		PL_DrgCrimFelCnt1Y, 
		PL_DrgCrimFelCnt7Y, 
		PL_DrgCrimFelNewDt1Y, 
		PL_DrgCrimFelOldDt1Y, 
		PL_DrgCrimFelNewDt7Y, 
		PL_DrgCrimFelOldDt7Y, 
		PL_DrgCrimFelNewMsnc1Y, 
		PL_DrgCrimFelOldMsnc1Y, 
		PL_DrgCrimFelNewMsnc7Y, 
		PL_DrgCrimFelOldMsnc7Y,
		PL_DrgCrimNfelCnt1Y, 
		PL_DrgCrimNfelCnt7Y, 
		PL_DrgCrimNfelNewDt1Y, 
		PL_DrgCrimNfelOldDt1Y, 
		PL_DrgCrimNfelNewDt7Y, 
		PL_DrgCrimNfelOldDt7Y, 
		PL_DrgCrimNfelNewMsnc1Y, 
		PL_DrgCrimNfelOldMsnc1Y, 
		PL_DrgCrimNfelNewMsnc7Y, 
		PL_DrgCrimNfelOldMsnc7Y,
		PL_DrgArstCnt1Y,
		PL_DrgArstCnt7Y,
		PL_DrgArstNewDt1Y,
		PL_DrgArstOldDt1Y,
		PL_DrgArstNewDt7Y,
		PL_DrgArstOldDt7Y,
		PL_DrgArstNewMsnc1Y,
		PL_DrgArstOldMsnc1Y,
		PL_DrgArstNewMsnc7Y,
		PL_DrgArstOldMsnc7Y,
		PL_DrgCrimCnt1Y,
		PL_DrgCrimCnt7Y,
		PL_DrgCrimNewDt1Y,
		PL_DrgCrimOldDt1Y,
		PL_DrgCrimNewDt7Y,
		PL_DrgCrimOldDt7Y,
		PL_DrgCrimNewMsnc1Y,
		PL_DrgCrimOldMsnc1Y,
		PL_DrgCrimNewMsnc7Y,
		PL_DrgCrimOldMsnc7Y,
		PL_DrgCrimSeverityIndx7Y,
		PL_DrgCrimBehaviorIndx7Y,
		// Bankruptcy Attributes
		PL_DrgBkCnt1Y,
		PL_DrgBkCnt7Y,
		PL_DrgBkCnt10Y,
		PL_DrgBkDtList1Y,
		PL_DrgBkDtList7Y,
		PL_DrgBkDtList10Y,
		PL_DrgBkNewDt1Y,
		PL_DrgBkNewDt7Y,
		PL_DrgBkNewDt10Y,
		PL_DrgBkOldDt1Y,
		PL_DrgBkOldDt7Y,
		PL_DrgBkOldDt10Y,
		PL_DrgBkNewMsnc1Y,
		PL_DrgBkNewMsnc7Y,
		PL_DrgBkNewMsnc10Y,
		PL_DrgBkOldMsnc1Y,
		PL_DrgBkOldMsnc7Y,
		PL_DrgBkOldMsnc10Y,
		PL_DrgBkChList1Y,
		PL_DrgBkChList7Y,
		PL_DrgBkChList10Y,
		PL_DrgBkNewChType1Y, 
		PL_DrgBkNewChType7Y, 
		PL_DrgBkNewChType10Y,
		PL_DrgBkCh7Cnt1Y,
		PL_DrgBkCh7Cnt7Y,
		PL_DrgBkCh7Cnt10Y,
		PL_DrgBkCh13Cnt1Y,
		PL_DrgBkCh13Cnt7Y,
		PL_DrgBkCh13Cnt10Y,
		PL_DrgBkUpdtNewDt1Y,
		PL_DrgBkUpdtNewDt7Y,
		PL_DrgBkUpdtNewDt10Y,
		PL_DrgBkUpdtNewMsnc1Y,
		PL_DrgBkUpdtNewMsnc7Y,
		PL_DrgBkUpdtNewMsnc10Y,
		PL_DrgBkDispList1Y,
		PL_DrgBkDispList7Y,
		PL_DrgBkDispList10Y,
		PL_DrgBkNewDispType1Y,
		PL_DrgBkNewDispType7Y,
		PL_DrgBkNewDispType10Y,
		PL_DrgBkNewDispDt1Y,
		PL_DrgBkNewDispDt7Y,
		PL_DrgBkNewDispDt10Y,
		PL_DrgBkNewDispMsnc1Y,
		PL_DrgBkNewDispMsnc7Y,
		PL_DrgBkNewDispMsnc10Y,
		PL_DrgBkDispCnt1Y,
		PL_DrgBkDispCnt7Y,
		PL_DrgBkDispCnt10Y,
		PL_DrgBkDsmsCnt1Y,
		PL_DrgBkDsmsCnt7Y,
		PL_DrgBkDsmsCnt10Y,
		PL_DrgBkDschCnt1Y,
		PL_DrgBkDschCnt7Y,
		PL_DrgBkDschCnt10Y,
		PL_DrgBkTypeList1Y,
		PL_DrgBkTypeList7Y,
		PL_DrgBkTypeList10Y,
		PL_DrgBkBusFlag1Y,
		PL_DrgBkBusFlag7Y,
		PL_DrgBkBusFlag10Y,
		PL_DrgBkSeverityIndx10Y,
		// ProfessionalLicense Attributes
		PL_ProfLicFlagEv,
		PL_ProfLicIssueDtListEv,
		PL_ProfLicExpDtListEv,
		PL_ProfLicIndxByLicListEv,
		PL_ProfLicActvFlag,
		PL_ProfLicActvNewIssueDt,
		PL_ProfLicActvNewExpDt,
		PL_ProfLicActvNewType,
		PL_ProfLicActvNewTitleType,
		PL_ProfLicActvNewIndx,
		PL_ProfLicActvNewSrcType,
		// Best PII
		PL_CurrAddrFull,
		PL_CurrAddrLocID,
		PL_PrevAddrFull,
		PL_PrevAddrLocID

   		} 

   	ASOF ArchiveDated(P_InpClnArchDt) 
   	USING DPM
		USE InputPIIDataset(FLAT, 
			InputPII(UID = G_ProcUID, Subject = P_LexID));// We are linking the Input PII to the Person ENTITY via the G_ProcUID		


QUERY: FCRAPersonAttributesV1(Person LexID_in, 
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					P_InpClnArchDt, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		P_LexIDSeenFlag,
		PL_AstVehAirCntEv,
		PL_AstVehAirEmrgDtListEv,
		PL_AstVehAirEmrgNewDtEv,
		PL_AstVehAirEmrgOldDtEv,
		PL_AstVehAirEmrgNewMsncEv,
		PL_AstVehAirEmrgOldMsncEv,
		PL_AstVehWtrCntEv,
		PL_AstVehWtrEmrgDtListEv,
		PL_AstVehWtrEmrgNewDtEv,
		PL_AstVehWtrEmrgOldDtEv,
		PL_AstVehWtrEmrgNewMsncEv,
		PL_AstVehWtrEmrgOldMsncEv,
		// Criminal Attributes 
		PL_DrgCrimFelCnt1Y, 
		PL_DrgCrimFelCnt7Y, 
		PL_DrgCrimFelNewDt1Y, 
		PL_DrgCrimFelOldDt1Y, 
		PL_DrgCrimFelNewDt7Y, 
		PL_DrgCrimFelOldDt7Y, 
		PL_DrgCrimFelNewMsnc1Y, 
		PL_DrgCrimFelOldMsnc1Y, 
		PL_DrgCrimFelNewMsnc7Y, 
		PL_DrgCrimFelOldMsnc7Y,
		PL_DrgCrimNfelCnt1Y, 
		PL_DrgCrimNfelCnt7Y, 
		PL_DrgCrimNfelNewDt1Y, 
		PL_DrgCrimNfelOldDt1Y, 
		PL_DrgCrimNfelNewDt7Y, 
		PL_DrgCrimNfelOldDt7Y, 
		PL_DrgCrimNfelNewMsnc1Y, 
		PL_DrgCrimNfelOldMsnc1Y, 
		PL_DrgCrimNfelNewMsnc7Y, 
		PL_DrgCrimNfelOldMsnc7Y,
		PL_DrgCrimCnt1Y,
		PL_DrgCrimCnt7Y,
		PL_DrgCrimNewDt1Y,
		PL_DrgCrimOldDt1Y,
		PL_DrgCrimNewDt7Y,
		PL_DrgCrimOldDt7Y,
		PL_DrgCrimNewMsnc1Y,
		PL_DrgCrimOldMsnc1Y,
		PL_DrgCrimNewMsnc7Y,
		PL_DrgCrimOldMsnc7Y,
		PL_DrgCrimSeverityIndx7Y,
		PL_DrgCrimBehaviorIndx7Y,
		// Bankruptcy Attributes
		PL_DrgBkCnt1Y,
		PL_DrgBkCnt7Y,
		PL_DrgBkCnt10Y,
		PL_DrgBkDtList1Y,
		PL_DrgBkDtList7Y,
		PL_DrgBkDtList10Y,
		PL_DrgBkNewDt1Y,
		PL_DrgBkNewDt7Y,
		PL_DrgBkNewDt10Y,
		PL_DrgBkOldDt1Y,
		PL_DrgBkOldDt7Y,
		PL_DrgBkOldDt10Y,
		PL_DrgBkNewMsnc1Y,
		PL_DrgBkNewMsnc7Y,
		PL_DrgBkNewMsnc10Y,
		PL_DrgBkOldMsnc1Y,
		PL_DrgBkOldMsnc7Y,
		PL_DrgBkOldMsnc10Y,
		PL_DrgBkChList1Y,
		PL_DrgBkChList7Y,
		PL_DrgBkChList10Y,
		PL_DrgBkNewChType1Y, 
		PL_DrgBkNewChType7Y, 
		PL_DrgBkNewChType10Y,
		PL_DrgBkCh7Cnt1Y,
		PL_DrgBkCh7Cnt7Y,
		PL_DrgBkCh7Cnt10Y,
		PL_DrgBkCh13Cnt1Y,
		PL_DrgBkCh13Cnt7Y,
		PL_DrgBkCh13Cnt10Y,
		PL_DrgBkUpdtNewDt1Y,
		PL_DrgBkUpdtNewDt7Y,
		PL_DrgBkUpdtNewDt10Y,
		PL_DrgBkUpdtNewMsnc1Y,
		PL_DrgBkUpdtNewMsnc7Y,
		PL_DrgBkUpdtNewMsnc10Y,
		PL_DrgBkDispList1Y,
		PL_DrgBkDispList7Y,
		PL_DrgBkDispList10Y,
		PL_DrgBkNewDispType1Y,
		PL_DrgBkNewDispType7Y,
		PL_DrgBkNewDispType10Y,
		PL_DrgBkNewDispDt1Y,
		PL_DrgBkNewDispDt7Y,
		PL_DrgBkNewDispDt10Y,
		PL_DrgBkNewDispMsnc1Y,
		PL_DrgBkNewDispMsnc7Y,
		PL_DrgBkNewDispMsnc10Y,
		PL_DrgBkDispCnt1Y,
		PL_DrgBkDispCnt7Y,
		PL_DrgBkDispCnt10Y,
		PL_DrgBkDsmsCnt1Y,
		PL_DrgBkDsmsCnt7Y,
		PL_DrgBkDsmsCnt10Y,
		PL_DrgBkDschCnt1Y,
		PL_DrgBkDschCnt7Y,
		PL_DrgBkDschCnt10Y,
		PL_DrgBkTypeList1Y,
		PL_DrgBkTypeList7Y,
		PL_DrgBkTypeList10Y,
		PL_DrgBkBusFlag1Y,
		PL_DrgBkBusFlag7Y,
		PL_DrgBkBusFlag10Y,
		PL_DrgBkSeverityIndx10Y,
		// ProfessionalLicense Attributes
		PL_ProfLicFlagEv,
		PL_ProfLicIssueDtListEv,
		PL_ProfLicExpDtListEv,
		PL_ProfLicIndxByLicListEv,
		PL_ProfLicActvFlag,
		PL_ProfLicActvNewIssueDt,
		PL_ProfLicActvNewExpDt,
		PL_ProfLicActvNewType,
		PL_ProfLicActvNewTitleType,
		PL_ProfLicActvNewIndx,
		PL_ProfLicActvNewSrcType,
		// Best PII
		PL_CurrAddrFull,
		PL_CurrAddrLocID,
		PL_PrevAddrFull,
		PL_PrevAddrLocID

		} 
	ASOF ArchiveDated(P_InpClnArchDt) 
	USING DPM
	USE InputPIIDataset(FLAT, 
			InputPII(UID = G_ProcUID, Subject = P_LexID));// We are linking the Input PII to the Person ENTITY via the G_ProcUID

QUERY: NonFCRABusinessSeleIDAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in,  
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputBII InputBIIDataset, 
					P_InpClnArchDt, 
					PERMITS DPM) <= BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		B_LexIDUlt := UltID,
		B_LexIDOrg := OrgID,
		B_LexIDLegal := SeleID,
		B_LexIDLegalSeenFlag,
		BE_VerSrcListEv,
		BE_VerSrcCntEv,
		BE_VerSrcEmrgDtListEv,
		BE_VerSrcLastDtListEv,
		BE_VerSrcOldDtEv,
		BE_VerSrcNewDtEv,
		BE_VerSrcOldMsncEv,
		BE_VerSrcNewMsncEv,
		BE_VerSrcRptNewBusFlag,
		BE_VerSrcCredCntEv,
		BE_VerSrcBureauFlag,
		BE_VerSrcBureauOldDtEv,
		BE_VerSrcBureauOldMsncEv,
		//Tradeline
		BE_B2BCntEv,
		BE_B2BCnt2Y,
		BE_B2BCarrCnt2Y,
		BE_B2BFltCnt2Y,
		BE_B2BMatCnt2Y,
		BE_B2BOpsCnt2Y,
		BE_B2BOthCnt2Y,
		BE_B2BCarrPct2Y,
		BE_B2BFltPct2Y,
		BE_B2BMatPct2Y,
		BE_B2BOpsPct2Y,
		BE_B2BOthPct2Y,
		BE_B2BOldDtEv,
		BE_B2BOldMsncEv,
		BE_B2BOldDt2Y,
		BE_B2BNewDt2Y,
		BE_B2BOldMsnc2Y,
		BE_B2BNewMsnc2Y,
		BE_B2BActvCnt,
		BE_B2BActvCarrCnt,
		BE_B2BActvFltCnt,
		BE_B2BActvMatCnt,
		BE_B2BActvOpsCnt,
		BE_B2BActvOthCnt,
		BE_B2BActvCarrPct,
		BE_B2BActvFltPct,
		BE_B2BActvMatPct,
		BE_B2BActvOpsPct,
		BE_B2BActvOthPct,
		BE_B2BActvCntA1Y,
		BE_B2BActvCarrCntA1Y,
		BE_B2BActvFltCntA1Y,
		BE_B2BActvMatCntA1Y,
		BE_B2BActvOpsCntA1Y,
		BE_B2BActvOthCntA1Y,
		BE_B2BActvCntGrow1Y,
		BE_B2BActvCarrCntGrow1Y,
		BE_B2BActvFltCntGrow1Y,
		BE_B2BActvMatCntGrow1Y,
		BE_B2BActvOpsCntGrow1Y,
		BE_B2BActvOthCntGrow1Y,
		BE_B2BActvBalTot,
		BE_B2BActvCarrBalTot,
		BE_B2BActvFltBalTot,
		BE_B2BActvMatBalTot,
		BE_B2BActvOpsBalTot,
		BE_B2BActvOthBalTot,
		BE_B2BActvCarrBalTotPct,
		BE_B2BActvFltBalPct,
		BE_B2BActvMatBalPct,
		BE_B2BActvOpsBalPct,
		BE_B2BActvOthBalPct,
		BE_B2BActvBalTotRnge,
		BE_B2BActvCarrBalTotRnge,
		BE_B2BActvFltBalTotRnge,
		BE_B2BActvMatBalTotRnge,
		BE_B2BActvOpsBalTotRnge,
		BE_B2BActvOthBalTotRnge,
		BE_B2BActvBalAvg,
		BE_B2BActvCarrBalAvg,
		BE_B2BActvFltBalAvg,
		BE_B2BActvMatBalAvg,
		BE_B2BActvOpsBalAvg,
		BE_B2BActvOthBalAvg,
		BE_B2BActvBalTotA1Y,
		BE_B2BActvCarrBalTotA1Y,
		BE_B2BActvFltBalTotA1Y,
		BE_B2BActvMatBalTotA1Y,
		BE_B2BActvOpsBalTotA1Y,
		BE_B2BActvOthBalTotA1Y,
		BE_B2BActvBalTotGrow1Y,
		BE_B2BActvCarrBalTotGrow1Y,
		BE_B2BActvFltBalTotGrow1Y,
		BE_B2BActvMatBalTotGrow1Y,
		BE_B2BActvOpsBalTotGrow1Y,
		BE_B2BActvOthBalTotGrow1Y,
		BE_B2BActvBalTotGrowIndx1Y,
		BE_B2BActvCarrBalTotGrowIndx1Y,
		BE_B2BActvFltBalTotGrowIndx1Y,
		BE_B2BActvMatBalTotGrowIndx1Y,
		BE_B2BActvOpsBalTotGrowIndx1Y,
		BE_B2BActvOthBalTotGrowIndx1Y,
		BE_B2BBalMax2Y,
		BE_B2BCarrBalMax2Y,
		BE_B2BFltBalMax2Y,
		BE_B2BMatBalMax2Y,
		BE_B2BOpsBalMax2Y,
		BE_B2BOthBalMax2Y,
		BE_B2BBalMaxDt2Y,
		BE_B2BCarrBalMaxDt2Y,
		BE_B2BFltBalMaxDt2Y,
		BE_B2BMatBalMaxDt2Y,
		BE_B2BOpsBalMaxDt2Y,
		BE_B2BOthBalMaxDt2Y,
		BE_B2BBalMaxMsnc2Y,
		BE_B2BCarrBalMaxMsnc2Y,
		BE_B2BFltBalMaxMsnc2Y,
		BE_B2BMatBalMaxMsnc2Y,
		BE_B2BOpsBalMaxMsnc2Y,
		BE_B2BOthBalMaxMsnc2Y,
		BE_B2BBalMaxSegType2Y,
		BE_B2BActvWorstPerfIndx,
		BE_B2BActvCarrWorstPerfIndx,
		BE_B2BActvFltWorstPerfIndx,
		BE_B2BActvMatWorstPerfIndx,
		BE_B2BActvOpsWorstPerfIndx,
		BE_B2BActvOthWorstPerfIndx,
		BE_B2BActv1pDpdCnt,
		BE_B2BActv31pDpdCnt,
		BE_B2BActv61pDpdCnt,
		BE_B2BActv91pDpdCnt,
		BE_B2BActv1pDpdPct,
		BE_B2BActv31pDpdPct,
		BE_B2BActv61pDpdPct,
		BE_B2BActv91pDpdPct,
		BE_B2BActv1pDpdBalTot,
		BE_B2BActv31pDpdBalTot,
		BE_B2BActv61pDpdBalTot,
		BE_B2BActv91pDpdBalTot,
		BE_B2BActv1pDpdBalTotPct,
		BE_B2BActv31pDpdBalTotPct,
		BE_B2BActv61pDpdBalTotPct,
		BE_B2BActv91pDpdBalTotPct,
		BE_B2BActv1pDpdBalTotA1Y,
		BE_B2BActv31pDpdBalTotA1Y,
		BE_B2BActv61pDpdBalTotA1Y,
		BE_B2BActv91pDpdBalTotA1Y,
		BE_B2BActv1pDpdBalTotGrow1Y,
		BE_B2BActv31pDpdBalTotGrow1Y,
		BE_B2BActv61pDpdBalTotGrow1Y,
		BE_B2BActv91pDpdBalTotGrow1Y,
		BE_B2BWorstPerfIndx2Y,
		BE_B2BCarrWorstPerfIndx2Y,
		BE_B2BFltWorstPerfIndx2Y,
		BE_B2BMatWorstPerfIndx2Y,
		BE_B2BOpsWorstPerfIndx2Y,
		BE_B2BOthWorstPerfIndx2Y,
		BE_B2BWorstPerfDt2Y,
		BE_B2BCarrWorstPerfDt2Y,
		BE_B2BFltWorstPerfDt2Y,
		BE_B2BMatWorstPerfDt2Y,
		BE_B2BOpsWorstPerfDt2Y,
		BE_B2BOthWorstPerfDt2Y,
		BE_B2BWorstPerfMsnc2Y,
		BE_B2BCarrWorstPerfMsnc2Y,
		BE_B2BFltWorstPerfMsnc2Y,
		BE_B2BMatWorstPerfMsnc2Y,
		BE_B2BOpsWorstPerfMsnc2Y,
		BE_B2BOthWorstPerfMsnc2Y,
		BE_B2BCnt24Mc,
		BE_B2BCarrCnt24Mc,
		BE_B2BFltCnt24Mc,
		BE_B2BMatCnt24Mc,
		BE_B2BOpsCnt24Mc,
		BE_B2BOthCnt24Mc,
		BE_B2BRecFlagByMonStr24Mc,
		BE_B2BCarrRecFlagByMonStr24Mc,
		BE_B2BFltRecFlagByMonStr24Mc,
		BE_B2BMatRecFlagByMonStr24Mc,
		BE_B2BOpsRecFlagByMonStr24Mc,
		BE_B2BOthRecFlagByMonStr24Mc,
		BE_B2BRecFlagByMonSum24Mc,
		BE_B2BCarrRecFlagByMonSum24Mc,
		BE_B2BFltRecFlagByMonSum24Mc,
		BE_B2BMatRecFlagByMonSum24Mc,
		BE_B2BOpsRecFlagByMonSum24Mc,
		BE_B2BOthRecFlagByMonSum24Mc,
		BE_B2BBalVol24Mc,
		BE_B2BCarrBalVol24Mc,
		BE_B2BFltBalVol24Mc,
		BE_B2BMatBalVol24Mc,
		BE_B2BOpsBalVol24Mc,
		BE_B2BOthBalVol24Mc,
		BE_AstVehAirCntEv,
		BE_AstVehWtrCntEv,
		BE_AstVehAutoCntEv,
		BE_AstVehAutoCnt2Y,
		BE_AstVehAutoPersCnt2Y,
		BE_AstVehAutoCommCnt2Y,
		BE_AstVehAutoOtherCnt2Y,
		BE_AstVehAutoValTot2Y,
		BE_AstVehAutoEmrgNewMsncEv,
		BE_AstVehAutoEmrgNewDtEv,
		// Bankruptcy attributes//
		BE_DrgBkCnt1Y,
		BE_DrgBkCnt7Y,
		BE_DrgBkCnt10Y,
		BE_DrgBkOldDt10Y,
		BE_DrgBkOldMsnc10Y,
		BE_DrgBkNewDt10Y,
		BE_DrgBkNewMsnc10Y,
		BE_DrgBkUpdtNewDt10Y,
		BE_DrgBkUpdtNewMsnc10Y,
		BE_DrgBkDispCnt10Y,
		BE_DrgBkDschCnt10Y,
		BE_DrgBkDsmsCnt10Y,
		BE_DrgBkNewDispType10Y,
		BE_DrgBkCh7Cnt10Y,
		BE_DrgBkCh11Cnt10Y,
		BE_DrgBkCh13Cnt10Y,
		BE_DrgBkNewChType10Y,
		//SOS Attributes//
		BE_SOSCntEv,
		BE_SOSNewDtEv,
		BE_SOSOldDtEv,
		BE_SOSNewMsncEv,
		BE_SOSOldMsncEv,
		BE_SOSStateCntEv,
		BE_SOSDomCntEv,
		BE_SOSDomNewDtEv,
		BE_SOSDomOldDtEv,
		BE_SOSDomNewMsncEv,
		BE_SOSDomOldMsncEv,
		BE_SOSFrgnCntEv,
		BE_SOSFrgnNewDtEv,
		BE_SOSFrgnOldDtEv,
		BE_SOSFrgnNewMsncEv,
		BE_SOSFrgnOldMsncEv,
		BE_SOSDomStatusIndxEv,
		//Best Business Attributes//
		BE_BestName,
		BE_BestAddrLocID,
		BE_BestAddrSt,
		BE_BestAddrCity,
		BE_BestAddrCityPost,
		BE_BestAddrState,
		BE_BestAddrZip,
		BE_BestTIN,
		BE_BestPhone,
		BE_DrgGovDebarredFlagEv,//
		//Firmographics
		BE_BusSICCode1, 
		BE_BusSICCode1Desc, 
		BE_BusSICCode1GroupDesc, 
		BE_BusSICCode2, 
		BE_BusSICCode2Desc, 
		BE_BusSICCode2GroupDesc, 
		BE_BusSICCode3, 
		BE_BusSICCode3Desc, 
		BE_BusSICCode3GroupDesc, 
		BE_BusSICCode4, 
		BE_BusSICCode4Desc, 
		BE_BusSICCode4GroupDesc,
		BE_BusNAICSCode1,
		BE_BusNAICSCode1Desc,
		BE_BusNAICSCode1GroupDesc,
		BE_BusNAICSCode2,
		BE_BusNAICSCode2Desc,
		BE_BusNAICSCode2GroupDesc,
		BE_BusNAICSCode3,
		BE_BusNAICSCode3Desc,
		BE_BusNAICSCode3GroupDesc,
		BE_BusNAICSCode4,
		BE_BusNAICSCode4Desc,
		BE_BusNAICSCode4GroupDesc,
		BE_BusEmplCountCurr,
		BE_BusEmplCountCurrRnge,
		BE_BusAnnualSalesCurr,
		BE_BusAnnualSalesCurrRnge,
		//Flags
		BE_BusIsNonProfitFlag,
		BE_BusIsFranchiseFlag,
		BE_BusOffers401kFlag,
		BE_BusHasNewLocationFlag1Y,
		BE_BusLocActvCnt,
		BE_BusIsSBEFlag,
		//LienJudgment Attributes//
		BE_DrgLTDCnt1Y,
		BE_DrgLTDCnt7Y,
		BE_DrgLTDAmtTot7Y,
		BE_DrgLTDAmtAvg7Y,
		BE_DrgLTDNewDt7Y,
		BE_DrgLTDOldDt7Y,
		BE_DrgLTDNewMsnc7Y,
		BE_DrgLTDOldMsnc7Y,
		//UCC Attributes
		BE_UCCCntEv,
		BE_UCCDebtorCntEv,
		BE_UCCDebtorOldDtEv,
		BE_UCCDebtorOldMsncEv,
		BE_UCCDebtorNewDtEv,
		BE_UCCDebtorNewMsncEv,
		BE_UCCActvCnt,
		BE_UCCDebtorActvCnt,
		BE_UCCDebtorTermCntEv,
		BE_UCCDebtorOtherCntEv,
		BE_UCCDebtorActvPct,
		BE_UCCDebtorTermPctEv,
		BE_UCCDebtorOtherPctEv,
		BE_UCCDebtorTermNewDtEv,
		BE_UCCDebtorTermNewMsncEv,
		BE_UCCCreditorCntEv,
		BE_UCCRoleIndxEv,
		BE_UCCActvRoleIndx,
		BE_DrgLienCnt1Y,
		BE_DrgLienCnt7Y,
		BE_DrgLienAmtTot7Y,
		BE_DrgLienAmtAvg7Y,
		BE_DrgLienOldDt7Y,
		BE_DrgLienOldMsnc7Y,
		BE_DrgLienNewDt7Y,
		BE_DrgLienNewMsnc7Y,
		BE_DrgLienTaxCnt7Y,
		BE_DrgLienTaxAmtTot7Y,
		BE_DrgLienTaxOldDt7Y,
		BE_DrgLienTaxOldMsnc7Y,
		BE_DrgLienTaxNewDt7Y,
		BE_DrgLienTaxNewMsnc7Y,
		BE_DrgLienTaxFedCnt7Y,
		BE_DrgLienTaxFedAmtTot7Y,
		BE_DrgLienTaxFedOldDt7Y,
		BE_DrgLienTaxFedOldMsnc7Y,
		BE_DrgLienTaxFedNewDt7Y,
		BE_DrgLienTaxFedNewMsnc7Y,
		BE_DrgLienTaxStateCnt7Y,
		BE_DrgLienTaxStateAmtTot7Y,
		BE_DrgLienTaxStateOldDt7Y,
		BE_DrgLienTaxStateOldMsnc7Y,
		BE_DrgLienTaxStateNewDt7Y,
		BE_DrgLienTaxStateNewMsnc7Y,
		BE_DrgLienTaxOtherCnt7Y,
		BE_DrgLienTaxOtherAmtTot7Y,
		BE_DrgLienTaxOtherOldDt7Y,
		BE_DrgLienTaxOtherOldMsnc7Y,
		BE_DrgLienTaxOtherNewDt7Y,
		BE_DrgLienTaxOtherNewMsnc7Y,
		BE_DrgLienOtherCnt7Y,
		BE_DrgLienOtherAmtTot7Y,
		BE_DrgLienOtherNewDt7Y,
		BE_DrgLienOtherOldDt7Y,
		BE_DrgLienOtherNewMsnc7Y,
		BE_DrgLienOtherOldMsnc7Y,
		//OverAll Judgment Attributes
		BE_DrgJudgCnt1Y,
		BE_DrgJudgCnt7Y,
		BE_DrgJudgAmtTot7Y,
		BE_DrgJudgAmtAvg7Y,
		BE_DrgJudgOldDt7Y,
		BE_DrgJudgOldMsnc7Y,
		BE_DrgJudgNewDt7Y,
		BE_DrgJudgNewMsnc7Y,
		BE_DrgJudgCivCrtCnt7Y,
		BE_DrgJudgCivCrtAmtTot7Y,
		BE_DrgJudgCivCrtOldDt7Y,
		BE_DrgJudgCivCrtOldMsnc7Y,
		BE_DrgJudgCivCrtNewDt7Y,
		BE_DrgJudgCivCrtNewMsnc7Y,
		BE_DrgJudgSmClaimCnt7Y,
		BE_DrgJudgSmClaimAmtTot7Y,
		BE_DrgJudgSmClaimOldDt7Y,
		BE_DrgJudgSmClaimOldMsnc7Y,
		BE_DrgJudgSmClaimNewDt7Y,
		BE_DrgJudgSmClaimNewMsnc7Y,
		BE_DrgJudgFrclCnt7Y,
		BE_DrgJudgFrclAmtTot7Y,
		BE_DrgJudgFrclOldDt7Y,
		BE_DrgJudgFrclOldMsnc7Y,
		BE_DrgJudgFrclNewDt7Y,
		BE_DrgJudgFrclNewMsnc7Y,
		//LienJudgment OverAll Attributes
		BE_DrgLnJCnt1Y,
		BE_DrgLnJCnt7Y,
		BE_DrgLnJAmtTot7Y,
		BE_DrgLnJAmtAvg7Y,
		BE_DrgLnJNewDt7Y,
		BE_DrgLnJOldDt7Y,
		BE_DrgLnJNewMsnc7Y,
		BE_DrgLnJOldMsnc7Y,
		//Suits Attributes
		BE_DrgSuitCnt7Y,
		BE_DrgSuitAmtTot7Y,
		BE_DrgSuitOldDt7Y,
		BE_DrgSuitOldMsnc7Y,
		BE_DrgSuitNewDt7Y,
		BE_DrgSuitNewMsnc7Y,
		//LienJudgment FilingType Attrubutes
		BE_DrgJudgNewType7Y,
		BE_DrgLienNewType7Y,
		//Business OverAll Drg Atributes
		BE_DrgCnt1Y,
		BE_DrgCnt7Y,
		BE_DrgFlag7Y,
		BE_DrgNewDt7Y,
		BE_DrgNewMsnc7Y,
		BE_DrgOldDt7Y,
		BE_DrgOldMsnc7Y,
		//associate attributes
		BE_AssocCntEv,
		BE_AssocCnt2Y,
		BE_AssocPct2Y,
		BE_AssocExecCntEv,
		BE_AssocExecCnt2Y,
		BE_AssocExecPct2Y,
		BE_AssocNexecCntEv,
		BE_AssocNexecCnt2Y,
		BE_AssocNexecPct2Y,
		BE_AssocEmailFlag2Y,
		BE_AssocExecEmailFlag2Y,
		BE_AssocNexecEmailFlag2Y,
		BE_AssocAgeAvg2Y,
		BE_AssocExecAgeAvg2Y,
		BE_AssocNexecAgeAvg2Y,
		BE_AssocWEduCollCnt2Y,
		BE_AssocExecWEduCollCnt2Y,
		BE_AssocNexecWEduCollCnt2Y,
		BE_AssocWDrgCrimFelCnt2Y,   
		BE_AssocExecWDrgCrimFelCnt2Y,
		BE_AssocNexecWDrgCrimFelCnt2Y,		
		BE_AssocWDrgCrimCnt2Y,
		BE_AssocExecWDrgCrimCnt2Y,
		BE_AssocNexecWDrgCrimCnt2Y,	
		BE_AssocWDrgBkCnt2Y,   
		BE_AssocExecWDrgBkCnt2Y,
		BE_AssocNexecWDrgBkCnt2Y,
		BE_AssocEmrgMsncAvg2Y,
		BE_AssocExecEmrgMsncAvg2Y,
		BE_AssocNexecEmrgMsncAvg2Y,
		BE_AssocExecFemaleCnt2Y,
		BE_AssocExecFemalePct2Y,
		BE_AssocExecRelatedCnt2Y,
		BE_AssocExecRelatedPct2Y
		},
	// This res1 results for NonFCRABusinessSeleIDAttributesV1 is used only to calculate B_LexIDLegalRstdOnlyFlag. 
	// The intention of this is to check if we can find any records on file for the business given the permissions we have set, regardless of the date on the records.
	// This is a search on the Business SeleID ENTITY with a history date of the current date used instead of the archive date. 
	// If we find records on file, we say the business is not restricted.
	// If no records are found, but we do have a SeleID, then the business must only be seen on restricted sources. This attribute is ONLY used in the master layout,
	// And therefore should only be calculated when master results are requested so that we do not impact production performance.		
	BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		B_LexIDUlt := UltID,
		B_LexIDOrg := OrgID,
		B_LexIDLegal := SeleID,
		B_LexIDLegalRstdOnlyFlag
		}		
	ASOF ArchiveDated(P_InpClnArchDt) 
	USING DPM
	USE InputPIIDataset(FLAT,
			InputPII(UID = G_ProcUID),
			InputBIIInputPII(PII = G_ProcUID, BII = G_ProcBusUID)),
		InputBIIDataset(FLAT, InputBII(UID = G_ProcBusUID));
	
QUERY: NonFCRABusinessProxIDAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, INTEGER ProxID_in,  
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputBII InputBIIDataset, 
					P_InpClnArchDt, 
					PERMITS DPM) <= BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in,ProxID = ProxID_in){
		B_LexIDUlt := UltID,
		B_LexIDOrg := OrgID,
		B_LexIDLegal := SeleID,
		B_LexIDLoc := ProxID,
		B_LexIDLocSeenFlag,
		//Best BII Attributes//
    BP_BestName,
		BP_BestAddrLocID,
		BP_BestAddrSt,
		BP_BestAddrCity,
		BP_BestAddrCityPost,
		BP_BestAddrState,
		BP_BestAddrZip,
		BP_BestTIN,
		BP_BestPhone
		}
	ASOF ArchiveDated(P_InpClnArchDt) 
	USING DPM
	USE InputPIIDataset(FLAT,
			InputPII(UID = G_ProcUID),
			InputBIIInputPII(PII = G_ProcUID, BII = G_ProcBusUID)),
		InputBIIDataset(FLAT, InputBII(UID = G_ProcBusUID));


 QUERY: NonFCRAMiniAttributesV1(Person LexID_in, 
					P_InpClnArchDt, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		P_LexIDSeenFlag,
		CurrentAddrPrimRng,
		CurrentAddrPreDir,
		CurrentAddrPrimName,
		CurrentPostdirectional,
		CurrentAddrSffx,
		CurrentAddrSecRng,
		CurrentAddrState,
		CurrentAddrZip5,
		CurrentAddrStateCode,
		CurrentAddrCnty,
		CurrentAddrGeo,
		PreviousAddrPrimRng,
		PreviousAddrPreDir,
		PreviousAddrPrimName,
		PreviousPostdirectional,
		PreviousAddrSffx,
		PreviousAddrSecRng,
		PreviousAddrState,	
		PreviousAddrZip5,	
		PreviousAddrStateCode,
		PreviousAddrCnty,
		PreviousAddrGeo,
		EmergingAddrPrimRng,
		EmergingAddrPreDir,
		EmergingAddrPrimName,
		EmergingPostdirectional,
		EmergingAddrSffx,
		EmergingAddrSecRng,
		EmergingAddrState,
		EmergingAddrZip5,
		EmergingAddrStateCode,
		EmergingAddrCnty,
		EmergingAddrGeo
		   		} 

   	ASOF reportedby(P_InpClnArchDt) 
   	USING DPM;
			
			
QUERY: FCRAMiniAttributesV1(Person LexID_in, 
					P_InpClnArchDt, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		P_LexIDSeenFlag,
		CurrentAddrPrimRng,
		CurrentAddrPreDir,
		CurrentAddrPrimName,
		CurrentPostdirectional,
		CurrentAddrSffx,
		CurrentAddrSecRng,
		CurrentAddrState,
		CurrentAddrZip5,
		CurrentAddrStateCode,
		CurrentAddrCnty,
		CurrentAddrGeo,
		PreviousAddrPrimRng,
		PreviousAddrPreDir,
		PreviousAddrPrimName,
		PreviousPostdirectional,
		PreviousAddrSffx,
		PreviousAddrSecRng,
		PreviousAddrState,	
		PreviousAddrZip5,	
		PreviousAddrStateCode,
		PreviousAddrCnty,
		PreviousAddrGeo,
		EmergingAddrPrimRng,
		EmergingAddrPreDir,
		EmergingAddrPrimName,
		EmergingPostdirectional,
		EmergingAddrSffx,
		EmergingAddrSecRng,
		EmergingAddrState,
		EmergingAddrZip5,
		EmergingAddrStateCode,
		EmergingAddrCnty,
		EmergingAddrGeo
		} 
	ASOF reportedby(P_InpClnArchDt) 
	USING DPM;

// --- Index Build QUERY ---
/* This QUERY Ensures we are generating all of the ECL Code necessary for building any of the ENTITY or ASSOCIATION Indexes at any given time (That KEL doesn't optimize them away completely
   MAKE SURE TO ADD ANY NEW ENTITY OR ASSOCIATIONS TO THIS LIST */ 

QUERY: IndexBuildEntity(P_InpClnArchDt, PERMITS DPM) <= 
		Accident,
		Address,
		Aircraft,
		Bankruptcy,
		BusinessUlt,
		BusinessOrg,
		BusinessSele,
		BusinessProx,
		BusinessPow,
		CriminalOffender,
		CriminalOffense,
		CriminalPunishment,
		DriversLicense,
		Education,
		Email,
		Employment,
		Household,
		Inquiry,
		LienJudgment,
		GeoLink,
		Person, 
		Phone,
		ProfessionalLicense,
		Property,
		PropertyEvent,
		SocialSecurityNumber,
		Surname,
		TIN,
		Tradeline,
		UCC,
		Utility,
		Vehicle,
		Watercraft,
		ZipCode
	ASOF ArchiveDated(P_InpClnArchDt) 
	USING DPM;

QUERY:  IndexBuildAssociation(P_InpClnArchDt, PERMITS DPM) <=  
		Address(UID=1).AddressInquiry.Inquiry, // Address -> Inquiry
		Address(UID=1).AddressPhone.PhoneNumber, // Address -> Phone
		Address(UID=1).AddressProperty.Prop, // Address -> Property
		Address(UID=1).AddressPropertyEvent.Event, // Address -> Property Event
		Address(UID=1).PersonAddress.Subject, // Address -> Person
		Address(UID=1).ProxAddress.BusinessLocation, // Address -> BusinessProx
		Address(UID=1).SeleAddress.Legal, // Address -> BusinessSele
		Address(UID=1).TINAddress.TaxID, // Address -> TIN
		Address(UID=1).UtilityAddress.Util, // Address -> Utility
		BusinessProx(UID=1).ProxAddress.Location, // BusinessProx -> Address
		BusinessProx(UID=1).ProxPerson.Contact, // BusinessProx -> Person
		BusinessProx(UID=1).ProxPhoneNumber.PhoneNumber, // BusinessProx -> PhoneNumber
		BusinessProx(UID=1).ProxTIN.TaxID, // BusinessProx -> TIN
		BusinessProx(UID=1).ProxUtility.Util, // BusinessProx -> Utility
		BusinessProx(UID=1).ProxEmail.rEmail, // BusinessProx -> Email
		BusinessProx(UID=1).ProxSele, // BusinessProx -> ProxSele
		BusinessSele(UID=1).SeleEmail.rEmail, // BusinessSele -> Email
		BusinessSele(UID=1).SeleAddress.Location, // BusinessSele -> Address
		BusinessSele(UID=1).SeleAircraft.Plane, // BusinessSele -> Aircraft
		BusinessSele(UID=1).SeleBankruptcy.Bankrupt, // BusinessSele -> Bankruptcy
		BusinessSele(UID=1).SeleLienJudgment.Lien, // BusinessSele -> LienJudgment
		BusinessSele(UID=1).SelePerson.Contact, // BusinessSele -> Person
		BusinessSele(UID=1).SelePhoneNumber.PhoneNumber, // BusinessSele -> Phone
		BusinessSele(UID=1).SeleProperty.Prop, // BusinessSele -> Property
		BusinessSele(UID=1).SelePropertyEvent.Event, // BusinessSele -> PropertyEvent
		BusinessSele(UID=1).SeleTIN.TaxID, // BusinessSele -> TIN
		BusinessSele(UID=1).SeleTradeline.Account, // BusinessSele -> Tradeline
		BusinessSele(UID=1).SeleUCC.Filing, // BusinessSele -> UCC
		BusinessSele(UID=1).SeleUtility.Util, // BusinessSele -> Utility
		BusinessSele(UID=1).SeleVehicle.Automobile, // BusinessSele -> Vehicle
		BusinessSele(UID=1).SeleWatercraft.WCraft, // BusinessSele -> Watercraft
		BusinessSele(UID=1).BusinessProx,
		CriminalOffender(UID=1).CriminalDetails.Offense, // CriminalOffender -> CriminalOffense
		CriminalOffender(UID=1).CriminalDetails.Punishment, // CriminalOffender -> CriminalPunishment
		Person(UID=1).FirstDegreeAssociations, // Person -> Person
		Person(UID=1).FirstDegreeRelative, // Person -> Person
		Household(UID=1).HouseHoldPhone.PhoneNumber, // Household -> Phone
		Household(UID=1).HouseholdMember.Subject, // Household -> Person
		Person(UID=1).AircraftOwner.Plane, // Person -> Aircraft
		Person(UID=1).EmploymentPerson.Emp, // Person -> Employment
		Person(UID=1).HouseholdMember.Household, // Person -> Household
		Person(UID=1).PersonAccident.Acc, // Person -> Accident
		Person(UID=1).PersonAddress.Location, // Person -> Address
		Person(UID=1).PersonBankruptcy.Bankrupt, // Person -> Bankruptcy
		Person(UID=1).PersonDriversLicense.License, // Person -> DriversLicense
		Person(UID=1).PersonEducation.Edu, // Person -> Education
		Person(UID=1).PersonEmail.rEmail, // Person -> Email
		Person(UID=1).PersonInquiry.Inquiry, // Person -> Inquiry
		Person(UID=1).PersonLienJudgment.Lien, // Person -> LienJudgment
		Person(UID=1).PersonOffender.Offender, // Person -> CriminalOffender
		Person(UID=1).PersonOffenses.Offense, // Person -> CriminalOffense
		Person(UID=1).PersonPhone.PhoneNumber, // Person -> Phone
		Person(UID=1).PersonProperty.Prop, // Person -> Property
		Person(UID=1).PersonPropertyEvent.Event, // Person -> PropertyEvent
		Person(UID=1).PersonSSN.Social, // Person -> SSN
		Person(UID=1).PersonUCC.Filing, // Person -> UCC
		Person(UID=1).PersonVehicle.Automobile, // Person -> Vehicle
		Person(UID=1).ProfessionalLicensePerson.ProfLic,  // Person -> ProfessionalLicense
		Person(UID=1).ProxPerson.BusinessLocation, // Person -> BusinessProx
		Person(UID=1).SelePerson.Legal, // Person -> BusinessSele
		Person(UID=1).UtilityPerson.Util, // Person -> Utility
		Person(UID=1).WatercraftOwner.WCraft, // Person -> Watercraft
		Person(UID=1).ZipCodePerson.Zip, // Person -> ZipCode
		Person(UID=1).PersonEmailPhoneAddress, // Person -> Address/Email/PhoneNumber
		Phone(UID=1).AddressPhone.Location, // Phone -> Address
		Phone(UID=1).PersonPhone.Subject, // Phone -> Person
		Phone(UID=1).PhoneInquiry.Inquiry, // Phone -> Inquiry
		Phone(UID=1).TINPhoneNumber.TaxID, // Phone -> TIN
		Person(UID=1).SecondDegreeAssociations, // Person -> Person
		Property(UID=1).PropertyEvent.PersonPropertyEvent.Subject, // Property -> PropertyEvent -> Person
		Property(UID=1).PropertyEvent.SelePropertyEvent.Legal, // Property -> PropertyEvent -> BusinessSele
		SocialSecurityNumber(UID=1).PersonSSN.Subject, // SSN -> Person
		SocialSecurityNumber(UID=1).SSNAddress.Location, // SocialSecurityNumber -> Address
		SocialSecurityNumber(UID=1).SSNInquiry.Inquiry, // SocialSecurityNumber -> Inquiry
		TIN(UID=1).TINAddress.Location, // TIN -> Address
		TIN(UID=1).TINPhoneNumber.PhoneNumber, // TIN -> Phone
		ZipCode(UID=1).ZipCodePerson.Subject // ZipCode -> Person
	ASOF ArchiveDated(P_InpClnArchDt) 
	USING DPM;


QUERY: TemporaryIndexBuilds(
			// These are the temporary filters that are necessary for testing
			UltID_in, OrgID_in, SeleID_in, ProxID_in,
			STRING PrimaryRange_in, STRING Predirectional_in, STRING PrimaryName_in, STRING AddrSuffix_in, STRING Postdirectional_in, ZipCode ZIP5_in, STRING SecondaryRange_in, 
			Phone_in,
			 // Always include these last 2 parameters
			P_InpClnArchDt, PERMITS DPM) <=
		// These Entity/Associations are being filtered by UID components for easier testing
		BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in),
		BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in, ProxID = ProxID_in),
		Phone(Phone10 = Phone_in),
		Address(PrimaryRange = PrimaryRange_in, Predirectional = Predirectional_in, PrimaryName = PrimaryName_in, Suffix = AddrSuffix_in, Postdirectional = Postdirectional_in, ZIP5 = ZIP5_in, SecondaryRange = SecondaryRange_in),
		Property(PrimaryRange = PrimaryRange_in, Predirectional = Predirectional_in, PrimaryName = PrimaryName_in, Suffix = AddrSuffix_in, Postdirectional = Postdirectional_in, ZIP5 = ZIP5_in, SecondaryRange = SecondaryRange_in)
	ASOF ArchiveDated(P_InpClnArchDt)
	USING DPM;
// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID) <= BusinessSele(UltID, OrgID, SeleID)


		// QUERY: BusinessSearch(SET OF BusinessSele SeleIDs, ArchiveDate, PERMITS DPM) <= BusinessSele(UID IN SeleIDs){ 
				// QUERY: BusinessSearch(UltIDs, OrgIDs, SeleIDs, ArchiveDate, PERMITS DPM) <= BusinessSele(UltIDs, OrgIDs, SeleIDs){ 
		// UID, SeleTradeline.Account{
		// QUERY: BusinessSearch(SET OF BusinessUlt UltIDs, SET OF BusinessOrg OrgIDs, SET OF BusinessSele SeleIDs, ArchiveDate, PERMITS DPM) <= BusinessSele(UID IN UltIDs, UID IN OrgIDs, UID IN SeleIDs){ 
		// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID, ArchiveDate, PERMITS DPM) <= BusinessSele(UltID=UltID,OrgID=OrgID, SeleID=SeleID){ 


// --- Debugging QUERYs Section (Only Uncomment for Debugging) ---
// QUERY: DataPermissions(Person LexID_in, 
					// PERMITS DPM, 
					// P_InpClnArchDt) <= 
	// Person(UID = LexID_in){DataSources}, // Person
	// Person(UID = LexID_in).PersonAddress{DataSources}, // PersonAddress
	// Person(UID = LexID_in).PersonAddress.Location{DataSources}, // Address
	// Person(UID = LexID_in).PersonBankruptcy{DataSources}, // PersonBankruptcy
	// Person(UID = LexID_in).PersonBankruptcy.Bankrupt{DataSources}, // Bankruptcy
	// Person(UID = LexID_in).PersonPhone{DataSources}, // PersonPhone
	// Person(UID = LexID_in).PersonPhone.PhoneNumber{DataSources}, // Phone
	// Person(UID = LexID_in).PersonOffenses{DataSources}, // PersonOffenses
	// Person(UID = LexID_in).PersonOffenses.Offense{DataSources}, // CriminalOffense
	// Person(UID = LexID_in).PersonOffender{DataSources}, // PersonOffender
	// Person(UID = LexID_in).PersonOffender.Offender{DataSources}, // CriminalOffender
	// Person(UID = LexID_in).PersonSSN{DataSources}, // PersonSSN
	// Person(UID = LexID_in).PersonSSN.Social{DataSources}, // SocialSecurityNumber
	// Person(UID = LexID_in).PersonInquiry{DataSources}, // PersonInquiry
	// Person(UID = LexID_in).PersonInquiry.Inquiry{DataSources}, // Inquiry
	// Person(UID = LexID_in).PersonDriversLicense{DataSources}, // PersonDriversLicense
	// Person(UID = LexID_in).PersonDriversLicense.License{DataSources}, // DriversLicense
	// Person(UID = LexID_in).AircraftOwner{DataSources}, // AircraftOwner
	// Person(UID = LexID_in).AircraftOwner.Plane{DataSources}, // Aircraft
	// Person(UID = LexID_in).WatercraftOwner{DataSources}, // WatercraftOwner
	// Person(UID = LexID_in).WatercraftOwner.WCraft{DataSources}, // Watercraft
	// Person(UID = LexID_in).PersonEmailPhoneAddress{DataSources}, // PersonEmail
	// Person(UID = LexID_in).PersonEmailPhoneAddress.rEmail{DataSources}, // Email
	// Person(UID = LexID_in).PersonProperty{DataSources}, // PersonProperty
	// Person(UID = LexID_in).PersonProperty.Transaction{DataSources}, // Property
	// Person(UID = LexID_in).PersonEducation{DataSources}, // PersonEducation
	// Person(UID = LexID_in).PersonEducation.Edu{DataSources}, // Education
	// Person(UID = LexID_in).UtilityPerson{DataSources}, // UtilityPerson
	// Person(UID = LexID_in).UtilityPerson.Util{DataSources}, // Utility
	// Person(UID = LexID_in).ZipCodePerson{DataSources} // ZipCodePerson
	// Person(UID = LexID_in).ZipCodePerson.Zip{DataSources}, // ZipCode
	// Person(UID = LexID_in).PersonVehicle{DataSources}, // PersonVehicle
	// Person(UID = LexID_in).PersonVehicle.Automobile{DataSources}, // Vehicle
	// Person(UID = LexID_in).PersonAccident{DataSources}, // PersonAccident
	// Person(UID = LexID_in).PersonAccident.Acc{DataSources}, // Accident
	// Person(UID = LexID_in).ProfessionalLicensePerson{DataSources}, // ProfessionalLicensePerson
	// Person(UID = LexID_in).ProfessionalLicensePerson.ProfLic{DataSources} // ProfessionalLicense
	
	// ASOF ArchiveDated(P_InpClnArchDt)
	// USING DPM;

// QUERY: DataPermissionsBusiness(BusinessSele UID_in, 
					// PERMITS DPM, 
					// P_InpClnArchDt) <= 
	// BusinessSele(UID = UID_in){DataSources} // BusinessSele
	// ASOF ArchiveDated(P_InpClnArchDt)
	// USING DPM;
	
// QUERY: BuildDates(ArchiveDate) <= Aircraft{CurrentDate}, Bankruptcy{CurrentDate}, BusinessSele{CurrentDate}, CriminalOffense{CurrentDate}, CriminalOffender{CurrentDate}, CriminalPunishment{CurrentDate}, Inquiry{CurrentDate}, Person{CurrentDate}, Phone{CurrentDate}, ProfessionalLicense{CurrentDate}, Property{CurrentDate, CurrentDateFCRA}, Watercraft{CurrentDate} ASOF ArchiveDated(ArchiveDate);

// QUERY: PersonEntity(SearchForLexID, ArchiveDate) <= Person(UID = SearchForLexID) ASOF ArchiveDated(ArchiveDate); 
// QUERY: PersonDump <= Person{UID, 
		// Gender, LexIDSegment,
		// FullName{Title, FirstName, MiddleName, LastName, NameSuffix}, 
		// ReportedDatesOfBirth{DateOfBirth},
		// ReportedDatesOfDeath{DateOfDeath},
		// Race, RaceDescription,
		// DataSources{Source}};
// QUERY: PersonAddressDump <= PersonAddress;

// Offense Queries
// QUERY: CriminalOffenseEntity(SearchForOffenderKey) <= CriminalOffense(OffenderKey = SearchForOffenderKey);
// QUERY: PersonsOffenses(SearchForLexID) <= Person(UID = SearchForLexID).PersonOffenses.Offense;   
  
// Address Queries
// QUERY: PersonsAddresses(SearchForLexID) <= Person(UID = SearchForLexID).PersonAddress.Location;
// QUERY: AddressEntity(ArchiveDate) <= Address ASOF ArchiveDated(ArchiveDate);

// Aircraft Queries
// QUERY: AircraftEntity <= Aircraft, AircraftOwner;

// Watercraft Queries
// QUERY: WatercraftEntity <= Watercraft, WatercraftOwner; 

// Phone Queries
// QUERY: PhoneEntity <= Phone;

// Inquiry Queries
// QUERY: InquiryEntity <= Inquiry;

// QUERY: PhoneEntity <= Phone;
// QUERY: ProxPhoneNumber <= Phone.ProxPhoneNumber;
// QUERY: PersonPhone <= Phone.PersonPhone;
// QUERY: AddressPhone <= Phone.AddressPhone;
// QUERY: HouseHoldPhone <= Phone.HouseHoldPhone;


// QUERY: ProxPhoneAddress <= BusinessProx.ProxAddress;

// Bankruptcy Queries
// QUERY: BankruptcyEntity(SearchForTMSID) <= Bankruptcy(TMSID = SearchForTMSID); 

// Email Queries
// QUERY: EmailEntity <=  Email;

// SSN Queries
// QUERY: SSNEntity <= SocialSecurityNumber;

// Property Queries
// QUERY: PropertyEntity <= Property;

// ProfessionalLicense Queries
// QUERY: ProfessionalLicenseEntity(ArchiveDate, PERMITS DPM) <= ProfessionalLicense, ProfessionalLicensePerson, ProfessionalLicenseAddress, ProfessionalLicensePhone 
// ASOF ArchiveDated(ArchiveDate)
// USING DPM;

// DriversLicense Queries
// QUERY: DriversLicenseEntity <= DriversLicense, DrivingViolation, DriversLicenseInquiry, AddressDriversLicense, Person{UID, DLCount, HasDL};

// Education Queries
// QUERY: EducationEntity <= Education, PersonEducation, EducationSSN, EducationStudentAddress, EducationSSN.Social{UID, NumOfColleges, NumEducations}, EducationStudentAddress.UniLocation USING [nonFCRA,FCRA];

// Employment Queries
// QUERY: EmploymentEntity <= Employment, EmploymentPerson, EmploymentSSN, EmploymentBusinessAddress,SeleEmployment,EmploymentSSN.Social{UID,NumOfJobs},EmploymentBusinessAddress.Location(NumOfJobs>0), SeleEmployment.Bus{UID, NumOfJobs},EmploymentBusinessAddress(Location.NumOfJobs > 0){Emp, Location}USING [nonFCRA,FCRA];

// Utility Queries
// QUERY: UtilityEntity <= Utility, UtilityPerson, UtilityHomeAddress.Location, UtilityPhone, Phone(NumOfUtils > 0){UID,NumOfUtils}USING [nonFCRA,FCRA];

// Neighborhood queries
// QUERY: NeighborhoodDump(PERMITS PermitsValue) <= Neighborhood USING PermitsValue;
// QUERY: NeighborhoodDumpFCRA <= Neighborhood USING [FCRA];
// QUERY: NeighborhoodDumpNonFCRA <= Neighborhood USING [nonFCRA];
// QUERY: NeighborhoodByGeolink(ForFIPSGeolink) <= Neighborhood(UID = ForFIPSGeolink);

// Best business Query
// QUERY: BusinessBestData(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, INTEGER ProxID_in,
					// P_InpClnArchDt, 
					// PERMITS DPM) <= 
				// BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// BestCompanyNames{BestCompanyName, BestCompanyNameRank},
					// BestSICCodes{BestSICCode, BestSICCodeRank},
					// BestNAICSCodes{BestNAICSCode, BestNAICSCodeRank},
						// SelePhoneNumber{BestPhone, BestPhoneRank},
						// SeleTIN{BestTIN, BestTINRank}},
				// BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// SeleAddress{BestAddresses{BestPrimaryRange, BestPredirectional, BestPrimaryName, BestSuffix, BestPostdirectional, BestUnitDesignation, BestSecondaryRange, BestPostalCity, BestVanityCity, BestState, BestZip5, BestZip4, BestCounty, BestAddressRank}}},						
				// BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in, ProxID = ProxID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// ProxID,
					// BestCompanyNames{BestCompanyName, BestCompanyNameRank},
					// BestSICCodes{BestSICCode, BestSICCodeRank},
					// BestNAICSCodes{BestNAICSCode, BestNAICSCodeRank},
						// ProxPhoneNumber{BestPhone, BestPhoneRank},
						// ProxTIN{BestTIN, BestTINRank}},
				// BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in, ProxID = ProxID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// ProxID,
						// ProxAddress{BestAddresses{BestPrimaryRange, BestPredirectional, BestPrimaryName, BestSuffix, BestPostdirectional, BestUnitDesignation, BestSecondaryRange, BestPostalCity, BestVanityCity, BestState, BestZip5, BestZip4, BestCounty, BestAddressRank}}}
	// ASOF ArchiveDated(P_InpClnArchDt) 
	// USING DPM;
// Email queries
// QUERY: EmailEntity(PERMITS PermitsValue) <= Email, PersonEmail, PersonEmailPhoneAddress USING PermitsValue;
