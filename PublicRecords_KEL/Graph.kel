#OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins

// --- ENTITY Definitions Section --- 
IMPORT KnowledgeUniverse.PublicRecords_KEL.Entities;

// --- USE Statements Section ---
IMPORT PublicRecords_KEL.Uses; 

// --- Attributes Section ---
IMPORT KnowledgeUniverse.PublicRecords_KEL.Attributes;

QUERY: InputAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset, 
					InputArchiveDateClean, 
					PERMITS DPM) <= InputPII{
		InputUIDAppend := UID, 
		InputAccountEcho := InputAccountValue,	
		InputLexIDEcho := InputLexIDValue,  
		InputFirstNameEcho := InputFirstNameValue, 
		InputMiddleNameEcho := InputMiddleNameValue,
		InputLastNameEcho := InputLastNameValue, 
		InputStreetEcho := InputStreetValue,
		InputCityEcho := InputCityValue, 
		InputStateEcho := InputStateValue, 
		InputZipEcho := InputZipValue, 
		InputSSNEcho := InputSSNValue,
		InputDOBEcho := InputDOBValue,
		InputDLEcho := InputDLValue,
		InputDLStateEcho := InputDLStateValue,
		InputHomePhoneEcho := InputHomePhoneValue, 
		InputWorkPhoneEcho := InputWorkPhoneValue, 
		InputEmailEcho := InputEmailValue,
		InputArchiveDateEcho := InputArchiveDateValue,
		P_InpAcctFlag := P_InpAcctFlagValue,
		P_InpLexIDFlag := P_InpLexIDFlagValue, 
		P_InpNameFirstFlag := P_InpNameFirstFlagValue,
		P_InpNameMidFlag := P_InpNameMidFlagValue,
		P_InpNameLastFlag := P_InpNameLastFlagValue,   
		P_InpAddrLine1Flag := P_InpAddrLine1FlagValue, 
		P_InpAddrCityFlag := P_InpAddrCityFlagValue,
		P_InpAddrStateFlag := P_InpAddrStateFlagValue, 
		P_InpAddrZipFlag := P_InpAddrZipFlagValue,
		P_InpAddrSSNFlag := P_InpAddrSSNFlagValue,   
		P_InpDOBFlag := P_InpDOBFlagValue,  
		P_InpDLFlag := P_InpDLFlagValue,  
		P_InpDLStateFlag := P_InpDLStateFlagValue,  
		P_InpPhoneHomeFlag := P_InpPhoneHomeFlagValue, 
		P_InpPhoneWorkFlag := P_InpPhoneWorkFlagValue,
		P_InpEmailFlag := P_InpEmailFlagValue, 
		P_InpArchDtFlag := P_InpArchDtFlagValue,
		LexIDAppend, 
		LexIDScoreAppend, 
		InputPrefixClean := InputPrefixCleanValue, 
		InputFirstNameClean := InputFirstNameCleanValue,
		InputMiddleNameClean := InputMiddleNameCleanValue,
		InputLastNameClean := InputLastNameCleanValue,
		InputSuffixClean := InputSuffixCleanValue, 
		InputPrimaryRangeClean := InputPrimaryRangeCleanValue,
		InputPreDirectionClean := InputPreDirectionCleanValue, 
		InputPrimaryNameClean := InputPrimaryNameCleanValue,
		InputAddressSuffixClean := InputAddressSuffixCleanValue, 
		InputPostDirectionClean := InputPostDirectionCleanValue,
		InputUnitDesigClean := InputUnitDesigCleanValue, 
		InputSecondaryRangeClean := InputSecondaryRangeCleanValue,
		InputCityClean := InputCityCleanValue, 
		InputStateClean := InputStateCleanValue, 
		InputZip5Clean := InputZip5CleanValue,
		InputZip4Clean := InputZip4CleanValue, 
		InputStreetClean := InputStreetCleanValue,
		InputFullAddressClean := InputFullAddressCleanValue,
		InputLatitudeClean := InputLatitudeCleanValue, 
		InputLongitudeClean := InputLongitudeCleanValue, 
		InputCountyClean := InputCountyCleanValue, 
		InputGeoblockClean := InputGeoblockCleanValue, 
		InputAddressTypeClean := InputAddressTypeCleanValue, 
		InputAddressStatusClean := InputAddressStatusCleanValue,
		InputSSNClean := InputSSNCleanValue,
		InputDOBClean := InputDOBCleanValue,
		InputDLClean := InputDLCleanValue,
		InputDLStateClean := InputDLStateCleanValue,
		InputHomePhoneClean := InputHomePhoneCleanValue, 
		InputWorkPhoneClean := InputWorkPhoneCleanValue,
		InputEmailClean :=InputEmailCleanValue, 
		InputArchiveDateClean := InputArchiveDateCleanValue,
		P_InpClnNamePrfxFlag := P_InpClnNamePrfxFlagValue, 
		P_InpClnNameFirstFlag := P_InpClnNameFirstFlagValue,
		P_InpClnNameMidFlag := P_InpClnNameMidFlagValue,
		P_InpClnNameLastFlag := P_InpClnNameLastFlagValue,
		P_InpClnNameSffxFlag := P_InpClnNameSffxFlagValue,
		P_InpClnAddrPrimRngFlag := P_InpClnAddrPrimRngFlagValue,
		P_InpClnAddrPreDirFlag := P_InpClnAddrPreDirFlagValue,
		P_InpClnAddrPrimNameFlag := P_InpClnAddrPrimNameFlagValue,
		P_InpClnAddrSffxFlag := P_InpClnAddrSffxFlagValue,
		P_InpClnAddrPostDirFlag := P_InpClnAddrPostDirFlagValue,
		P_InpClnAddrUnitDesigFlag := P_InpClnAddrUnitDesigFlagValue,
		P_InpClnAddrSecRngFlag := P_InpClnAddrSecRngFlagValue,
		P_InpClnAddrCityFlag := P_InpClnAddrCityFlagValue,
		P_InpClnAddrStateFlag := P_InpClnAddrStateFlagValue,
		P_InpClnAddrZip5Flag := P_InpClnAddrZip5FlagValue,
		P_InpClnAddrZip4Flag := P_InpClnAddrZip4FlagValue,
		P_InpClnAddrStFlag := P_InpClnAddrStFlagValue,
		P_InpClnAddrFullFlag := P_InpClnAddrFullFlagValue,
		P_InpClnAddrLatFlag := P_InpClnAddrLatFlagValue,
		P_InpClnAddrLngFlag := P_InpClnAddrLngFlagValue,
		P_InpClnAddrCntyFlag := P_InpClnAddrCntyFlagValue,
		P_InpClnAddrGeoFlag := P_InpClnAddrGeoFlagValue,
		P_InpClnAddrTypeFlag := P_InpClnAddrTypeFlagValue,
		P_InpClnAddrStatusFlag := P_InpClnAddrStatusFlagValue,
		P_InpClnSSNFlag := P_InpClnSSNFlagValue,
		P_InpClnDOBFlag := P_InpClnDOBFlagValue,
		P_InpClnDLFlag := P_InpClnDLFlagValue,
		P_InpClnDLStateFlag := P_InpClnDLStateFlagValue,
		P_InpClnPhoneHomeFlag := P_InpClnPhoneHomeFlagValue,
		P_InpClnPhoneWorkFlag := P_InpClnPhoneWorkFlagValue,
		P_InpClnEmailFlag := P_InpClnEmailFlagValue,
		P_InpClnArchDtFlag := P_InpClnArchDtFlagValue,
		BusInputUIDAppend,
		RepNumber := IRepNumberValue,
		PhoneVerificationBureau,
		DialIndicator,
		PointID,
		NXXType,
		ZIPMatch ,
		COCType,
		SSC,
		WirelessIndicator	
		}
	USING DPM
	USE InputPIIDataset(FLAT, 
		InputPII(UID = InputUIDAppend, Subject = LexIDAppend));// We are linking the Input PII to the Person ENTITY via the InputUIDAppend

 QUERY: InputBusAttributesV1(DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputPII InputPIIDataset,
					DATASET OF PublicRecords_KEL.ECL_Functions.Layouts.LayoutInputBII InputBIIDataset, 
					InputArchiveDateClean,
					PERMITS DPM) <= InputBII{
		BusInputUIDAppend := UID, 
		BusInputAccountEcho := BusInputAccountEchoValue,
		BusInputUIDAppend, 
		InputLexIDBusExtendedFamilyEcho := InputLexIDBusExtendedFamilyEchoValue, 
		InputLexIDBusLegalFamilyEcho := InputLexIDBusLegalFamilyEchoValue, 
		InputLexIDBusLegalEntityEcho := InputLexIDBusLegalEntityEchoValue,
		InputLexIDBusPlaceGroupEcho := InputLexIDBusPlaceGroupEchoValue, 
		InputLexIDBusPlaceEcho := InputLexIDBusPlaceEchoValue, 
		BusInputNameEcho := BusInputNameEchoValue, 
		BusInputAlternateNameEcho := BusInputAlternateNameEchoValue, 
		BusInputStreetEcho := BusInputStreetEchoValue,
		BusInputCityEcho := BusInputCityEchoValue,
		BusInputStateEcho := BusInputStateEchoValue,
		BusInputZipEcho := BusInputZipEchoValue,
		BusInputPhoneEcho := BusInputPhoneEchoValue,
		BusInputIPAddressEcho := BusInputIPAddressEchoValue,
		BusInputURLEcho := BusInputURLEchoValue,
		BusInputEmailEcho := BusInputEmailEchoValue,
		BusInputTINEcho := BusInputTINEchoValue,
		BusInputSICCodeEcho := BusInputSICCodeEchoValue,
		BusInputNAICSCodeEcho := BusInputNAICSCodeEchoValue,
		BusInputArchiveDateEcho := BusInputArchiveDateEchoValue,
		BusInputRep1LexIDEcho := BusInputRep1LexIDEchoValue,
		BusInputRep1FirstNameEcho := BusInputRep1FirstNameEchoValue,
		BusInputRep1MiddleNameEcho := BusInputRep1MiddleNameEchoValue,
		BusInputRep1LastNameEcho := BusInputRep1LastNameEchoValue,
		BusInputRep1StreetEcho := BusInputRep1StreetEchoValue,
		BusInputRep1CityEcho := BusInputRep1CityEchoValue,
		BusInputRep1StateEcho := BusInputRep1StateEchoValue,
		BusInputRep1ZipEcho := BusInputRep1ZipEchoValue,
		BusInputRep1PhoneEcho := BusInputRep1PhoneEchoValue,
		BusInputRep1SSNEcho := BusInputRep1SSNEchoValue,
		BusInputRep1DOBEcho := BusInputRep1DOBEchoValue,
		BusInputRep1EmailEcho := BusInputRep1EmailEchoValue,
		BusInputRep1DLEcho := BusInputRep1DLEchoValue,
		BusInputRep1DLStateEcho := BusInputRep1DLStateEchoValue,
		BusInputRep2LexIDEcho := BusInputRep2LexIDEchoValue,
		BusInputRep2FirstNameEcho := BusInputRep2FirstNameEchoValue,
		BusInputRep2MiddleNameEcho := BusInputRep2MiddleNameEchoValue,
		BusInputRep2LastNameEcho := BusInputRep2LastNameEchoValue,
		BusInputRep2StreetEcho := BusInputRep2StreetEchoValue,
		BusInputRep2CityEcho := BusInputRep2CityEchoValue,
		BusInputRep2StateEcho := BusInputRep2StateEchoValue,
		BusInputRep2ZipEcho := BusInputRep2ZipEchoValue,
		BusInputRep2PhoneEcho := BusInputRep2PhoneEchoValue,
		BusInputRep2SSNEcho := BusInputRep2SSNEchoValue,
		BusInputRep2DOBEcho := BusInputRep2DOBEchoValue,
		BusInputRep2EmailEcho := BusInputRep2EmailEchoValue,
		BusInputRep2DLEcho := BusInputRep2DLEchoValue,
		BusInputRep2DLStateEcho := BusInputRep2DLStateEchoValue,
		BusInputRep3LexIDEcho := BusInputRep3LexIDEchoValue,
		BusInputRep3FirstNameEcho := BusInputRep3FirstNameEchoValue,
		BusInputRep3MiddleNameEcho := BusInputRep3MiddleNameEchoValue,
		BusInputRep3LastNameEcho := BusInputRep3LastNameEchoValue,
		BusInputRep3StreetEcho := BusInputRep3StreetEchoValue,
		BusInputRep3CityEcho := BusInputRep3CityEchoValue,
		BusInputRep3StateEcho := BusInputRep3StateEchoValue,
		BusInputRep3ZipEcho := BusInputRep3ZipEchoValue,
		BusInputRep3PhoneEcho := BusInputRep3PhoneEchoValue,
		BusInputRep3SSNEcho := BusInputRep3SSNEchoValue,
		BusInputRep3DOBEcho := BusInputRep3DOBEchoValue,
		BusInputRep3EmailEcho := BusInputRep3EmailEchoValue,
		BusInputRep3DLEcho := BusInputRep3DLEchoValue,
		BusInputRep3DLStateEcho := BusInputRep3DLStateEchoValue,
		BusInputRep4LexIDEcho := BusInputRep4LexIDEchoValue,
		BusInputRep4FirstNameEcho := BusInputRep4FirstNameEchoValue,
		BusInputRep4MiddleNameEcho := BusInputRep4MiddleNameEchoValue,
		BusInputRep4LastNameEcho := BusInputRep4LastNameEchoValue,
		BusInputRep4StreetEcho := BusInputRep4StreetEchoValue,
		BusInputRep4CityEcho := BusInputRep4CityEchoValue,
		BusInputRep4StateEcho := BusInputRep4StateEchoValue,
		BusInputRep4ZipEcho := BusInputRep4ZipEchoValue,
		BusInputRep4PhoneEcho := BusInputRep4PhoneEchoValue,
		BusInputRep4SSNEcho := BusInputRep4SSNEchoValue,
		BusInputRep4DOBEcho := BusInputRep4DOBEchoValue,
		BusInputRep4EmailEcho := BusInputRep4EmailEchoValue,
		BusInputRep4DLEcho := BusInputRep4DLEchoValue,
		BusInputRep4DLStateEcho := BusInputRep4DLStateEchoValue,
		BusInputRep5LexIDEcho := BusInputRep5LexIDEchoValue,
		BusInputRep5FirstNameEcho := BusInputRep5FirstNameEchoValue,
		BusInputRep5MiddleNameEcho := BusInputRep5MiddleNameEchoValue,
		BusInputRep5LastNameEcho := BusInputRep5LastNameEchoValue,
		BusInputRep5StreetEcho := BusInputRep5StreetEchoValue,
		BusInputRep5CityEcho := BusInputRep5CityEchoValue,
		BusInputRep5StateEcho := BusInputRep5StateEchoValue,
		BusInputRep5ZipEcho := BusInputRep5ZipEchoValue,
		BusInputRep5PhoneEcho := BusInputRep5PhoneEchoValue,
		BusInputRep5SSNEcho := BusInputRep5SSNEchoValue,
		BusInputRep5DOBEcho := BusInputRep5DOBEchoValue,
		BusInputRep5EmailEcho := BusInputRep5EmailEchoValue,
		BusInputRep5DLEcho := BusInputRep5DLEchoValue,
		BusInputRep5DLStateEcho := BusInputRep5DLStateEchoValue,
		//Business Clean 
		LexIDBusExtendedFamilyAppend := LexIDBusExtendedFamilyAppendValue,
		LexIDBusLegalFamilyAppend := LexIDBusLegalFamilyAppendValue,
		LexIDBusLegalEntityAppend := LexIDBusLegalEntityAppendValue,
		LexIDBusPlaceGroupAppend := LexIDBusPlaceGroupAppendValue,
		LexIDBusPlaceAppend := LexIDBusPlaceAppendValue,
		BusLexIDScoreAppend := BusLexIDScoreAppendValue,
		BusLexIDWeightAppend := BusLexIDWeightAppendValue,
		BusInputArchiveDateClean := BusInputArchiveDateCleanValue,
		BusInputNameClean := BusInputNameCleanValue,
		BusInputAlternateNameClean := BusInputAlternateNameCleanValue,
		BusInputPrimRangeClean := BusInputPrimRangeCleanValue,
		BusInputPreDirClean := BusInputPreDirCleanValue,
		BusInputPrimNameClean := BusInputPrimNameCleanValue,
		BusInputAddrSuffixClean := BusInputAddrSuffixCleanValue,
		BusInputPostDirClean := BusInputPostDirCleanValue,
		BusInputUnitDesigClean := BusInputUnitDesigCleanValue,
		BusInputSecRangeClean := BusInputSecRangeCleanValue,
		BusInputCityClean := BusInputCityCleanValue,
		BusInputStateClean := BusInputStateCleanValue,
		BusInputZip5Clean := BusInputZip5CleanValue,
		BusInputZip4Clean := BusInputZip4CleanValue,
		BusInputStreetClean := BusInputStreetCleanValue,
		BusInputFullAddressClean := BusInputFullAddressCleanValue,
		BusInputLatitudeClean := BusInputLatitudeCleanValue,
		BusInputLongitudeClean := BusInputLongitudeCleanValue,
		BusInputCountyClean := BusInputCountyCleanValue,
		BusInputGeoblockClean := BusInputGeoblockCleanValue,
		BusInputAddrTypeClean := BusInputAddrTypeCleanValue,
		BusInputAddrStatusClean := BusInputAddrStatusCleanValue,
		BusInputPhoneClean := BusInputPhoneCleanValue,
		BusInputTINClean := BusInputTINCleanValue,
		BusInputEmailClean := BusInputEmailCleanValue,
		//Rep 1 Clean
		LexIDForRep1Append, 
		LexIDScoreForRep1Append, 
		BusInputRep1PrefixClean,
		BusInputRep1FirstNameClean,
		BusInputRep1MiddleNameClean,
		BusInputRep1LastNameClean,
		BusInputRep1SuffixClean,
		BusInputRep1PrimRangeClean,
		BusInputRep1PreDirClean,
		BusInputRep1PrimNameClean,
		BusInputRep1AddrSuffixClean,
		BusInputRep1PostDirClean,
		BusInputRep1UnitDesigClean,
		BusInputRep1SecRangeClean,
		BusInputRep1CityClean,
		BusInputRep1StateClean,
		BusInputRep1Zip5Clean,
		BusInputRep1Zip4Clean,
		BusInputRep1StreetClean,
		BusInputRep1FullAddressClean,
		BusInputRep1LatitudeClean,
		BusInputRep1LongitudeClean,
		BusInputRep1CountyClean,
		BusInputRep1GeoblockClean,
		BusInputRep1AddrTypeClean,
		BusInputRep1AddrStatusClean,
		BusInputRep1PhoneClean,
		BusInputRep1SSNClean,
		BusInputRep1DOBClean,
		BusInputRep1DLClean,
		BusInputRep1DLStateClean,
		BusInputRep1EmailClean, 
		// Rep 2 Clean
		LexIDForRep2Append, 
		LexIDScoreForRep2Append, 
		BusInputRep2PrefixClean,
		BusInputRep2FirstNameClean,
		BusInputRep2MiddleNameClean,
		BusInputRep2LastNameClean,
		BusInputRep2SuffixClean,
		BusInputRep2PrimRangeClean,
		BusInputRep2PreDirClean,
		BusInputRep2PrimNameClean,
		BusInputRep2AddrSuffixClean,
		BusInputRep2PostDirClean,
		BusInputRep2UnitDesigClean,
		BusInputRep2SecRangeClean,
		BusInputRep2CityClean,
		BusInputRep2StateClean,
		BusInputRep2Zip5Clean,
		BusInputRep2Zip4Clean,
		BusInputRep2StreetClean,
		BusInputRep2FullAddressClean,
		BusInputRep2LatitudeClean,
		BusInputRep2LongitudeClean,
		BusInputRep2CountyClean,
		BusInputRep2GeoblockClean,
		BusInputRep2AddrTypeClean,
		BusInputRep2AddrStatusClean,
		BusInputRep2PhoneClean,
		BusInputRep2SSNClean,
		BusInputRep2DOBClean,
		BusInputRep2DLClean,
		BusInputRep2DLStateClean,
		BusInputRep2EmailClean,
		// Rep 3 Clean
		LexIDForRep3Append, 
		LexIDScoreForRep3Append, 
		BusInputRep3PrefixClean,
		BusInputRep3FirstNameClean,
		BusInputRep3MiddleNameClean,
		BusInputRep3LastNameClean,
		BusInputRep3SuffixClean,
		BusInputRep3PrimRangeClean,
		BusInputRep3PreDirClean,
		BusInputRep3PrimNameClean,
		BusInputRep3AddrSuffixClean,
		BusInputRep3PostDirClean,
		BusInputRep3UnitDesigClean,
		BusInputRep3SecRangeClean,
		BusInputRep3CityClean,
		BusInputRep3StateClean,
		BusInputRep3Zip5Clean,
		BusInputRep3Zip4Clean,
		BusInputRep3StreetClean,
		BusInputRep3FullAddressClean,
		BusInputRep3LatitudeClean,
		BusInputRep3LongitudeClean,
		BusInputRep3CountyClean,
		BusInputRep3GeoblockClean,
		BusInputRep3AddrTypeClean,
		BusInputRep3AddrStatusClean,
		BusInputRep3PhoneClean,
		BusInputRep3SSNClean,
		BusInputRep3DOBClean,
		BusInputRep3DLClean,
		BusInputRep3DLStateClean,
		BusInputRep3EmailClean,
		// Rep 4 Clean
		LexIDForRep4Append, 
		LexIDScoreForRep4Append, 
		BusInputRep4PrefixClean,
		BusInputRep4FirstNameClean,
		BusInputRep4MiddleNameClean,
		BusInputRep4LastNameClean,
		BusInputRep4SuffixClean,
		BusInputRep4PrimRangeClean,
		BusInputRep4PreDirClean,
		BusInputRep4PrimNameClean,
		BusInputRep4AddrSuffixClean,
		BusInputRep4PostDirClean,
		BusInputRep4UnitDesigClean,
		BusInputRep4SecRangeClean,
		BusInputRep4CityClean,
		BusInputRep4StateClean,
		BusInputRep4Zip5Clean,
		BusInputRep4Zip4Clean,
		BusInputRep4StreetClean,
		BusInputRep4FullAddressClean,
		BusInputRep4LatitudeClean,
		BusInputRep4LongitudeClean,
		BusInputRep4CountyClean,
		BusInputRep4GeoblockClean,
		BusInputRep4AddrTypeClean,
		BusInputRep4AddrStatusClean,
		BusInputRep4PhoneClean,
		BusInputRep4SSNClean,
		BusInputRep4DOBClean,
		BusInputRep4DLClean,
		BusInputRep4DLStateClean,
		BusInputRep4EmailClean,
		// Rep 5 Clean
		LexIDForRep5Append, 
		LexIDScoreForRep5Append, 
		BusInputRep5PrefixClean,
		BusInputRep5FirstNameClean,
		BusInputRep5MiddleNameClean,
		BusInputRep5LastNameClean,
		BusInputRep5SuffixClean,
		BusInputRep5PrimRangeClean,
		BusInputRep5PreDirClean,
		BusInputRep5PrimNameClean,
		BusInputRep5AddrSuffixClean,
		BusInputRep5PostDirClean,
		BusInputRep5UnitDesigClean,
		BusInputRep5SecRangeClean,
		BusInputRep5CityClean,
		BusInputRep5StateClean,
		BusInputRep5Zip5Clean,
		BusInputRep5Zip4Clean,
		BusInputRep5StreetClean,
		BusInputRep5FullAddressClean,
		BusInputRep5LatitudeClean,
		BusInputRep5LongitudeClean,
		BusInputRep5CountyClean,
		BusInputRep5GeoblockClean,
		BusInputRep5AddrTypeClean,
		BusInputRep5AddrStatusClean,
		BusInputRep5PhoneClean,
		BusInputRep5SSNClean,
		BusInputRep5DOBClean,
		BusInputRep5DLClean,
		BusInputRep5DLStateClean,
		BusInputRep5EmailClean,
		//Echo Pop	
		B_InpArchDtFlag := B_InpArchDtFlagValue,
		B_InpNameFlag := B_InpNameFlagValue,
		B_InpAltNameFlag := B_InpAltNameFlagValue,
		B_InpAddrLine1Flag := B_InpAddrLine1FlagValue,
		B_InpAddrCityFlag := B_InpAddrCityFlagValue,
		B_InpAddrStateFlag := B_InpAddrStateFlagValue,
		B_InpAddrZipFlag := B_InpAddrZipFlagValue,
		B_InpPhoneFlag := B_InpPhoneFlagValue,
		B_InpTINFlag := B_InpTINFlagValue,
		B_InpSICCodeFlag := B_InpSICCodeFlagValue,
		B_InpNAICSCodeFlag := B_InpNAICSCodeFlagValue,
		
		B_Rep1InpLexIDFlag := B_Rep1InpLexIDFlagValue,
		B_Rep1InpNameFirstFlag := B_Rep1InpNameFirstFlagValue,
		B_Rep1InpNameMidFlag := B_Rep1InpNameMidFlagValue,
		B_Rep1InpNameLastFlag := B_Rep1InpNameLastFlagValue,
		B_Rep1InpAddrLine1Flag := B_Rep1InpAddrLine1FlagValue,
		B_Rep1InpAddrCityFlag := B_Rep1InpAddrCityFlagValue,
		B_Rep1InpAddrStateFlag := B_Rep1InpAddrStateFlagValue,
		B_Rep1InpAddrZipFlag := B_Rep1InpAddrZipFlagValue,
		B_Rep1InpPhoneFlag := B_Rep1InpPhoneFlagValue,
		B_Rep1InpSSNFlag := B_Rep1InpSSNFlagValue,
		B_Rep1InpDOBFlag := B_Rep1InpDOBFlagValue,
		B_Rep1InpEmailFlag := B_Rep1InpEmailFlagValue,
		B_Rep1InpDLFlag := B_Rep1InpDLFlagValue,
		B_Rep1InpDLStateFlag := B_Rep1InpDLStateFlagValue,
		
		B_Rep2InpLexIDFlag := 		B_Rep2InpLexIDFlagValue,
		B_Rep2InpNameFirstFlag := 	B_Rep2InpNameFirstFlagValue,
		B_Rep2InpNameMidFlag := 	B_Rep2InpNameMidFlagValue,
		B_Rep2InpNameLastFlag := 	B_Rep2InpNameLastFlagValue,
		B_Rep2InpAddrLine1Flag := 	B_Rep2InpAddrLine1FlagValue,
		B_Rep2InpAddrCityFlag := 	B_Rep2InpAddrCityFlagValue,
		B_Rep2InpAddrStateFlag := 	B_Rep2InpAddrStateFlagValue,
		B_Rep2InpAddrZipFlag := 	B_Rep2InpAddrZipFlagValue,
		B_Rep2InpPhoneFlag := 		B_Rep2InpPhoneFlagValue,
		B_Rep2InpSSNFlag := 		B_Rep2InpSSNFlagValue,
		B_Rep2InpDOBFlag := 		B_Rep2InpDOBFlagValue,
		B_Rep2InpEmailFlag := 		B_Rep2InpEmailFlagValue,
		B_Rep2InpDLFlag := 			B_Rep2InpDLFlagValue,
		B_Rep2InpDLStateFlag := 	B_Rep2InpDLStateFlagValue,
				
		B_Rep3InpLexIDFlag := 		B_Rep3InpLexIDFlagValue,
		B_Rep3InpNameFirstFlag := 	B_Rep3InpNameFirstFlagValue,
		B_Rep3InpNameMidFlag := 	B_Rep3InpNameMidFlagValue,
		B_Rep3InpNameLastFlag := 	B_Rep3InpNameLastFlagValue,
		B_Rep3InpAddrLine1Flag := 	B_Rep3InpAddrLine1FlagValue,
		B_Rep3InpAddrCityFlag := 	B_Rep3InpAddrCityFlagValue,
		B_Rep3InpAddrStateFlag := 	B_Rep3InpAddrStateFlagValue,
		B_Rep3InpAddrZipFlag := 	B_Rep3InpAddrZipFlagValue,
		B_Rep3InpPhoneFlag := 		B_Rep3InpPhoneFlagValue,
		B_Rep3InpSSNFlag := 		B_Rep3InpSSNFlagValue,
		B_Rep3InpDOBFlag := 		B_Rep3InpDOBFlagValue,
		B_Rep3InpEmailFlag := 		B_Rep3InpEmailFlagValue,
		B_Rep3InpDLFlag := 			B_Rep3InpDLFlagValue,
		B_Rep3InpDLStateFlag := 	B_Rep3InpDLStateFlagValue,
				
		B_Rep4InpLexIDFlag := 		B_Rep4InpLexIDFlagValue,
		B_Rep4InpNameFirstFlag := 	B_Rep4InpNameFirstFlagValue,
		B_Rep4InpNameMidFlag := 	B_Rep4InpNameMidFlagValue,
		B_Rep4InpNameLastFlag := 	B_Rep4InpNameLastFlagValue,
		B_Rep4InpAddrLine1Flag := 	B_Rep4InpAddrLine1FlagValue,
		B_Rep4InpAddrCityFlag := 	B_Rep4InpAddrCityFlagValue,
		B_Rep4InpAddrStateFlag := 	B_Rep4InpAddrStateFlagValue,
		B_Rep4InpAddrZipFlag := 	B_Rep4InpAddrZipFlagValue,
		B_Rep4InpPhoneFlag := 		B_Rep4InpPhoneFlagValue,
		B_Rep4InpSSNFlag := 		B_Rep4InpSSNFlagValue,
		B_Rep4InpDOBFlag := 		B_Rep4InpDOBFlagValue,
		B_Rep4InpEmailFlag := 		B_Rep4InpEmailFlagValue,
		B_Rep4InpDLFlag := 			B_Rep4InpDLFlagValue,
		B_Rep4InpDLStateFlag := 	B_Rep4InpDLStateFlagValue,
				
		B_Rep5InpLexIDFlag := 		B_Rep5InpLexIDFlagValue,
		B_Rep5InpNameFirstFlag := 	B_Rep5InpNameFirstFlagValue,
		B_Rep5InpNameMidFlag := 	B_Rep5InpNameMidFlagValue,
		B_Rep5InpNameLastFlag := 	B_Rep5InpNameLastFlagValue,
		B_Rep5InpAddrLine1Flag := 	B_Rep5InpAddrLine1FlagValue,
		B_Rep5InpAddrCityFlag := 	B_Rep5InpAddrCityFlagValue,
		B_Rep5InpAddrStateFlag := 	B_Rep5InpAddrStateFlagValue,
		B_Rep5InpAddrZipFlag := 	B_Rep5InpAddrZipFlagValue,
		B_Rep5InpPhoneFlag := 		B_Rep5InpPhoneFlagValue,
		B_Rep5InpSSNFlag := 		B_Rep5InpSSNFlagValue,
		B_Rep5InpDOBFlag := 		B_Rep5InpDOBFlagValue,
		B_Rep5InpEmailFlag := 		B_Rep5InpEmailFlagValue,
		B_Rep5InpDLFlag := 			B_Rep5InpDLFlagValue,
		B_Rep5InpDLStateFlag := 	B_Rep5InpDLStateFlagValue,
		//Clean Pop	
		B_InpClnNameFlag := B_InpClnNameFlagValue,
		B_InpClnAltNameFlag := B_InpClnAltNameFlagValue,
		B_InpClnAddrPrimRngFlag := B_InpClnAddrPrimRngFlagValue,
		B_InpClnAddrPreDirFlag := B_InpClnAddrPreDirFlagValue,
		B_InpClnAddrPrimNameFlag := B_InpClnAddrPrimNameFlagValue,
		B_InpClnAddrSffxFlag := B_InpClnAddrSffxFlagValue,
		B_InpClnAddrPostDirFlag := B_InpClnAddrPostDirFlagValue,
		B_InpClnAddrUnitDesigFlag := B_InpClnAddrUnitDesigFlagValue,
		B_InpClnAddrSecRngFlag := B_InpClnAddrSecRngFlagValue,
		B_InpClnAddrCityFlag := B_InpClnAddrCityFlagValue,
		B_InpClnAddrStateFlag := B_InpClnAddrStateFlagValue,
		B_InpClnAddrZip5Flag := B_InpClnAddrZip5FlagValue,
		B_InpClnAddrZip4Flag := B_InpClnAddrZip4FlagValue,
		B_InpClnAddrStFlag := B_InpClnAddrStFlagValue,
		B_InpClnAddrFullFlag := B_InpClnAddrFullFlagValue,
		B_InpClnAddrLatFlag := B_InpClnAddrLatFlagValue,
		B_InpClnAddrLngFlag := B_InpClnAddrLngFlagValue,
		B_InpClnAddrCntyFlag := B_InpClnAddrCntyFlagValue,
		B_InpClnAddrGeoFlag := B_InpClnAddrGeoFlagValue,
		B_InpClnAddrTypeFlag := B_InpClnAddrTypeFlagValue,
		B_InpClnAddrStatusFlag := B_InpClnAddrStatusFlagValue,
		B_InpClnPhoneFlag := B_InpClnPhoneFlagValue,
		B_InpClnTINFlag := B_InpClnTINFlagValue,
		B_InpClnEmailFlag := B_InpClnEmailFlagValue,
		B_InpClnArchDtFlag := B_InpClnArchDtFlagValue,
		
		B_Rep1InpClnNamePrfxFlag := B_Rep1InpClnNamePrfxFlagValue,
		B_Rep1InpClnNameFirstFlag := B_Rep1InpClnNameFirstFlagValue,
		B_Rep1InpClnNameMidFlag := B_Rep1InpClnNameMidFlagValue,
		B_Rep1InpClnNameLastFlag := B_Rep1InpClnNameLastFlagValue,
		B_Rep1InpClnNameSffxFlag := B_Rep1InpClnNameSffxFlagValue,
		B_Rep1InpClnAddrPrimRngFlag := B_Rep1InpClnAddrPrimRngFlagValue,
		B_Rep1InpClnAddrPreDirFlag := B_Rep1InpClnAddrPreDirFlagValue,
		B_Rep1InpClnAddrPrimNameFlag := B_Rep1InpClnAddrPrimNameFlagValue,
		B_Rep1InpClnAddrSffxFlag := B_Rep1InpClnAddrSffxFlagValue,
		B_Rep1InpClnAddrPostDirFlag := B_Rep1InpClnAddrPostDirFlagValue,
		B_Rep1InpClnAddrUnitDesigFlag := B_Rep1InpClnAddrUnitDesigFlagValue,
		B_Rep1InpClnAddrSecRngFlag := B_Rep1InpClnAddrSecRngFlagValue,
		B_Rep1InpClnAddrCityFlag := B_Rep1InpClnAddrCityFlagValue,
		B_Rep1InpClnAddrStateFlag := B_Rep1InpClnAddrStateFlagValue,
		B_Rep1InpClnAddrZip5Flag := B_Rep1InpClnAddrZip5FlagValue,
		B_Rep1InpClnAddrZip4Flag := B_Rep1InpClnAddrZip4FlagValue,
		B_Rep1InpClnAddrStFlag := B_Rep1InpClnAddrStFlagValue,
		B_Rep1InpClnAddrFullFlag := B_Rep1InpClnAddrFullFlagValue,
		B_Rep1InpClnAddrLatFlag := B_Rep1InpClnAddrLatFlagValue,
		B_Rep1InpClnAddrLngFlag := B_Rep1InpClnAddrLngFlagValue,
		B_Rep1InpClnAddrCntyFlag := B_Rep1InpClnAddrCntyFlagValue,
		B_Rep1InpClnAddrGeoFlag := B_Rep1InpClnAddrGeoFlagValue,
		B_Rep1InpClnAddrTypeFlag := B_Rep1InpClnAddrTypeFlagValue,
		B_Rep1InpClnAddrStatusFlag := B_Rep1InpClnAddrStatusFlagValue,
		B_Rep1InpClnPhoneFlag := B_Rep1InpClnPhoneFlagValue,
		B_Rep1InpClnSSNFlag := B_Rep1InpClnSSNFlagValue,
		B_Rep1InpClnDOBFlag := B_Rep1InpClnDOBFlagValue,
		B_Rep1InpClnEmailFlag := B_Rep1InpClnEmailFlagValue,
		B_Rep1InpClnDLFlag := B_Rep1InpClnDLFlagValue,
		B_Rep1InpClnDLStateFlag := B_Rep1InpClnDLStateFlagValue,
		
		B_Rep2InpClnNamePrfxFlag := 		B_Rep2InpClnNamePrfxFlagValue,
		B_Rep2InpClnNameFirstFlag := 		B_Rep2InpClnNameFirstFlagValue,
		B_Rep2InpClnNameMidFlag := 			B_Rep2InpClnNameMidFlagValue,
		B_Rep2InpClnNameLastFlag := 		B_Rep2InpClnNameLastFlagValue,
		B_Rep2InpClnNameSffxFlag := 		B_Rep2InpClnNameSffxFlagValue,
		B_Rep2InpClnAddrPrimRngFlag := 		B_Rep2InpClnAddrPrimRngFlagValue,
		B_Rep2InpClnAddrPreDirFlag := 		B_Rep2InpClnAddrPreDirFlagValue,
		B_Rep2InpClnAddrPrimNameFlag := 	B_Rep2InpClnAddrPrimNameFlagValue,
		B_Rep2InpClnAddrSffxFlag := 		B_Rep2InpClnAddrSffxFlagValue,
		B_Rep2InpClnAddrPostDirFlag := 		B_Rep2InpClnAddrPostDirFlagValue,
		B_Rep2InpClnAddrUnitDesigFlag := 	B_Rep2InpClnAddrUnitDesigFlagValue,
		B_Rep2InpClnAddrSecRngFlag := 		B_Rep2InpClnAddrSecRngFlagValue,
		B_Rep2InpClnAddrCityFlag := 		B_Rep2InpClnAddrCityFlagValue,
		B_Rep2InpClnAddrStateFlag := 		B_Rep2InpClnAddrStateFlagValue,
		B_Rep2InpClnAddrZip5Flag := 		B_Rep2InpClnAddrZip5FlagValue,
		B_Rep2InpClnAddrZip4Flag := 		B_Rep2InpClnAddrZip4FlagValue,
		B_Rep2InpClnAddrStFlag := 			B_Rep2InpClnAddrStFlagValue,
		B_Rep2InpClnAddrFullFlag := 		B_Rep2InpClnAddrFullFlagValue,
		B_Rep2InpClnAddrLatFlag := 			B_Rep2InpClnAddrLatFlagValue,
		B_Rep2InpClnAddrLngFlag := 			B_Rep2InpClnAddrLngFlagValue,
		B_Rep2InpClnAddrCntyFlag := 		B_Rep2InpClnAddrCntyFlagValue,
		B_Rep2InpClnAddrGeoFlag := 			B_Rep2InpClnAddrGeoFlagValue,
		B_Rep2InpClnAddrTypeFlag := 		B_Rep2InpClnAddrTypeFlagValue,
		B_Rep2InpClnAddrStatusFlag := 		B_Rep2InpClnAddrStatusFlagValue,
		B_Rep2InpClnPhoneFlag := 			B_Rep2InpClnPhoneFlagValue,
		B_Rep2InpClnSSNFlag := 				B_Rep2InpClnSSNFlagValue,
		B_Rep2InpClnDOBFlag := 				B_Rep2InpClnDOBFlagValue,
		B_Rep2InpClnEmailFlag := 			B_Rep2InpClnEmailFlagValue,
		B_Rep2InpClnDLFlag := 				B_Rep2InpClnDLFlagValue,
		B_Rep2InpClnDLStateFlag := 			B_Rep2InpClnDLStateFlagValue,
				
		B_Rep3InpClnNamePrfxFlag := 		B_Rep3InpClnNamePrfxFlagValue,
		B_Rep3InpClnNameFirstFlag := 		B_Rep3InpClnNameFirstFlagValue,
		B_Rep3InpClnNameMidFlag := 			B_Rep3InpClnNameMidFlagValue,
		B_Rep3InpClnNameLastFlag := 		B_Rep3InpClnNameLastFlagValue,
		B_Rep3InpClnNameSffxFlag := 		B_Rep3InpClnNameSffxFlagValue,
		B_Rep3InpClnAddrPrimRngFlag := 		B_Rep3InpClnAddrPrimRngFlagValue,
		B_Rep3InpClnAddrPreDirFlag := 		B_Rep3InpClnAddrPreDirFlagValue,
		B_Rep3InpClnAddrPrimNameFlag := 	B_Rep3InpClnAddrPrimNameFlagValue,
		B_Rep3InpClnAddrSffxFlag := 		B_Rep3InpClnAddrSffxFlagValue,
		B_Rep3InpClnAddrPostDirFlag := 		B_Rep3InpClnAddrPostDirFlagValue,
		B_Rep3InpClnAddrUnitDesigFlag := 	B_Rep3InpClnAddrUnitDesigFlagValue,
		B_Rep3InpClnAddrSecRngFlag := 		B_Rep3InpClnAddrSecRngFlagValue,
		B_Rep3InpClnAddrCityFlag := 		B_Rep3InpClnAddrCityFlagValue,
		B_Rep3InpClnAddrStateFlag := 		B_Rep3InpClnAddrStateFlagValue,
		B_Rep3InpClnAddrZip5Flag := 		B_Rep3InpClnAddrZip5FlagValue,
		B_Rep3InpClnAddrZip4Flag := 		B_Rep3InpClnAddrZip4FlagValue,
		B_Rep3InpClnAddrStFlag := 			B_Rep3InpClnAddrStFlagValue,
		B_Rep3InpClnAddrFullFlag := 		B_Rep3InpClnAddrFullFlagValue,
		B_Rep3InpClnAddrLatFlag := 			B_Rep3InpClnAddrLatFlagValue,
		B_Rep3InpClnAddrLngFlag := 			B_Rep3InpClnAddrLngFlagValue,
		B_Rep3InpClnAddrCntyFlag := 		B_Rep3InpClnAddrCntyFlagValue,
		B_Rep3InpClnAddrGeoFlag := 			B_Rep3InpClnAddrGeoFlagValue,
		B_Rep3InpClnAddrTypeFlag := 		B_Rep3InpClnAddrTypeFlagValue,
		B_Rep3InpClnAddrStatusFlag := 		B_Rep3InpClnAddrStatusFlagValue,
		B_Rep3InpClnPhoneFlag := 			B_Rep3InpClnPhoneFlagValue,
		B_Rep3InpClnSSNFlag := 				B_Rep3InpClnSSNFlagValue,
		B_Rep3InpClnDOBFlag := 				B_Rep3InpClnDOBFlagValue,
		B_Rep3InpClnEmailFlag := 			B_Rep3InpClnEmailFlagValue,
		B_Rep3InpClnDLFlag := 				B_Rep3InpClnDLFlagValue,
		B_Rep3InpClnDLStateFlag := 			B_Rep3InpClnDLStateFlagValue,
				
		B_Rep4InpClnNamePrfxFlag := 		B_Rep4InpClnNamePrfxFlagValue,
		B_Rep4InpClnNameFirstFlag := 		B_Rep4InpClnNameFirstFlagValue,
		B_Rep4InpClnNameMidFlag := 			B_Rep4InpClnNameMidFlagValue,
		B_Rep4InpClnNameLastFlag := 		B_Rep4InpClnNameLastFlagValue,
		B_Rep4InpClnNameSffxFlag := 		B_Rep4InpClnNameSffxFlagValue,
		B_Rep4InpClnAddrPrimRngFlag := 		B_Rep4InpClnAddrPrimRngFlagValue,
		B_Rep4InpClnAddrPreDirFlag := 		B_Rep4InpClnAddrPreDirFlagValue,
		B_Rep4InpClnAddrPrimNameFlag := 	B_Rep4InpClnAddrPrimNameFlagValue,
		B_Rep4InpClnAddrSffxFlag := 		B_Rep4InpClnAddrSffxFlagValue,
		B_Rep4InpClnAddrPostDirFlag := 		B_Rep4InpClnAddrPostDirFlagValue,
		B_Rep4InpClnAddrUnitDesigFlag := 	B_Rep4InpClnAddrUnitDesigFlagValue,
		B_Rep4InpClnAddrSecRngFlag := 		B_Rep4InpClnAddrSecRngFlagValue,
		B_Rep4InpClnAddrCityFlag := 		B_Rep4InpClnAddrCityFlagValue,
		B_Rep4InpClnAddrStateFlag := 		B_Rep4InpClnAddrStateFlagValue,
		B_Rep4InpClnAddrZip5Flag := 		B_Rep4InpClnAddrZip5FlagValue,
		B_Rep4InpClnAddrZip4Flag := 		B_Rep4InpClnAddrZip4FlagValue,
		B_Rep4InpClnAddrStFlag := 			B_Rep4InpClnAddrStFlagValue,
		B_Rep4InpClnAddrFullFlag := 		B_Rep4InpClnAddrFullFlagValue,
		B_Rep4InpClnAddrLatFlag := 			B_Rep4InpClnAddrLatFlagValue,
		B_Rep4InpClnAddrLngFlag := 			B_Rep4InpClnAddrLngFlagValue,
		B_Rep4InpClnAddrCntyFlag := 		B_Rep4InpClnAddrCntyFlagValue,
		B_Rep4InpClnAddrGeoFlag := 			B_Rep4InpClnAddrGeoFlagValue,
		B_Rep4InpClnAddrTypeFlag := 		B_Rep4InpClnAddrTypeFlagValue,
		B_Rep4InpClnAddrStatusFlag := 		B_Rep4InpClnAddrStatusFlagValue,
		B_Rep4InpClnPhoneFlag := 			B_Rep4InpClnPhoneFlagValue,
		B_Rep4InpClnSSNFlag := 				B_Rep4InpClnSSNFlagValue,
		B_Rep4InpClnDOBFlag := 				B_Rep4InpClnDOBFlagValue,
		B_Rep4InpClnEmailFlag := 			B_Rep4InpClnEmailFlagValue,
		B_Rep4InpClnDLFlag := 				B_Rep4InpClnDLFlagValue,
		B_Rep4InpClnDLStateFlag := 			B_Rep4InpClnDLStateFlagValue,
				
		B_Rep5InpClnNamePrfxFlag := 		B_Rep5InpClnNamePrfxFlagValue,
		B_Rep5InpClnNameFirstFlag := 		B_Rep5InpClnNameFirstFlagValue,
		B_Rep5InpClnNameMidFlag := 			B_Rep5InpClnNameMidFlagValue,
		B_Rep5InpClnNameLastFlag := 		B_Rep5InpClnNameLastFlagValue,
		B_Rep5InpClnNameSffxFlag := 		B_Rep5InpClnNameSffxFlagValue,
		B_Rep5InpClnAddrPrimRngFlag := 		B_Rep5InpClnAddrPrimRngFlagValue,
		B_Rep5InpClnAddrPreDirFlag := 		B_Rep5InpClnAddrPreDirFlagValue,
		B_Rep5InpClnAddrPrimNameFlag := 	B_Rep5InpClnAddrPrimNameFlagValue,
		B_Rep5InpClnAddrSffxFlag := 		B_Rep5InpClnAddrSffxFlagValue,
		B_Rep5InpClnAddrPostDirFlag := 		B_Rep5InpClnAddrPostDirFlagValue,
		B_Rep5InpClnAddrUnitDesigFlag := 	B_Rep5InpClnAddrUnitDesigFlagValue,
		B_Rep5InpClnAddrSecRngFlag := 		B_Rep5InpClnAddrSecRngFlagValue,
		B_Rep5InpClnAddrCityFlag := 		B_Rep5InpClnAddrCityFlagValue,
		B_Rep5InpClnAddrStateFlag := 		B_Rep5InpClnAddrStateFlagValue,
		B_Rep5InpClnAddrZip5Flag := 		B_Rep5InpClnAddrZip5FlagValue,
		B_Rep5InpClnAddrZip4Flag := 		B_Rep5InpClnAddrZip4FlagValue,
		B_Rep5InpClnAddrStFlag := 			B_Rep5InpClnAddrStFlagValue,
		B_Rep5InpClnAddrFullFlag := 		B_Rep5InpClnAddrFullFlagValue,
		B_Rep5InpClnAddrLatFlag := 			B_Rep5InpClnAddrLatFlagValue,
		B_Rep5InpClnAddrLngFlag := 			B_Rep5InpClnAddrLngFlagValue,
		B_Rep5InpClnAddrCntyFlag := 		B_Rep5InpClnAddrCntyFlagValue,
		B_Rep5InpClnAddrGeoFlag := 			B_Rep5InpClnAddrGeoFlagValue,
		B_Rep5InpClnAddrTypeFlag := 		B_Rep5InpClnAddrTypeFlagValue,
		B_Rep5InpClnAddrStatusFlag := 		B_Rep5InpClnAddrStatusFlagValue,
		B_Rep5InpClnPhoneFlag := 			B_Rep5InpClnPhoneFlagValue,
		B_Rep5InpClnSSNFlag := 				B_Rep5InpClnSSNFlagValue,
		B_Rep5InpClnDOBFlag := 				B_Rep5InpClnDOBFlagValue,
		B_Rep5InpClnEmailFlag := 			B_Rep5InpClnEmailFlagValue,
		B_Rep5InpClnDLFlag := 				B_Rep5InpClnDLFlagValue,
		B_Rep5InpClnDLStateFlag := 			B_Rep5InpClnDLStateFlagValue,
		PhoneVerificationBureau,
		DialIndicator,
		PointID,
		NXXType,
		ZIPMatch,
		COCType,
		SSC,
		WirelessIndicator	
		}
	USING DPM
	USE InputPIIDataset(FLAT,
		InputPII(UID = InputUIDAppend),
		InputBIIInputPII(PII = InputUIDAppend, BII = BusInputUIDAppend)),
		InputBIIDataset(FLAT, InputBII(UID = BusInputUIDAppend));

 QUERY: NonFCRAPersonAttributesV1(Person LexID_in, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		LexIDSeen,
		AssetVehicleCntEv,
 		AssetDtOfVehicleEmrgListEv,
   	AssetDtVehicleLastSeenListEv,
   	AssetVehicleCnt10Y,
   	AssetVehicleCnt2Y,
   	AssetNewestVehicleEmrgDtEv,
   	AssetOldestVehicleEmrgDtEv,
   	AssetNewestVehicleEmrgMsinceEv,
		AssetOldestVehicleEmrgMsinceEv,
		AssetAircraftCntEv,
		AssetDtOfAircraftEmrgListEv,
		AssetNewestAircraftEmrgDtEv,
		AssetOldestAircraftEmrgDtEv,
		AssetNewestAircraftEmrgMsinceEv,
		AssetOldestAircraftEmrgMsinceEv,
		// Criminal Attributes 
			FelonyCnt1Y, 
			FelonyCnt7Y, 
			FelonyNew1Y, 
			FelonyOld1Y, 
			FelonyNew7Y, 
			FelonyOld7Y, 
			MonSinceNewestFelonyCnt1Y, 
			MonSinceOldestFelonyCnt1Y, 
			MonSinceNewestFelonyCnt7Y, 
			MonSinceOldestFelonyCnt7Y,
			NonFelonyCnt1Y, 
			NonfelonyCnt7Y, 
			NonfelonyNew1Y, 
			NonfelonyOld1Y, 
			NonfelonyNew7Y, 
			NonfelonyOld7Y, 
			MonSinceNewestNonfelonyCnt1Y, 
			MonSinceOldestNonfelonyCnt1Y, 
			MonSinceNewestNonfelonyCnt7Y, 
			MonSinceOldestNonfelonyCnt7Y,
			ArrestCnt1Y,
			ArrestCnt7Y,
			ArrestNew1Y,
			ArrestOld1Y,
   		ArrestNew7Y,
   		ArrestOld7Y,
   		MonSinceNewestArrestCnt1Y,
   		MonSinceOldestArrestCnt1Y,
   		MonSinceNewestArrestCnt7Y,
   		MonSinceOldestArrestCnt7Y,
   		CrimCnt1Y,
   		CrimCnt7Y,
   		CrimNew1Y,
   		CrimOld1Y,
   		CrimNew7Y,
   		CrimOld7Y,
   		MonSinceNewestCrimCnt1Y,
   		MonSinceOldestCrimCnt1Y,
   		MonSinceNewestCrimCnt7Y,
   		MonSinceOldestCrimCnt7Y,
   		CrimSeverityIndex7Y,
   		CrimBehaviorIndex7Y,
   		// Bankruptcy Attributes
   		BkCnt1Y,
   		BkCnt7Y,
   		BkCnt10Y,
   		DtOfBksList1Y,
   		DtOfBksList7Y,
   		DtOfBksList10Y,
   		BkNew1Y,
   		BkNew7Y,
   		BkNew10Y,
   		BkOld1Y,
   		BkOld7Y,
   		BkOld10Y,
   		MonSinceNewestBkCnt1Y,
   		MonSinceNewestBkCnt7Y,
   		MonSinceNewestBkCnt10Y,
   		MonSinceOldestBkCnt1Y,
   		MonSinceOldestBkCnt7Y,
   		MonSinceOldestBkCnt10Y,
   		ChForBksList1Y,
   		ChForBksList7Y,
   		ChForBksList10Y,
   		BkWithNewestDateCh1Y, 
   		BkWithNewestDateCh7Y, 
   		BkWithNewestDateCh10Y,
   		BkUnderCh7Cnt1Y,
   		BkUnderCh7Cnt7Y,
   		BkUnderCh7Cnt10Y,
   		BkUnderCh13Cnt1Y,
   		BkUnderCh13Cnt7Y,
   		BkUnderCh13Cnt10Y,
   		NewestBkUpdateDt1Y,
   		NewestBkUpdateDt7Y,
   		NewestBkUpdateDt10Y,
   		MonSinceNewestBkUpdateCnt1Y,
   		MonSinceNewestBkUpdateCnt7Y,
   		MonSinceNewestBkUpdateCnt10Y,
   		DispOfBksList1Y,
   		DispOfBksList7Y,
   		DispOfBksList10Y,
   		BkWithNewestDateDisp1Y,
   		BkWithNewestDateDisp7Y,
   		BkWithNewestDateDisp10Y,
   		DispOfNewestBkDt1Y,
   		DispOfNewestBkDt7Y,
   		DispOfNewestBkDt10Y,
   		MonSinceDispOfNewestBkCnt1Y,
   		MonSinceDispOfNewestBkCnt7Y,
   		MonSinceDispOfNewestBkCnt10Y,
   		BkDisposedCnt1Y,
   		BkDisposedCnt7Y,
   		BkDisposedCnt10Y,
   		BkDismissedCnt1Y,
   		BkDismissedCnt7Y,
   		BkDismissedCnt10Y,
   		BkDischargedCnt1Y,
   		BkDischargedCnt7Y,
   		BkDischargedCnt10Y,
   		TypeOfBksList1Y,
   		TypeOfBksList7Y,
   		TypeOfBksList10Y,
   		BkHavingBusTypeFlag1Y,
   		BkHavingBusTypeFlag7Y,
   		BkHavingBusTypeFlag10Y,
   		BkSeverityIndex10Y
   		} 

   	ASOF reportedby(InputArchiveDateClean) 
   	USING DPM;


 QUERY: FCRAPersonAttributesV1(Person LexID_in, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Person(UID = LexID_in){
		LexID := UID,
		LexIDSeen,
		AssetAircraftCntEv,
		AssetDtOfAircraftEmrgListEv,
		AssetNewestAircraftEmrgDtEv,
		AssetOldestAircraftEmrgDtEv,
		AssetNewestAircraftEmrgMsinceEv,
		AssetOldestAircraftEmrgMsinceEv,
		// Criminal Attributes 
		FelonyCnt1Y, 
		FelonyCnt7Y, 
		FelonyNew1Y, 
		FelonyOld1Y, 
		FelonyNew7Y, 
		FelonyOld7Y, 
		MonSinceNewestFelonyCnt1Y, 
		MonSinceOldestFelonyCnt1Y, 
		MonSinceNewestFelonyCnt7Y, 
		MonSinceOldestFelonyCnt7Y,
		NonFelonyCnt1Y, 
		NonfelonyCnt7Y, 
		NonfelonyNew1Y, 
		NonfelonyOld1Y, 
		NonfelonyNew7Y, 
		NonfelonyOld7Y, 
		MonSinceNewestNonfelonyCnt1Y, 
		MonSinceOldestNonfelonyCnt1Y, 
		MonSinceNewestNonfelonyCnt7Y, 
		MonSinceOldestNonfelonyCnt7Y,
		CrimCnt1Y,
		CrimCnt7Y,
		CrimNew1Y,
		CrimOld1Y,
		CrimNew7Y,
		CrimOld7Y,
		MonSinceNewestCrimCnt1Y,
		MonSinceOldestCrimCnt1Y,
		MonSinceNewestCrimCnt7Y,
		MonSinceOldestCrimCnt7Y,
		CrimSeverityIndex7Y,
		CrimBehaviorIndex7Y,
		// Bankruptcy Attributes
		BkCnt1Y,
		BkCnt7Y,
		BkCnt10Y,
		DtOfBksList1Y,
		DtOfBksList7Y,
		DtOfBksList10Y,
		BkNew1Y,
		BkNew7Y,
		BkNew10Y,
		BkOld1Y,
		BkOld7Y,
		BkOld10Y,
		MonSinceNewestBkCnt1Y,
		MonSinceNewestBkCnt7Y,
		MonSinceNewestBkCnt10Y,
		MonSinceOldestBkCnt1Y,
		MonSinceOldestBkCnt7Y,
		MonSinceOldestBkCnt10Y,
		ChForBksList1Y,
		ChForBksList7Y,
		ChForBksList10Y,
		BkWithNewestDateCh1Y, 
		BkWithNewestDateCh7Y, 
		BkWithNewestDateCh10Y,
		BkUnderCh7Cnt1Y,
		BkUnderCh7Cnt7Y,
		BkUnderCh7Cnt10Y,
		BkUnderCh13Cnt1Y,
		BkUnderCh13Cnt7Y,
		BkUnderCh13Cnt10Y,
		NewestBkUpdateDt1Y,
		NewestBkUpdateDt7Y,
		NewestBkUpdateDt10Y,
		MonSinceNewestBkUpdateCnt1Y,
		MonSinceNewestBkUpdateCnt7Y,
		MonSinceNewestBkUpdateCnt10Y,
		DispOfBksList1Y,
		DispOfBksList7Y,
		DispOfBksList10Y,
		BkWithNewestDateDisp1Y,
		BkWithNewestDateDisp7Y,
		BkWithNewestDateDisp10Y,
		DispOfNewestBkDt1Y,
		DispOfNewestBkDt7Y,
		DispOfNewestBkDt10Y,
		MonSinceDispOfNewestBkCnt1Y,
		MonSinceDispOfNewestBkCnt7Y,
		MonSinceDispOfNewestBkCnt10Y,
		BkDisposedCnt1Y,
		BkDisposedCnt7Y,
		BkDisposedCnt10Y,
		BkDismissedCnt1Y,
		BkDismissedCnt7Y,
		BkDismissedCnt10Y,
		BkDischargedCnt1Y,
		BkDischargedCnt7Y,
		BkDischargedCnt10Y,
		TypeOfBksList1Y,
		TypeOfBksList7Y,
		TypeOfBksList10Y,
		BkHavingBusTypeFlag1Y,
		BkHavingBusTypeFlag7Y,
		BkHavingBusTypeFlag10Y,
		BkSeverityIndex10Y	
		} 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

QUERY: NonFCRABusinessSeleIDAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, 
					InputArchiveDateClean, 
					PERMITS DPM) <= Business(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		LexIDBusExtendedFamilyAppend := UltID,
		LexIDBusLegalFamilyAppend := OrgID,
		LexIDBusLegalEntityAppend := SeleID,
		LexIDBusLegalEntitySeen,
		SrcVerBusLegalEntityList,
		//Tradeline
		B2bTLCntEv,
		B2bTLCnt2Y,
		B2bTLInCarrCnt2Y,
		B2bTLInFltCnt2Y,
		B2bTLInMatCnt2Y,
		B2bTLInOpsCnt2Y,
		B2bTLInOthCnt2Y,
		B2bTLInCarrPct2Y,
		B2bTLInFltPct2Y,
		B2bTLInMatPct2Y,
		B2bTLInOpsPct2Y,
		B2bTLInOthPct2Y,
		B2bOldestTLDtEv,
		B2bOldestTLMsinceEv,
		B2bOldestTLDt2Y,
		B2bNewestTLDt2Y,
		B2bOldestTLMsince2Y,
		B2bNewestTLMsince2Y,
		B2bActvTLCnt,
		B2bActvTLInCarrCnt,
		B2bActvTLInFltCnt,
		B2bActvTLInMatCnt,
		B2bActvTLInOpsCnt,
		B2bActvTLInOthCnt,
		B2bActvTLInCarrPct,
		B2bActvTLInFltPct,
		B2bActvTLInMatPct,
		B2bActvTLInOpsPct,
		B2bActvTLInOthPct,
		B2bActvTLCntArch1Y,
		B2bActvTLInCarrCntArch1Y,
		B2bActvTLInFltCntArch1Y,
		B2bActvTLInMatCntArch1Y,
		B2bActvTLInOpsCntArch1Y,
		B2bActvTLInOthCntArch1Y,
		B2bActvTLCntGrow1Y,
		B2bActvTLCntInCarrGrow1Y,
		B2bActvTLCntInFltGrow1Y,
		B2bActvTLCntInMatGrow1Y,
		B2bActvTLCntInOpsGrow1Y,
		B2bActvTLCntInOthGrow1Y,
		B2bActvTLBalTot,
		B2bActvTLBalInCarrTot,
		B2bActvTLBalInFltTot,
		B2bActvTLBalInMatTot,
		B2bActvTLBalInOpsTot,
		B2bActvTLBalInOthTot,
		B2bActvTLBalInCarrPct,
		B2bActvTLBalInFltPct,
		B2bActvTLBalInMatPct,
		B2bActvTLBalInOpsPct,
		B2bActvTLBalInOthPct,
		B2bActvTLBalTotBin,
		B2bActvTLBalInCarrTotBin,
		B2bActvTLBalInFltTotBin,
		B2bActvTLBalInMatTotBin,
		B2bActvTLBalInOpsTotBin,
		B2bActvTLBalInOthTotBin,
		B2bActvTLBalAvg,
		B2bActvTLBalInCarrAvg,
		B2bActvTLBalInFltAvg,
		B2bActvTLBalInMatAvg,
		B2bActvTLBalInOpsAvg,
		B2bActvTLBalInOthAvg,
		B2bActvTLBalArch1Y,
		B2bActvTLBalInCarrArch1Y,
		B2bActvTLBalInFltArch1Y,
		B2bActvTLBalInMatArch1Y,
		B2bActvTLBalInOpsArch1Y,
		B2bActvTLBalInOthArch1Y,
		B2bActvTLBalGrow1Y,
		B2bActvTLBalInCarrGrow1Y,
		B2bActvTLBalInFltGrow1Y,
		B2bActvTLBalInMatGrow1Y,
		B2bActvTLBalInOpsGrow1Y,
		B2bActvTLBalInOthGrow1Y,
		B2bActvTLBalGrowIndex1Y,
		B2bActvTLBalInCarrGrowIndex1Y,
		B2bActvTLBalInFltGrowIndex1Y,
		B2bActvTLBalInMatGrowIndex1Y,
		B2bActvTLBalInOpsGrowIndex1Y,
		B2bActvTLBalInOthGrowIndex1Y,
		B2bTLBalMax2Y,
		B2bTLBalInCarrMax2Y,
		B2bTLBalInFltMax2Y,
		B2bTLBalInMatMax2Y,
		B2bTLBalInOpsMax2Y,
		B2bTLBalInOthMax2Y,
		B2bMaxTLBalDt2Y,
		B2bMaxTLBalInCarrDt2Y,
		B2bMaxTLBalInFltDt2Y,
		B2bMaxTLBalInMatDt2Y,
		B2bMaxTLBalInOpsDt2Y,
		B2bMaxTLBalInOthDt2Y,
		B2bMaxTLBalMsince2Y,
		B2bMaxTLBalInCarrMsince2Y,
		B2bMaxTLBalInFltMsince2Y,
		B2bMaxTLBalInMatMsince2Y,
		B2bMaxTLBalInOpsMsince2Y,
		B2bMaxTLBalInOthMsince2Y,
		B2bTLWMaxBalSeg2Y,
		B2bActvTLWorstPerfIndex,
		B2bActvTLWorstPerfInCarrIndex,
		B2bActvTLWorstPerfInFltIndex,
		B2bActvTLWorstPerfInMatIndex,
		B2bActvTLWorstPerfInOpsIndex,
		B2bActvTLWorstPerfInOthIndex,
		B2bActvTLW1pDpdCnt,
		B2bActvTLW31pDpdCnt,
		B2bActvTLW61pDpdCnt,
		B2bActvTLW91pDpdCnt,
		B2bActvTLW1pDpdPct,
		B2bActvTLW31pDpdPct,
		B2bActvTLW61pDpdPct,
		B2bActvTLW91pDpdPct,
		B2bBalOnActvTL1pDpdTot,
		B2bBalOnActvTL31pDpdTot,
		B2bBalOnActvTL61pDpdTot,
		B2bBalOnActvTL91pDpdTot,
		B2bBalOnActvTL1pDpdPct,
		B2bBalOnActvTL31pDpdPct,
		B2bBalOnActvTL61pDpdPct,
		B2bBalOnActvTL91pDpdPct,
		B2bBalOnActvTL1pDpdTotArch1Y,
		B2bBalOnActvTL31pDpdTotArch1Y,
		B2bBalOnActvTL61pDpdTotArch1Y,
		B2bBalOnActvTL91pDpdTotArch1Y,
		B2bBalOnActvTL1pDpdGrow1Y,
		B2bBalOnActvTL31pDpdGrow1Y,
		B2bBalOnActvTL61pDpdGrow1Y,
		B2bBalOnActvTL91pDpdGrow1Y,
		B2bTLWorstPerfIndex2Y,
		B2bTLWorstPerfInCarrIndex2Y,
		B2bTLWorstPerfInFltIndex2Y,
		B2bTLWorstPerfInMatIndex2Y,
		B2bTLWorstPerfInOpsIndex2Y,
		B2bTLWorstPerfInOthIndex2Y,
		B2bTLWorstPerfDt2Y,
		B2bTLWorstPerfInCarrDt2Y,
		B2bTLWorstPerfInFltDt2Y,
		B2bTLWorstPerfInMatDt2Y,
		B2bTLWorstPerfInOpsDt2Y,
		B2bTLWorstPerfInOthDt2Y,
		B2bTLWorstPerfMsince2Y,
		B2bTLWorstPerfInCarrMsince2Y,
		B2bTLWorstPerfInFltMsince2Y,
		B2bTLWorstPerfInMatMsince2Y,
		B2bTLWorstPerfInOpsMsince2Y,
		B2bTLWorstPerfInOthMsince2Y,
		B2bTLCnt24Mfull,
		B2bTLInCarrCnt24Mfull,
		B2bTLInFltCnt24Mfull,
		B2bTLInMatCnt24Mfull,
		B2bTLInOpsCnt24Mfull,
		B2bTLInOthCnt24Mfull,
		B2bIndOfMonWTLStr24Mfull,
		B2bIndOfMonWTLInCarrStr24Mfull,
		B2bIndOfMonWTLInFltStr24Mfull,
		B2bIndOfMonWTLInMatStr24Mfull,
		B2bIndOfMonWTLInOpsStr24Mfull,
		B2bIndOfMonWTLInOthStr24Mfull,
		B2bMonWTLCnt24Mfull,
		B2bMonWTLInCarrCnt24Mfull,
		B2bMonWTLInFltCnt24Mfull,
		B2bMonWTLInMatCnt24Mfull,
		B2bMonWTLInOpsCnt24Mfull,
		B2bMonWTLInOthCnt24Mfull,
		B2bTLBalVol24Mfull,
		B2bTLBalInCarrVol24Mfull,
		B2bTLBalInFltVol24Mfull,
		B2bTLBalInMatVol24Mfull,
		B2bTLBalInOpsVol24Mfull,
		B2bTLBalInOthVol24Mfull	
		} 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;


// NonFCRABusinessSeleIDNoDatesAttributesV1 is used only to calculate LexIDBusLegalEntityRestricted. 
// The intention of this is to check if we can find any records on file for the business given the permissions we have set, regardless of the date on the records.
// This is a search on the Business SeleID ENTITY with no ASOF filtering applied. If we find records on file, we say the business is not restricted.
// If no records are found, but we do have a SeleID, then the business must only be seen on restricted sources. This attribute is ONLY used in the master layout,
// And therefore should only be calculated when master results are requested so that we do not impact production performance.
QUERY: NonFCRABusinessSeleIDNoDatesAttributesV1(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, 
					PERMITS DPM) <= Business(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
		LexIDBusExtendedFamilyAppend := UltID,
		LexIDBusLegalFamilyAppend := OrgID,
		LexIDBusLegalEntityAppend := SeleID,
		LexIDBusLegalEntityRestricted
		} 
	USING DPM;

// --- Index Build QUERY ---
/* This QUERY Ensures we are generating all of the ECL Code necessary for building any of the ENTITY or ASSOCIATION Indexes at any given time (That KEL doesn't optimize them away completely
   MAKE SURE TO ADD ANY NEW ENTITY OR ASSOCIATIONS TO THIS LIST */ 

QUERY: IndexBuildEntity(InputArchiveDateClean, PERMITS DPM) <= 
		Accident,
		Address,
		Aircraft,
		Bankruptcy,
		Business,
		BusinessProx,
		BusinessSele,
		BusinessPow,
		BusinessOrg,
		BusinessUlt,
		CriminalOffender,
		CriminalOffense,
		CriminalPunishment,
		DriversLicense,
		Education,
		Email,
		Employment,
		Household,
		Inquiry,
		Neighborhood,
		// Person, // Currently causes an "internal - invalid internal compiler state" when uncommented, being investigated by the compiler team.  Thankfully the Attribute QUERY's above will generate this build code anyways.
		Phone,
		ProfessionalLicense,
		Property,
		SocialSecurityNumber,
		TIN,
		Tradeline,
		UCC,
		Utility,
		Vehicle,
		Watercraft,
		ZipCode
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;

QUERY: IndexBuildAssociation(InputArchiveDateClean, PERMITS DPM) <=  
		AccidentAddress,
		AccidentDriversLicense,
		AddressDriversLicense,
		AddressInquiry,
		AddressPhone,
		AddressProperty,
		AircraftOwner,
		BusinessBankruptcy,
		BusinessSele,
		BusinessProx,
		// BusinessProperty, // Removing temporarily until the Business ENTITY is complete
		CriminalDetails,
		DriversLicenseInquiry,
		EducationSSN,
		EducationStudentAddress,
		// EmploymentBusiness, // Removing temporarily until the Business ENTITY is complete
		EmploymentBusinessAddress,
		EmploymentPerson,
		EmploymentSSN,
		FirstDegreeAssociations,
		FirstDegreeRelative,
		HouseholdMember,
		HouseHoldPhone,
		OffenderAddress,
		OffenderSSN,
		PersonAccident,
		PersonAddress,
		PersonBankruptcy,
		PersonDriversLicense,
		PersonEducation,
		PersonEmail,
		PersonInquiry,
		PersonOffender,
		PersonOffenses,
		PersonPhone,
		PersonProperty,
		PersonSSN,
		PersonUCC,
		PersonVehicle,
		PhoneInquiry,
		PhoneSSN,
		ProfessionalLicenseAddress,
		ProfessionalLicensePerson,
		ProfessionalLicensePhone,
		ProxAddress,
		ProxPhoneNumber,
		ProxTIN,
		SecondDegreeAssociations,
		SeleAircraft,
		SeleAddress,		
		SelePerson,
		SelePhoneNumber,
		SeleTIN,
		SeleUCC,
		SeleVehicle,
		SeleWatercraft,
		ProxAddress,
		SSNAddress,
		SSNBankruptcy,
		SSNInquiry,
		SSNProperty,
		TINPhoneNumber,
		TINAddress,
		TradelineBusiness,
		UtilityAddress,
		UtilityPerson,
		UtilityPhone,
		WatercraftOwner,
		ZipCodePerson 
	ASOF reportedby(InputArchiveDateClean) 
	USING DPM;


// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID) <= Business(UltID, OrgID, SeleID)


		// QUERY: BusinessSearch(SET OF Business SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UID IN SeleIDs){ 
				// QUERY: BusinessSearch(UltIDs, OrgIDs, SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UltIDs, OrgIDs, SeleIDs){ 
		// UID, TradelineBusiness.Account{
		// QUERY: BusinessSearch(SET OF Business UltIDs, SET OF Business OrgIDs, SET OF Business SeleIDs, ArchiveDate, PERMITS DPM) <= Business(UID IN UltIDs, UID IN OrgIDs, UID IN SeleIDs){ 
		// QUERY: BusinessSearch(INTEGER UltID, INTEGER OrgID, INTEGER SeleID, ArchiveDate, PERMITS DPM) <= Business(UltID=UltID,OrgID=OrgID, SeleID=SeleID){ 


// --- Debugging QUERYs Section (Only Uncomment for Debugging) ---
// QUERY: DataPermissions(Person LexID_in, 
					// PERMITS DPM, 
					// InputArchiveDateClean) <= 
	// Person(UID = LexID_in){DataSources}, // Person
	// Person(UID = LexID_in).PersonAddress{DataSources}, // PersonAddress
	// Person(UID = LexID_in).PersonAddress.Location{DataSources}, // Address
	// Person(UID = LexID_in).PersonBankruptcy{DataSources}, // PersonBankruptcy
	// Person(UID = LexID_in).PersonBankruptcy.Bankrupt{DataSources}, // Bankruptcy
	// Person(UID = LexID_in).PersonPhone{DataSources}, // PersonPhone
	// Person(UID = LexID_in).PersonPhone.PhoneNumber{DataSources}, // Phone
	// Person(UID = LexID_in).PersonOffenses{DataSources}, // PersonOffenses
	// Person(UID = LexID_in).PersonOffenses.Offense{DataSources}, // CriminalOffense
	// Person(UID = LexID_in).PersonOffender{DataSources}, // PersonOffender
	// Person(UID = LexID_in).PersonOffender.Offender{DataSources}, // CriminalOffender
	// Person(UID = LexID_in).PersonSSN{DataSources}, // PersonSSN
	// Person(UID = LexID_in).PersonSSN.Social{DataSources}, // SocialSecurityNumber
	// Person(UID = LexID_in).PersonInquiry{DataSources}, // PersonInquiry
	// Person(UID = LexID_in).PersonInquiry.Inquiry{DataSources}, // Inquiry
	// Person(UID = LexID_in).PersonDriversLicense{DataSources}, // PersonDriversLicense
	// Person(UID = LexID_in).PersonDriversLicense.License{DataSources}, // DriversLicense
	// Person(UID = LexID_in).AircraftOwner{DataSources}, // AircraftOwner
	// Person(UID = LexID_in).AircraftOwner.Plane{DataSources}, // Aircraft
	// Person(UID = LexID_in).WatercraftOwner{DataSources}, // WatercraftOwner
	// Person(UID = LexID_in).WatercraftOwner.WCraft{DataSources}, // Watercraft
	// Person(UID = LexID_in).PersonEmail{DataSources}, // PersonEmail
	// Person(UID = LexID_in).PersonEmail.rEmail{DataSources}, // Email
	// Person(UID = LexID_in).PersonProperty{DataSources}, // PersonProperty
	// Person(UID = LexID_in).PersonProperty.Transaction{DataSources}, // Property
	// Person(UID = LexID_in).PersonEducation{DataSources}, // PersonEducation
	// Person(UID = LexID_in).PersonEducation.Edu{DataSources}, // Education
	// Person(UID = LexID_in).UtilityPerson{DataSources}, // UtilityPerson
	// Person(UID = LexID_in).UtilityPerson.Util{DataSources}, // Utility
	// Person(UID = LexID_in).ZipCodePerson{DataSources}, // ZipCodePerson
	// Person(UID = LexID_in).ZipCodePerson.Zip{DataSources}, // ZipCode
	// Person(UID = LexID_in).PersonVehicle{DataSources}, // PersonVehicle
	// Person(UID = LexID_in).PersonVehicle.Automobile{DataSources}, // Vehicle
	// Person(UID = LexID_in).PersonAccident{DataSources}, // PersonAccident
	// Person(UID = LexID_in).PersonAccident.Acc{DataSources}, // Accident
	// Person(UID = LexID_in).ProfessionalLicensePerson{DataSources}, // ProfessionalLicensePerson
	// Person(UID = LexID_in).ProfessionalLicensePerson.ProfLic{DataSources} // ProfessionalLicense
	
	// ASOF reportedby(InputArchiveDateClean)
	// USING DPM;

// QUERY: DataPermissionsBusiness(BusinessSele _UID, 
					// PERMITS DPM, 
					// InputArchiveDateClean) <= 
	// BusinessSele(_UID){DataSources} // BusinessSele
	// ASOF reportedby(InputArchiveDateClean)
	// USING DPM;
	
// QUERY: BuildDates(ArchiveDate) <= Aircraft{CurrentDate}, Bankruptcy{CurrentDate}, Business{CurrentDate}, CriminalOffense{CurrentDate}, CriminalOffender{CurrentDate}, CriminalPunishment{CurrentDate}, Inquiry{CurrentDate}, Person{CurrentDate}, Phone{CurrentDate}, ProfessionalLicense{CurrentDate}, Property{CurrentDate, CurrentDateFCRA}, Watercraft{CurrentDate} ASOF reportedby(ArchiveDate);

// QUERY: PersonEntity(SearchForLexID, ArchiveDate) <= Person(UID = SearchForLexID) ASOF reportedby(ArchiveDate); 
// QUERY: PersonDump <= Person{UID, 
		// Gender, LexIDSegment,
		// FullName{Title, FirstName, MiddleName, LastName, NameSuffix}, 
		// ReportedDatesOfBirth{DateOfBirth},
		// ReportedDatesOfDeath{DateOfDeath},
		// Race, RaceDescription,
		// DataSources{Source}};
// QUERY: PersonAddressDump <= PersonAddress;

// Offense Queries
// QUERY: CriminalOffenseEntity(SearchForOffenderKey) <= CriminalOffense(OffenderKey = SearchForOffenderKey);
// QUERY: PersonsOffenses(SearchForLexID) <= Person(UID = SearchForLexID).PersonOffenses.Offense;   
  
// Address Queries
// QUERY: PersonsAddresses(SearchForLexID) <= Person(UID = SearchForLexID).PersonAddress.Location;
// QUERY: AddressEntity(ArchiveDate) <= Address ASOF reportedby(ArchiveDate);

// Aircraft Queries
// QUERY: AircraftEntity <= Aircraft, AircraftOwner;

// Watercraft Queries
// QUERY: WatercraftEntity <= Watercraft, WatercraftOwner; 

// Phone Queries
// QUERY: PhoneEntity <= Phone;

// Inquiry Queries
// QUERY: InquiryEntity <= Inquiry;

// QUERY: PhoneEntity <= Phone;
// QUERY: ProxPhoneNumber <= Phone.ProxPhoneNumber;
// QUERY: PersonPhone <= Phone.PersonPhone;
// QUERY: AddressPhone <= Phone.AddressPhone;
// QUERY: HouseHoldPhone <= Phone.HouseHoldPhone;


// QUERY: ProxPhoneAddress <= BusinessProx.ProxAddress;

// Bankruptcy Queries
// QUERY: BankruptcyEntity(SearchForTMSID) <= Bankruptcy(TMSID = SearchForTMSID); 

// Email Queries
// QUERY: EmailEntity <=  Email;

// SSN Queries
// QUERY: SSNEntity <= SocialSecurityNumber;

// Property Queries
// QUERY: PropertyEntity <= Property;

// ProfessionalLicense Queries
// QUERY: ProfessionalLicenseEntity(ArchiveDate, PERMITS DPM) <= ProfessionalLicense, ProfessionalLicensePerson, ProfessionalLicenseAddress, ProfessionalLicensePhone 
// ASOF reportedby(ArchiveDate)
// USING DPM;

// DriversLicense Queries
// QUERY: DriversLicenseEntity <= DriversLicense, DrivingViolation, DriversLicenseInquiry, AddressDriversLicense, Person{UID, DLCount, HasDL};

// Education Queries
// QUERY: EducationEntity <= Education, PersonEducation, EducationSSN, EducationStudentAddress, EducationSSN.Social{UID, NumOfColleges, NumEducations}, EducationStudentAddress.UniLocation USING [nonFCRA,FCRA];

// Employment Queries
// QUERY: EmploymentEntity <= Employment, EmploymentPerson, EmploymentSSN, EmploymentBusinessAddress,EmploymentBusiness,EmploymentSSN.Social{UID,NumOfJobs},EmploymentBusinessAddress.Location(NumOfJobs>0), EmploymentBusiness.Bus{UID, NumOfJobs},EmploymentBusinessAddress(Location.NumOfJobs > 0){Emp, Location}USING [nonFCRA,FCRA];

// Utility Queries
// QUERY: UtilityEntity <= Utility, UtilityPerson, UtilityHomeAddress.Location, UtilityPhone, Phone(NumOfUtils > 0){UID,NumOfUtils}USING [nonFCRA,FCRA];

// Neighborhood queries
// QUERY: NeighborhoodDump(PERMITS PermitsValue) <= Neighborhood USING PermitsValue;
// QUERY: NeighborhoodDumpFCRA <= Neighborhood USING [FCRA];
// QUERY: NeighborhoodDumpNonFCRA <= Neighborhood USING [nonFCRA];
// QUERY: NeighborhoodByGeolink(ForFIPSGeolink) <= Neighborhood(UID = ForFIPSGeolink);

// Best business Query
// QUERY: BusinessBestData(INTEGER UltID_in, INTEGER OrgID_in, INTEGER SeleID_in, INTEGER ProxID_in,
					// InputArchiveDateClean, 
					// PERMITS DPM) <= 
				// BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// BestCompanyNames{BestCompanyName, BestCompanyNameRank},
					// BestSICCodes{BestSICCode, BestSICCodeRank},
					// BestNAICSCodes{BestNAICSCode, BestNAICSCodeRank},
						// SelePhoneNumber{BestPhone, BestPhoneRank},
						// SeleTIN{BestTIN, BestTINRank}},
				// BusinessSele(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// SeleAddress{BestAddresses{BestPrimaryRange, BestPredirectional, BestPrimaryName, BestSuffix, BestPostdirectional, BestUnitDesignation, BestSecondaryRange, BestPostalCity, BestVanityCity, BestState, BestZip5, BestZip4, BestCounty, BestAddressRank}}},						
				// BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in, ProxID = ProxID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// ProxID,
					// BestCompanyNames{BestCompanyName, BestCompanyNameRank},
					// BestSICCodes{BestSICCode, BestSICCodeRank},
					// BestNAICSCodes{BestNAICSCode, BestNAICSCodeRank},
						// ProxPhoneNumber{BestPhone, BestPhoneRank},
						// ProxTIN{BestTIN, BestTINRank}},
				// BusinessProx(UltID = UltID_in, OrgID = OrgID_in, SeleID = SeleID_in, ProxID = ProxID_in){
					// UltID,
					// OrgID,
					// SeleID,
					// ProxID,
						// ProxAddress{BestAddresses{BestPrimaryRange, BestPredirectional, BestPrimaryName, BestSuffix, BestPostdirectional, BestUnitDesignation, BestSecondaryRange, BestPostalCity, BestVanityCity, BestState, BestZip5, BestZip4, BestCounty, BestAddressRank}}}
	// ASOF reportedby(InputArchiveDateClean) 
	// USING DPM;
// Email queries
// QUERY: EmailEntity(PERMITS PermitsValue) <= Email, PersonEmail, PersonEmailPhoneAddress USING PermitsValue;
