// KEL Compiler Options and Configurations
#OPTION(persist, 2)
#OPTION(persistexpire, 30)
#OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins
 
// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));

// Defining the PERMITS to allow for NCF v1 and v2 to utilize the same ENTITY/Attribute definitions, but different USE statements
PERMITS v1, v2;

// Defined to support the Person/CreditReport ASSOCIATIONS
Person := ENTITY(FLAT(UID=LexID));

// Top level NCF Credit Report ENTITY
CreditReport := ENTITY(FLAT(UID(Transaction_ID, LexID),
		STRING TransactionID,
		BOOLEAN SubjectRecord,
		INTEGER SubjectRecordCode,
		INTEGER LexID,
		STRING BureauCode, // v2+ Field
		STRING Version, // v2+ Field
		INTEGER PaymentHistoryType, // v2+ Field
		DATE FileSinceDate, // v2+ Field
		DATE DateReported,
		DATE DateOfOrder,
		DATE DateOfReceipt,
		DATE DateOfCompletion,
		STRING DateOfBirth, // v2+ Field, set to STRING as it can contain 0's in odd places
		STRING DateOfDeath, // v2+ Field, set to STRING as it can contain 0's in odd places
		STRING TimeOfReport,
		STRING Quoteback,
		STRING ReportCode,
		STRING ReportCodeDescription,
		STRING ReportType,
		STRING AccountNumber,
		STRING ProcessingCompletionStatus,
		STRING ReportUsage,
		STRING ReferenceNumber,
		INTEGER ConsumerStatementOnFileFlag, // v2+ Field
		STRING ContentType, // v2+ Field
		INTEGER StatementLength, // v2+ Field
		STRING ConsumerStatement, // v2+ Field
		DATE DateCreditFileEstbed,
		DATE OldestOpeningDateOfTrade,
		DATE LatestReportingDateOfTrade,
		DATE DateOfLatestFileActivity,
		BOOLEAN ReportIncludesBankruptcies,
		DATE DateOfLatestBankruptcyV1,
		BOOLEAN ReportIncludesPublicRecords,
		BOOLEAN ReportIncludesCollectionItems,
		BOOLEAN ReportIncludesConsumerStatements,
		INTEGER HighCreditRangeLowAmount,
		INTEGER HighCreditRangeHighAmount,
		INTEGER TotalNumberOfTradelines,
		INTEGER NumberOfAccountsWithCurrentStatus0,
		INTEGER NumberOfAccountsWithCurrentStatus1,
		INTEGER NumberOfAccountsWithCurrentStatus2,
		INTEGER NumberOfAccountsWithCurrentStatus3,
		INTEGER NumberOfAccountsWithCurrentStatus4,
		INTEGER NumberOfAccountsWithCurrentStatus5,
		INTEGER NumberOfAccountsWithCurrentStatus6,
		INTEGER NumberOfAccountsWithCurrentStatus7,
		INTEGER NumberOfAccountsWithCurrentStatus8,
		INTEGER NumberOfAccountsWithCurrentStatus9,
		INTEGER NumberOfAccountsWithCurrentStatusBlank,
		INTEGER NumberOfAccountsWithHistoricalStatus1,
		INTEGER NumberOfAccountsWithHistoricalStatus2,
		INTEGER NumberOfAccountsWithHistoricalStatus3,
		INTEGER NumberOfAccountsWithHistoricalStatus4,
		INTEGER NumberOfAccountsWithHistoricalStatus5,
		INTEGER NumberOfAccountsWithHistoricalStatus6,
		INTEGER NumberOfAccountsWithHistoricalStatus7,
		INTEGER NumberOfAccountsWithHistoricalStatus8,
		INTEGER NumberOfAccountsWithHistoricalStatus9,
		INTEGER HighCreditTotalRevolving,
		INTEGER HighCreditOpenEnded,
		INTEGER HighCreditInstallment,
		INTEGER AmountOwedTotalRevolving,
		INTEGER AmountOwedTotalOpenEnded,
		INTEGER AmountOwedTotalInstallment,
		INTEGER PastDueTotalRevolving,
		INTEGER PastDueTotalOpenEnded,
		INTEGER PastDueTotalInstallment,
		INTEGER NinetyDayInquiryHistoryCount,
		DATE NinetyDayInquiryHistoryDate,
		INTEGER NumberOfRevolvingAccounts,
		INTEGER NumberOfOpenEndedAccounts,
		INTEGER NumberOfInstallmentAccounts),
	MODEL(UID, 
		TransactionID, 
		ReferenceNumber,
		BureauCode, Version, PaymentHistoryType, FileSinceDate, DateOfBirth, DateOfDeath, ConsumerStatementOnFileFlag, ContentType, StatementLength, ConsumerStatement,
		LexIDs{SubjectRecordCode, LexID}, 
		ROWS{SubjectRecord, DateCreditFileEstbed, OldestOpeningDateOfTrade, LatestReportingDateOfTrade, DateOfLatestFileActivity, ReportIncludesBankruptcies, 
			DateOfLatestBankruptcyV1, ReportIncludesPublicRecords, ReportIncludesCollectionItems, ReportIncludesConsumerStatements, HighCreditRangeLowAmount, 
			HighCreditRangeHighAmount, TotalNumberOfTradelines, NumberOfAccountsWithCurrentStatus0, NumberOfAccountsWithCurrentStatus1, NumberOfAccountsWithCurrentStatus2, 
			NumberOfAccountsWithCurrentStatus3, NumberOfAccountsWithCurrentStatus4, NumberOfAccountsWithCurrentStatus5, NumberOfAccountsWithCurrentStatus6, 
			NumberOfAccountsWithCurrentStatus7, NumberOfAccountsWithCurrentStatus8, NumberOfAccountsWithCurrentStatus9, NumberOfAccountsWithCurrentStatusBlank, 
			NumberOfAccountsWithHistoricalStatus1, NumberOfAccountsWithHistoricalStatus2, NumberOfAccountsWithHistoricalStatus3, NumberOfAccountsWithHistoricalStatus4, 
			NumberOfAccountsWithHistoricalStatus5, NumberOfAccountsWithHistoricalStatus6, NumberOfAccountsWithHistoricalStatus7, NumberOfAccountsWithHistoricalStatus8, 
			NumberOfAccountsWithHistoricalStatus9, HighCreditTotalRevolving, HighCreditOpenEnded, HighCreditInstallment, AmountOwedTotalRevolving, AmountOwedTotalOpenEnded, 
			AmountOwedTotalInstallment, PastDueTotalRevolving, PastDueTotalOpenEnded, PastDueTotalInstallment, NinetyDayInquiryHistoryCount, NinetyDayInquiryHistoryDate, 
			NumberOfRevolvingAccounts, NumberOfOpenEndedAccounts, NumberOfInstallmentAccounts}, 
		DateReported, DateOfOrder, DateOfReceipt, DateOfCompletion, TimeOfReport, Quoteback, ReportCode, ReportCodeDescription, ReportType, AccountNumber, 
		ProcessingCompletionStatus, ReportUsage));


// Credit Report Sub-Section ENTITYs (Bankruptcy, Collection, Employment, Inquiry, Judgement, Lien, Narrative Remarks, Tradeline)
CreditReportBankruptcy := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		STRING ECOACode, // v2+ Field
		STRING StatusDate, // v2+ Field
		STRING ConsumerDisputeFlag, // v2+ Field
		DATE DateReported,
		DATE DateFiled,
		STRING BankruptcyStatus,
		INTEGER AssetsReported,
		INTEGER LiabilitiesReported,
		DATE SatisfiedDischargeDate,
		STRING CourtNumber,
		STRING CaseNumber,
		STRING BankruptcyType,
		STRING FilingType),
	MODEL(*));

CreditReportCollection := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		STRING KindOfBusiness, // v2+ Field
		DATE DateReported,
		DATE DateAssigned,
		STRING IndustryCode,
		STRING ReportingMemberAgencyNumber,
		STRING ClientNameOrNumber,
		BOOLEAN IsMedicalClientName,
		BOOLEAN IsMedicalCollectionClientName,
		STRING OriginalCreditorName, // v2+ Field
		STRING AccountNumber, // v2+ Field
		STRING ECOACode,
		DATE DateOfLastActivity,
		INTEGER OriginalAmount,
		DATE DateOfBalance,
		INTEGER BalanceAmount,
		INTEGER PastDueAmount, // v2+ Field
		DATE StatusDate,
		STRING CollectionItemStatus,
		STRING CollectionItemStatusText,
		STRING ClassificationCode, // v2+ Field
		STRING ConsumerDisputeFlag, // v2+ Field
		STRING AccountTypeCode, // v2+ Field
		STRING ConsumerInfoIndicator, // v2+ Field
		DATE DateOf1stDelinquency), // v2+ Field
	MODEL(*));

CreditReportEmployment := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter, LineNumber),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		DATE DateReported,
		STRING Classification,
		STRING EmployerName,
		STRING TypeOfPositionDescription,
		STRING StateOfEmployment,
		STRING CityOfEmployment),
	MODEL(*));

CreditReportInquiry := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter, LineNumber),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		STRING KindOfBusiness, // v2+ Field
		DATE DateReported,
		DATE DateOfInquiry,
		STRING InquirerName,
		STRING InquirerID,
		INTEGER Amount, // v2+ Field
		STRING Type, // v2+ Field
		STRING Abbreviation, // v2+ Field
		STRING Terms, // v2+ Field
		STRING IndustryID,
		STRING IndustryIDFull),
	MODEL(*));

CreditReportJudgement := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		STRING ECOACode, // v2+ Field
		STRING StatusDate, // v2+ Field
		STRING ConsumerDisputeFlag, // v2+ Field
		DATE DateReported,
		STRING Classification,
		DATE DateFiled,
		STRING ReportingCourtNumber,
		STRING CaseNumber,
		INTEGER AmountInvolved,
		STRING TypeOfRecordItem,
		DATE DateSatisfied,
		STRING StatusOfRecordItem,
		STRING Defendant,
		STRING Plaintiff),
	MODEL(*));

CreditReportLien := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		STRING ECOACode, // v2+ Field
		STRING StatusDate, // v2+ Field
		STRING ConsumerDisputeFlag, // v2+ Field
		DATE DateReported,
		DATE DateFiled,
		STRING ReportingCourtNumber,
		STRING CaseNumber,
		INTEGER AmountOfLien,
		STRING ACBCreditorClass,
		DATE DateReleased),
	MODEL(*));

CreditReportTradeline := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		STRING BureauCode, // v2+ Field
		INTEGER TradeKey, // v2+ Field
		STRING KindOfBusiness, // v2+ Field
		DATE DateReported,
		DATE DateAccountOpened,
		DATE DateOfLastActivity,
		STRING IndustryCode,
		STRING ReportingMemberNumber,
		STRING MemberName,
		BOOLEAN AutoLenderMemberName,
		BOOLEAN TapeSupplierIndicator,
		INTEGER HighestCreditAmount,
		INTEGER CreditLimit, // v2+ Field
		INTEGER ChargeOffAmount, // v2+ Field
		STRING Terms,
		STRING AccountNumber, // v2+ Field
		STRING ECOACode, // v2+ Field
		STRING PortfolioTypeCode, // v2+ Field
		INTEGER AccountBalance,
		INTEGER ScheduledPaymentAmount, // v2+ Field
		INTEGER ActualPaymentAmount, // v2+ Field
		INTEGER ActualPaymentNullIndicator, // v2+ Field
		STRING MonthlyPaymentType, // v2+ Field
		INTEGER AmountPastDue,
		STRING AccountType,
		STRING CurrentRateCode,
		STRING StatusCode, // v2+ Field
		STRING AccountConditionCode, // v2+ Field
		INTEGER MonthsReviewed,
		STRING AccountDesignatorCode,
		INTEGER ThirtyDayCounter,
		INTEGER SixtyDayCounter,
		INTEGER NinetyDayCounter,
		INTEGER DerogCounter, // v2+ Field
		STRING OldHistoricalWorstRatingCode, // v2+ Field
		STRING OldHistoricalWorstRatingDate, // v2+ Field, set to STRING as it can contain 0's in odd places
		DATE StatusDate, // v2+ Field
		STRING LastPaymentDate, // v2+ Field, set to STRING as it can contain different orders for YYYYMMDD/MMDDYYYY/DDMMYYYY
		STRING PreviousRateCode1,
		DATE PreviousRateDate1,
		STRING PreviousRateCode2,
		DATE PreviousRateDate2,
		STRING PreviousRateCode3,
		DATE PreviousRateDate3,
		STRING PaymentHistory84Months, // v2+ Field
		STRING ConsumerDisputeFlag, // v2+ Field
		STRING ConsumerInfoIndicator, // v2+ Field
		STRING PaymentFrequency, // v2+ Field
		STRING ActivityDesignatorCode, // v2+ Field
		STRING MortgageID, // v2+ Field
		DATE DeferredPaymentStartDate, // v2+ Field
		INTEGER DeferredPaymentAmount, // v2+ Field
		INTEGER BalloonPaymentAmount, // v2+ Field
		STRING BalloonPaymentDueDate, // v2+ Field, set to STRING as it can contain 0's in odd places
		DATE PaymentPatternStartDate, // v2+ Field
		STRING TrendedDataStartDate, // v2+ Field
		INTEGER MonthCounter, // v2+ Trended Field
		INTEGER BalanceAmount, // v2+ Trended Field
		INTEGER LoanAmountCreditLimit, // v2+ Trended Field
		INTEGER ScheduledPayment, // v2+ Trended Field
		INTEGER ActualPayment, // v2+ Trended Field
		DATE LastPayment, // v2+ Trended Field
		INTEGER ActualPaymentNullInd), // v2+ Trended Field
	MODEL(UID, rCreditReport,
		BureauCode, TradeKey, KindOfBusiness, DateReported, DateAccountOpened, DateOfLastActivity, IndustryCode, ReportingMemberNumber, MemberName, 
		AutoLenderMemberName, TapeSupplierIndicator, HighestCreditAmount, CreditLimit, ChargeOffAmount, Terms, AccountNumber, ECOACode, PortfolioTypeCode, 
		AccountBalance, ScheduledPaymentAmount, ActualPaymentAmount, ActualPaymentNullIndicator, MonthlyPaymentType, AmountPastDue, AccountType, 
		CurrentRateCode, StatusCode, AccountConditionCode, MonthsReviewed, AccountDesignatorCode, ThirtyDayCounter, SixtyDayCounter, NinetyDayCounter, 
		DerogCounter, OldHistoricalWorstRatingCode, OldHistoricalWorstRatingDate, StatusDate, LastPaymentDate, PreviousRateCode1, PreviousRateDate1, 
		PreviousRateCode2, PreviousRateDate2, PreviousRateCode3, PreviousRateDate3, PaymentHistory84Months, ConsumerDisputeFlag, ConsumerInfoIndicator, 
		PaymentFrequency, ActivityDesignatorCode, MortgageID, DeferredPaymentStartDate, DeferredPaymentAmount, BalloonPaymentAmount, 
		BalloonPaymentDueDate, PaymentPatternStartDate, TrendedDataStartDate,
		Trended{MonthCounter, BalanceAmount, LoanAmountCreditLimit, ScheduledPayment, ActualPayment, LastPayment, ActualPaymentNullInd}));

CreditReportNarrativeRemarks := ENTITY(FLAT(UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter, NarrativeRemarkCounter),
		CreditReport rCreditReport=UID(Transaction_ID, LexID),
		CreditReportBankruptcy rCreditReportBankruptcy=UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReportCollection rCreditReportCollection=UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		// The Employment and Inquiries sections don't contain Narrative Remarks, thus no need to include them in this Entity definition
		CreditReportJudgement rCreditReportJudgement=UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReportLien rCreditReportLien=UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		CreditReportTradeline rCreditReportTradeline=UID(Transaction_ID, LexID, Date_Reported, RecordTypeCounter),
		STRING RemarksCode1,
		STRING Remarks1,
		STRING RemarksCode2,
		STRING Remarks2,
		STRING RemarksCode3, // v2+ Field
		STRING Remarks3, // v2+ Field
		STRING RemarksCode4, // v2+ Field
		STRING Remarks4, // v2+ Field
		BOOLEAN Remark1ContainsDispute,
		BOOLEAN Remark2ContainsDispute,
		BOOLEAN Remark3ContainsDispute, // v2+ Field
		BOOLEAN Remark4ContainsDispute, // v2+ Field
		BOOLEAN Remark1ContainsClosed,
		BOOLEAN Remark2ContainsClosed,
		BOOLEAN Remark3ContainsClosed, // v2+ Field
		BOOLEAN Remark4ContainsClosed), // v2+ Field
	MODEL(*));


// NCF Association definitions
PersonCreditReport := ASSOCIATION(FLAT(Person Subject=LexID, CreditReport Report=UID(TransactionID, LexID))); // Connects a Person to a Credit Report
JointCreditReport := ASSOCIATION(FLAT(CreditReport SubjectReport=UID(TransactionID, LexID), CreditReport JointReport=UID(TransactionID, LexID))); // Connects a Credit Report for a Subject to the Credit Report for the joint applicant


// NCF v1.0 USE Statements
USE Consumer_Credit.FilesCleaned.CreditReportSummary_Data(FLAT,
	Person,
	CreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = TRUE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		BureauCode = BureauCode,
		Version = Version,
		PaymentHistoryType = PaymentHistoryType,
		FileSinceDate = FileSinceDate,
		DateOfBirth = BirthDate,
		DateOfDeath = DeathDate,
		ConsumerStatementOnFileFlag = ConsumerStatementOnFile,
		ContentType = ContentType,
		StatementLength = StatementLength,
		ConsumerStatement = ConsumerStatement,
		DateCreditFileEstbed = DateCreditFileEstbed,
		OldestOpeningDateOfTrade = OldestOpeningDateOfTrade,
		LatestReportingDateOfTrade = LatestReportingDateOfTrade,
		DateOfLatestFileActivity = DateOfLatestFileActivity,
		ReportIncludesBankruptcies = ReportIncludesBankruptciesBool,
		DateOfLatestBankruptcyV1 = DateOfLatestBankruptcyv1,
		ReportIncludesPublicRecords = ReportIncludesPublicRecordsBool,
		ReportIncludesCollectionItems = ReportIncludesCollectionItemsBool,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool,
		HighCreditRangeLowAmount = HighCreditRangeLowAmount,
		HighCreditRangeHighAmount = HighCreditRangeHighAmount,
		TotalNumberOfTradelines = TotalNumberOfTradelines,
		NumberOfAccountsWithCurrentStatus0 = NoOfAcctsWCurrentStatus0,
		NumberOfAccountsWithCurrentStatus1 = NoOfAcctsWCurrentStatus1,
		NumberOfAccountsWithCurrentStatus2 = NoOfAcctsWCurrentStatus2,
		NumberOfAccountsWithCurrentStatus3 = NoOfAcctsWCurrentStatus3,
		NumberOfAccountsWithCurrentStatus4 = NoOfAcctsWCurrentStatus4,
		NumberOfAccountsWithCurrentStatus5 = NoOfAcctsWCurrentStatus5,
		NumberOfAccountsWithCurrentStatus6 = NoOfAcctsWCurrentStatus6,
		NumberOfAccountsWithCurrentStatus7 = NoOfAcctsWCurrentStatus7,
		NumberOfAccountsWithCurrentStatus8 = NoOfAcctsWCurrentStatus8,
		NumberOfAccountsWithCurrentStatus9 = NoOfAcctsWCurrentStatus9,
		NumberOfAccountsWithCurrentStatusBlank = NoOfAcctsWCurrStatusBlank,
		NumberOfAccountsWithHistoricalStatus1 = NoOfAcctsWHistStatus1,
		NumberOfAccountsWithHistoricalStatus2 = NoOfAcctsWHistStatus2,
		NumberOfAccountsWithHistoricalStatus3 = NoOfAcctsWHistStatus3,
		NumberOfAccountsWithHistoricalStatus4 = NoOfAcctsWHistStatus4,
		NumberOfAccountsWithHistoricalStatus5 = NoOfAcctsWHistStatus5,
		NumberOfAccountsWithHistoricalStatus6 = NoOfAcctsWHistStatus6,
		NumberOfAccountsWithHistoricalStatus7 = NoOfAcctsWHistStatus7,
		NumberOfAccountsWithHistoricalStatus8 = NoOfAcctsWHistStatus8,
		NumberOfAccountsWithHistoricalStatus9 = NoOfAcctsWHistStatus9,
		HighCreditTotalRevolving = HighCreditTotalRevolving,
		HighCreditOpenEnded = HighCreditOpenEnded,
		HighCreditInstallment = HighCreditInstallment,
		AmountOwedTotalRevolving = AmountOwedTotalRevolving,
		AmountOwedTotalOpenEnded = AmountOwedTotalOpenEnded,
		AmountOwedTotalInstallment = AmountOwedTotalInstallment,
		PastDueTotalRevolving = PastDueTotalRevolving,
		PastDueTotalOpenEnded = PastDueTotalOpenEnded,
		PastDueTotalInstallment = PastDueTotalInstallment,
		NinetyDayInquiryHistoryCount = NinetyDayInquiryHistoryCount,
		NinetyDayInquiryHistoryDate = NinetyDayInquiryHistoryDate,
		NumberOfRevolvingAccounts = NumberOfRevolvingAccounts,
		NumberOfOpenEndedAccounts = NumberOfOpenEndedAccounts,
		NumberOfInstallmentAccounts = NumberOfInstallmentAccounts),
	CreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = FALSE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		BureauCode = BureauCode,
		Version = Version,
		PaymentHistoryType = PaymentHistoryType,
		FileSinceDate = FileSinceDate,
		DateOfBirth = BirthDate,
		DateOfDeath = DeathDate,
		ConsumerStatementOnFileFlag = ConsumerStatementOnFile,
		ContentType = ContentType,
		StatementLength = StatementLength,
		ConsumerStatement = ConsumerStatement,
		DateCreditFileEstbed = DateCreditFileEstbed,
		OldestOpeningDateOfTrade = OldestOpeningDateOfTrade,
		LatestReportingDateOfTrade = LatestReportingDateOfTrade,
		DateOfLatestFileActivity = DateOfLatestFileActivity,
		ReportIncludesBankruptcies = ReportIncludesBankruptciesBool,
		DateOfLatestBankruptcyV1 = DateOfLatestBankruptcyv1,
		ReportIncludesPublicRecords = ReportIncludesPublicRecordsBool,
		ReportIncludesCollectionItems = ReportIncludesCollectionItemsBool,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool,
		HighCreditRangeLowAmount = HighCreditRangeLowAmount,
		HighCreditRangeHighAmount = HighCreditRangeHighAmount,
		TotalNumberOfTradelines = TotalNumberOfTradelines,
		NumberOfAccountsWithCurrentStatus0 = NoOfAcctsWCurrentStatus0,
		NumberOfAccountsWithCurrentStatus1 = NoOfAcctsWCurrentStatus1,
		NumberOfAccountsWithCurrentStatus2 = NoOfAcctsWCurrentStatus2,
		NumberOfAccountsWithCurrentStatus3 = NoOfAcctsWCurrentStatus3,
		NumberOfAccountsWithCurrentStatus4 = NoOfAcctsWCurrentStatus4,
		NumberOfAccountsWithCurrentStatus5 = NoOfAcctsWCurrentStatus5,
		NumberOfAccountsWithCurrentStatus6 = NoOfAcctsWCurrentStatus6,
		NumberOfAccountsWithCurrentStatus7 = NoOfAcctsWCurrentStatus7,
		NumberOfAccountsWithCurrentStatus8 = NoOfAcctsWCurrentStatus8,
		NumberOfAccountsWithCurrentStatus9 = NoOfAcctsWCurrentStatus9,
		NumberOfAccountsWithCurrentStatusBlank = NoOfAcctsWCurrStatusBlank,
		NumberOfAccountsWithHistoricalStatus1 = NoOfAcctsWHistStatus1,
		NumberOfAccountsWithHistoricalStatus2 = NoOfAcctsWHistStatus2,
		NumberOfAccountsWithHistoricalStatus3 = NoOfAcctsWHistStatus3,
		NumberOfAccountsWithHistoricalStatus4 = NoOfAcctsWHistStatus4,
		NumberOfAccountsWithHistoricalStatus5 = NoOfAcctsWHistStatus5,
		NumberOfAccountsWithHistoricalStatus6 = NoOfAcctsWHistStatus6,
		NumberOfAccountsWithHistoricalStatus7 = NoOfAcctsWHistStatus7,
		NumberOfAccountsWithHistoricalStatus8 = NoOfAcctsWHistStatus8,
		NumberOfAccountsWithHistoricalStatus9 = NoOfAcctsWHistStatus9,
		HighCreditTotalRevolving = HighCreditTotalRevolving,
		HighCreditOpenEnded = HighCreditOpenEnded,
		HighCreditInstallment = HighCreditInstallment,
		AmountOwedTotalRevolving = AmountOwedTotalRevolving,
		AmountOwedTotalOpenEnded = AmountOwedTotalOpenEnded,
		AmountOwedTotalInstallment = AmountOwedTotalInstallment,
		PastDueTotalRevolving = PastDueTotalRevolving,
		PastDueTotalOpenEnded = PastDueTotalOpenEnded,
		PastDueTotalInstallment = PastDueTotalInstallment,
		NinetyDayInquiryHistoryCount = NinetyDayInquiryHistoryCount,
		NinetyDayInquiryHistoryDate = NinetyDayInquiryHistoryDate,
		NumberOfRevolvingAccounts = NumberOfRevolvingAccounts,
		NumberOfOpenEndedAccounts = NumberOfOpenEndedAccounts,
		NumberOfInstallmentAccounts = NumberOfInstallmentAccounts),
	PersonCreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		Subject = LexID,
		TransactionID = Transaction_ID),
	JointCreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported), // Contains information for ASOF
	JointCreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported), // Contains information for ASOF
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.ReportRequest_Data(FLAT,
	CreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateOfOrder = DateOfOrder,
		DateOfReceipt = DateOfReceipt,
		DateOfCompletion = DateOfCompletion,
		TimeOfReport = TimeOfReport,
		Quoteback = Quoteback,
		ReportCode = ReportCode,
		ReportCodeDescription = ReportCodeDesc,
		ReportType = ReportType,
		AccountNumber = AccountNumber,
		ProcessingCompletionStatus = ProcessingCompletionStatus,
		ReportUsage = ReportUsage,
		ReferenceNumber = ReferenceNumber),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.Bankruptcy_Data(FLAT,
	CreditReportBankruptcy(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateFiled = DateFiled,
		BankruptcyStatus = BankruptcyStatus,
		AssetsReported = AssetsReported,
		LiabilitiesReported = LiabilitiesReported,
		SatisfiedDischargeDate = SatisfiedDischargeDate,
		CourtNumber = CourtNumber,
		CaseNumber = CaseNumber,
		BankruptcyType = BankruptcyType,
		FilingType = FilingType),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.Collection_Data(FLAT,
	CreditReportCollection(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = DateReported,
		DateAssigned = DateAssigned,
		IndustryCode = IndustryCode,
		ReportingMemberAgencyNumber = ReportingMemberAgencyNumber,
		ClientNameOrNumber = ClientNameOrNumber,
		IsMedicalClientName = MedicalClientName,
		IsMedicalCollectionClientName = MedicalCollectionClientName,
		ECOACode = ECOACode,
		DateOfLastActivity = DateOfLastActivity,
		OriginalAmount = OriginalAmount,
		DateOfBalance = DateOfBalance,
		BalanceAmount = BalanceAmount,
		StatusDate = StatusDate,
		CollectionItemStatus = CollectionItemStatus,
		CollectionItemStatusText = CollectionItemStatusText),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.Employment_Data(FLAT,
	CreditReportEmployment(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		Classification = Classification,
		EmployerName = EmployerName,
		TypeOfPositionDescription = TypeOfPositionDescription,
		StateOfEmployment = StateOfEmployment,
		CityOfEmployment = CityOfEmployment),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.InquiryHistory_Data(FLAT,
	CreditReportInquiry(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateOfInquiry = DateOfInquiry,
		InquirerName = InquirerName,
		InquirerID = InquirerID,
		IndustryID = IndustryID,
		IndustryIDFull = IndustryIDFull),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.Judgement_Data(FLAT,
	CreditReportJudgement(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		Classification = Classification,
		DateFiled = DateFiled,
		ReportingCourtNumber = ReportingCourtNumber,
		CaseNumber = CaseNumber,
		AmountInvolved = AmountInvolved,
		TypeOfRecordItem = TypeOfRecordItem,
		DateSatisfied = DateSatisfied,
		StatusOfRecordItem = StatusOfRecordItem,
		Defendant = Defendant,
		Plaintiff = Plaintiff),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.TaxLien_Data(FLAT,
	CreditReportLien(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateFiled = DateFiled,
		ReportingCourtNumber = ReportingCourtNumber,
		CaseNumber = CaseNumber,
		AmountOfLien = AmountOfLien,
		ACBCreditorClass = ACBCreditorClass,
		DateReleased = DateReleased),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.TradeLine_Data(FLAT,
	CreditReportTradeline(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateAccountOpened = DateAccountOpened,
		DateOfLastActivity = DateOfLastActivity,
		IndustryCode = IndustryCode,
		ReportingMemberNumber = ReportingMemberNumber,
		MemberName = MemberName,
		AutoLenderMemberName = AutoLenderMemberName,
		TapeSupplierIndicator = TapeSupplierIndicatorBool,
		HighestCreditAmount = HighestCreditAmount,
		Terms = Terms,
		AccountBalance = AccountBalance,
		AmountPastDue = AmountPastDue,
		AccountType = AccountTypeCode,
		CurrentRateCode = CurrentRateCode,
		MonthsReviewed = MonthsReviewed,
		AccountDesignatorCode = AccountDesignatorCode,
		ThirtyDayCounter = ThirtyDayCounter,
		SixtyDayCounter = SixtyDayCounter,
		NinetyDayCounter = NinetyDayCounter,
		PreviousRateCode1 = PrevRateCode1,
		PreviousRateDate1 = PrevRateDate1,
		PreviousRateCode2 = PrevRateCode2,
		PreviousRateDate2 = PrevRateDate2,
		PreviousRateCode3 = PrevRateCode3,
		PreviousRateDate3 = PrevRateDate3),
	PERMITS([v1]));

USE Consumer_Credit.FilesCleaned.NarrativeA_Data(FLAT,
	CreditReportNarrativeRemarks(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		RemarksCode1 = RemarksCode1,
		Remarks1 = Remarks1,
		RemarksCode2 = RemarksCode2,
		Remarks2 = Remarks2,
		RemarksCode3 = RemarksCode3,
		Remarks3 = Remarks3,
		RemarksCode4 = RemarksCode4,
		Remarks4 = Remarks4,
		Remark1ContainsDispute = Remark1ContainsDispute,
		Remark2ContainsDispute = Remark2ContainsDispute,
		Remark3ContainsDispute = Remark3ContainsDispute,
		Remark4ContainsDispute = Remark4ContainsDispute,
		Remark1ContainsClosed = Remark1ContainsClosed,
		Remark2ContainsClosed = Remark2ContainsClosed,
		Remark3ContainsClosed = Remark3ContainsClosed,
		Remark4ContainsClosed = Remark4ContainsClosed),
	PERMITS([v1]));


// NCF v2.0 USE Statements
USE Consumer_Credit.FilesCleaned_NCF2_0.CreditReportSummary_Data(FLAT,
	Person,
	CreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = TRUE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateCreditFileEstbed = DateCreditFileEstbed,
		OldestOpeningDateOfTrade = OldestOpeningDateOfTrade,
		LatestReportingDateOfTrade = LatestReportingDateOfTrade,
		DateOfLatestFileActivity = DateOfLatestFileActivity,
		ReportIncludesBankruptcies = ReportIncludesBankruptciesBool,
		DateOfLatestBankruptcyV1 = DateOfLatestBankruptcyv1,
		ReportIncludesPublicRecords = ReportIncludesPublicRecordsBool,
		ReportIncludesCollectionItems = ReportIncludesCollectionItemsBool,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool,
		HighCreditRangeLowAmount = HighCreditRangeLowAmount,
		HighCreditRangeHighAmount = HighCreditRangeHighAmount,
		TotalNumberOfTradelines = TotalNumberOfTradelines,
		NumberOfAccountsWithCurrentStatus0 = NoOfAcctsWCurrentStatus0,
		NumberOfAccountsWithCurrentStatus1 = NoOfAcctsWCurrentStatus1,
		NumberOfAccountsWithCurrentStatus2 = NoOfAcctsWCurrentStatus2,
		NumberOfAccountsWithCurrentStatus3 = NoOfAcctsWCurrentStatus3,
		NumberOfAccountsWithCurrentStatus4 = NoOfAcctsWCurrentStatus4,
		NumberOfAccountsWithCurrentStatus5 = NoOfAcctsWCurrentStatus5,
		NumberOfAccountsWithCurrentStatus6 = NoOfAcctsWCurrentStatus6,
		NumberOfAccountsWithCurrentStatus7 = NoOfAcctsWCurrentStatus7,
		NumberOfAccountsWithCurrentStatus8 = NoOfAcctsWCurrentStatus8,
		NumberOfAccountsWithCurrentStatus9 = NoOfAcctsWCurrentStatus9,
		NumberOfAccountsWithCurrentStatusBlank = NoOfAcctsWCurrStatusBlank,
		NumberOfAccountsWithHistoricalStatus1 = NoOfAcctsWHistStatus1,
		NumberOfAccountsWithHistoricalStatus2 = NoOfAcctsWHistStatus2,
		NumberOfAccountsWithHistoricalStatus3 = NoOfAcctsWHistStatus3,
		NumberOfAccountsWithHistoricalStatus4 = NoOfAcctsWHistStatus4,
		NumberOfAccountsWithHistoricalStatus5 = NoOfAcctsWHistStatus5,
		NumberOfAccountsWithHistoricalStatus6 = NoOfAcctsWHistStatus6,
		NumberOfAccountsWithHistoricalStatus7 = NoOfAcctsWHistStatus7,
		NumberOfAccountsWithHistoricalStatus8 = NoOfAcctsWHistStatus8,
		NumberOfAccountsWithHistoricalStatus9 = NoOfAcctsWHistStatus9,
		HighCreditTotalRevolving = HighCreditTotalRevolving,
		HighCreditOpenEnded = HighCreditOpenEnded,
		HighCreditInstallment = HighCreditInstallment,
		AmountOwedTotalRevolving = AmountOwedTotalRevolving,
		AmountOwedTotalOpenEnded = AmountOwedTotalOpenEnded,
		AmountOwedTotalInstallment = AmountOwedTotalInstallment,
		PastDueTotalRevolving = PastDueTotalRevolving,
		PastDueTotalOpenEnded = PastDueTotalOpenEnded,
		PastDueTotalInstallment = PastDueTotalInstallment,
		NinetyDayInquiryHistoryCount = NinetyDayInquiryHistoryCount,
		NinetyDayInquiryHistoryDate = NinetyDayInquiryHistoryDate,
		NumberOfRevolvingAccounts = NumberOfRevolvingAccounts,
		NumberOfOpenEndedAccounts = NumberOfOpenEndedAccounts,
		NumberOfInstallmentAccounts = NumberOfInstallmentAccounts),
	CreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this CreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		TransactionID = Transaction_ID,
		SubjectRecord = FALSE,
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateCreditFileEstbed = DateCreditFileEstbed,
		OldestOpeningDateOfTrade = OldestOpeningDateOfTrade,
		LatestReportingDateOfTrade = LatestReportingDateOfTrade,
		DateOfLatestFileActivity = DateOfLatestFileActivity,
		ReportIncludesBankruptcies = ReportIncludesBankruptciesBool,
		DateOfLatestBankruptcyV1 = DateOfLatestBankruptcyv1,
		ReportIncludesPublicRecords = ReportIncludesPublicRecordsBool,
		ReportIncludesCollectionItems = ReportIncludesCollectionItemsBool,
		ReportIncludesConsumerStatements = ReportIncludesConsumerStatementsBool,
		HighCreditRangeLowAmount = HighCreditRangeLowAmount,
		HighCreditRangeHighAmount = HighCreditRangeHighAmount,
		TotalNumberOfTradelines = TotalNumberOfTradelines,
		NumberOfAccountsWithCurrentStatus0 = NoOfAcctsWCurrentStatus0,
		NumberOfAccountsWithCurrentStatus1 = NoOfAcctsWCurrentStatus1,
		NumberOfAccountsWithCurrentStatus2 = NoOfAcctsWCurrentStatus2,
		NumberOfAccountsWithCurrentStatus3 = NoOfAcctsWCurrentStatus3,
		NumberOfAccountsWithCurrentStatus4 = NoOfAcctsWCurrentStatus4,
		NumberOfAccountsWithCurrentStatus5 = NoOfAcctsWCurrentStatus5,
		NumberOfAccountsWithCurrentStatus6 = NoOfAcctsWCurrentStatus6,
		NumberOfAccountsWithCurrentStatus7 = NoOfAcctsWCurrentStatus7,
		NumberOfAccountsWithCurrentStatus8 = NoOfAcctsWCurrentStatus8,
		NumberOfAccountsWithCurrentStatus9 = NoOfAcctsWCurrentStatus9,
		NumberOfAccountsWithCurrentStatusBlank = NoOfAcctsWCurrStatusBlank,
		NumberOfAccountsWithHistoricalStatus1 = NoOfAcctsWHistStatus1,
		NumberOfAccountsWithHistoricalStatus2 = NoOfAcctsWHistStatus2,
		NumberOfAccountsWithHistoricalStatus3 = NoOfAcctsWHistStatus3,
		NumberOfAccountsWithHistoricalStatus4 = NoOfAcctsWHistStatus4,
		NumberOfAccountsWithHistoricalStatus5 = NoOfAcctsWHistStatus5,
		NumberOfAccountsWithHistoricalStatus6 = NoOfAcctsWHistStatus6,
		NumberOfAccountsWithHistoricalStatus7 = NoOfAcctsWHistStatus7,
		NumberOfAccountsWithHistoricalStatus8 = NoOfAcctsWHistStatus8,
		NumberOfAccountsWithHistoricalStatus9 = NoOfAcctsWHistStatus9,
		HighCreditTotalRevolving = HighCreditTotalRevolving,
		HighCreditOpenEnded = HighCreditOpenEnded,
		HighCreditInstallment = HighCreditInstallment,
		AmountOwedTotalRevolving = AmountOwedTotalRevolving,
		AmountOwedTotalOpenEnded = AmountOwedTotalOpenEnded,
		AmountOwedTotalInstallment = AmountOwedTotalInstallment,
		PastDueTotalRevolving = PastDueTotalRevolving,
		PastDueTotalOpenEnded = PastDueTotalOpenEnded,
		PastDueTotalInstallment = PastDueTotalInstallment,
		NinetyDayInquiryHistoryCount = NinetyDayInquiryHistoryCount,
		NinetyDayInquiryHistoryDate = NinetyDayInquiryHistoryDate,
		NumberOfRevolvingAccounts = NumberOfRevolvingAccounts,
		NumberOfOpenEndedAccounts = NumberOfOpenEndedAccounts,
		NumberOfInstallmentAccounts = NumberOfInstallmentAccounts),
	PersonCreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		Subject = LexID,
		TransactionID = Transaction_ID),
	JointCreditReport(FILTER(ReportTypeCounter = 1), // Grab the records for the Subject on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported), // Contains information for ASOF
	JointCreditReport(FILTER(ReportTypeCounter = 2), // Grab the records for the Joint Applicant on this JointCreditReport
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported), // Contains information for ASOF
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.ReportRequest_Data(FLAT,
	CreditReport(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		SubjectRecordCode = ReportTypeCounter,
		LexID = LexID,
		DateOfOrder = DateOfOrder,
		DateOfReceipt = DateOfReceipt,
		DateOfCompletion = DateOfCompletion,
		TimeOfReport = TimeOfReport,
		Quoteback = Quoteback,
		ReportCode = ReportCode,
		ReportCodeDescription = ReportCodeDesc,
		ReportType = ReportType,
		AccountNumber = AccountNumber,
		ProcessingCompletionStatus = ProcessingCompletionStatus,
		ReportUsage = ReportUsage,
		ReferenceNumber = ReferenceNumber),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.Bankruptcy_Data(FLAT,
	CreditReportBankruptcy(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateFiled = DateFiled,
		BureauCode = BureauCode,
		ECOACode = ECOA,
		StatusDate = StatusDate,
		ConsumerDisputeFlag = ConsumerDisputeFlag,
		BankruptcyStatus = BankruptcyStatus,
		AssetsReported = AssetsReported,
		LiabilitiesReported = LiabilitiesReported,
		SatisfiedDischargeDate = SatisfiedDischargeDate,
		CourtNumber = CourtNumber,
		CaseNumber = CaseNumber,
		BankruptcyType = BankruptcyType,
		FilingType = FilingType),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.Collection_Data(FLAT,
	CreditReportCollection(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = DateReported,
		DateAssigned = DateAssigned,
		BureauCode = BureauCode,
		KindOfBusiness = KOB,
		OriginalCreditorName = OriginalCreditorName,
		AccountNumber = AccountNumber,
		PastDueAmount = PastDueAmount,
		ClassificationCode = ClassificationCode,
		ConsumerDisputeFlag = ConsumerDisputeFlag,
		AccountTypeCode = AccountTypeCode,
		ConsumerInfoIndicator = ConsumerInfoIndicator,
		DateOf1stDelinquency = Date1stDelinquency,
		IndustryCode = IndustryCode,
		ReportingMemberAgencyNumber = ReportingMemberAgencyNumber,
		ClientNameOrNumber = ClientNameOrNumber,
		IsMedicalClientName = MedicalClientName,
		IsMedicalCollectionClientName = MedicalCollectionClientName,
		ECOACode = ECOACode,
		DateOfLastActivity = DateOfLastActivity,
		OriginalAmount = OriginalAmount,
		DateOfBalance = DateOfBalance,
		BalanceAmount = BalanceAmount,
		StatusDate = StatusDate,
		CollectionItemStatus = CollectionItemStatus,
		CollectionItemStatusText = CollectionItemStatusText),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.Employment_Data(FLAT,
	CreditReportEmployment(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		Classification = Classification,
		EmployerName = EmployerName,
		TypeOfPositionDescription = TypeOfPositionDescription,
		StateOfEmployment = StateOfEmployment,
		CityOfEmployment = CityOfEmployment),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.InquiryHistory_Data(FLAT,
	CreditReportInquiry(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		BureauCode = BureauCode, 
		KindOfBusiness = KOB,
		Amount = Amount,
		Type = IQType,
		Abbreviation = Abbreviation,
		Terms = Terms,
		DateOfInquiry = DateOfInquiry,
		InquirerName = InquirerName,
		InquirerID = InquirerID,
		IndustryID = IndustryID,
		IndustryIDFull = IndustryIDFull),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.Judgement_Data(FLAT,
	CreditReportJudgement(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		BureauCode = BureauCode,
		ECOACode = ECOA,
		StatusDate = StatusDate,
		ConsumerDisputeFlag = ConsumerDisputeFlag,
		Classification = Classification,
		DateFiled = DateFiled,
		ReportingCourtNumber = ReportingCourtNumber,
		CaseNumber = CaseNumber,
		AmountInvolved = AmountInvolved,
		TypeOfRecordItem = TypeOfRecordItem,
		DateSatisfied = DateSatisfied,
		StatusOfRecordItem = StatusOfRecordItem,
		Defendant = Defendant,
		Plaintiff = Plaintiff),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.TaxLien_Data(FLAT,
	CreditReportLien(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		DateFiled = DateFiled,
		BureauCode = BureauCode,
		ECOACode = ECOA,
		StatusDate = StatusDate,
		ConsumerDisputeFlag = ConsumerDisputeFlag,
		ReportingCourtNumber = ReportingCourtNumber,
		CaseNumber = CaseNumber,
		AmountOfLien = AmountOfLien,
		ACBCreditorClass = ACBCreditorClass,
		DateReleased = DateReleased),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.TradeLine_Data(FLAT,
	CreditReportTradeline(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		BureauCode = BureauCode,
		TradeKey = TradeKey,
		KindOfBusiness = KOB,
		ECOACode = ECOA,
		PortfolioTypeCode = PortfolioTypeCode,
		CreditLimit = CreditLimit,
		AccountNumber = AccountNumber,
		ChargeOffAmount = ChargeOffAmount,
		ScheduledPaymentAmount = ScheduledPaymentAmount,
		MonthlyPaymentType = MonthlyPaymentType,
		ActualPaymentAmount = ActualPaymentAmount,
		ActualPaymentNullInd = ActualPaymentNullInd,
		StatusCode = StatusCode,
		AccountConditionCode = AccountConditionCode,
		DerogCounter = DerogCounter,
		OldHistoricalWorstRatingCode = OldHistoricWorstRatingCode,
		OldHistoricalWorstRatingDate = OldHistoricWorstRatingDate,
		StatusDate = StatusDate,
		LastPaymentDate = LastPaymentDate,
		PaymentHistory84Months = PaymentHistory84Months,
		ConsumerDisputeFlag = ConsumerDisputeFlag,
		ConsumerInfoIndicator = ConsumerInfoIndicator,
		PaymentFrequency = PaymentFrequency,
		ActivityDesignatorCode = ActivityDesignatorCode,
		MortgageID = MortgageID,
		DeferredPaymentStartDate = DeferredPaymentStartDate,
		DeferredPaymentAmount = DeferredPaymentAmount,
		BalloonPaymentAmount = BalloonPaymentAmount,
		BalloonPaymentDueDate = BalloonPaymentDueDate,
		PaymentPatternStartDate = PaymentPatternStartDate,
		DateAccountOpened = DateAccountOpened,
		DateOfLastActivity = DateOfLastActivity,
		IndustryCode = IndustryCode,
		ReportingMemberNumber = ReportingMemberNumber,
		MemberName = MemberName,
		AutoLenderMemberName = AutoLenderMemberName,
		TapeSupplierIndicator = TapeSupplierIndicatorBool,
		HighestCreditAmount = HighestCreditAmount,
		Terms = Terms,
		AccountBalance = AccountBalance,
		AmountPastDue = AmountPastDue,
		AccountType = AccountTypeCode,
		CurrentRateCode = CurrentRateCode,
		MonthsReviewed = MonthsReviewed,
		AccountDesignatorCode = AccountDesignatorCode,
		ThirtyDayCounter = ThirtyDayCounter,
		SixtyDayCounter = SixtyDayCounter,
		NinetyDayCounter = NinetyDayCounter,
		PreviousRateCode1 = PrevRateCode1,
		PreviousRateDate1 = PrevRateDate1,
		PreviousRateCode2 = PrevRateCode2,
		PreviousRateDate2 = PrevRateDate2,
		PreviousRateCode3 = PrevRateCode3,
		PreviousRateDate3 = PrevRateDate3),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.TradeLine_Trended_Data(FLAT,
	CreditReportTradeline(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		DateReported = Date_Reported,
		MonthCounter = MonthCounter,
		BalanceAmount = BalanceAmount,
		LoanAmountCreditLimit = LoanAmountCreditLimit,
		ScheduledPayment = ScheduledPayment,
		ActualPayment = ActualPayment,
		LastPayment = LastPaymentDate,
		ActualPaymentNullInd = ActualPaymentNullInd),
	PERMITS([v2]));

USE Consumer_Credit.FilesCleaned_NCF2_0.NarrativeA_Data(FLAT,
	CreditReportNarrativeRemarks(
		DateFirstSeen = Date_Reported, // Contains information for ASOF
		DateLastSeen = Date_Reported, // Contains information for ASOF
		RemarksCode1 = RemarksCode1,
		Remarks1 = Remarks1,
		RemarksCode2 = RemarksCode2,
		Remarks2 = Remarks2,
		RemarksCode3 = RemarksCode3,
		Remarks3 = Remarks3,
		RemarksCode4 = RemarksCode4,
		Remarks4 = Remarks4,
		Remark1ContainsDispute = Remark1ContainsDispute,
		Remark2ContainsDispute = Remark2ContainsDispute,
		Remark1ContainsClosed = Remark1ContainsClosed,
		Remark2ContainsClosed = Remark2ContainsClosed),
	PERMITS([v2]));

// Bankruptcy CONSTANTs and Attributes
CreditReportBankruptcy: EQ := 'EFX';
CreditReportBankruptcy: EX := 'XPN';
CreditReportBankruptcy: TU := 'TRU';
CreditReportBankruptcy: ALLSTATE_DISPUTE_CATEGORY_1_STATUS_CODE_LIST := ['E'];
CreditReportBankruptcy: ALLSTATE_DISPUTE_CATEGORY_4_STATUS_CODE_LIST := ['J', 'S'];
CreditReportBankruptcy: CHAPTER_7_CODE_LIST := ['V', 'M', 'A', 'I'];
CreditReportBankruptcy: CHAPTER_11_CODE_LIST := ['D', 'E', 'F'];
CreditReportBankruptcy: CHAPTER_12_CODE_LIST := ['G', 'J', 'H'];
CreditReportBankruptcy: CHAPTER_13_CODE_LIST := ['C', 'K', 'L'];
CreditReportBankruptcy: DISCHARGED_STATUS_CODE_LIST := ['A', 'F', 'L', 'H'];
CreditReportBankruptcy: DISMISSED_STATUS_CODE_LIST := ['M', 'E', 'K', 'J'];
CreditReportBankruptcy: NATIONWIDE_STATUS_OF_RECORD_ITEM_CODE_LIST := ['V', 'D', 'F', 'G', 'N', 'C', 'A', 'L', 'I']; 

CreditReportBankruptcy: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);
CreditReportBankruptcy: => AgeInMonths := IF(ValidDate, ABS(MONTHSBETWEEN(DateFiled, DateReported)), 65535);
CreditReportBankruptcy: => AllstateDispute := BankruptcyStatus IN ALLSTATE_DISPUTE_CATEGORY_1_STATUS_CODE_LIST OR BankruptcyStatus IN ALLSTATE_DISPUTE_CATEGORY_4_STATUS_CODE_LIST;
CreditReportBankruptcy: => Chapter11 := BankruptcyStatus IN CHAPTER_11_CODE_LIST;
CreditReportBankruptcy: => Chapter12 := BankruptcyStatus IN CHAPTER_12_CODE_LIST;
CreditReportBankruptcy: => Chapter13 := BankruptcyStatus IN CHAPTER_13_CODE_LIST;
CreditReportBankruptcy: => Chapter7 := BankruptcyStatus IN CHAPTER_7_CODE_LIST;
CreditReportBankruptcy: => Discharged := BankruptcyStatus IN DISCHARGED_STATUS_CODE_LIST;
CreditReportBankruptcy: => Dismissed := BankruptcyStatus IN DISMISSED_STATUS_CODE_LIST;
CreditReportBankruptcy: => NationwideStatusOfRecordItem := BankruptcyStatus IN NATIONWIDE_STATUS_OF_RECORD_ITEM_CODE_LIST;
CreditReportBankruptcy: => ValidDate := ISVALIDDATE(DateFiled);


// Collection CONSTANTs and Attributes
CreditReportCollection: EQ := 'EFX';
CreditReportCollection: EX := 'XPN';
CreditReportCollection: TU := 'TRU';
CreditReportCollection: ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST := ['E'];
CreditReportCollection: ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST := ['J', 'S'];
CreditReportCollection: MEDICAL_HEALTH_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MZ'];
CreditReportCollection: MEDICAL_INDUSTRY_CODE_LIST := ['MB', 'MC', 'MD', 'MG', 'MH', 'MO', 'MP', 'MS', 'MZ'];
CreditReportCollection: PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST := ['YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ'];
CreditReportCollection: COLLECTION_ITEM_STATUS_CODE_LIST := ['D', 'J', 'N', 'P', 'T', 'U', 'X', 'F', 'M', 'Z', ' '];

CreditReportCollection: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);
CreditReportCollection: => AllstateDisputeStatus := CollectionItemStatus IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST OR CollectionItemStatus IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST;
CreditReportCollection: => AllstateDisputeCategory1 := EXISTS(CreditReportNarrativeRemarks(AllstateDisputeCategory1));
CreditReportCollection: => AllstateDisputeCategory4 := EXISTS(CreditReportNarrativeRemarks(AllstateDisputeCategory4));
CreditReportCollection: => Closed := EXISTS(CreditReportNarrativeRemarks(Closed));
CreditReportCollection: => CollectionItem := CollectionItemStatus IN COLLECTION_ITEM_STATUS_CODE_LIST;
CreditReportCollection: => MedicalIndustry := IndustryCode IN MEDICAL_INDUSTRY_CODE_LIST;
CreditReportCollection: => MedicalTreatment := IndustryCode IN MEDICAL_HEALTH_CODE_LIST;
CreditReportCollection: => PerrKnightCollectionServices := IndustryCode IN PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST;


// Inquiry CONSTANTs and Attributes
CreditReportInquiry: EQ := 'EFX';
CreditReportInquiry: EX := 'XPN';
CreditReportInquiry: TU := 'TRU';
CreditReportInquiry: ADAM_AUTO_INDUSTRY_CODE_LIST := ['AC', 'AF', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportInquiry: ALASKA_AUTO_FINANCE_INDUSTRY_CODE_LIST := ['A ', 'AC', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportInquiry: ALLSTATE_AUTO_INDUSTRY_CODE_LIST := ['AB', 'AC', 'AF', 'AL', 'AN', 'AP', 'AR', 'AS', 'AT', 'AU', 'AZ', 'FA'];
CreditReportInquiry: ALLSTATE_GLOBAL_EXCLUSION_CODE_LIST := ['ES', 'IG', 'IH', 'IL', 'IP', 'IR', 'IZ', 'KG', 'KI', 'KS', 'KZ', 'MB', 'MC', 'MD', 'ME', 'MF', 'MH', 'MM', 'MO', 'MP', 'MV', 'MZ', 'PA', 'PB', 'PC', 'PD', 'PE', 'PF', 'PG', 'PH', 'PI', 'PJ', 'PL', 'PM', 'PN', 'PP', 'PR', 'PS', 'PT', 'PZ', 'UB', 'UC', 'UD', 'UE', 'UF', 'UG', 'UR', 'UT', 'UW', 'UZ', 'XA', 'XM', 'XZ'];
CreditReportInquiry: ALLSTATE_MORTGAGE_INDUSTRY_CODE_LIST := ['FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ', 'RA', 'RC', 'RD', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'UR'];
CreditReportInquiry: ALS_FIG_AUTO_INDUSTRY_INQUIRY_CODE_LIST := ['AB', 'AC', 'AN', 'AU', 'AT', 'AP', 'AR', 'AS', 'AL', 'AF', 'AZ', 'FA'];
CreditReportInquiry: AUTO_FINANCE_INDUSTRY_CODE_LIST := ['FA'];
CreditReportInquiry: AUTO_INDUSTRY_INQUIRY_CODE_LIST := ['A ', 'AC', 'AN', 'AU', 'AT', 'AP', 'AR', 'AS', 'AL', 'AF', 'AZ', 'FA', 'ZA'];
CreditReportInquiry: AUTO_LENDING_CODE_LIST := ['AC', 'AN', 'AU', 'FA', 'RD', 'ZA'];
CreditReportInquiry: BANK_INDUSTRY_INQUIRY_CODE_LIST := ['BB', 'BC', 'BI', 'BO', 'BS', 'FC', 'FI'];
CreditReportInquiry: BANK_INSTALLMENT_INDUSTRY_CODE_LIST := ['B ', 'BI', 'BB'];
CreditReportInquiry: BANK_REVOLVING_INDUSTRY_CODE_LIST := ['B ', 'N ', 'BB', 'BC', 'BN', 'BO', 'BS', 'NF', 'NS', 'NU', 'ON', 'FS', 'FC', 'NZ'];
CreditReportInquiry: CANADA_INQUIRY_COLLECTIONS_EXCLUSION_CODE_LIST := ['YX'];
CreditReportInquiry: CREDIT_CARD_INDUSTRY_CODE_LIST := ['ND', 'NF', 'NS', 'NU', 'NZ', 'ON', 'WP'];
CreditReportInquiry: CREDIT_CARD_INDUSTRY_INQUIRY_CODE_LIST := ['BB', 'BC', 'NA', 'ND', 'NF', 'NS', 'NU', 'NZ', 'ON'];
CreditReportInquiry: FINANCE_INDUSTRY_CODE_LIST := ['F ', 'FA', 'FB', 'FC', 'FF', 'FL', 'FM', 'FP', 'FR', 'FS', 'FU', 'FW', 'FZ'];
CreditReportInquiry: INQUIRIES_NOT_INITIATED_BY_CONSUMER_CODE_LIST := ['PX', 'PY', 'XD', 'XL'];
CreditReportInquiry: INQUIRY_COLLECTIONS_EXCLUSION_CODE_LIST := ['YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ', 'ZY'];
CreditReportInquiry: INQUIRY_CREDIT_BUREAU_EXCLUSION_CODE_LIST := ['ZC', 'ZI', 'ZX'];
CreditReportInquiry: INQUIRY_EMPLOYMENT_EXCLUSION_CODE_LIST := ['PS', 'PX', 'PY', 'ZE'];
CreditReportInquiry: INQUIRY_EXCLUSION_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MV', 'MZ', 'PS', 'PX', 'PY', 'RD', 'RE', 'RZ', 'SM', 'YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ', 'ZE', 'ZF', 'ZL', 'ZT', 'ZY'];
CreditReportInquiry: INQUIRY_GOVERNMENT_EXCLUSION_CODE_LIST := ['VC', 'VF', 'VK', 'VL', 'VS', 'VX', 'VZ'];
CreditReportInquiry: INQUIRY_MEDICAL_EXCLUSION_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MV', 'MZ'];
CreditReportInquiry: INSURANCE_COVERAGE_INDUSTRY_CODE_LIST := ['IG', 'IL', 'IZ'];
CreditReportInquiry: INSURANCE_INDUSTRY_INQUIRY_CODE_LIST := ['I ', 'IG', 'IL', 'IZ', 'ZI', '960ZB'];
CreditReportInquiry: MEDICAL_TREATMENT_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MZ'];
CreditReportInquiry: MERCURY_AUTO_INDUSTRY_CODE_LIST := ['AC', 'AF', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportInquiry: MORTGAGE_INDUSTRY_CODE_LIST := ['BM', 'FB', 'FL', 'FM', 'FR'];
CreditReportInquiry: NATIONWIDE_REAL_ESTATE_INDUSTRY_CODE_LIST := ['FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ', 'RA', 'RC', 'RD', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'UR'];
CreditReportInquiry: PERR_KNIGHT_AUTO_LENDING_CODE_LIST := ['AC', 'AN', 'AU', 'FA', 'RD', 'ZA'];
CreditReportInquiry: PERR_KNIGHT_BANKS_CODE_LIST := ['BB', 'BC', 'BI', 'BO', 'BM', 'BN', 'BS', 'FB', 'YB'];
CreditReportInquiry: PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST := ['YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ'];
CreditReportInquiry: PERR_KNIGHT_INQUIRY_NOT_INITIATED_BY_CONSUMER_CODE_LIST := ['PX', 'PY', 'XD', 'XL'];
CreditReportInquiry: PERR_KNIGHT_INSURANCE_INDUSTRY_CODE_LIST := ['IG', 'IL', 'IZ'];
CreditReportInquiry: REAL_ESTATE_INDUSTRY_INQUIRY_CODE_LIST := ['RA', 'RC', 'RD', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'ZL', 'ZT'];
CreditReportInquiry: RETAIL_INDUSTRY_INQUIRY_CODE_LIST := ['AF', 'AL', 'AP', 'AR', 'AS', 'AT', 'CG', 'CS', 'CZ', 'DC', 'DM', 'DV', 'DZ', 'GD', 'GN', 'GS', 'GZ', 'HA', 'HC', 'HF', 'HM', 'HT', 'HZ', 'JA', 'JC', 'JZ', 'LA', 'LF', 'LH', 'LP', 'LY', 'LZ', 'SA', 'SB', 'SG', 'SM', 'SZ', 'TC', 'TF', 'TN', 'TZ', 'WA', 'WB', 'WC', 'WD', 'WG', 'WH', 'WM', 'WZ', 'ZR', 'ZW'];
CreditReportInquiry: STATE_FARM_AUTO_INDUSTRY_CODE_LIST := ['AB', 'AC', 'AF', 'AL', 'AN', 'AP', 'AR', 'AS', 'AT', 'AU', 'AZ', 'FA', 'ZA'];
CreditReportInquiry: STATE_FARM_BANK_CARD_INDUSTRY_CODE_LIST := ['BC', 'NF', 'NS', 'NU', 'NZ', 'ON'];
CreditReportInquiry: STATE_FARM_MISCELLANEOUS_INDUSTRY_INQUIRY_CODE_LIST := ['ZB', 'ZS', 'ZZ'];
CreditReportInquiry: STATE_FARM_REAL_ESTATE_INDUSTRY_INQUIRY_CODE_LIST := ['RA', 'RC', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'ZL', 'ZT'];
CreditReportInquiry: STATE_FARM_UTILITY_INDUSTRY_INQUIRY_CODE_LIST := ['UA', 'UC', 'UD', 'UE', 'UF', 'UG', 'UH', 'UL', 'UO', 'UP', 'US', 'UT', 'UV', 'UW', 'UZ'];
CreditReportInquiry: UTILITY_INDUSTRY_INQUIRY_CODE_LIST := ['UA', 'UC', 'UD', 'UE', 'UF', 'UG', 'UH', 'UL', 'UO', 'UP', 'US', 'UT', 'UV', 'UW', 'UZ'];

CreditReportInquiry: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);
CreditReportInquiry: => AdamAutoIndustry := IndustryID IN ADAM_AUTO_INDUSTRY_CODE_LIST;
CreditReportInquiry: => AlaskaAutoFinanceIndustry := IndustryID IN ALASKA_AUTO_FINANCE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => AllstateAutoIndustry := IndustryID IN ALLSTATE_AUTO_INDUSTRY_CODE_LIST;
CreditReportInquiry: => AllstateGlobalExclusion := IndustryID IN ALLSTATE_GLOBAL_EXCLUSION_CODE_LIST;
CreditReportInquiry: => AlsFigAutoIndustry := IndustryID IN ALS_FIG_AUTO_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => AlsFigMortgageIndustry := IndustryID IN ALLSTATE_MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => AutoFinanceIndustry := IndustryID IN AUTO_FINANCE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => AutoIndustry := IndustryID IN AUTO_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => AutoLending := IndustryID IN AUTO_LENDING_CODE_LIST;
CreditReportInquiry: => BankIndustry := IndustryID IN BANK_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => BankCardIndustry := IndustryID IN STATE_FARM_BANK_CARD_INDUSTRY_CODE_LIST;
CreditReportInquiry: => BankInstallmentIndustry := IndustryID IN BANK_INSTALLMENT_INDUSTRY_CODE_LIST;
CreditReportInquiry: => BankRevolvingIndustry := IndustryID IN BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportInquiry: => CreditBureauExclusion := IndustryID IN INQUIRY_CREDIT_BUREAU_EXCLUSION_CODE_LIST;
CreditReportInquiry: => CreditCard := IndustryID IN CREDIT_CARD_INDUSTRY_CODE_LIST;
CreditReportInquiry: => CreditCardIndustry := IndustryID IN CREDIT_CARD_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => CollectionExclusion := IndustryID IN INQUIRY_COLLECTIONS_EXCLUSION_CODE_LIST OR IndustryID IN CANADA_INQUIRY_COLLECTIONS_EXCLUSION_CODE_LIST;
CreditReportInquiry: => EmploymentExclusion := IndustryID IN INQUIRY_EMPLOYMENT_EXCLUSION_CODE_LIST;
CreditReportInquiry: => EmptyIndustry := IndustryID = '';
CreditReportInquiry: => FinanceIndustry := IndustryID IN FINANCE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => GovernmentExclusion := IndustryID IN INQUIRY_GOVERNMENT_EXCLUSION_CODE_LIST;
CreditReportInquiry: => InsuranceCoverage := IndustryID IN INSURANCE_COVERAGE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => InsuranceIndustry := IndustryID IN INSURANCE_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => InquiryExclusion := IndustryID IN INQUIRY_EXCLUSION_CODE_LIST;
CreditReportInquiry: => InquiryNotInitiatedByConsumer := IndustryID IN INQUIRIES_NOT_INITIATED_BY_CONSUMER_CODE_LIST;
CreditReportInquiry: => MedicalExclusion := IndustryID IN INQUIRY_MEDICAL_EXCLUSION_CODE_LIST;
CreditReportInquiry: => MedicalTreatment := IndustryID IN MEDICAL_TREATMENT_CODE_LIST;
CreditReportInquiry: => MercuryAutoIndustry := IndustryID IN MERCURY_AUTO_INDUSTRY_CODE_LIST;
CreditReportInquiry: => MiscellaneousIndustry := IndustryID IN STATE_FARM_MISCELLANEOUS_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => MortgageIndustry := IndustryID IN MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => NationwideRealEstateIndustry := IndustryID IN NATIONWIDE_REAL_ESTATE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => PerrKnightAutoLending := IndustryID IN PERR_KNIGHT_AUTO_LENDING_CODE_LIST;
CreditReportInquiry: => PerrKnightBanks := IndustryID IN PERR_KNIGHT_BANKS_CODE_LIST;
CreditReportInquiry: => PerrKnightCollectionServices := IndustryID IN PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST;
CreditReportInquiry: => PerrKnightInsuranceIndustry := IndustryID IN INSURANCE_COVERAGE_INDUSTRY_CODE_LIST;
CreditReportInquiry: => PerrKnightInquiryNotInitiatedByConsumer := IndustryID IN PERR_KNIGHT_INQUIRY_NOT_INITIATED_BY_CONSUMER_CODE_LIST;
CreditReportInquiry: => RealEstateAndUtilityIndustry := IndustryID IN REAL_ESTATE_INDUSTRY_INQUIRY_CODE_LIST OR IndustryID IN UTILITY_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => RetailIndustry := IndustryID IN RETAIL_INDUSTRY_INQUIRY_CODE_LIST;
CreditReportInquiry: => StateFarmAutoIndustry := IndustryID IN STATE_FARM_AUTO_INDUSTRY_CODE_LIST;
CreditReportInquiry: => StateFarmRealEstateAndUtilityIndustry := IndustryID IN STATE_FARM_REAL_ESTATE_INDUSTRY_INQUIRY_CODE_LIST OR IndustryID IN UTILITY_INDUSTRY_INQUIRY_CODE_LIST;


// Judgements CONSTANTs and Attributes
CreditReportJudgement: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);


// Liens CONSTANTs and Attributes
CreditReportLien: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);


// Narrative Remarks CONSTANTs and Attributes
CreditReportNarrativeRemarks: EQ := 'EFX';
CreditReportNarrativeRemarks: EX := 'XPN';
CreditReportNarrativeRemarks: TU := 'TRU';
CreditReportNarrativeRemarks: ALLSTATE_ACCOUNT_TYPE_GLOBAL_EXCLUSION_CODE_LIST := ['AE', 'AP', 'BU', 'EK', 'EY', 'EZ', 'GI', 'HU', 'HW', 'GS', 'B2'];
CreditReportNarrativeRemarks: ALLSTATE_AUTO_MORTGAGE_CODE_LIST := ['AO', 'AR', 'AS', 'BT', 'BU', 'EC', 'EF', 'EG', 'EH', 'GP', 'GQ', 'HP', 'HQ', 'HR', 'IE', 'IF'];
CreditReportNarrativeRemarks: ALLSTATE_AUTO_FINANCE_CODE_LIST := ['AO', 'BT'];
CreditReportNarrativeRemarks: ALLSTATE_BANKRUPTCY_JUDGEMENT_REPOSSESSION_CODE_LIST := ['AM', 'AN', 'BK', 'BR', 'CH', 'CU', 'DJ', 'DO', 'DZ', 'ED', 'ET', 'EV', 'GB', 'GF', 'GH', 'HM', 'HN', 'HX', 'IL' ];
CreditReportNarrativeRemarks: ALLSTATE_CLOSED_TRADE_CODE_LIST := ['BC', 'BD', 'BE', 'CE', 'CF', 'CG', 'CM', 'CW', 'DA', 'FA', 'HF', 'IB', 'IC', 'IP', 'IR', 'IT', 'A8', 'B1'];
CreditReportNarrativeRemarks: ALLSTATE_CREDIT_CARD_CODE_LIST := ['FE', 'GR'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST := ['DL', 'GK', 'HA', 'JD'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_2_CODE_LIST := ['BC', 'CE', 'IT'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST := ['AF', 'AG', 'AH', 'AL', 'BB', 'BH', 'DE', 'EI', 'EJ', 'FG', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'FW', 'GE', 'IP', 'IQ'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_5_CODE_LIST := ['AM', 'AN', 'AX', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'BY', 'CA', 'CB', 'CH', 'CJ', 'CL', 'CP', 'CT', 'CU', 'CY', 'CZ', 'DB', 'DD', 'DH', 'DJ', 'DK', 'DM', 'DO', 'DR', 'DX', 'EB', 'ED', 'EM', 'ER', 'ES', 'ET', 'EV', 'FU', 'GA', 'GB', 'GF', 'GH', 'GL', 'HM', 'HN', 'HX', 'IK', 'IL', 'IM', 'IZ', 'JA', 'A2', 'B6'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_6_CODE_LIST := ['DQ'];
CreditReportNarrativeRemarks: ALLSTATE_DISPUTE_CATEGORY_7_CODE_LIST := ['GJ'];
CreditReportNarrativeRemarks: ALLSTATE_MORTGAGE_CODE_LIST := ['AR', 'AS', 'EC', 'EF', 'GP', 'GQ', 'HP', 'HQ', 'HR', 'IE', 'IF'];
CreditReportNarrativeRemarks: AUTO_CODE_LIST := ['AO', 'BT', 'ID', 'DY'];
CreditReportNarrativeRemarks: AUTO_TRADE_CODE_LIST := ['AO', 'BT'];
CreditReportNarrativeRemarks: BANKRUPTCY_CODE_LIST := ['BW', 'CP', 'DO', 'DZ', 'EV', 'GB', 'HL', 'IL', 'IM', 'IN', 'KB', 'KC', 'KD', 'KO'];
CreditReportNarrativeRemarks: BUSINESS_ACCOUNT_CODE_LIST := ['AE', 'HD', 'HE', 'CP', 'EY'];
CreditReportNarrativeRemarks: BUSINESS_COMMERCIAL_CODE_LIST := ['AO', 'BT', 'ID', 'DY'];
CreditReportNarrativeRemarks: CANADA_BANKRUPTCY_CODE_LIST := ['XF', 'XY', 'XZ', 'YS', 'YT', 'YU', 'YV', 'ZF', 'ZG', 'ZK', 'ZM', 'ZN', 'ZO', 'ZP', 'ZQ', 'ZR', 'ZS', 'ZT', 'ZU', 'ZV'];
CreditReportNarrativeRemarks: CANADA_DEROGATORY_CODE_LIST := ['VB', 'VC', 'VF', 'WM', 'XB', 'XF', 'XI', 'XL', 'XY', 'XZ', 'YA', 'YF', 'YI', 'YM', 'YN', 'YS', 'YT', 'YU', 'YV', 'YW', 'ZE', 'ZF', 'ZG', 'ZK', 'ZM', 'ZN', 'ZO', 'ZP', 'ZQ', 'ZR', 'ZS', 'ZT', 'ZU', 'ZV', 'ZY'];
CreditReportNarrativeRemarks: CANADA_DISPUTE_CODE_LIST := ['WU', 'WW', 'WY'];
CreditReportNarrativeRemarks: CANADA_MORTGAGE_CODE_LIST := ['XV'];
CreditReportNarrativeRemarks: CANADA_STUDENT_LOAN_CODE_LIST := ['WD', 'WP'];
CreditReportNarrativeRemarks: CHARGE_OFF_CODE_LIST := ['BQ', 'CA', 'CB', 'DB'];
CreditReportNarrativeRemarks: CHILD_OR_FAMILY_SUPPORT_CODE_LIST := ['EK', 'HW'];
CreditReportNarrativeRemarks: CLOSED_CODE_LIST := ['BC', 'BD', 'BE', 'CF', 'CG', 'CW', 'DA', 'FA', 'HF', 'IB', 'IC', 'IR', 'KP'];
CreditReportNarrativeRemarks: COMMERCIAL_ACCOUNT_CODE_LIST := ['HD', 'HE', 'AP', 'HU'];
CreditReportNarrativeRemarks: DEFAULT_CODE_LIST := ['AX', 'BG', 'BR', 'BS', 'BW', 'CA', 'CB', 'CH', 'CL', 'CP', 'CU', 'DB', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EB', 'ED', 'ET', 'EV', 'FD', 'FU', 'GA', 'GB', 'GC', 'GD', 'GJ', 'IL', 'IM', 'IZ', 'A2', 'B6'];
CreditReportNarrativeRemarks: DEROGATORY_ENTRIES_CODE_LIST := ['BX', 'GB', 'GC', 'GD', 'AM', 'AN', 'JK', 'JL', 'JM', 'BR', 'CH', 'DJ', 'DM', 'ED', 'BW', 'EV', 'HM', 'HN', 'IA', 'IK', 'IL', 'IM', 'KB', 'KC', 'KD', 'KG', 'KH', 'KI', 'KJ', 'KK', 'KL', 'KM', 'KN', 'KO', 'CA', 'CB', 'CY', 'DB', 'FU', 'IZ', 'A2', 'BK', 'B6', 'ET', 'A3', 'A4', 'BG', 'BS', 'BY', 'BZ', 'B5', 'CN', 'DK', 'DO', 'DR', 'EB', 'ER', 'ES', 'FD', 'GA', 'IN', 'IW', 'JH', 'BQ', 'A5', 'B4', 'DD', 'DN', 'FC'];
CreditReportNarrativeRemarks: DEROGATORY_CODE_LIST := ['AN', 'AX', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'CA', 'CB', 'CD', 'CH', 'CJ', 'CN', 'CP', 'CQ', 'CU', 'CY', 'CZ', 'DB', 'DD', 'DJ', 'DK', 'DM', 'DO', 'DU', 'DZ', 'EA', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FB', 'FD', 'FU', 'FV', 'GA', 'GB', 'GC', 'GD', 'GH', 'GJ', 'GL', 'HL', 'HO', 'HX', 'IL', 'IM', 'IN', 'IZ', 'A2', 'B6', 'CL', 'DR', 'JH'];
CreditReportNarrativeRemarks: DEROGATORY_EXCLUDE_BANKRUPTCY_CODE_LIST := ['AN', 'AX', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BX', 'BY', 'BZ', 'CA', 'CB', 'CD', 'CH', 'CJ', 'CL', 'CN', 'CQ', 'CU', 'CY', 'CZ', 'DB', 'DD', 'DJ', 'DK', 'DR', 'DM', 'DU', 'EA', 'EB', 'ED', 'ER', 'ES', 'ET', 'FB', 'FD', 'FU', 'FV', 'GA', 'GC', 'GD', 'GH', 'GJ', 'GL', 'HL', 'HO', 'HX', 'IN', 'IZ', 'JH', 'A2', 'B6'];
CreditReportNarrativeRemarks: DISPUTED_ENTRIES_CODE_LIST := ['AE', 'AA', 'AB', 'AC', 'AF', 'AG', 'AH', 'AL', 'A1', 'BB', 'BH', 'BM', 'BN', 'BO', 'BP', 'BV', 'DC', 'DE', 'EI', 'EJ', 'FF', 'FG', 'FH', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'FW', 'GE', 'IP', 'IQ'];
CreditReportNarrativeRemarks: DISPUTE_CODE_LIST := ['AA', 'AC', 'AF', 'AG', 'AH', 'AL', 'BB', 'BH', 'BM', 'BN', 'BO', 'BP', 'BV', 'DE', 'EI', 'EJ', 'FF', 'FG', 'FH', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'FW', 'GE', 'IP', 'IQ'];
CreditReportNarrativeRemarks: FINANCIAL_COUNSELOR_CODE_LIST := ['BX', 'GC', 'GD'];
CreditReportNarrativeRemarks: FORECLOSURE_CODE_LIST := ['BR', 'CH', 'DJ', 'DM', 'ED'];
CreditReportNarrativeRemarks: JUDGEMENT_CODE_LIST := ['CQ', 'FV', 'GH'];
CreditReportNarrativeRemarks: MEDICAL_CODE_LIST := ['GS'];
CreditReportNarrativeRemarks: MEDICAL_EXCLUSION_CODE_LIST := ['BQ', 'BW', 'BX', 'BY', 'BZ', 'CA', 'CB', 'CD', 'CJ', 'CN', 'CP', 'CQ', 'CY', 'CZ', 'DB', 'DD', 'DK', 'DO', 'DZ', 'EA', 'ER', 'EV', 'FB', 'FV', 'GB', 'GC', 'GD', 'GH', 'GL', 'HL', 'HO', 'HX', 'IL', 'IM', 'IN', 'IZ'];
CreditReportNarrativeRemarks: MERCURY_BUSINESS_COMMERCIAL_CODE_LIST := ['AP', 'EY', 'HU', 'EV', 'KH', 'KL'];
CreditReportNarrativeRemarks: MORTGAGE_CODE_LIST := ['AR', 'CH', 'DG', 'DJ', 'DM', 'DT', 'EC', 'ED', 'EF', 'GP', 'HP', 'HQ', 'HR', 'HS', 'HU', 'IE', 'IF'];
CreditReportNarrativeRemarks: NATIONWIDE_MORTGAGE_CODE_LIST := ['AR', 'AS', 'DT', 'EC', 'EF', 'GP', 'GQ', 'HP', 'HQ', 'HR', 'IE', 'IF'];
CreditReportNarrativeRemarks: PERR_KNIGHT_120_DAYS_PAST_DUE_CODE_LIST := ['JK', 'JL', 'JM'];
CreditReportNarrativeRemarks: PERR_KNIGHT_CHARGE_OFF_PUBLIC_RECORD_TYPE_CODE_LIST := ['BQ', 'CA', 'CB', 'CY', 'DB', 'FU', 'IZ'];
CreditReportNarrativeRemarks: PERR_KNIGHT_CLOSED_CODE_LIST := ['BC', 'BD', 'BE', 'CF', 'CG', 'CW', 'DA', 'FA', 'HF', 'IB', 'IC', 'IR', 'KP'];
CreditReportNarrativeRemarks: PERR_KNIGHT_CODE_LIST := ['BC', 'CE', 'GJ'];
CreditReportNarrativeRemarks: PERR_KNIGHT_CODE_LIST2 := ['DL', 'GK'];
CreditReportNarrativeRemarks: PERR_KNIGHT_DECEASED_CODE_LIST := ['JD'];
CreditReportNarrativeRemarks: PERR_KNIGHT_DEFAULT_CODE_LIST := ['AM', 'AN', 'A2', 'A3', 'A4', 'BG', 'BK', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'B5', 'B6', 'CA', 'CB', 'CH', 'CN', 'CY', 'DB', 'DJ', 'DK', 'DM', 'DO', 'DR', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FD', 'FU', 'GA', 'GB', 'GC', 'GD', 'HM', 'HN', 'IA', 'IK', 'IL', 'IM', 'IN', 'IW', 'IZ', 'JH', 'KB', 'KC', 'KD', 'KG', 'KH', 'KI', 'KJ', 'KK', 'KL', 'KM', 'KN', 'KO'];
CreditReportNarrativeRemarks: PERR_KNIGHT_DEFAULT_PUBLIC_RECORD_CODE_LIST := ['BG', 'BS', 'EB', 'FD'];
CreditReportNarrativeRemarks: PERR_KNIGHT_DEROGATORY_LIST := ['AM', 'AN', 'A2', 'A3', 'A4', 'A5', 'BQ', 'BG', 'BK', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'B4', 'B5', 'B6', 'CA', 'CB', 'CH', 'CN', 'CY', 'DB', 'DD', 'DJ', 'DK', 'DM', 'DN', 'DO', 'DR', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FC', 'FD', 'FU', 'GA', 'GB', 'GC', 'GD', 'HM', 'HN', 'IA', 'IK', 'IL', 'IM', 'IN', 'IW', 'IZ', 'JH', 'JK', 'JL', 'JM', 'KB', 'KC', 'KD', 'KG', 'KH', 'KI', 'KJ', 'KK', 'KL', 'KM', 'KN', 'KO'];
CreditReportNarrativeRemarks: PERR_KNIGHT_INACTIVE_CODE_LIST := ['BC', 'BD', 'BE', 'CF', 'CG', 'CW', 'DA', 'FA', 'HF', 'IB', 'IC', 'IR', 'JF', 'KP'];
CreditReportNarrativeRemarks: PERR_KNIGHT_SEVERELY_DEROGATORY_CODE_LIST := ['AM', 'AN', 'A2', 'A3', 'A4', 'A5', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'B4', 'B5', 'B6', 'CA', 'CB', 'CH', 'CN', 'CY', 'DB', 'DD', 'DJ', 'DK', 'DM', 'DN', 'DO', 'DR', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FC', 'FD', 'FU', 'GA', 'GB', 'GC', 'GD', 'HM', 'HN', 'IA', 'IK', 'IL', 'IM', 'IN', 'IW', 'IZ', 'JH', 'KB', 'KC', 'KD', 'KG', 'KH', 'KI', 'KJ', 'KK', 'KL', 'KM', 'KN', 'KO'];
CreditReportNarrativeRemarks: REPOSSESSION_CODE_LIST := ['AM', 'AN', 'A2', 'BK', 'B6', 'CT', 'CU', 'ET'];
CreditReportNarrativeRemarks: REPOSSESSION_DEROGATORY_CODE_LIST := ['AN', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'CA', 'CB', 'CH', 'CP', 'CQ', 'CU', 'CY', 'DB', 'DJ', 'DM', 'DO', 'DU', 'DZ', 'EB', 'ES', 'ET', 'EV', 'FV', 'GB', 'GH', 'HL', 'HX', 'IL', 'IM', 'IZ', 'A2', 'B6'];
CreditReportNarrativeRemarks: STATE_FARM_LIBERTY_MUTUAL_DISPUTE_CODE_LIST := ['AA', 'AC', 'AF', 'AG', 'AH', 'AL', 'BB', 'BH', 'BM', 'BN', 'BO', 'BP', 'BV', 'DE', 'EI', 'EJ', 'FF', 'FG', 'FH', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'GE', 'IP', 'IQ', 'WU', 'WW', 'WY'];
CreditReportNarrativeRemarks: STATE_FARM_LOST_OR_STOLEN_CARD_LIST := ['B'];
CreditReportNarrativeRemarks: STUDENT_LOAN_CODE_LIST := ['BU', 'DQ', 'EG', 'EH', 'FD', 'GJ'];
CreditReportNarrativeRemarks: SUPPRESSED_CODE_LIST := ['DQ', 'IJ'];
CreditReportNarrativeRemarks: TRAVELERS_DISPUTE_CODE_LIST := ['AA', 'AY', 'A1', 'BB', 'BH', 'BM', 'BV', 'CE', 'CM', 'FF', 'IP', 'J1'];
CreditReportNarrativeRemarks: UTILITY_CODE_LIST := ['GI'];

CreditReportNarrativeRemarks: => AllstateAccountTypeGlobalExclusion := RemarksCode1 IN ALLSTATE_ACCOUNT_TYPE_GLOBAL_EXCLUSION_CODE_LIST OR RemarksCode2 IN ALLSTATE_ACCOUNT_TYPE_GLOBAL_EXCLUSION_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateAutoFinance := RemarksCode1 IN ALLSTATE_AUTO_FINANCE_CODE_LIST OR RemarksCode2 IN ALLSTATE_AUTO_FINANCE_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateAutoMortgage := RemarksCode1 IN ALLSTATE_AUTO_MORTGAGE_CODE_LIST OR RemarksCode2 IN ALLSTATE_AUTO_MORTGAGE_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateBankruptcyJudgementRepossession := RemarksCode1 IN ALLSTATE_BANKRUPTCY_JUDGEMENT_REPOSSESSION_CODE_LIST OR RemarksCode2 IN ALLSTATE_BANKRUPTCY_JUDGEMENT_REPOSSESSION_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateClosedTrade := RemarksCode1 IN ALLSTATE_CLOSED_TRADE_CODE_LIST OR RemarksCode2 IN ALLSTATE_CLOSED_TRADE_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateCreditCard := RemarksCode1 IN ALLSTATE_CREDIT_CARD_CODE_LIST OR RemarksCode2 IN ALLSTATE_CREDIT_CARD_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDispute := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST OR RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory1 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory2 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_2_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_2_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory4 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory5 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_5_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_5_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory6 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_6_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_6_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateDisputeCategory7 := RemarksCode1 IN ALLSTATE_DISPUTE_CATEGORY_7_CODE_LIST OR RemarksCode2 IN ALLSTATE_DISPUTE_CATEGORY_7_CODE_LIST;
CreditReportNarrativeRemarks: => AllstateMortgage := RemarksCode1 IN ALLSTATE_MORTGAGE_CODE_LIST OR RemarksCode2 IN ALLSTATE_MORTGAGE_CODE_LIST;
CreditReportNarrativeRemarks: => Auto := RemarksCode1 IN AUTO_CODE_LIST OR RemarksCode2 IN AUTO_CODE_LIST;
CreditReportNarrativeRemarks: => AutoTrade := RemarksCode1 IN AUTO_TRADE_CODE_LIST OR RemarksCode2 IN AUTO_TRADE_CODE_LIST;
CreditReportNarrativeRemarks: => BankruptcyRemark := RemarksCode1 IN BANKRUPTCY_CODE_LIST OR RemarksCode2 IN BANKRUPTCY_CODE_LIST OR RemarksCode1 IN CANADA_BANKRUPTCY_CODE_LIST OR RemarksCode2 IN CANADA_BANKRUPTCY_CODE_LIST;
CreditReportNarrativeRemarks: => BusinessAccount := RemarksCode1 IN BUSINESS_ACCOUNT_CODE_LIST OR RemarksCode2 IN BUSINESS_ACCOUNT_CODE_LIST;
CreditReportNarrativeRemarks: => BusinessCommercial := RemarksCode1 IN BUSINESS_COMMERCIAL_CODE_LIST OR RemarksCode2 IN BUSINESS_COMMERCIAL_CODE_LIST;
CreditReportNarrativeRemarks: => BusinessCommercialUtility := RemarksCode1 IN BUSINESS_COMMERCIAL_CODE_LIST OR RemarksCode2 IN BUSINESS_COMMERCIAL_CODE_LIST OR RemarksCode1 IN UTILITY_CODE_LIST OR RemarksCode2 IN UTILITY_CODE_LIST;
CreditReportNarrativeRemarks: => ChargeOff := RemarksCode1 IN CHARGE_OFF_CODE_LIST OR RemarksCode2 IN CHARGE_OFF_CODE_LIST;
CreditReportNarrativeRemarks: => ChildOrFamilySupport := RemarksCode1 IN CHILD_OR_FAMILY_SUPPORT_CODE_LIST OR RemarksCode2 IN CHILD_OR_FAMILY_SUPPORT_CODE_LIST;
CreditReportNarrativeRemarks: => Closed := RemarksCode1 IN CLOSED_CODE_LIST OR RemarksCode2 IN CLOSED_CODE_LIST;
CreditReportNarrativeRemarks: => CommercialAccount := RemarksCode1 IN COMMERCIAL_ACCOUNT_CODE_LIST OR RemarksCode2 IN COMMERCIAL_ACCOUNT_CODE_LIST;
CreditReportNarrativeRemarks: => Default := RemarksCode1 IN DEFAULT_CODE_LIST OR RemarksCode2 IN DEFAULT_CODE_LIST;
CreditReportNarrativeRemarks: => Derogatory := RemarksCode1 IN DEROGATORY_CODE_LIST OR RemarksCode2 IN DEROGATORY_CODE_LIST;
CreditReportNarrativeRemarks: => DerogatoryV2 := RemarksCode1 IN DEROGATORY_ENTRIES_CODE_LIST OR RemarksCode2 IN DEROGATORY_ENTRIES_CODE_LIST;
CreditReportNarrativeRemarks: => DerogatoryExcludingBankruptcy := RemarksCode1 IN DEROGATORY_EXCLUDE_BANKRUPTCY_CODE_LIST OR RemarksCode2 IN DEROGATORY_EXCLUDE_BANKRUPTCY_CODE_LIST;
CreditReportNarrativeRemarks: => DerogatoryRepossession := RemarksCode1 IN REPOSSESSION_DEROGATORY_CODE_LIST OR RemarksCode2 IN REPOSSESSION_DEROGATORY_CODE_LIST;
CreditReportNarrativeRemarks: => Dispute := RemarksCode1 IN DISPUTE_CODE_LIST OR RemarksCode2 IN DISPUTE_CODE_LIST OR RemarksCode1 IN CANADA_DISPUTE_CODE_LIST OR RemarksCode2 IN CANADA_DISPUTE_CODE_LIST OR Remark1ContainsDispute = TRUE OR Remark2ContainsDispute = TRUE;
CreditReportNarrativeRemarks: => DisputeV2 := RemarksCode1 IN DISPUTED_ENTRIES_CODE_LIST OR RemarksCode2 IN DISPUTED_ENTRIES_CODE_LIST OR Remark1ContainsDispute = TRUE OR Remark2ContainsDispute = TRUE;
CreditReportNarrativeRemarks: => FinancialCounselor := RemarksCode1 IN FINANCIAL_COUNSELOR_CODE_LIST OR RemarksCode2 IN FINANCIAL_COUNSELOR_CODE_LIST;
CreditReportNarrativeRemarks: => Foreclosure := RemarksCode1 IN FORECLOSURE_CODE_LIST OR RemarksCode2 IN FORECLOSURE_CODE_LIST;
CreditReportNarrativeRemarks: => JudgementRemark := RemarksCode1 IN JUDGEMENT_CODE_LIST OR RemarksCode2 IN JUDGEMENT_CODE_LIST;
CreditReportNarrativeRemarks: => Medical := RemarksCode1 IN MEDICAL_CODE_LIST OR RemarksCode2 IN MEDICAL_CODE_LIST;
CreditReportNarrativeRemarks: => MedicalExclusion := RemarksCode1 IN MEDICAL_EXCLUSION_CODE_LIST OR RemarksCode2 IN MEDICAL_EXCLUSION_CODE_LIST;
CreditReportNarrativeRemarks: => MercuryBusinessCommercial := RemarksCode1 IN MERCURY_BUSINESS_COMMERCIAL_CODE_LIST OR RemarksCode2 IN MERCURY_BUSINESS_COMMERCIAL_CODE_LIST;
CreditReportNarrativeRemarks: => Mortgage := RemarksCode1 IN MORTGAGE_CODE_LIST OR RemarksCode2 IN MORTGAGE_CODE_LIST;
CreditReportNarrativeRemarks: => NationwideMortgage := RemarksCode1 IN NATIONWIDE_MORTGAGE_CODE_LIST OR RemarksCode2 IN NATIONWIDE_MORTGAGE_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnight := RemarksCode1 IN PERR_KNIGHT_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnight2 := RemarksCode1 IN PERR_KNIGHT_CODE_LIST2 OR RemarksCode2 IN PERR_KNIGHT_CODE_LIST2;
CreditReportNarrativeRemarks: => PerrKnight120DaysPastDue := RemarksCode1 IN PERR_KNIGHT_120_DAYS_PAST_DUE_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_120_DAYS_PAST_DUE_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightChargeOff := RemarksCode1 IN PERR_KNIGHT_CHARGE_OFF_PUBLIC_RECORD_TYPE_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_CHARGE_OFF_PUBLIC_RECORD_TYPE_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightClosed := RemarksCode1 IN PERR_KNIGHT_CLOSED_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_CLOSED_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightDeceased := RemarksCode1 IN PERR_KNIGHT_DECEASED_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_DECEASED_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightDefault := RemarksCode1 IN PERR_KNIGHT_DEFAULT_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_DEFAULT_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightDefaultPublicRecord := RemarksCode1 IN PERR_KNIGHT_DEFAULT_PUBLIC_RECORD_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_DEFAULT_PUBLIC_RECORD_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightDerogatory := RemarksCode1 IN PERR_KNIGHT_DEROGATORY_LIST OR RemarksCode2 IN PERR_KNIGHT_DEROGATORY_LIST;
CreditReportNarrativeRemarks: => PerrKnightDispute := RemarksCode1 IN DISPUTED_ENTRIES_CODE_LIST OR RemarksCode2 IN DISPUTED_ENTRIES_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightInactive := RemarksCode1 IN PERR_KNIGHT_INACTIVE_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_INACTIVE_CODE_LIST;
CreditReportNarrativeRemarks: => PerrKnightSevereDerogatory := RemarksCode1 IN PERR_KNIGHT_SEVERELY_DEROGATORY_CODE_LIST OR RemarksCode2 IN PERR_KNIGHT_SEVERELY_DEROGATORY_CODE_LIST;
CreditReportNarrativeRemarks: => Repossession := RemarksCode1 IN REPOSSESSION_CODE_LIST OR RemarksCode2 IN REPOSSESSION_CODE_LIST;
CreditReportNarrativeRemarks: => StateFarmLostOrStolenCard := RemarksCode1 IN STATE_FARM_LOST_OR_STOLEN_CARD_LIST OR RemarksCode2 IN STATE_FARM_LOST_OR_STOLEN_CARD_LIST;
CreditReportNarrativeRemarks: => StateFarmLibertyMutualAdverse := RemarksCode1 IN DEROGATORY_CODE_LIST OR RemarksCode2 IN DEROGATORY_CODE_LIST OR RemarksCode1 IN CANADA_DEROGATORY_CODE_LIST OR RemarksCode2 IN CANADA_DEROGATORY_CODE_LIST;
CreditReportNarrativeRemarks: => StateFarmLibertyMutualDispute := RemarksCode1 IN STATE_FARM_LIBERTY_MUTUAL_DISPUTE_CODE_LIST OR RemarksCode2 IN STATE_FARM_LIBERTY_MUTUAL_DISPUTE_CODE_LIST OR Remark1ContainsDispute = TRUE OR Remark2ContainsDispute = TRUE;
CreditReportNarrativeRemarks: => StateFarmLibertyMutualMortgage := RemarksCode1 IN MORTGAGE_CODE_LIST OR RemarksCode2 IN MORTGAGE_CODE_LIST OR RemarksCode1 IN CANADA_MORTGAGE_CODE_LIST OR RemarksCode2 IN CANADA_MORTGAGE_CODE_LIST;
CreditReportNarrativeRemarks: => StateFarmLibertyMutualStudentLoan := RemarksCode1 IN STUDENT_LOAN_CODE_LIST OR RemarksCode2 IN STUDENT_LOAN_CODE_LIST OR RemarksCode1 IN CANADA_STUDENT_LOAN_CODE_LIST OR RemarksCode2 IN CANADA_STUDENT_LOAN_CODE_LIST;
CreditReportNarrativeRemarks: => StudentLoan := RemarksCode1 IN STUDENT_LOAN_CODE_LIST OR RemarksCode2 IN STUDENT_LOAN_CODE_LIST;
CreditReportNarrativeRemarks: => Suppressed := RemarksCode1 IN SUPPRESSED_CODE_LIST OR RemarksCode2 IN SUPPRESSED_CODE_LIST;
CreditReportNarrativeRemarks: => TravelersDispute := RemarksCode1 IN TRAVELERS_DISPUTE_CODE_LIST OR RemarksCode2 IN TRAVELERS_DISPUTE_CODE_LIST;


// Tradeline CONSTANTs and Attributes
CreditReportTradeline: EQ := 'EFX';
CreditReportTradeline: EX := 'XPN';
CreditReportTradeline: TU := 'TRU';
CreditReportTradeline: AC_BANK_REVOLVING_INDUSTRY_CODE_LIST := ['B ', 'N ', 'BB', 'BC', 'BN', 'BO', 'BS', 'NF', 'NS', 'NU', 'ON', 'FS', 'FC', 'NZ'];
CreditReportTradeline: AC_WA_BANK_REVOLVING_INDUSTRY_CODE_LIST := ['BB', 'BC', 'BN', 'FC', 'FS', 'NA', 'ND', 'NF', 'NS', 'NU', 'NZ', 'OC', 'ON'];
CreditReportTradeline: ADAM_AUTO_INDUSTRY_CODE_LIST := ['AC', 'AF', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportTradeline: ALASKA_AUTO_FINANCE_INDUSTRY_CODE_LIST := ['A ', 'AC', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportTradeline: ALLSTATE_AUTO_INDUSTRY_CODE_LIST := ['AB', 'AC', 'AF', 'AL', 'AN', 'AP', 'AR', 'AS', 'AT', 'AU', 'AZ', 'FA'];
CreditReportTradeline: ALLSTATE_AUTO_INDUSTRY_ENTRIES_CODE_LIST := ['AC', 'AN', 'AU', 'AT', 'AP', 'AR', 'AS', 'AL', 'AF', 'AZ', 'FA'];
CreditReportTradeline: ALLSTATE_AUTO_MORTGAGE_INDUSTRY_CODE_LIST := ['AB', 'AC', 'AF', 'AL', 'AN', 'AP', 'AR', 'AS', 'AT', 'AU', 'AZ', 'FA', 'FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ', 'RA', 'RC', 'RD', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'UR'];
CreditReportTradeline: ALLSTATE_BANK_INQUIRY_INDUSTRY_CODE_LIST := ['BB', 'BC', 'BI', 'BM', 'BN', 'BO', 'BS', 'FA', 'FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ'];
CreditReportTradeline: ALLSTATE_BANK_REVOLVING_INDUSTRY_CODE_LIST := ['BB', 'BC', 'BI', 'BM', 'BN', 'BO', 'BS'];
CreditReportTradeline: ALLSTATE_BANKRUPTCY_JUDGEMENT_REPOSSESSION_CODE_LIST := ['7', 'M', 'Z', '8', 'G'];
CreditReportTradeline: ALLSTATE_CREDIT_CARD_INQUIRY_CODE_LIST := ['NA', 'ND', 'NF', 'NS', 'NU', 'NZ', 'OC', 'ON', 'OZ'];
CreditReportTradeline: ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST := ['DL', 'GK', 'HA', 'JD'];
CreditReportTradeline: ALLSTATE_DISPUTE_CATEGORY_2_CODE_LIST := ['BC', 'CE', 'IT'];
CreditReportTradeline: ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST := ['AF', 'AG', 'AH', 'AL', 'BB', 'BH', 'DE', 'EI', 'EJ', 'FG', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'FW', 'GE', 'IP', 'IQ'];
CreditReportTradeline: ALLSTATE_DISPUTE_CATEGORY_7_CODE_LIST := ['GJ'];
CreditReportTradeline: ALLSTATE_FINANCE_INDUSTRY_CODE_LIST := ['FA', 'FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ'];
CreditReportTradeline: ALLSTATE_GLOBAL_EXCLUSION_CODE_LIST := ['ES', 'IG', 'IH', 'IL', 'IP', 'IR', 'IZ', 'KG', 'KI', 'KS', 'KZ', 'MB', 'MC', 'MD', 'ME', 'MF', 'MH', 'MM', 'MO', 'MP', 'MV', 'MZ', 'PA', 'PB', 'PC', 'PD', 'PE', 'PF', 'PG', 'PH', 'PI', 'PJ', 'PL', 'PM', 'PN', 'PP', 'PR', 'PS', 'PT', 'PZ', 'UB', 'UC', 'UD', 'UE', 'UF', 'UG', 'UR', 'UT', 'UW', 'UZ', 'XA', 'XM', 'XZ'];
CreditReportTradeline: ALLSTATE_MORTGAGE_INDUSTRY_CODE_LIST := ['FB', 'FL', 'FM', 'FP', 'FR', 'FS', 'FZ', 'RD', 'RE', 'RP', 'RZ'];
CreditReportTradeline: ALLSTATE_MORTGAGE_INDUSTRY_V2_CODE_LIST := ['FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ', 'RA', 'RC', 'RD', 'RE', 'RH', 'RM', 'RP', 'RR', 'RZ', 'UR'];
CreditReportTradeline: AUTO_FINANCE_INDUSTRY_CODE_LIST := ['FA'];
CreditReportTradeline: AUTO_FINANCE_INDUSTRY_REPOSSESSION_CODE_LIST := ['AC', 'AF', 'AL', 'AN', 'AU', 'AZ', 'FA'];
CreditReportTradeline: AUTO_INDUSTRY_CODE_LIST := ['A ', 'AC', 'AN', 'AU', 'AT', 'AP', 'AR', 'AS', 'AL', 'AF', 'AZ', 'ZA'];
CreditReportTradeline: AUTO_LOAN_INDUSTRY_CODE_LIST := ['A ', 'AC', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportTradeline: AUTO_TRADE_CODE_LIST := ['AO', 'BT'];
CreditReportTradeline: BAD_DEBT_CURRENT_STATUS_CODE_LIST := ['F', 'G', 'M', 'Z', '$'];
CreditReportTradeline: BAD_DEBT_CURRENT_STATUS_EXCLUDING_BANKRUPTCY_CODE_LIST := ['F', 'G', '$'];
CreditReportTradeline: BANKRUPTCY_CURRENT_STATUS_CODE_LIST := ['7', 'M', 'Z'];
CreditReportTradeline: BANK_INSTALLMENT_INDUSTRY_CODE_LIST := ['B ', 'BI', 'BB'];
CreditReportTradeline: BANK_REVOLVING_INDUSTRY_CODE_LIST := ['B ', 'N ', 'BB', 'BC', 'BN', 'BO', 'BS', 'NF', 'NS', 'NU', 'ON', 'FS', 'FC', 'NZ'];
CreditReportTradeline: BUSINESS_COMMERCIAL_INDUSTRY_CODE_LIST := ['AF', 'BN', 'FU', 'FW', 'WA', 'WB', 'WC', 'WD', 'WG', 'WH', 'WM', 'WP', 'WZ'];
CreditReportTradeline: CANADA_MORTGAGE_CODE_LIST := ['XV'];
CreditReportTradeline: CANADA_STUDENT_LOAN_CODE_LIST := ['WD', 'WP'];
CreditReportTradeline: CHILD_OR_FAMILY_SUPPORT_INDUSTRY_CODE_LIST := ['VK'];
CreditReportTradeline: CLOSED_CODE_LIST := ['AX', 'BC', 'BD', 'BE', 'CF', 'CG', 'CW', 'DA', 'DI', 'DK', 'DP', 'FA', 'GD', 'HF', 'IR'];
CreditReportTradeline: COLLECTION_SERVICES_CODE_LIST := ['YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ'];
CreditReportTradeline: CREDIT_CARD_CODE_LIST := ['ND', 'NF', 'NS', 'NU', 'NZ', 'ON', 'WP'];
CreditReportTradeline: CREDIT_CARD_INDUSTRY_CODE_LIST := ['BB', 'BC', 'NA', 'ND', 'NF', 'NS', 'NU', 'NZ', 'ON'];
CreditReportTradeline: CREDIT_UNION_INDUSTRY_CODE_LIST := ['BM', 'FL', 'FS', 'FC', 'FM', 'NS', 'NU'];
CreditReportTradeline: CURRENT_STATUS_CODE_BYPASS_CODE_LIST := ['A', 'B', 'C', 'D', 'E', 'H', 'J', 'K', 'L', 'N', 'P', 'Q', 'S', 'T', 'U', 'V', 'W', 'X', '#'];
CreditReportTradeline: DEPARTMENT_STORE_INDUSTRY_CODE_LIST := ['D ', 'DC', 'ND'];
CreditReportTradeline: EMPLOYMENT_INDUSTRY_CODE_LIST := ['PS', 'PX', 'PY'];
CreditReportTradeline: FINANCE_INDUSTRY_CODE_LIST := ['F ', 'FA', 'FB', 'FC', 'FF', 'FL', 'FM', 'FP', 'FR', 'FS', 'FU', 'FW', 'FZ'];
CreditReportTradeline: INSURANCE_INDUSTRY_CODE_LIST := ['IG', 'IL', 'IZ'];
CreditReportTradeline: MEDICAL_HEALTH_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MZ'];
CreditReportTradeline: MEDICAL_INDUSTRY_CODE_LIST := ['MB', 'MC', 'MD', 'MG', 'MH', 'MO', 'MP', 'MS', 'MZ'];
CreditReportTradeline: MEDICAL_TREATMENT_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MG', 'MH', 'MM', 'MO', 'MP', 'MS', 'MZ'];
CreditReportTradeline: MERCURY_AUTO_INDUSTRY_CODE_LIST := ['AC', 'AF', 'AL', 'AN', 'AU', 'FA', 'ZA'];
CreditReportTradeline: MERCURY_BANK_REVOLVING_INDUSTRY_CODE_LIST := ['BB', 'BC', 'BI', 'BM', 'BN', 'BO', 'BS', 'FC', 'FS'];
CreditReportTradeline: MORTGAGE_CODE_LIST := ['AR', 'CH', 'DG', 'DJ', 'DM', 'DT', 'EC', 'ED', 'EF', 'GP', 'HP', 'HQ', 'HR', 'HS', 'HU', 'IE', 'IF'];
CreditReportTradeline: MORTGAGE_INDUSTRY_CODE_LIST := ['BM', 'FB', 'FL', 'FM', 'FR'];
CreditReportTradeline: NATIONWIDE_PERSONAL_FINANCE_INDUSTRY_CODE_LIST := ['FP'];
CreditReportTradeline: OIL_COMPANY_INDUSTRY_CODE_LIST := ['OC', 'OZ'];
CreditReportTradeline: PENINSULA_DEROGATORY_CODE_LIST := ['AN', 'AX', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'CA', 'CB', 'CD', 'CH', 'CJ', 'CN', 'CQ', 'CU', 'CY', 'CZ', 'DB', 'DD', 'DJ', 'DK', 'DM', 'DO', 'DU', 'DZ', 'EA', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FB', 'FD', 'FU', 'FV', 'GA', 'GB', 'GC', 'GD', 'GH', 'GJ', 'GL', 'HL', 'HO', 'HX', 'IL', 'IM', 'IN', 'IZ', 'A2', 'B6', 'CL', 'DR', 'JH'];
CreditReportTradeline: PENINSULA_MEDICAL_INDUSTRY_CODE_LIST := ['MA', 'MB', 'MC', 'MD', 'MF', 'MH', 'MO', 'MP', 'MS', 'MV', 'MZ'];
CreditReportTradeline: PERSONAL_FINANCE_INDUSTRY_CODE_LIST := ['FP', 'FZ'];
CreditReportTradeline: PERR_KNIGHT_AUTO_CODE_LIST := ['AB', 'AC', 'AN', 'AU', 'AT', 'AP', 'AR', 'AS', 'AL', 'AF', 'AZ', 'FA', 'RD', 'ZA'];
CreditReportTradeline: PERR_KNIGHT_AUTO_LENDING_CODE_LIST := ['AC', 'AN', 'AU', 'FA', 'RD', 'ZA'];
CreditReportTradeline: PERR_KNIGHT_BANKS_CODE_LIST := ['BB', 'BC', 'BI', 'BO', 'BM', 'BN', 'BS', 'FB', 'YB'];
CreditReportTradeline: PERR_KNIGHT_BANK_CARD_CODE_LIST := ['BC'];
CreditReportTradeline: PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST := ['YA', 'YB', 'YC', 'YD', 'YF', 'YL', 'YZ'];
CreditReportTradeline: PERR_KNIGHT_CREDIT_UNION_CODE_LIST := ['FC'];
CreditReportTradeline: PERR_KNIGHT_FINANCE_CODE_LIST := ['AC', 'AN', 'AU', 'BI', 'BM', 'EL', 'FA', 'FB', 'FC', 'FD', 'FF', 'FI', 'FL', 'FM', 'FP', 'FR', 'FS', 'FT', 'FU', 'FW', 'FY', 'FZ', 'PC', 'RC', 'RD', 'YF', 'ZA'];
CreditReportTradeline: PERR_KNIGHT_LOST_OR_STOLEN_CARD_CODE_LIST := ['B'];
CreditReportTradeline: PERR_KNIGHT_RETAIL_CODE_LIST := ['AF', 'AL', 'AN', 'AT', 'AP', 'AU', 'CG', 'CS', 'CZ', 'DC', 'DM', 'DV', 'DZ', 'GD', 'GN', 'GS', 'GZ', 'HA', 'HC', 'HF', 'HM', 'HT', 'JA', 'JC', 'JP', 'JV', 'JZ', 'LA', 'LF', 'LH', 'LP', 'LY', 'LZ', 'MP', 'PF', 'SA', 'SB', 'SG', 'SM', 'SZ', 'TC', 'TF', 'UA', 'UC', 'UF', 'UG', 'UH', 'ZR'];
CreditReportTradeline: PERR_KNIGHT_SAVINGS_LOAN_CODE_LIST := ['FL', 'FS'];
CreditReportTradeline: REPOSSESSION_DEROGATORY_NARRATIVE_CODE_LIST := ['AN', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'CA', 'CB', 'CH', 'CP', 'CQ', 'CU', 'CY', 'DB', 'DJ', 'DM', 'DO', 'DU', 'DZ', 'EB', 'ES', 'ET', 'EV', 'FV', 'GB', 'GH', 'HL', 'HX', 'IL', 'IM', 'IZ', 'A2', 'B6'];
CreditReportTradeline: REPOSSESSION_NARRATIVE_CODE_LIST := ['AM', 'AN', 'A2', 'BK', 'B6', 'CT', 'CU', 'ET'];
CreditReportTradeline: RETAIL_INDUSTRY_CODE_LIST := ['C ', 'CG', 'CS', 'CZ', 'DM', 'DV', 'DZ', 'H ', 'HA', 'HC', 'HD', 'HF', 'HM', 'HR', 'HT', 'HZ', 'J ', 'JA', 'JC', 'JP', 'JV', 'JZ', 'QZ', 'ZR'];
CreditReportTradeline: REVOLVING_RETAIL_INDUSTRY_STATE_FARM_CODE_LIST := ['C ', 'CG', 'CS', 'CZ', 'D ', 'DC', 'DV', 'DZ', 'H ', 'HA', 'HC', 'HD', 'HF', 'HM', 'HR', 'HT', 'HZ', 'J ', 'JA', 'JC', 'JZ', 'L ', 'LA', 'LF', 'LH', 'LP', 'LY', 'LZ', 'S ', 'SA', 'SB', 'SG', 'SM', 'SZ', 'T ', 'TC', 'TF', 'TN', 'TZ', 'ZR'];
CreditReportTradeline: SALES_FINANCE_INDUSTRY_CODE_LIST := ['FF'];
CreditReportTradeline: STATE_FARM_AUTO_INDUSTRY_CODE_LIST := ['AB', 'AC', 'AF', 'AL', 'AN', 'AP', 'AR', 'AS', 'AT', 'AU', 'AZ', 'FA', 'ZA'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_ADVERSE_NARRATIVE_CODE_LIST := ['AN', 'AX', 'AY', 'BG', 'BK', 'BQ', 'BR', 'BS', 'BW', 'BX', 'BY', 'BZ', 'CA', 'CB', 'CD', 'CH', 'CJ', 'CN', 'CP', 'CQ', 'CU', 'CY', 'CZ', 'DB', 'DD', 'DJ', 'DK', 'DM', 'DO', 'DU', 'DZ', 'EA', 'EB', 'ED', 'ER', 'ES', 'ET', 'EV', 'FB', 'FD', 'FU', 'FV', 'GA', 'GB', 'GC', 'GD', 'GH', 'GJ', 'GL', 'HL', 'HO', 'HX', 'IL', 'IM', 'IN', 'IZ', 'A2', 'B6', 'CL', 'DR', 'JH'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_CANADA_ADVERSE_CODE_LIST := ['VB', 'VC', 'VF', 'WM', 'XB', 'XF', 'XI', 'XL', 'XY', 'XZ', 'YA', 'YF', 'YI', 'YM', 'YN', 'YS', 'YT', 'YU', 'YV', 'YW', 'ZE', 'ZF', 'ZG', 'ZK', 'ZM', 'ZN', 'ZO', 'ZP', 'ZQ', 'ZR', 'ZS', 'ZT', 'ZU', 'ZV', 'ZY'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_DEPARTMENT_STORE_INDUSTRY_CODE_LIST := ['D ', 'DC', 'DZ', 'ND'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_DISPUTE_CODE_LIST := ['AA', 'AC', 'AF', 'AG', 'AH', 'AL', 'BB', 'BH', 'BM', 'BN', 'BO', 'BP', 'BV', 'DE', 'EI', 'EJ', 'FF', 'FG', 'FH', 'FI', 'FJ', 'FK', 'FL', 'FM', 'FN', 'FO', 'FP', 'FQ', 'GE', 'IP', 'IQ', 'WU', 'WW', 'WY'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_MORTGAGE_INDUSTRY_CODE_LIST := ['BM', 'FB', 'FL', 'FM', 'FR'];
CreditReportTradeline: STATE_FARM_LIBERTY_MUTUAL_RETAIL_INDUSTRY_CODE_LIST := ['C ', 'CG', 'CS', 'CZ', 'DM', 'DV', 'H ', 'HA', 'HC', 'HD', 'HF', 'HM', 'HR', 'HT', 'HZ', 'J ', 'JA', 'JC', 'JP', 'JV', 'JZ', 'QZ', 'ZR'];
CreditReportTradeline: STUDENT_LOAN_INDUSTRY_CODE_LIST := ['EC', 'EL', 'ET', 'EU', 'EV', 'FE'];
CreditReportTradeline: STUDENT_LOAN_NARRATIVE_CODE_LIST := ['BU', 'DQ', 'EG', 'EH', 'FD', 'GJ'];
CreditReportTradeline: TRAVEL_AND_ENTERTAINMENT_INDUSTRY_CODE_LIST := ['ON'];
CreditReportTradeline: UTILITY_CELLULAR_INDUSTRY_CODE_LIST := ['UL', 'UP', 'UT'];
CreditReportTradeline: UTILITY_INDUSTRY_CODE_LIST := ['UA', 'UC', 'UD', 'UE', 'UF', 'UG', 'UH', 'UO', 'US', 'UV', 'UW', 'UZ'];
CreditReportTradeline: UTILITY_INDUSTRY_INQUIRY_CODE_LIST := ['UA', 'UC', 'UD', 'UE', 'UF', 'UG', 'UH', 'UL', 'UO', 'UP', 'US', 'UT', 'UV', 'UW', 'UZ'];

CreditReportTradeline: => NarrativeRemarkCount := COUNT(CreditReportNarrativeRemarks);
CreditReportTradeline: => ACBankRevolvingIndustry := IndustryCode IN AC_BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportTradeline: => ACWABankRevolvingIndustry := IndustryCode IN AC_WA_BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AdamAutoIndustry := IndustryCode IN ADAM_AUTO_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AlaskaAutoFinanceIndustry := IndustryCode IN ALASKA_AUTO_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateAutoIndustry := IndustryCode IN ALLSTATE_AUTO_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateAutoIndustryEntries := IndustryCode IN ALLSTATE_AUTO_INDUSTRY_ENTRIES_CODE_LIST;
CreditReportTradeline: => AllstateAutoFinance := EXISTS(CreditReportNarrativeRemarks(AllstateAutoFinance));
CreditReportTradeline: => AllstateAutoMortgage := EXISTS(CreditReportNarrativeRemarks(AllstateAutoMortgage));
CreditReportTradeline: => AllstateAutoMortgageIndustry := IndustryCode IN ALLSTATE_AUTO_MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateBankInquiryIndustry := IndustryCode IN ALLSTATE_BANK_INQUIRY_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateBankRevolvingIndustry := IndustryCode IN ALLSTATE_BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateBankruptcyJudgementRepossession := EXISTS(CreditReportNarrativeRemarks(AllstateBankruptcyJudgementRepossession));
CreditReportTradeline: => AllstateBankruptcyJudgementRepossessionStatus := CurrentRateCode IN ALLSTATE_BANKRUPTCY_JUDGEMENT_REPOSSESSION_CODE_LIST;
CreditReportTradeline: => AllstateCollectionServicesIndustry := IndustryCode IN COLLECTION_SERVICES_CODE_LIST;
CreditReportTradeline: => AllstateCreditCard := EXISTS(CreditReportNarrativeRemarks(AllstateCreditCard));
CreditReportTradeline: => AllstateCreditCardInquiryIndustry := IndustryCode IN ALLSTATE_CREDIT_CARD_INQUIRY_CODE_LIST;
CreditReportTradeline: => AllstateDisputeCategory1 := CurrentRateCode IN ALLSTATE_DISPUTE_CATEGORY_1_CODE_LIST;
CreditReportTradeline: => AllstateDisputeCategory2 := CurrentRateCode IN ALLSTATE_DISPUTE_CATEGORY_2_CODE_LIST;
CreditReportTradeline: => AllstateDisputeCategory4 := CurrentRateCode IN ALLSTATE_DISPUTE_CATEGORY_4_CODE_LIST;
CreditReportTradeline: => AllstateDisputeCategory7 := CurrentRateCode IN ALLSTATE_DISPUTE_CATEGORY_7_CODE_LIST;
CreditReportTradeline: => AllstateFinanceIndustry := IndustryCode IN ALLSTATE_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateGlobalExclusionIndustry := IndustryCode IN ALLSTATE_GLOBAL_EXCLUSION_CODE_LIST;
CreditReportTradeline: => AllstateMortgageIndustry := IndustryCode IN ALLSTATE_MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AllstateMortgageIndustryV2 := IndustryCode IN ALLSTATE_MORTGAGE_INDUSTRY_V2_CODE_LIST;
CreditReportTradeline: => AutoFinanceIndustry := IndustryCode IN AUTO_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AutoFinanceRepossessionIndustry := IndustryCode IN AUTO_FINANCE_INDUSTRY_REPOSSESSION_CODE_LIST;
CreditReportTradeline: => AutoIndustry := IndustryCode IN AUTO_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AutoLoanIndustry := IndustryCode IN AUTO_LOAN_INDUSTRY_CODE_LIST;
CreditReportTradeline: => AutoTrade := EXISTS(CreditReportNarrativeRemarks(AutoTrade));
CreditReportTradeline: => BadDebtCurrentStatus := CurrentRateCode IN BAD_DEBT_CURRENT_STATUS_CODE_LIST;
CreditReportTradeline: => BadDebtCurrentStatusExcludingBankruptcy := CurrentRateCode IN BAD_DEBT_CURRENT_STATUS_EXCLUDING_BANKRUPTCY_CODE_LIST;
CreditReportTradeline: => BankInstallmentIndustry := IndustryCode IN BANK_INSTALLMENT_INDUSTRY_CODE_LIST;
CreditReportTradeline: => BankRevolvingIndustry := IndustryCode IN BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportTradeline: => BankruptcyCurrentStatus := CurrentRateCode IN BANKRUPTCY_CURRENT_STATUS_CODE_LIST;
CreditReportTradeline: => BusinessCommercialIndustry := IndustryCode IN BUSINESS_COMMERCIAL_INDUSTRY_CODE_LIST;
CreditReportTradeline: => BusinessCommercialEmploymentInsuranceUtilityIndustry := IndustryCode IN BUSINESS_COMMERCIAL_INDUSTRY_CODE_LIST OR IndustryCode IN EMPLOYMENT_INDUSTRY_CODE_LIST OR IndustryCode IN INSURANCE_INDUSTRY_CODE_LIST OR IndustryCode IN UTILITY_INDUSTRY_CODE_LIST;
CreditReportTradeline: => ChildOrFamilySupportIndustry := IndustryCode IN CHILD_OR_FAMILY_SUPPORT_INDUSTRY_CODE_LIST;
CreditReportTradeline: => CreditCard := IndustryCode IN CREDIT_CARD_CODE_LIST;
CreditReportTradeline: => CreditCardIndustry := IndustryCode IN CREDIT_CARD_INDUSTRY_CODE_LIST;
CreditReportTradeline: => CreditUnionIndustry := IndustryCode IN CREDIT_UNION_INDUSTRY_CODE_LIST;
CreditReportTradeline: => CurrentStatusBypass := CurrentRateCode IN CURRENT_STATUS_CODE_BYPASS_CODE_LIST;
CreditReportTradeline: => DepartmentStoreIndustry := IndustryCode IN DEPARTMENT_STORE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => DerogatoryRepossession := EXISTS(CreditReportNarrativeRemarks(DerogatoryRepossession));
CreditReportTradeline: => FinanceIndustry := IndustryCode IN FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => MedicalIndustry := IndustryCode IN MEDICAL_INDUSTRY_CODE_LIST OR EXISTS(CreditReportNarrativeRemarks(Medical));
CreditReportTradeline: => MedicalTreatmentIndustry := IndustryCode IN MEDICAL_TREATMENT_CODE_LIST;
CreditReportTradeline: => MercuryAutoIndustry := IndustryCode IN MERCURY_AUTO_INDUSTRY_CODE_LIST;
CreditReportTradeline: => MercuryBankRevolvingIndustry := IndustryCode IN MERCURY_BANK_REVOLVING_INDUSTRY_CODE_LIST;
CreditReportTradeline: => MortgageIndustry := IndustryCode IN MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => NationwidePersonalFinanceIndustry := IndustryCode IN NATIONWIDE_PERSONAL_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => OilCompanyIndustry := IndustryCode IN OIL_COMPANY_INDUSTRY_CODE_LIST;
CreditReportTradeline: => PerrKnightAutoIndustry := IndustryCode IN PERR_KNIGHT_AUTO_CODE_LIST;
CreditReportTradeline: => PerrKnightAutoLendingIndustry := IndustryCode IN PERR_KNIGHT_AUTO_LENDING_CODE_LIST;
CreditReportTradeline: => PerrKnightBankIndustry := IndustryCode IN PERR_KNIGHT_BANKS_CODE_LIST;
CreditReportTradeline: => PerrKnightBankCardIndustry := IndustryCode IN PERR_KNIGHT_BANK_CARD_CODE_LIST;
CreditReportTradeline: => PerrKnightCollectionServicesIndustry := IndustryCode IN PERR_KNIGHT_COLLECTION_SERVICES_CODE_LIST;
CreditReportTradeline: => PerrKnightCreditUnionIndustry := IndustryCode IN PERR_KNIGHT_CREDIT_UNION_CODE_LIST;
CreditReportTradeline: => PerrKnightFinanceIndustry := IndustryCode IN PERR_KNIGHT_FINANCE_CODE_LIST;
CreditReportTradeline: => PerrKnightGlobalExclusionIndustry := IndustryCode IN MEDICAL_HEALTH_CODE_LIST OR IndustryCode IN UTILITY_INDUSTRY_INQUIRY_CODE_LIST OR IndustryCode IN INSURANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => PerrKnightLostOrStolenCard := CurrentRateCode IN PERR_KNIGHT_LOST_OR_STOLEN_CARD_CODE_LIST;
CreditReportTradeline: => PerrKnightRetailIndustry := IndustryCode IN PERR_KNIGHT_RETAIL_CODE_LIST;
CreditReportTradeline: => PerrKnightSavingsLoanIndustry := IndustryCode IN PERR_KNIGHT_SAVINGS_LOAN_CODE_LIST;
CreditReportTradeline: => PersonalFinanceIndustry := IndustryCode IN PERSONAL_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => Repossession := EXISTS(CreditReportNarrativeRemarks(Repossession));
CreditReportTradeline: => RetailIndustry := IndustryCode IN RETAIL_INDUSTRY_CODE_LIST;
CreditReportTradeline: => SalesFinanceIndustry := IndustryCode IN SALES_FINANCE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => StateFarmAutoIndustry := IndustryCode IN STATE_FARM_AUTO_INDUSTRY_CODE_LIST;
CreditReportTradeline: => StateFarmLibertyMutualAdverse := EXISTS(CreditReportNarrativeRemarks(StateFarmLibertyMutualAdverse));
CreditReportTradeline: => StateFarmLibertyMutualDepartmentStoreIndustry := IndustryCode IN STATE_FARM_LIBERTY_MUTUAL_DEPARTMENT_STORE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => StateFarmLibertyMutualDispute := EXISTS(CreditReportNarrativeRemarks(StateFarmLibertyMutualDispute));
CreditReportTradeline: => StateFarmLibertyMutualMortgage := EXISTS(CreditReportNarrativeRemarks(StateFarmLibertyMutualMortgage));
CreditReportTradeline: => StateFarmLibertyMutualMortgageIndustry := IndustryCode IN STATE_FARM_LIBERTY_MUTUAL_MORTGAGE_INDUSTRY_CODE_LIST;
CreditReportTradeline: => StateFarmLibertyMutualRetailIndustry := IndustryCode IN STATE_FARM_LIBERTY_MUTUAL_RETAIL_INDUSTRY_CODE_LIST;
CreditReportTradeline: => StateFarmLibertyMutualStudentLoan := EXISTS(CreditReportNarrativeRemarks(StateFarmLibertyMutualStudentLoan));
CreditReportTradeline: => StateFarmRevolvingRetailIndustry := IndustryCode IN REVOLVING_RETAIL_INDUSTRY_STATE_FARM_CODE_LIST;
CreditReportTradeline: => StudentLoanIndustry := IndustryCode IN STUDENT_LOAN_INDUSTRY_CODE_LIST;
CreditReportTradeline: => TravelAndEntertainmentIndustry := IndustryCode IN TRAVEL_AND_ENTERTAINMENT_INDUSTRY_CODE_LIST;
CreditReportTradeline: => UtilityCellularIndustry := IndustryCode IN UTILITY_CELLULAR_INDUSTRY_CODE_LIST;


// Top level Credit Report attributes
CreditReport: => MostRecentBankruptcyAgeInMonths := CreditReportBankruptcy.AgeInMonths$Min;
CreditReport: => TotalBankruptcies := COUNT(CreditReportBankruptcy);
CreditReport: => TotalBankruptciesWithValidDate := COUNT(CreditReportBankruptcy(ValidDate));
CreditReport: => TotalChapter7Bankruptcies := COUNT(CreditReportBankruptcy(Chapter7));
CreditReport: => TotalChapter11Bankruptcies := COUNT(CreditReportBankruptcy(Chapter11));
CreditReport: => TotalChapter12Bankruptcies := COUNT(CreditReportBankruptcy(Chapter12));
CreditReport: => TotalChapter13Bankruptcies := COUNT(CreditReportBankruptcy(Chapter13));
CreditReport: => TotalDischargedBankruptcies := COUNT(CreditReportBankruptcy(Discharged));
CreditReport: => TotalDischargedChapter7Bankruptcies := COUNT(CreditReportBankruptcy(Chapter7 AND Discharged));
CreditReport: => TotalDischargedChapter11Bankruptcies := COUNT(CreditReportBankruptcy(Chapter11 AND Discharged));
CreditReport: => TotalDischargedChapter12Bankruptcies := COUNT(CreditReportBankruptcy(Chapter12 AND Discharged));
CreditReport: => TotalDischargedChapter13Bankruptcies := COUNT(CreditReportBankruptcy(Chapter13 AND Discharged));
CreditReport: => TotalDismissedBankruptcies := COUNT(CreditReportBankruptcy(Dismissed));
CreditReport: => TotalDismissedChapter7Bankruptcies := COUNT(CreditReportBankruptcy(Chapter7 AND Dismissed));
CreditReport: => TotalDismissedChapter11Bankruptcies := COUNT(CreditReportBankruptcy(Chapter11 AND Dismissed));
CreditReport: => TotalDismissedChapter12Bankruptcies := COUNT(CreditReportBankruptcy(Chapter12 AND Dismissed));
CreditReport: => TotalDismissedChapter13Bankruptcies := COUNT(CreditReportBankruptcy(Chapter13 AND Dismissed));

// Testing/Debug KEL Outputs
QUERY: CreditReportBankruptcyV1(SearchForTransactionID) <= CreditReportBankruptcy(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportCollectionV1(SearchForTransactionID) <= CreditReportCollection(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportEmploymentV1(SearchForTransactionID) <= CreditReportEmployment(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportInquiryV1(SearchForTransactionID) <= CreditReportInquiry(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportJudgementV1(SearchForTransactionID) <= CreditReportJudgement(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportLienV1(SearchForTransactionID) <= CreditReportLien(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportNarrativeRemarksV1(SearchForTransactionID) <= CreditReportNarrativeRemarks(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];
QUERY: CreditReportTradelineV1(SearchForTransactionID) <= CreditReportTradeline(rCreditReport.TransactionID = SearchForTransactionID) USING [v1];

QUERY: CreditReportBankruptcyV2(SearchForTransactionID) <= CreditReportBankruptcy(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportCollectionV2(SearchForTransactionID) <= CreditReportCollection(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportEmploymentV2(SearchForTransactionID) <= CreditReportEmployment(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportInquiryV2(SearchForTransactionID) <= CreditReportInquiry(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportJudgementV2(SearchForTransactionID) <= CreditReportJudgement(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportLienV2(SearchForTransactionID) <= CreditReportLien(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportNarrativeRemarksV2(SearchForTransactionID) <= CreditReportNarrativeRemarks(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];
QUERY: CreditReportTradelineV2(SearchForTransactionID) <= CreditReportTradeline(rCreditReport.TransactionID = SearchForTransactionID) USING [v2];


// Final KEL Outputs
SHELL: CreditReportV1 <= CreditReport{UID, TransactionID, ReferenceNumber, BureauCode, Version, PaymentHistoryType, FileSinceDate, DateOfBirth, DateOfDeath, ConsumerStatementOnFileFlag, ContentType, StatementLength, ConsumerStatement, LexIDs, ROWS, DateReported, DateOfOrder, DateOfReceipt, DateOfCompletion, TimeOfReport, Quoteback, ReportCode, ReportCodeDescription, ReportType, AccountNumber, ProcessingCompletionStatus, ReportUsage, MostRecentBankruptcyAgeInMonths, TotalBankruptcies, TotalBankruptciesWithValidDate, TotalChapter7Bankruptcies, TotalChapter11Bankruptcies, TotalChapter12Bankruptcies, TotalChapter13Bankruptcies, TotalDischargedBankruptcies, TotalDischargedChapter7Bankruptcies, TotalDischargedChapter11Bankruptcies, TotalDischargedChapter12Bankruptcies, TotalDischargedChapter13Bankruptcies, TotalDismissedBankruptcies, TotalDismissedChapter7Bankruptcies, TotalDismissedChapter11Bankruptcies, TotalDismissedChapter12Bankruptcies, TotalDismissedChapter13Bankruptcies} USING [v1];
SHELL: CreditReportV2 <= CreditReport{UID, TransactionID, ReferenceNumber, BureauCode, Version, PaymentHistoryType, FileSinceDate, DateOfBirth, DateOfDeath, ConsumerStatementOnFileFlag, ContentType, StatementLength, ConsumerStatement, LexIDs, ROWS, DateReported, DateOfOrder, DateOfReceipt, DateOfCompletion, TimeOfReport, Quoteback, ReportCode, ReportCodeDescription, ReportType, AccountNumber, ProcessingCompletionStatus, ReportUsage, MostRecentBankruptcyAgeInMonths, TotalBankruptcies, TotalBankruptciesWithValidDate, TotalChapter7Bankruptcies, TotalChapter11Bankruptcies, TotalChapter12Bankruptcies, TotalChapter13Bankruptcies, TotalDischargedBankruptcies, TotalDischargedChapter7Bankruptcies, TotalDischargedChapter11Bankruptcies, TotalDischargedChapter12Bankruptcies, TotalDischargedChapter13Bankruptcies, TotalDismissedBankruptcies, TotalDismissedChapter7Bankruptcies, TotalDismissedChapter11Bankruptcies, TotalDismissedChapter12Bankruptcies, TotalDismissedChapter13Bankruptcies} USING [v2];