IMPORT GraphTemp;


//below are claim code CONSTANTS for SF CLUE Property attributes
CLUEPropertyRiskClaims: SF_PROP_EXCLUSION_CODE_LIST := ['CONTA', 'FLOOD', 'QUAKE', 'WC'];

//constants for SF701-SF710, SF806-SF808 (these should be in the NOT included)
//constants for SF691-SF700 also used in SF781-SF800  
//constants for SF711-SF720
CLUEPropertyRiskClaims: WEATHER_CLAIM_CODE_LIST := ['FREEZ', 'HAIL', 'LIGHT', 'WIND', 'WATER', 'MOVE'];
CLUEPropertyRiskClaims: WEATHER_CLAIM_COMB1_CODE_LIST := ['FREEZ', 'HAIL', 'LIGHT', 'WIND'];
CLUEPropertyRiskClaims: WEATHER_CLAIM_COMB2_CODE_LIST := ['WATER', 'MOVE'];

//constants for SF781-SF789, SF806-SF808, SF791-SF800 
CLUEPropertyRiskClaims: NON_WEATHER_CLAIM_CODE_LIST := ['CRAFT', 'CREDT', 'DISAP', 'DISSC', 'EXTEN', 'FIRE', 'PHYDA', 'SMOKE', 'THEFT', 'THFSC', 'VMM',  'OTHER', 'LIAB', 'MEDIC', 'SLIP', 'DAMAG', 'DOG'];

//constants for SF966-SF969
CLUEPropertyRiskClaims: FIRE_SMOKE_CLAIM_CODE_LIST := ['FIRE', 'SMOKE'];

//constants for SF1056-1079
CLUEPropertyRiskClaims: CRIME_CLAIM_CODE_LIST := ['THEFT', 'THFSC', 'VMM'];
  
//constants for SF1146-SF1170
CLUEPropertyRiskClaims: LIABILITY_CODE_LIST := ['DOG', 'LIAB', 'SLIP', 'MEDIC', 'DAMAG']; 

//constants for SF1291-SF1313, SF1411-SF1434, SF1536-SF1549
CLUEPropertyRiskClaims: COLA_CODE_LIST := ['CRAFT', 'CREDT', 'DAMAG', 'DISAP', 'DISSC', 'DOG', 'EXTEN', 'FIRE', 'FREEZ', 'HAIL', 'LIAB', 'LIGHT', 'MEDIC', 'MOVE', 'MOLD', 'OTHER', 'PHYDA', 'SINK', 'SLIP', 'SMOKE', 'THEFT', 'THFSC', 'VMM', 'WATER', 'WIND'];

//constants for SF876-SF896, SF898, SF1351-SF1374 , SF1471-SF1494; NOT CODE LIST IS USED FOR SF966-SF1170

CLUEPropertyRiskClaims: COLB_NOT_HAVE_CODE_LIST := ['EXTEN', 'FREEZ', 'HAIL', 'LIGHT', 'MOVE', 'OTHER', 'PHYDA', 'WATER', 'WIND'];
CLUEPropertyRiskClaims: COLB_CODE_LIST := ['CRAFT', 'CREDT', 'DAMAG', 'DISAP', 'DISSC', 'DOG', 'FIRE', 'LIAB', 'MEDIC', 'SLIP', 'SMOKE', 'THEFT', 'THFSC', 'VMM'];
CLUEPropertyRiskClaims: COLB_TN_CODE_LIST := ['CRAFT', 'CREDT', 'DAMAG', 'DISAP', 'DISSC', 'DOG', 'FIRE', 'LIAB', 'SLIP', 'SMOKE', 'THEFT', 'THFSC', 'VMM']; // remove MEDIC from COLB_CODE_LIST

CLUEPropertyRiskClaims: IGNORE_CODE_LIST := ['LAE'];
//BOOLEAN and global intermediary attributes for CLUE Property SF attributes

// Adjusted the ClaimDate to fit the requirement: 
// Assume CLUE Report date is 01/18/2017, 
// If 01/18/2016 <= claim_date < 01/18/2017 then this claim falls into the past one year.

CLUEPropertyRiskClaims: => DATE19000101 := D'19000101'; 

CLUEPropertyRiskClaims: => AdjustedClaimDate := IF(ClaimDate < rCLUEProperty.DateOfOrder, 
																									ADJUSTCALENDAR(ClaimDate, 0, 0, 1),
																									DATE19000101);
																											
CLUEPropertyRiskClaims.Payments: => cClaimCatType := IF( ClaimCatType:Null, '', ClaimCatType);
CLUEPropertyRiskClaims.Payments: => ClaimCatAmountTmp := IF( ClaimCatAmount:Null, 0, ClaimCatAmount);
CLUEPropertyRiskClaims.Payments: => cClaimCatAmount := IF(cClaimCatType IN CLUEPropertyRiskClaims.IGNORE_CODE_LIST , 0, ClaimCatAmountTmp);
CLUEPropertyRiskClaims: => cAtFaultIndicator := IF(AtFaultIndicator:Null, '', AtFaultIndicator);

CLUEPropertyRiskClaims: => IsValidClaim := ISVALIDDATE(ClaimDate) AND ISVALIDDATE(rCLUEProperty.DateOfOrder) AND rCLUEProperty.ProcessingCompletionStatus = 1;  

CLUEPropertyRiskClaims: => IsSFPropExclusionClaim := EXISTS(Payments(cClaimCatType IN SF_PROP_EXCLUSION_CODE_LIST));

CLUEPropertyRiskClaims: => IsWeatherClaimComb1 := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_COMB1_CODE_LIST));
CLUEPropertyRiskClaims: => IsWeatherClaimComb1NonCat := IsWeatherClaimComb1 AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsWeatherClaimComb1NonZero := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_COMB1_CODE_LIST AND cClaimCatAmount > 0));
CLUEPropertyRiskClaims: => IsWeatherClaimComb1NonCatNonZero := IsWeatherClaimComb1NonZero AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsWeatherClaimComb2 := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_COMB2_CODE_LIST));
CLUEPropertyRiskClaims: => IsWeatherClaimComb2Cat := IsWeatherClaimComb2 AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsWeatherClaimComb2NonCat := IsWeatherClaimComb2 AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsWeatherClaimComb2NonZero := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_COMB2_CODE_LIST AND cClaimCatAmount > 0));
CLUEPropertyRiskClaims: => IsWeatherClaimComb2CatNonZero := IsWeatherClaimComb2NonZero AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsWeatherClaimComb2NonCatNonZero := IsWeatherClaimComb2NonZero AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsWeatherClaimCat := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_CODE_LIST)) AND (cAtFaultIndicator = 'Y');

CLUEPropertyRiskClaims: => IsWeatherClaimCatNonZero := EXISTS(Payments(cClaimCatType IN WEATHER_CLAIM_CODE_LIST AND cClaimCatAmount>0)) AND (cAtFaultIndicator = 'Y');

CLUEPropertyRiskClaims: => IsLiabilityClaimNonZero := EXISTS(Payments(cClaimCatType IN LIABILITY_CODE_LIST AND cClaimCatAmount > 0));
CLUEPropertyRiskClaims: => IsLiabilityClaimNonCatNonZero := IsLiabilityClaimNonZero AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsNonWeatherClaim := EXISTS(Payments(cClaimCatType IN NON_WEATHER_CLAIM_CODE_LIST));
CLUEPropertyRiskClaims: => IsNonWeatherClaimCat := IsNonWeatherClaim AND (cAtFaultIndicator = 'Y');

CLUEPropertyRiskClaims: => IsNonWeatherClaimNonZero := EXISTS(Payments(cClaimCatType IN NON_WEATHER_CLAIM_CODE_LIST AND cClaimCatAmount>0));
CLUEPropertyRiskClaims: => IsNonWeatherClaimCatNonZero := IsNonWeatherClaimNonZero AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsNonWeatherClaimNonCatNonZero := IsNonWeatherClaimNonZero AND (cAtFaultIndicator != 'Y');

//IsNotCOLBClaim also used in nonweather2, fire/smoke, crime, and liability attributes
CLUEPropertyRiskClaims: => IsColBNotHaveClaim := EXISTS(Payments(cClaimCatType IN COLB_NOT_HAVE_CODE_LIST));

CLUEPropertyRiskClaims: => IsColBClaim := EXISTS(Payments(cClaimCatType IN COLB_CODE_LIST));
CLUEPropertyRiskClaims: => IsColBClaimCat := IsColBClaim AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsColBClaimNonCat := IsColBClaim AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsColBClaimNonZero := EXISTS(Payments(cClaimCatType IN COLB_CODE_LIST AND cClaimCatAmount>0));
CLUEPropertyRiskClaims: => IsColBClaimCatNonZero := IsColBClaimNonZero AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsColBClaimNonCatNonZero := IsColBClaimNonZero AND (cAtFaultIndicator != 'Y');

// Special for TN
CLUEPropertyRiskClaims: => IsColBClaimNonCatNonZeroTN := EXISTS(Payments(cClaimCatType IN COLB_TN_CODE_LIST AND cClaimCatAmount>0)) AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsFireSmokeClaimNonZero := EXISTS(Payments(cClaimCatType IN FIRE_SMOKE_CLAIM_CODE_LIST AND cClaimCatAmount>0));
CLUEPropertyRiskClaims: => IsFireSmokeClaimNonCatNonZero := IsFireSmokeClaimNonZero AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims: => IsCrimeClaimNonZero := EXISTS(Payments(cClaimCatType IN CRIME_CLAIM_CODE_LIST AND cClaimCatAmount>0));
CLUEPropertyRiskClaims: => IsCrimeClaimNonCatNonZero := IsCrimeClaimNonZero AND (cAtFaultIndicator != 'Y');
																												
CLUEPropertyRiskClaims: => IsColAClaimNonZero := EXISTS(Payments(cClaimCatType IN COLA_CODE_LIST AND cClaimCatAmount > 0));											
CLUEPropertyRiskClaims: => IsColAClaimNonCatNonZero := IsColAClaimNonZero AND (cAtFaultIndicator != 'Y');
CLUEPropertyRiskClaims: => IsColAClaimCatNonZero := IsColAClaimNonZero AND (cAtFaultIndicator = 'Y');

CLUEPropertyRiskClaims: => IsColAClaim := EXISTS(Payments(cClaimCatType IN COLA_CODE_LIST));
CLUEPropertyRiskClaims: => IsColAClaimCat := IsColAClaim AND (cAtFaultIndicator = 'Y');
CLUEPropertyRiskClaims: => IsColAClaimNonCat :=IsColAClaim AND (cAtFaultIndicator != 'Y');

CLUEPropertyRiskClaims.Payments : => TotalColAClaimAmountTmp := IF(cClaimCatType IN CLUEPropertyRiskClaims.COLA_CODE_LIST, cClaimCatAmount, 0);	
CLUEPropertyRiskClaims: => TotalColAClaimAmount := SUM(Payments, TotalColAClaimAmountTmp);

CLUEPropertyRiskClaims.Payments : => TotalColBClaimAmountTmp := IF(cClaimCatType IN CLUEPropertyRiskClaims.COLB_CODE_LIST, cClaimCatAmount, 0);	
CLUEPropertyRiskClaims: => TotalColBClaimAmount := SUM(Payments, TotalColBClaimAmountTmp);

//SF691	SF692	SF693	SF694	SF695
CLUEProperty: => NumWeatherClmWithin1Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1=TRUE OR IsWeatherClaimComb2Cat=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumWeatherClmWithin2Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1=TRUE OR IsWeatherClaimComb2Cat=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumWeatherClmWithin3Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1=TRUE OR IsWeatherClaimComb2Cat=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumWeatherClmWithin4Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1=TRUE OR IsWeatherClaimComb2Cat=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumWeatherClmWithin5Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1=TRUE OR IsWeatherClaimComb2Cat=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF696	SF697	SF698	SF699	SF700			     
CLUEProperty: => NumNZWeatherClmWithin1Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1NonZero=TRUE OR IsWeatherClaimComb2CatNonZero=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZWeatherClmWithin2Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1NonZero=TRUE OR IsWeatherClaimComb2CatNonZero=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZWeatherClmWithin3Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1NonZero=TRUE OR IsWeatherClaimComb2CatNonZero=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZWeatherClmWithin4Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1NonZero=TRUE OR IsWeatherClaimComb2CatNonZero=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZWeatherClmWithin5Yr := COUNT(CLUEPropertyRiskClaims ((IsWeatherClaimComb1NonZero=TRUE OR IsWeatherClaimComb2CatNonZero=TRUE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF701	SF702	SF703	SF704	SF705			     
CLUEProperty: => NumWeatherCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumWeatherCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumWeatherCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumWeatherCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumWeatherCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF706	SF709	SF710			     
CLUEProperty: => NumNZWeatherCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZWeatherCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZWeatherCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));
	
//SF711	SF712	SF713	SF714	SF715
CLUEProperty: => NumWeatherNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumWeatherNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumWeatherNonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumWeatherNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumWeatherNonCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCat=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));
		
//SF716	SF717	SF719	SF720
CLUEProperty: => NumNZWeatherNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZWeatherNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZWeatherNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZWeatherNonCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsWeatherClaimComb1NonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF781	SF782	SF783	SF784	SF785		     
CLUEProperty: => NumNonWeatherClmWithin1Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaim=TRUE OR IsWeatherClaimComb2NonCat=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNonWeatherClmWithin2Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaim=TRUE OR IsWeatherClaimComb2NonCat=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNonWeatherClmWithin3Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaim=TRUE OR IsWeatherClaimComb2NonCat=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNonWeatherClmWithin4Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaim=TRUE OR IsWeatherClaimComb2NonCat=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNonWeatherClmWithin5Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaim=TRUE OR IsWeatherClaimComb2NonCat=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF787	SF789			     
CLUEProperty: => NumNZNonWeatherClmWithin2Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaimNonZero=TRUE OR IsWeatherClaimComb2NonCatNonZero=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeatherClmWithin4Yr := COUNT(CLUEPropertyRiskClaims ((IsNonWeatherClaimNonZero=TRUE OR IsWeatherClaimComb2NonCatNonZero=TRUE) AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF791	SF792	SF793	SF794	SF795			     
CLUEProperty: => NumNonWeatherCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCat=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNonWeatherCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCat=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNonWeatherCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCat=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNonWeatherCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCat=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNonWeatherCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCat=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF796	SF797	SF798	SF799	SF800			     
CLUEProperty: => NumNZNonWeatherCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeatherCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeatherCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZNonWeatherCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZNonWeatherCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF806	SF807	SF808	SF809		     
CLUEProperty: => NumNZNonWeatherNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimNonCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimNonCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimNonCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsNonWeatherClaimNonCatNonZero=TRUE AND IsWeatherClaimComb1=FALSE AND IsWeatherClaimComb2Cat=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF876	SF877	SF878	SF879	SF880			     
CLUEProperty: => NumNZNonWeather2ClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeather2ClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeather2ClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZNonWeather2ClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZNonWeather2ClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF886	SF887	SF888	SF889	SF890			     
CLUEProperty: => NumNZNonWeather2CatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeather2CatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeather2CatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZNonWeather2CatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZNonWeather2CatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF896	SF898			     
CLUEProperty: => NumNZNonWeather2NonCatClmWithin1Yr	:= COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeather2NonCatClmWithin3Yr	:= COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));

//SF896_TN	SF897_TN	SF898_TN	SF899_TN			     
CLUEProperty: => NumNZNonWeatherNonCatClmWithin1YrTN := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZeroTN=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin2YrTN := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZeroTN=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin3YrTN := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZeroTN=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZNonWeatherNonCatClmWithin4YrTN := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCatNonZeroTN=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF966	SF967	SF968	SF969	SF970			     
CLUEProperty: => NumNZFireSmokeClmWithin1Yr	:= COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZFireSmokeClmWithin2Yr	:= COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZFireSmokeClmWithin3Yr	:= COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZFireSmokeClmWithin4Yr	:= COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZFireSmokeClmWithin5Yr	:= COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF986	SF987	SF988	SF989	SF990			     
CLUEProperty: => NumNZFireSmokeNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZFireSmokeNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZFireSmokeNonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZFireSmokeNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZFireSmokeNonCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsFireSmokeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1056	SF1057	SF1058	SF1059			     
CLUEProperty: => NumNZCrimeClmWithin1Yr	:= COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZCrimeClmWithin2Yr	:= COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZCrimeClmWithin3Yr	:= COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZCrimeClmWithin4Yr	:= COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1076	SF1077	SF1078	SF1079			     
CLUEProperty: => NumNZCrimeNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZCrimeNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZCrimeNonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZCrimeNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsCrimeClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1146	SF1147	SF1148	SF1149	SF1150			     
CLUEProperty: => NumNZLiabilityClmWithin1Yr	:= COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZLiabilityClmWithin2Yr	:= COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZLiabilityClmWithin3Yr	:= COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZLiabilityClmWithin4Yr	:= COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZLiabilityClmWithin5Yr	:= COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1166	SF1167	SF1168	SF1169	SF1170			     
CLUEProperty: => NumNZLiabilityNonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZLiabilityNonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZLiabilityNonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZLiabilityNonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumNZLiabilityNonCatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims ((IsLiabilityClaimNonCatNonZero=TRUE AND IsColBNotHaveClaim=FALSE) AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1291	SF1292	SF1293	SF1294	SF1295			     
CLUEProperty: => NumColAGE5000ClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE5000ClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColAGE5000ClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColAGE5000ClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColAGE5000ClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1301	SF1302	SF1303	SF1304	SF1305			     
CLUEProperty: => NumColAGE5000CatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE5000CatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColAGE5000CatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColAGE5000CatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColAGE5000CatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1311	SF1312	SF1313			     
CLUEProperty: => NumColAGE5000NonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE5000NonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColAGE5000NonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCat=TRUE AND TotalColAClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));

//SF1351	SF1352	SF1353	SF1354	SF1355			     
CLUEProperty: => NumColBGE5000ClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE5000ClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE5000ClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE5000ClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColBGE5000ClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1361	SF1362	SF1363	SF1364	SF1365			     
CLUEProperty: => NumColBGE5000CatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE5000CatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE5000CatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE5000CatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColBGE5000CatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1371	SF1372	SF1373	SF1374			                                    
CLUEProperty: => NumColBGE5000NonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE5000NonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE5000NonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE5000NonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >= 5000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1411	SF1412	SF1413	SF1414			     
CLUEProperty: => NumColAGE3000ClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE3000ClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColAGE3000ClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColAGE3000ClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaim=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1421	SF1422	SF1423	SF1424	SF1425			     
CLUEProperty: => NumColAGE3000CatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE3000CatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColAGE3000CatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColAGE3000CatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColAGE3000CatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1431	SF1434			     
CLUEProperty: => NumColAGE3000NonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColAGE3000NonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCat=TRUE AND TotalColAClaimAmount >= 3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1471	SF1472	SF1473	SF1474	SF1475			     
CLUEProperty: => NumColBGE3000ClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE3000ClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE3000ClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE3000ClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColBGE3000ClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaim=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1481	SF1482	SF1483	SF1484	SF1485			     
CLUEProperty: => NumColBGE3000CatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE3000CatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE3000CatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE3000CatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));
CLUEProperty: => NumColBGE3000CatClmWithin5Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 5));

//SF1491	SF1492	SF1493	SF1494			     
CLUEProperty: => NumColBGE3000NonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumColBGE3000NonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumColBGE3000NonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumColBGE3000NonCatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColBClaimNonCat=TRUE AND IsColBNotHaveClaim=FALSE AND TotalColBClaimAmount >=3000 AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1536	SF1537	SF1538	SF1539			     
CLUEProperty: => NumNZColAClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZColAClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZColAClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZColAClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1546	SF1547	SF1548	SF1549			     
CLUEProperty: => NumNZColACatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZColACatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZColACatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
CLUEProperty: => NumNZColACatClmWithin4Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 4));

//SF1556	SF1557	SF1558			     
CLUEProperty: => NumNZColANonCatClmWithin1Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 1));
CLUEProperty: => NumNZColANonCatClmWithin2Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 2));
CLUEProperty: => NumNZColANonCatClmWithin3Yr := COUNT(CLUEPropertyRiskClaims (IsColAClaimNonCatNonZero=TRUE AND IsValidClaim = TRUE AND IsSFPropExclusionClaim=FALSE AND YEARSBETWEEN(AdjustedClaimDate, CLUEProperty.DateOfOrder) < 3));
                 
QUERY: AllPropertyAttributes <= CLUEProperty{UID, 																	 
NumWeatherClmWithin1Yr,
NumWeatherClmWithin2Yr,
NumWeatherClmWithin3Yr,
NumWeatherClmWithin4Yr,
NumWeatherClmWithin5Yr,
NumNZWeatherClmWithin1Yr,
NumNZWeatherClmWithin2Yr,
NumNZWeatherClmWithin3Yr,
NumNZWeatherClmWithin4Yr,
NumNZWeatherClmWithin5Yr,
NumWeatherCatClmWithin1Yr,
NumWeatherCatClmWithin2Yr,
NumWeatherCatClmWithin3Yr,
NumWeatherCatClmWithin4Yr,
NumWeatherCatClmWithin5Yr,
NumNZWeatherCatClmWithin1Yr,
NumNZWeatherCatClmWithin4Yr,
NumNZWeatherCatClmWithin5Yr,
NumWeatherNonCatClmWithin1Yr,
NumWeatherNonCatClmWithin2Yr,
NumWeatherNonCatClmWithin3Yr,
NumWeatherNonCatClmWithin4Yr,
NumWeatherNonCatClmWithin5Yr,
NumNZWeatherNonCatClmWithin1Yr,
NumNZWeatherNonCatClmWithin2Yr,
NumNZWeatherNonCatClmWithin4Yr,
NumNZWeatherNonCatClmWithin5Yr,
NumNonWeatherClmWithin1Yr,
NumNonWeatherClmWithin2Yr,
NumNonWeatherClmWithin3Yr,
NumNonWeatherClmWithin4Yr,
NumNonWeatherClmWithin5Yr,
NumNZNonWeatherClmWithin2Yr,
NumNZNonWeatherClmWithin4Yr,
NumNonWeatherCatClmWithin1Yr,
NumNonWeatherCatClmWithin2Yr,
NumNonWeatherCatClmWithin3Yr,
NumNonWeatherCatClmWithin4Yr,
NumNonWeatherCatClmWithin5Yr,
NumNZNonWeatherCatClmWithin1Yr,
NumNZNonWeatherCatClmWithin2Yr,
NumNZNonWeatherCatClmWithin3Yr,
NumNZNonWeatherCatClmWithin4Yr,
NumNZNonWeatherCatClmWithin5Yr,
NumNZNonWeatherNonCatClmWithin1Yr,
NumNZNonWeatherNonCatClmWithin2Yr,
NumNZNonWeatherNonCatClmWithin3Yr,
NumNZNonWeatherNonCatClmWithin4Yr,
NumNZNonWeather2ClmWithin1Yr,
NumNZNonWeather2ClmWithin2Yr,
NumNZNonWeather2ClmWithin3Yr,
NumNZNonWeather2ClmWithin4Yr,
NumNZNonWeather2ClmWithin5Yr,
NumNZNonWeather2CatClmWithin1Yr,
NumNZNonWeather2CatClmWithin2Yr,
NumNZNonWeather2CatClmWithin3Yr,
NumNZNonWeather2CatClmWithin4Yr,
NumNZNonWeather2CatClmWithin5Yr,
NumNZNonWeather2NonCatClmWithin1Yr,
NumNZNonWeather2NonCatClmWithin3Yr,
NumNZNonWeatherNonCatClmWithin1YrTN,
NumNZNonWeatherNonCatClmWithin2YrTN,
NumNZNonWeatherNonCatClmWithin3YrTN,
NumNZNonWeatherNonCatClmWithin4YrTN,
NumNZFireSmokeClmWithin1Yr,
NumNZFireSmokeClmWithin2Yr,
NumNZFireSmokeClmWithin3Yr,
NumNZFireSmokeClmWithin4Yr,
NumNZFireSmokeClmWithin5Yr,
NumNZFireSmokeNonCatClmWithin1Yr,
NumNZFireSmokeNonCatClmWithin2Yr,
NumNZFireSmokeNonCatClmWithin3Yr,
NumNZFireSmokeNonCatClmWithin4Yr,
NumNZFireSmokeNonCatClmWithin5Yr,
NumNZCrimeClmWithin1Yr,
NumNZCrimeClmWithin2Yr,
NumNZCrimeClmWithin3Yr,
NumNZCrimeClmWithin4Yr,
NumNZCrimeNonCatClmWithin1Yr,
NumNZCrimeNonCatClmWithin2Yr,
NumNZCrimeNonCatClmWithin3Yr,
NumNZCrimeNonCatClmWithin4Yr,
NumNZLiabilityClmWithin1Yr,
NumNZLiabilityClmWithin2Yr,
NumNZLiabilityClmWithin3Yr,
NumNZLiabilityClmWithin4Yr,
NumNZLiabilityClmWithin5Yr,
NumNZLiabilityNonCatClmWithin1Yr,
NumNZLiabilityNonCatClmWithin2Yr,
NumNZLiabilityNonCatClmWithin3Yr,
NumNZLiabilityNonCatClmWithin4Yr,
NumNZLiabilityNonCatClmWithin5Yr,
NumColAGE5000ClmWithin1Yr,
NumColAGE5000ClmWithin2Yr,
NumColAGE5000ClmWithin3Yr,
NumColAGE5000ClmWithin4Yr,
NumColAGE5000ClmWithin5Yr,
NumColAGE5000CatClmWithin1Yr,
NumColAGE5000CatClmWithin2Yr,
NumColAGE5000CatClmWithin3Yr,
NumColAGE5000CatClmWithin4Yr,
NumColAGE5000CatClmWithin5Yr,
NumColAGE5000NonCatClmWithin1Yr,
NumColAGE5000NonCatClmWithin2Yr,
NumColAGE5000NonCatClmWithin3Yr,
NumColBGE5000ClmWithin1Yr,
NumColBGE5000ClmWithin2Yr,
NumColBGE5000ClmWithin3Yr,
NumColBGE5000ClmWithin4Yr,
NumColBGE5000ClmWithin5Yr,
NumColBGE5000CatClmWithin1Yr,
NumColBGE5000CatClmWithin2Yr,
NumColBGE5000CatClmWithin3Yr,
NumColBGE5000CatClmWithin4Yr,
NumColBGE5000CatClmWithin5Yr,
NumColBGE5000NonCatClmWithin1Yr,
NumColBGE5000NonCatClmWithin2Yr,
NumColBGE5000NonCatClmWithin3Yr,
NumColBGE5000NonCatClmWithin4Yr,
NumColAGE3000ClmWithin1Yr,
NumColAGE3000ClmWithin2Yr,
NumColAGE3000ClmWithin3Yr,
NumColAGE3000ClmWithin4Yr,
NumColAGE3000CatClmWithin1Yr,
NumColAGE3000CatClmWithin2Yr,
NumColAGE3000CatClmWithin3Yr,
NumColAGE3000CatClmWithin4Yr,
NumColAGE3000CatClmWithin5Yr,
NumColAGE3000NonCatClmWithin1Yr,
NumColAGE3000NonCatClmWithin4Yr,
NumColBGE3000ClmWithin1Yr,
NumColBGE3000ClmWithin2Yr,
NumColBGE3000ClmWithin3Yr,
NumColBGE3000ClmWithin4Yr,
NumColBGE3000ClmWithin5Yr,
NumColBGE3000CatClmWithin1Yr,
NumColBGE3000CatClmWithin2Yr,
NumColBGE3000CatClmWithin3Yr,
NumColBGE3000CatClmWithin4Yr,
NumColBGE3000CatClmWithin5Yr,
NumColBGE3000NonCatClmWithin1Yr,
NumColBGE3000NonCatClmWithin2Yr,
NumColBGE3000NonCatClmWithin3Yr,
NumColBGE3000NonCatClmWithin4Yr,
NumNZColAClmWithin1Yr,
NumNZColAClmWithin2Yr,
NumNZColAClmWithin3Yr,
NumNZColAClmWithin4Yr,
NumNZColACatClmWithin1Yr,
NumNZColACatClmWithin2Yr,
NumNZColACatClmWithin3Yr,
NumNZColACatClmWithin4Yr,
NumNZColANonCatClmWithin1Yr,
NumNZColANonCatClmWithin2Yr,
NumNZColANonCatClmWithin3Yr
};