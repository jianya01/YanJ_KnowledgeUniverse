IMPORT GraphTemp;

CLUEAutoClaim: ACCIDENT_CODE_LIST := ['BI', 'CO', 'ME', 'MP', 'PD', 'PI', 'UM', 'UN'];
CLUEAutoClaim: GEN_MEDIC_CODE_LIST := ['ME', 'MP', 'PI'];
CLUEAutoClaim: AT_FAULT_CODE_LIST := ['BI', 'PD'];

CLUEAutoClaim: CP_CODE_LIST := ['CP'];
CLUEAutoClaim: TL_CODE_LIST := ['TL'];
CLUEAutoClaim: RR_CODE_LIST := ['RR'];
CLUEAutoClaim: CO_CODE_LIST := ['CO'];
CLUEAutoClaim: PD_CODE_LIST := ['PD'];
CLUEAutoClaim: BI_CODE_LIST := ['BI'];


CLUEAutoClaim: => IsValidClaim := ISVALIDDATE(DateOfClaim) AND ISVALIDDATE(rCLUEAuto.DateOfOrder) AND rCLUEAuto.ProcessingCompletionStatus = 'C';  
CLUEAutoClaim: => ClaimDate1900 := D'19000101'; 

CLUEAutoClaim: => AdjustedClaimDate := IF(DateOfClaim < rCLUEAuto.DateOfOrder, 
																					ADJUSTCALENDAR(DateOfClaim, 0, 0, 1),
																					ClaimDate1900);

CLUEAutoClaim.Payments: => cClaimCatType := IF(ClaimCatType:Null, '', ClaimCatType);
CLUEAutoClaim.Payments: => cClaimCatAmount := IF(ClaimCatAmount:Null, 0, ClaimCatAmount);

CLUEAutoClaim: => IsAccidentClaim :=  EXISTS(Payments(cClaimCatType IN ACCIDENT_CODE_LIST));

CLUEAutoClaim: => IsAtFaultClaim := EXISTS(Payments(cClaimCatType IN AT_FAULT_CODE_LIST AND cClaimCatAmount > 0));
CLUEAutoClaim: => IsGenMedicClaimNonZero := EXISTS(Payments(cClaimCatType IN GEN_MEDIC_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsGenMedicClaim := EXISTS(Payments(cClaimCatType IN GEN_MEDIC_CODE_LIST));
CLUEAutoClaim: => IsPDPaymentGreater1000 := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST AND cClaimCatAmount> 1000));

CLUEAutoClaim: => IsOnlyCPClaimNonZero := ALL(Payments, cClaimCatType IN CP_CODE_LIST AND cClaimCatAmount>0 );
CLUEAutoClaim: => IsOnlyTLClaimNonZero := ALL(Payments, cClaimCatType IN TL_CODE_LIST AND cClaimCatAmount>0 );

CLUEAutoClaim: => IsCOClaim := EXISTS(Payments(cClaimCatType IN CO_CODE_LIST));
CLUEAutoClaim: => IsRRClaimNonZero := EXISTS(Payments(cClaimCatType IN RR_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsCOClaimNonZero := EXISTS(Payments(cClaimCatType IN CO_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsPDClaimNonZero := EXISTS(Payments(cClaimCatType IN PD_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsTLClaimNonZero := EXISTS(Payments(cClaimCatType IN TL_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsBIClaimNonZero := EXISTS(Payments(cClaimCatType IN BI_CODE_LIST AND cClaimCatAmount>0));
CLUEAutoClaim: => IsCPClaimNonZero := EXISTS(Payments(cClaimCatType IN CP_CODE_LIST AND cClaimCatAmount>0));

CLUEAutoClaim: => TotalClaimAmount := SUM(Payments, cClaimCatAmount); 

CLUEAutoClaim.Payments: => NoTLPaymentTmp := IF(cClaimCatType IN CLUEAutoClaim.TL_CODE_LIST, 0, cClaimCatAmount);
CLUEAutoClaim: => ClaimAmountLessTL := SUM(Payments, NoTLPaymentTmp);

CLUEAutoClaim.Payments: => AtFaultClaimAmountTmp := IF(cClaimCatType IN CLUEAutoClaim.AT_FAULT_CODE_LIST, cClaimCatAmount, 0);
CLUEAutoClaim: => TotalAtFaultClaimAmount := SUM(Payments, AtFaultClaimAmountTmp);

CLUEAutoClaim.Payments: => IsGMCompNonZeroTmp := cClaimCatType IN CLUEAutoClaim.GEN_MEDIC_CODE_LIST AND cClaimCatAmount>0;
CLUEAutoClaim: => GMComponentTmp1 := IF(IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, rCLUEAuto.DateOfOrder) < 1, COUNT(Payments(IsGMCompNonZeroTmp = TRUE)), 0);  
CLUEAutoClaim: => GMComponentTmp2 := IF(IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, rCLUEAuto.DateOfOrder) < 2, COUNT(Payments(IsGMCompNonZeroTmp = TRUE)), 0);  
CLUEAutoClaim: => GMComponentTmp3 := IF(IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, rCLUEAuto.DateOfOrder) < 3, COUNT(Payments(IsGMCompNonZeroTmp = TRUE)), 0);  
CLUEAutoClaim: => GMComponentTmp4 := IF(IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, rCLUEAuto.DateOfOrder) < 4, COUNT(Payments(IsGMCompNonZeroTmp = TRUE)), 0);   
CLUEAutoClaim: => GMComponentTmp5 := IF(IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, rCLUEAuto.DateOfOrder) < 5, COUNT(Payments(IsGMCompNonZeroTmp = TRUE)), 0);

CLUEAuto: => LatestClaimDate := MAX(CLUEAutoClaim(IsValidClaim), DateOfClaim);
CLUEAuto: => LatestClaimDateAF := MAX(CLUEAutoClaim(IsAtFaultClaim AND IsValidClaim), DateOfClaim);

//	ACLE1001	ACLE1002	ACLE1003	ACLE1004	ACLE1005
CLUEAuto:	 =>	NumAccidentsLE100Within1Yr	:= COUNT(CLUEAutoClaim(IsAccidentClaim = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAccidentsLE100Within2Yr	:= COUNT(CLUEAutoClaim(IsAccidentClaim = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAccidentsLE100Within3Yr	:= COUNT(CLUEAutoClaim(IsAccidentClaim = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAccidentsLE100Within4Yr	:= COUNT(CLUEAutoClaim(IsAccidentClaim = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAccidentsLE100Within5Yr	:= COUNT(CLUEAutoClaim(IsAccidentClaim = TRUE AND (TotalClaimAmount > 0 AND TotalClaimAmount <= 100) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	AFGE10K1	AFGE10K2	AFGE10K3	AFGE10K4	AFGE10K5
CLUEAuto:	 =>	NumAtFaultClmGE10000Within1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultClmGE10000Within2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultClmGE10000Within3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultClmGE10000Within4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultClmGE10000Within5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	AFGE15H1	AFGE15H2	AFGE15H3	AFGE15H4	AFGE15H5
CLUEAuto:	 =>	NumAtFaultClmGE1500Within1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1500Within2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1500Within3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1500Within4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1500Within5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1500 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	AFGE1K1	AFGE1K2	AFGE1K3	AFGE1K4	AFGE1K5
CLUEAuto:	 =>	NumAtFaultClmGE1000Within1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1000Within2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1000Within3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1000Within4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultClmGE1000Within5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 1000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	AFGE5K1	AFGE5K2	AFGE5K3	AFGE5K4	AFGE5K5
CLUEAuto:	 =>	NumAtFaultClmGE5000Within1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultClmGE5000Within2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultClmGE5000Within3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultClmGE5000Within4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultClmGE5000Within5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	AFGE7501	AFGE7502	AFGE7503	AFGE7504	AFGE7505
CLUEAuto:	 =>	NumAtFaultClmGE750Within1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultClmGE750Within2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultClmGE750Within3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultClmGE750Within4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultClmGE750Within5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND TotalAtFaultClaimAmount >= 750 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	CPONLYCNT1	CPONLYCNT2	CPONLYCNT3	CPONLYCNT4	CPONLYCNT5
CLUEAuto:	 =>	NumNZCompOnlyClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsOnlyCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZCompOnlyClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsOnlyCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZCompOnlyClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsOnlyCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZCompOnlyClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsOnlyCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZCompOnlyClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsOnlyCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	ALLGM1	ALLGM2	ALLGM3	ALLGM4	ALLGM5
CLUEAuto:	 =>	NumNZGenMedClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZGenMedClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZGenMedClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZGenMedClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZGenMedClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	ALLRR1	ALLRR2	ALLRR3	ALLRR4	ALLRR5
CLUEAuto:	 =>	NumNZRentalReimbClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZRentalReimbClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZRentalReimbClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZRentalReimbClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZRentalReimbClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	ATFGM1	ATFGM2	ATFGM3	ATFGM4	ATFGM5
CLUEAuto:	 =>	NumAtFaultNZGenMedClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultNZGenMedClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultNZGenMedClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultNZGenMedClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultNZGenMedClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsGenMedicClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	ATFRR1	ATFRR2	ATFRR3	ATFRR4	ATFRR5
CLUEAuto:	 =>	NumAtFaultNZRentalReimbClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumAtFaultNZRentalReimbClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumAtFaultNZRentalReimbClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumAtFaultNZRentalReimbClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumAtFaultNZRentalReimbClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	CO_CNT1NZ	CO_CNT2NZ	CO_CNT3NZ	CO_CNT4NZ	CO_CNT5NZ
CLUEAuto:	 =>	NumNZCollCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsCOClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZCollCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsCOClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZCollCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsCOClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZCollCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsCOClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZCollCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsCOClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	MAJCPRV1	MAJCPRV2	MAJCPRV3	MAJCPRV4	MAJCPRV5
CLUEAuto:	 =>	NumClmGE5000Within1Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumClmGE5000Within2Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumClmGE5000Within3Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumClmGE5000Within4Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumClmGE5000Within5Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 5000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	MAJGE10K1	MAJGE10K2	MAJGE10K3	MAJGE10K4	MAJGE10K5
CLUEAuto:	 =>	NumClmGE10000Within1Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumClmGE10000Within2Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumClmGE10000Within3Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumClmGE10000Within4Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumClmGE10000Within5Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount >= 10000 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	MINCCPV1	MINCCPV2	MINCCPV3	MINCCPV4	MINCCPV5
CLUEAuto:	 =>	NumNZClmLE100Within1Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZClmLE100Within2Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZClmLE100Within3Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZClmLE100Within4Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZClmLE100Within5Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND TotalClaimAmount <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	MOSINCE	MOSINCAF			
CLUEAuto:	 =>	NumMosSinceLastClm	:= IF(LatestClaimDate:Null,
																				9999,
																				(YEAR(CLUEAuto.DateOfOrder)-YEAR(LatestClaimDate))*12+
																					(MONTH(CLUEAuto.DateOfOrder)-MONTH(LatestClaimDate))+ 
																					IF(DAY(LatestClaimDate) <= DAY(CLUEAuto.DateOfOrder), 1, 0)
																				);    			
CLUEAuto:	 =>	NumMosSinceLastAtFaultClm	:= IF(LatestClaimDateAF:Null,
																							9999,
																							(YEAR(CLUEAuto.DateOfOrder)-YEAR(LatestClaimDateAF))*12+
																								(MONTH(CLUEAuto.DateOfOrder)-MONTH(LatestClaimDateAF))+
																								IF(DAY(LatestClaimDateAF) <= DAY(CLUEAuto.DateOfOrder), 1, 0)
																							);			

//	PD_CNT1NZ	PD_CNT2NZ	PD_CNT3NZ	PD_CNT4NZ	PD_CNT5NZ
CLUEAuto:	 =>	NumNZPropDamCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsPDClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZPropDamCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsPDClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZPropDamCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsPDClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZPropDamCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsPDClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZPropDamCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsPDClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	SINGAC01	SINGAC02	SINGAC03	SINGAC04	SINGAC05
CLUEAuto:	 =>	NumGenMedNotAtFaultClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = FALSE AND (IsGenMedicClaim = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumGenMedNotAtFaultClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = FALSE AND (IsGenMedicClaim = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumGenMedNotAtFaultClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = FALSE AND (IsGenMedicClaim = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumGenMedNotAtFaultClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = FALSE AND (IsGenMedicClaim = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumGenMedNotAtFaultClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = FALSE AND (IsGenMedicClaim = TRUE OR IsCOClaim = TRUE) AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	TL_CNT1NZ	TL_CNT2NZ	TL_CNT3NZ	TL_CNT4NZ	TL_CNT5NZ
CLUEAuto:	 =>	NumNZTowLaborCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZTowLaborCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZTowLaborCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZTowLaborCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZTowLaborCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	TLONLYCNT1	TLONLYCNT2	TLONLYCNT3	TLONLYCNT4	TLONLYCNT5
CLUEAuto:	 =>	NumNZTowLaborOnlyClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsOnlyTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZTowLaborOnlyClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsOnlyTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZTowLaborOnlyClmWithin3Yr	:= COUNT(CLUEAutoClaim(IsOnlyTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZTowLaborOnlyClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsOnlyTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZTowLaborOnlyClmWithin5Yr	:= COUNT(CLUEAutoClaim(IsOnlyTLClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	BI_CNT1NZ	BI_CNT2NZ	BI_CNT3NZ	BI_CNT4NZ	BI_CNT5NZ
CLUEAuto:	 =>	NumNZBodilyInjCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsBIClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZBodilyInjCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsBIClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZBodilyInjCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsBIClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZBodilyInjCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsBIClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZBodilyInjCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsBIClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	CLMS1NZ	CLMS2NZ	CLMS3NZ	CLMS4NZ	CLMS6NZ
CLUEAuto:	 =>	NumNZClmWithin1Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZClmWithin2Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZClmWithin3Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZClmWithin4Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZClmWithin6Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 6 ));			
CLUEAuto:	 =>	NumNZClmWithin7Yr	:= COUNT(CLUEAutoClaim(TotalClaimAmount > 0 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 7 ));			

//	CP_CNT1NZ	CP_CNT2NZ	CP_CNT3NZ	CP_CNT4NZ	CP_CNT5NZ
CLUEAuto:	 =>	NumNZCompCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZCompCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZCompCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZCompCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZCompCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsCPClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	GM_CNT1NZ	GM_CNT2NZ	GM_CNT3NZ	GM_CNT4NZ	GM_CNT5NZ
CLUEAuto:	 =>	NumNZGenMedCpntWithin1Yr	:= SUM(CLUEAutoClaim, GMComponentTmp1); 			
CLUEAuto:	 =>	NumNZGenMedCpntWithin2Yr	:= SUM(CLUEAutoClaim, GMComponentTmp2); 			
CLUEAuto:	 =>	NumNZGenMedCpntWithin3Yr	:= SUM(CLUEAutoClaim, GMComponentTmp3); 			
CLUEAuto:	 =>	NumNZGenMedCpntWithin4Yr	:= SUM(CLUEAutoClaim, GMComponentTmp4); 			
CLUEAuto:	 =>	NumNZGenMedCpntWithin5Yr	:= SUM(CLUEAutoClaim, GMComponentTmp5);			

//	RR_CNT1NZ	RR_CNT2NZ	RR_CNT3NZ	RR_CNT4NZ	RR_CNT5NZ
CLUEAuto:	 =>	NumNZRentalReimbCpntWithin1Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZRentalReimbCpntWithin2Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZRentalReimbCpntWithin3Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZRentalReimbCpntWithin4Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZRentalReimbCpntWithin5Yr	:= COUNT(CLUEAutoClaim(IsRRClaimNonZero = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	MINCBPV1	MINCBPV2	MINCBPV3	MINCBPV4	MINCBPV5
CLUEAuto:	 =>	NumNZClmLE100NoTowLaborPmtWithin1Yr	:= COUNT(CLUEAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZClmLE100NoTowLaborPmtWithin2Yr	:= COUNT(CLUEAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZClmLE100NoTowLaborPmtWithin3Yr	:= COUNT(CLUEAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumNZClmLE100NoTowLaborPmtWithin4Yr	:= COUNT(CLUEAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZClmLE100NoTowLaborPmtWithin5Yr	:= COUNT(CLUEAutoClaim(ClaimAmountLessTL > 0 AND ClaimAmountLessTL <= 100 AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	PDNOCO1	PDNOCO2	PDNOCO3	PDNOCO4	PDNOCO5
CLUEAuto:	 =>	NumPropDamGT1000NoCollPmtWithin1Yr	:= COUNT(CLUEAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNonZero=FALSE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumPropDamGT1000NoCollPmtWithin2Yr	:= COUNT(CLUEAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNonZero=FALSE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumPropDamGT1000NoCollPmtWithin3Yr	:= COUNT(CLUEAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNonZero=FALSE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 3 ));			
CLUEAuto:	 =>	NumPropDamGT1000NoCollPmtWithin4Yr	:= COUNT(CLUEAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNonZero=FALSE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumPropDamGT1000NoCollPmtWithin5Yr	:= COUNT(CLUEAutoClaim(IsPDPaymentGreater1000 = TRUE AND IsCOClaimNonZero=FALSE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

//	TOT_ATFAULT1NZ	TOT_ATFAULT2NZ	TOT_ATFAULT4NZ	TOT_ATFAULT6NZ	TOT_ATFAULT7NZ
CLUEAuto:	 =>	NumNZAtFaultClmWithin1Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 1 ));			
CLUEAuto:	 =>	NumNZAtFaultClmWithin2Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 2 ));			
CLUEAuto:	 =>	NumNZAtFaultClmWithin4Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 4 ));			
CLUEAuto:	 =>	NumNZAtFaultClmWithin6Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 6 ));			
CLUEAuto:	 =>	NumNZAtFaultClmWithin7Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim = TRUE AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 7 ));			

//	AFCLM45				
CLUEAuto:	 =>	NumAtFaultClmFrom3YrTo5Yr	:= COUNT(CLUEAutoClaim(IsAtFaultClaim AND IsValidClaim = TRUE AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) >= 3 AND YEARSBETWEEN(AdjustedClaimDate, CLUEAuto.DateOfOrder) < 5 ));			

QUERY: AllAutoAttributes <= CLUEAuto{UID 
, CLUEAutoClaim{UID, AdjustedClaimDate, IsValidClaim, Payments{cClaimCatType, cClaimCatAmount}}, 
NumAccidentsLE100Within1Yr ,
NumAccidentsLE100Within2Yr,
NumAccidentsLE100Within3Yr,
NumAccidentsLE100Within4Yr,
NumAccidentsLE100Within5Yr,
NumAtFaultClmFrom3YrTo5Yr,
NumAtFaultClmGE10000Within1Yr,
NumAtFaultClmGE10000Within2Yr,
NumAtFaultClmGE10000Within3Yr,
NumAtFaultClmGE10000Within4Yr,
NumAtFaultClmGE10000Within5Yr,
NumAtFaultClmGE1500Within1Yr,
NumAtFaultClmGE1500Within2Yr,
NumAtFaultClmGE1500Within3Yr,
NumAtFaultClmGE1500Within4Yr,
NumAtFaultClmGE1500Within5Yr,
NumAtFaultClmGE1000Within1Yr,
NumAtFaultClmGE1000Within2Yr,
NumAtFaultClmGE1000Within3Yr,
NumAtFaultClmGE1000Within4Yr,
NumAtFaultClmGE1000Within5Yr,
NumAtFaultClmGE5000Within1Yr,
NumAtFaultClmGE5000Within2Yr,
NumAtFaultClmGE5000Within3Yr,
NumAtFaultClmGE5000Within4Yr,
NumAtFaultClmGE5000Within5Yr,
NumAtFaultClmGE750Within1Yr,
NumAtFaultClmGE750Within2Yr,
NumAtFaultClmGE750Within3Yr,
NumAtFaultClmGE750Within4Yr,
NumAtFaultClmGE750Within5Yr,
NumNZGenMedClmWithin1Yr,
NumNZGenMedClmWithin2Yr,
NumNZGenMedClmWithin3Yr,
NumNZGenMedClmWithin4Yr,
NumNZGenMedClmWithin5Yr,
NumNZRentalReimbClmWithin1Yr,
NumNZRentalReimbClmWithin2Yr,
NumNZRentalReimbClmWithin3Yr,
NumNZRentalReimbClmWithin4Yr,
NumNZRentalReimbClmWithin5Yr,
NumAtFaultNZGenMedClmWithin1Yr,
NumAtFaultNZGenMedClmWithin2Yr,
NumAtFaultNZGenMedClmWithin3Yr,
NumAtFaultNZGenMedClmWithin4Yr,
NumAtFaultNZGenMedClmWithin5Yr,
NumAtFaultNZRentalReimbClmWithin1Yr,
NumAtFaultNZRentalReimbClmWithin2Yr,
NumAtFaultNZRentalReimbClmWithin3Yr,
NumAtFaultNZRentalReimbClmWithin4Yr,
NumAtFaultNZRentalReimbClmWithin5Yr,
NumNZBodilyInjCpntWithin1Yr,
NumNZBodilyInjCpntWithin2Yr,
NumNZBodilyInjCpntWithin3Yr,
NumNZBodilyInjCpntWithin4Yr,
NumNZBodilyInjCpntWithin5Yr,
NumNZClmWithin1Yr,
NumNZClmWithin2Yr,
NumNZClmWithin3Yr,
NumNZClmWithin4Yr,
NumNZClmWithin6Yr,
NumNZClmWithin7Yr,
NumNZCollCpntWithin1Yr,
NumNZCollCpntWithin2Yr,
NumNZCollCpntWithin3Yr,
NumNZCollCpntWithin4Yr,
NumNZCollCpntWithin5Yr,
NumNZCompCpntWithin1Yr,
NumNZCompCpntWithin2Yr,
NumNZCompCpntWithin3Yr,
NumNZCompCpntWithin4Yr,
NumNZCompCpntWithin5Yr,
NumNZCompOnlyClmWithin1Yr,
NumNZCompOnlyClmWithin2Yr,
NumNZCompOnlyClmWithin3Yr,
NumNZCompOnlyClmWithin4Yr,
NumNZCompOnlyClmWithin5Yr,
NumNZGenMedCpntWithin1Yr,
NumNZGenMedCpntWithin2Yr,
NumNZGenMedCpntWithin3Yr,
NumNZGenMedCpntWithin4Yr,
NumNZGenMedCpntWithin5Yr,
NumClmGE5000Within1Yr,
NumClmGE5000Within2Yr,
NumClmGE5000Within3Yr,
NumClmGE5000Within4Yr,
NumClmGE5000Within5Yr,
NumClmGE10000Within1Yr,
NumClmGE10000Within2Yr,
NumClmGE10000Within3Yr,
NumClmGE10000Within4Yr,
NumClmGE10000Within5Yr,
NumNZClmLE100NoTowLaborPmtWithin1Yr,
NumNZClmLE100NoTowLaborPmtWithin2Yr,
NumNZClmLE100NoTowLaborPmtWithin3Yr,
NumNZClmLE100NoTowLaborPmtWithin4Yr,
NumNZClmLE100NoTowLaborPmtWithin5Yr,
NumNZClmLE100Within1Yr,
NumNZClmLE100Within2Yr,
NumNZClmLE100Within3Yr,
NumNZClmLE100Within4Yr,
NumNZClmLE100Within5Yr,
NumMosSinceLastAtFaultClm,
NumMosSinceLastClm,
NumNZPropDamCpntWithin1Yr,
NumNZPropDamCpntWithin2Yr,
NumNZPropDamCpntWithin3Yr,
NumNZPropDamCpntWithin4Yr,
NumNZPropDamCpntWithin5Yr,
NumPropDamGT1000NoCollPmtWithin1Yr,
NumPropDamGT1000NoCollPmtWithin2Yr,
NumPropDamGT1000NoCollPmtWithin3Yr,
NumPropDamGT1000NoCollPmtWithin4Yr,
NumPropDamGT1000NoCollPmtWithin5Yr,
NumNZRentalReimbCpntWithin1Yr,
NumNZRentalReimbCpntWithin2Yr,
NumNZRentalReimbCpntWithin3Yr,
NumNZRentalReimbCpntWithin4Yr,
NumNZRentalReimbCpntWithin5Yr,
NumGenMedNotAtFaultClmWithin1Yr,
NumGenMedNotAtFaultClmWithin2Yr,
NumGenMedNotAtFaultClmWithin3Yr,
NumGenMedNotAtFaultClmWithin4Yr,
NumGenMedNotAtFaultClmWithin5Yr,
NumNZTowLaborCpntWithin1Yr,
NumNZTowLaborCpntWithin2Yr,
NumNZTowLaborCpntWithin3Yr,
NumNZTowLaborCpntWithin4Yr,
NumNZTowLaborCpntWithin5Yr,
NumNZTowLaborOnlyClmWithin1Yr,
NumNZTowLaborOnlyClmWithin2Yr,
NumNZTowLaborOnlyClmWithin3Yr,
NumNZTowLaborOnlyClmWithin4Yr,
NumNZTowLaborOnlyClmWithin5Yr,
NumNZAtFaultClmWithin1Yr,
NumNZAtFaultClmWithin2Yr,
NumNZAtFaultClmWithin4Yr,
NumNZAtFaultClmWithin6Yr,
NumNZAtFaultClmWithin7Yr
};
