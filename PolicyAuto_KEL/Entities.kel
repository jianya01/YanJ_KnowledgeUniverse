// KEL Compiler Options and Configurations
#OPTION(persist, 2)
#OPTION(persistexpire, 30)
#OPTION(codegen, 'nosmartjoins') // Hidden option that disables SMART joins in favor of more traditional HASH joins

// Defining the ERA to allow for ASOF functionality
ERA reportedby BEFORE(DateFirstSeen=NULL(MIN));
ERA reportedbetween BETWEEN(DateFirstSeen=NULL(MIN), DateLastSeen=NULL(MAX));

// Defining the PERMITS to allow for FCRA and NonFCRA to utilize the same ENTITY definitions, but different USE statements
PERMITS FCRA, NonFCRA;

PolicyAuto := ENTITY(FLAT(UID = RecordIdentifier,
		STRING ReportRequestRecordCode,
		INTEGER QuoteBack,
		INTEGER ReportCode,
		STRING ReportType,
		INTEGER AccountNumber,
		STRING AccountSuffix,
		DATE DateOfOrder,
		DATE DateOfReceipt,
		DATE DateOfCompletion,
		STRING ProcessingCompletionStatus,
		STRING ReportUsage,
		INTEGER ReferenceNumber,
		INTEGER TimeOfReport,
		STRING Attach1ProcessStatus,
		INTEGER RecordVersion,
		STRING UnitQuotebackRecordCode,
		STRING UnitQuotebackClassification,
		STRING UnitQuotebackQuoteback,
		INTEGER GenMessageRecordCounter,
		STRING GenMessageRecordCode,
		STRING GenMessageClassification,
		STRING GenMessageTypeRemarks,
		STRING GenMessageRemarks1,
		STRING GenMessageRemarksCode1,
		INTEGER AddMessageRecordCounter,
		STRING AddMessageRecordCode,
		STRING AddMessageClassification,
		STRING AddMessageTypeRemarks,
		STRING AddMessageRemarks1,
		STRING AddMessageRemarksCode1),
	MODEL(UID,
		ReportRequestRecordCode, QuoteBack, ReportCode, ReportType, AccountNumber, AccountSuffix, DateOfOrder, DateOfReceipt, 
		DateOfCompletion, ProcessingCompletionStatus, ReportUsage, ReferenceNumber, TimeOfReport, Attach1ProcessStatus, RecordVersion, UnitQuotebackRecordCode, 
		UnitQuotebackClassification, UnitQuotebackQuoteback,
		GeneralMessage{GenMessageRecordCounter, GenMessageRecordCode, GenMessageClassification, GenMessageTypeRemarks, GenMessageRemarks1, GenMessageRemarksCode1},
		AdditionalMessage{AddMessageRecordCounter, AddMessageRecordCode, AddMessageClassification, AddMessageTypeRemarks, AddMessageRemarks1, AddMessageRemarksCode1}));

PolicyAutoRecap := ENTITY(FLAT(UID = RecordIdentifier,
		PolicyAuto rPolicyAuto = RecordIdentifier,
		STRING InquiryRecapRecordCode,
		STRING InquiryRecapClassification,
		STRING InquiryRecapSpecialField1Type,
		INTEGER InquiryRecapSpecialField1Count,
		STRING InquiryRecapSpecialField2Type,
		STRING InquiryRecapSpecialField2Status,
		STRING InquiryRecapSpecialField3Type,
		INTEGER InquiryRecapSpecialField3Count,
		STRING InquiryRecapSpecialField4Type,
		STRING InquiryRecapSpecialField4Status,
		INTEGER InquiryRecapSpecialField4Count,
		INTEGER SubjectOrVinRecapUnitNumber,
		STRING SubjectOrVinRecapRecordCode,
		STRING SubjectOrVinRecapClassification,
		STRING SubjectOrVinRecapSpecialField1Type,
		INTEGER SubjectOrVinRecapSpecialField1Count,
		STRING SubjectOrVinRecapSpecialField2Type,
		STRING SubjectOrVinRecapSpecialField2Status,
		STRING SubjectOrVinRecapSpecialField3Type,
		STRING SubjectOrVinRecapSpecialField3Status,
		STRING SubjectOrVinRecapSpecialField4Type,
		STRING SubjectOrVinRecapSpecialField5Type,
		INTEGER SubjectOrVinRecapSpecialField5Count,
		STRING SubjectOrVinRecapSpecialField6Type,
		STRING SubjectOrVinRecapSpecialField6Status),
	MODEL(UID, 
		rPolicyAuto,
		InquiryRecapRecordCode, InquiryRecapClassification, InquiryRecapSpecialField1Type, InquiryRecapSpecialField1Count, InquiryRecapSpecialField2Type, InquiryRecapSpecialField2Status,
		InquiryRecapSpecialField3Type, InquiryRecapSpecialField3Count, InquiryRecapSpecialField4Type, InquiryRecapSpecialField4Status, InquiryRecapSpecialField4Count,
		SubjectOrVinRecapUnitNumber, SubjectOrVinRecapRecordCode, SubjectOrVinRecapClassification, SubjectOrVinRecapSpecialField1Type, SubjectOrVinRecapSpecialField1Count,
		SubjectOrVinRecapSpecialField2Type, SubjectOrVinRecapSpecialField2Status, SubjectOrVinRecapSpecialField3Type, SubjectOrVinRecapSpecialField3Status, 
		SubjectOrVinRecapSpecialField4Type, SubjectOrVinRecapSpecialField5Type, SubjectOrVinRecapSpecialField5Count, SubjectOrVinRecapSpecialField6Type, 
		SubjectOrVinRecapSpecialField6Status));

PolicyAutoSubject := ENTITY(FLAT(UID = RecordIdentifier,
		PolicyAuto rPolicyAuto = RecordIdentifier,
		INTEGER UnitNumber,
		STRING RecordCode,
		STRING Classification,
		STRING Last,
		STRING First,
		STRING Middle,
		STRING Suffix,
		INTEGER DateOfBirth,
		STRING Sex,
		INTEGER Ssn,
		INTEGER CurrentOrRiskAddressUnitNumber,
		STRING CurrentOrRiskAddressRecordCode,
		STRING CurrentOrRiskAddressClassification,
		STRING CurrentOrRiskAddressGroupUsage,
		STRING CurrentOrRiskAddressHouseNumber,
		STRING CurrentOrRiskAddressStreetName,
		STRING CurrentOrRiskAddressAptNumber,
		STRING CurrentOrRiskAddressCity,
		STRING CurrentOrRiskAddressState,
		INTEGER CurrentOrRiskAddressZip,
		INTEGER CurrentOrRiskAddressZip4,
		INTEGER CurrentLicenseUnitNumber,
		STRING CurrentLicenseRecordCode,
		STRING CurrentLicenseClassification,
		STRING CurrentLicenseLicenseNumber,
		STRING CurrentLicenseState),
	MODEL(UID,
		rPolicyAuto,
		UnitNumber, RecordCode, Classification, Last, First, Middle, Suffix, DateOfBirth, Sex, Ssn, 
		CurrentOrRiskAddressUnitNumber, CurrentOrRiskAddressRecordCode, CurrentOrRiskAddressClassification, CurrentOrRiskAddressGroupUsage, CurrentOrRiskAddressHouseNumber,
		CurrentOrRiskAddressStreetName, CurrentOrRiskAddressAptNumber, CurrentOrRiskAddressCity, CurrentOrRiskAddressState, CurrentOrRiskAddressZip,
		CurrentOrRiskAddressZip4, CurrentLicenseUnitNumber, CurrentLicenseRecordCode, CurrentLicenseClassification, CurrentLicenseLicenseNumber, CurrentLicenseState));

PolicyAutoAttachment := ENTITY(FLAT(UID(RecordIdentifier, PersonRecordCounter),
		PolicyAuto rPolicyAuto=RecordIdentifier,
		INTEGER PersonRecordCounter,
		INTEGER PersonRecordUnitNumber,
		INTEGER PersonRecordGroupSequenceNumber,
		STRING PersonRecordRecordCode,
		STRING PersonRecordClassification,
		STRING PersonRecordLast,
		STRING PersonRecordFirst,
		STRING PersonRecordMiddle,
		STRING PersonRecordSuffix,
		INTEGER PersonRecordDateOfBirth,
		STRING PersonRecordSex,
		INTEGER PersonRecordSsn,
		INTEGER DriverLicenseRecordUnitNumber,
		INTEGER DriverLicenseRecordGroupSequenceNumber,
		STRING DriverLicenseRecordRecordCode,
		STRING DriverLicenseRecordClassification,
		STRING DriverLicenseRecordLicenseNumber,
		STRING DriverLicenseRecordState),
	MODEL(UID, 
		rPolicyAuto,
		PersonRecordCounter, PersonRecordUnitNumber, PersonRecordGroupSequenceNumber, PersonRecordRecordCode, PersonRecordClassification, PersonRecordLast, PersonRecordFirst,
		PersonRecordMiddle, PersonRecordSuffix, PersonRecordDateOfBirth, PersonRecordSex, PersonRecordSsn, DriverLicenseRecordUnitNumber, DriverLicenseRecordGroupSequenceNumber,
		DriverLicenseRecordRecordCode, DriverLicenseRecordClassification, DriverLicenseRecordLicenseNumber, DriverLicenseRecordState));
